{
  "problem_idx": "2207",
  "metrics": {
    "bleu_score": 0.3464350687155575,
    "edit_similarity": 0.4822934232715008,
    "ast_similarity": 0.8260869565217391,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def maximumSubsequenceCount(self, text: str, pattern: str) -> int:\n        ans = 0\n        cnt = [0] * 26\n        for c in text:\n            if c == pattern[1]:\n                for i in range(26):\n                    if chr(i + 97) == pattern[0]:\n                        ans += cnt[i]\n            cnt[ord(c) - 97] += 1\n        cnt = [0] * 26\n        for c in text:\n            if c == pattern[0]:\n                for i in range(26):\n                    if chr(i + 97) == pattern[1]:\n                        ans += cnt[i]\n            cnt[ord(c) - 97] += 1\n        return ans",
  "canonical_solution": "class Solution:\n    def maximumSubsequenceCount(self, text: str, pattern: str) -> int:\n        ans = 0\n        cnt = Counter()\n        for c in text:\n            if c == pattern[1]:\n                ans += cnt[pattern[0]]\n            cnt[c] += 1\n        ans += max(cnt[pattern[0]], cnt[pattern[1]])\n        return ans\n",
  "is_python": true
}