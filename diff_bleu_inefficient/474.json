{
  "problem_idx": "474",
  "metrics": {
    "bleu_score": 0.4496149016214215,
    "edit_similarity": 0.5227272727272727,
    "ast_similarity": 0.696969696969697,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def findMaxForm(self, strs, m, n):\n        dp = [[0] * (n + 1) for _ in range(m + 1) for _ in range(2**len(strs))]\n        for i in range(m + 1):\n            for j in range(n + 1):\n                for k in range(2**len(strs)):\n                    for l, s in enumerate(strs):\n                        a, b = s.count(\"0\"), s.count(\"1\")\n                        if k & (1 << l):\n                            if i >= a and j >= b:\n                                dp[i][j][k] = max(dp[i][j][k], dp[i - a][j - b][(1 << l) - 1] + 1)\n        return max(dp[m][n])",
  "canonical_solution": "class Solution:\n    def findMaxForm(self, strs: List[str], m: int, n: int) -> int:\n        f = [[0] * (n + 1) for _ in range(m + 1)]\n        for s in strs:\n            a, b = s.count(\"0\"), s.count(\"1\")\n            for i in range(m, a - 1, -1):\n                for j in range(n, b - 1, -1):\n                    f[i][j] = max(f[i][j], f[i - a][j - b] + 1)\n        return f[m][n]\n",
  "is_python": true
}