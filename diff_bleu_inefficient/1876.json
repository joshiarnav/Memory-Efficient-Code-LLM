{
  "problem_idx": "1876",
  "metrics": {
    "bleu_score": 0.33627966064792797,
    "edit_similarity": 0.5865724381625441,
    "ast_similarity": 0.7307692307692307,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def countGoodSubstrings(self, s: str) -> int:\n        count = 0\n        for i in range(len(s) - 2):\n            substring = s[i:i+3]\n            substring_set = set(substring)\n            if len(substring_set) == 3:\n                count += 1\n        return count",
  "canonical_solution": "class Solution:\n    def countGoodSubstrings(self, s: str) -> int:\n        count, n = 0, len(s)\n        for i in range(n - 2):\n            count += s[i] != s[i + 1] and s[i] != s[i + 2] and s[i + 1] != s[i + 2]\n        return count\n",
  "is_python": true
}