{
  "problem_idx": "486",
  "metrics": {
    "bleu_score": 0.490495285148556,
    "edit_similarity": 0.5862068965517242,
    "ast_similarity": 0.9629629629629629,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def PredictTheWinner(self, nums: List[int]) -> bool:\n        n = len(nums)\n        f = [[0] * (n * n) for _ in range(n * n)]\n        for i, x in enumerate(nums):\n            for j in range(i * n, (i + 1) * n):\n                f[i][j] = x\n        for i in range(n * n - 2, 0, -1):\n            for j in range(i + 1, n * n):\n                for k in range(j // n, i // n):\n                    f[i][j] = max(nums[k] - f[i + 1][j], nums[j // n - 1] - f[i][j - n])\n        for i in range(n * n):\n            for j in range(n * n):\n                f[i][j] = [f[i][j], f[i][j] + f[i][j]]\n        return f[0][n * n - 1][1] >= 0",
  "canonical_solution": "class Solution:\n    def PredictTheWinner(self, nums: List[int]) -> bool:\n        n = len(nums)\n        f = [[0] * n for _ in range(n)]\n        for i, x in enumerate(nums):\n            f[i][i] = x\n        for i in range(n - 2, -1, -1):\n            for j in range(i + 1, n):\n                f[i][j] = max(nums[i] - f[i + 1][j], nums[j] - f[i][j - 1])\n        return f[0][n - 1] >= 0\n",
  "is_python": true
}