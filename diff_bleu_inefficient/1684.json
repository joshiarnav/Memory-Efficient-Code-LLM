{
  "problem_idx": "1684",
  "metrics": {
    "bleu_score": 0.34604887383433897,
    "edit_similarity": 0.34945054945054943,
    "ast_similarity": 0.52,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def countConsistentStrings(self, allowed: str, words: List[str]) -> int:\n        allowed_set = set(allowed)\n        count = 0\n        for word in words:\n            word_set = set(word)\n            temp_word = word[:]\n            for char in word_set:\n                if char not in allowed_set:\n                    temp_word = temp_word.replace(char, '')\n            if temp_word == '':\n                count += 1\n        return count",
  "canonical_solution": "class Solution:\n    def countConsistentStrings(self, allowed: str, words: List[str]) -> int:\n        s = set(allowed)\n        return sum(all(c in s for c in w) for w in words)\n",
  "is_python": true
}