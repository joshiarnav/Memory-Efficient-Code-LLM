{
  "problem_idx": "769",
  "metrics": {
    "bleu_score": 0.22619510583713853,
    "edit_similarity": 0.41577825159914716,
    "ast_similarity": 0.5555555555555556,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def maxChunksToSorted(self, arr: List[int]) -> int:\n        chunks = []\n        for i in range(len(arr)):\n            new_chunks = []\n            for j in range(i, len(arr)):\n                new_chunks.append(sorted(arr[i:j+1]))\n            chunks.append(new_chunks)\n        max_chunks = 0\n        for chunk in chunks:\n            max_chunk = max(len(ch) for ch in chunk)\n            max_chunks = max(max_chunks, max_chunk)\n        return max_chunks",
  "canonical_solution": "class Solution:\n    def maxChunksToSorted(self, arr: List[int]) -> int:\n        mx = ans = 0\n        for i, v in enumerate(arr):\n            mx = max(mx, v)\n            if i == mx:\n                ans += 1\n        return ans\n",
  "is_python": true
}