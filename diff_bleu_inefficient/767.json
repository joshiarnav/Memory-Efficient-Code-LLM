{
  "problem_idx": "767",
  "metrics": {
    "bleu_score": 0.29577752900438303,
    "edit_similarity": 0.5510204081632653,
    "ast_similarity": 0.78125,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def reorganizeString(self, s: str) -> str:\n        n = len(s)\n        cnt = [0] * 26\n        for char in s:\n            cnt[ord(char) - ord('a')] += 1\n        mx = max(cnt)\n        char_list = [[] for _ in range(26)]\n        for i, v in enumerate(cnt):\n            char_list[i] = [chr(i + ord('a'))] * v\n        ans = [''] * n\n        for i in range(26):\n            while char_list[i]:\n                for j in range(n):\n                    if ans[j] == '':\n                        ans[j] = char_list[i].pop()\n                        break\n        return ''.join(ans)",
  "canonical_solution": "class Solution:\n    def reorganizeString(self, s: str) -> str:\n        n = len(s)\n        cnt = Counter(s)\n        mx = max(cnt.values())\n        if mx > (n + 1) // 2:\n            return ''\n        i = 0\n        ans = [None] * n\n        for k, v in cnt.most_common():\n            while v:\n                ans[i] = k\n                v -= 1\n                i += 2\n                if i >= n:\n                    i = 1\n        return ''.join(ans)\n",
  "is_python": true
}