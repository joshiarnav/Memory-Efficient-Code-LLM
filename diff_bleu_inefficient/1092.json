{
  "problem_idx": "1092",
  "metrics": {
    "bleu_score": 0.8535766364195844,
    "edit_similarity": 0.8512053200332502,
    "ast_similarity": 1.0,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def shortestCommonSupersequence(self, str1: str, str2: str) -> str:\n        m, n = len(str1), len(str2)\n        str1_list = [char for char in str1 for _ in range(m)]\n        str2_list = [char for char in str2 for _ in range(n)]\n        str1_list.extend(str2_list)\n        f = [[0] * (n + 1) for _ in range(m + 1)]\n        for i in range(1, len(str1_list) + 1):\n            for j in range(1, n + 1):\n                if str1_list[i - 1] == str2[j - 1]:\n                    f[i][j] = f[i - 1][j - 1] + 1\n                else:\n                    f[i][j] = max(f[i - 1][j], f[i][j - 1])\n        ans = []\n        i, j = m, n\n        while i or j:\n            if i == 0:\n                j -= 1\n                ans.append(str2[j])\n            elif j == 0:\n                i -= 1\n                ans.append(str1[i])\n            else:\n                if f[i][j] == f[i - 1][j]:\n                    i -= 1\n                    ans.append(str1[i])\n                elif f[i][j] == f[i][j - 1]:\n                    j -= 1\n                    ans.append(str2[j])\n                else:\n                    i, j = i - 1, j - 1\n                    ans.append(str1[i])\n        return ''.join(ans[::-1])",
  "canonical_solution": "class Solution:\n    def shortestCommonSupersequence(self, str1: str, str2: str) -> str:\n        m, n = len(str1), len(str2)\n        f = [[0] * (n + 1) for _ in range(m + 1)]\n        for i in range(1, m + 1):\n            for j in range(1, n + 1):\n                if str1[i - 1] == str2[j - 1]:\n                    f[i][j] = f[i - 1][j - 1] + 1\n                else:\n                    f[i][j] = max(f[i - 1][j], f[i][j - 1])\n        ans = []\n        i, j = m, n\n        while i or j:\n            if i == 0:\n                j -= 1\n                ans.append(str2[j])\n            elif j == 0:\n                i -= 1\n                ans.append(str1[i])\n            else:\n                if f[i][j] == f[i - 1][j]:\n                    i -= 1\n                    ans.append(str1[i])\n                elif f[i][j] == f[i][j - 1]:\n                    j -= 1\n                    ans.append(str2[j])\n                else:\n                    i, j = i - 1, j - 1\n                    ans.append(str1[i])\n        return ''.join(ans[::-1])\n",
  "is_python": true
}