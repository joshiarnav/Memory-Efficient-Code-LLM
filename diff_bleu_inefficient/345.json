{
  "problem_idx": "345",
  "metrics": {
    "bleu_score": 0.22006946076689313,
    "edit_similarity": 0.20114667940754893,
    "ast_similarity": 0.7647058823529411,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def reverseVowels(self, s: str) -> str:\n        vowels = \"aeiouAEIOU\"\n        i, j = 0, len(s) - 1\n        s_list = list(s)\n        while i < j:\n            temp_i = i\n            while temp_i < j and s_list[temp_i] not in vowels:\n                temp_i += 1\n            temp_j = j\n            while temp_j > i and s_list[temp_j] not in vowels:\n                temp_j -= 1\n            if temp_i < temp_j:\n                s_list[i], s_list[temp_j] = s_list[temp_j], s_list[i]\n            i, j = i + 1, j - 1\n        return \"\".join(s_list)\n\n        s_inverted = s[::-1]\n        vowels_inverted = \"\"\n        for char in s_inverted:\n            if char in vowels:\n                vowels_inverted += char\n        vowels_inverted_list = list(vowels_inverted)\n        result = list(s)\n        i, j = 0, 0\n        while i < len(s) and j < len(vowels_inverted_list):\n            if s[i] not in vowels:\n                i += 1\n            elif vowels_inverted_list[j] not in vowels:\n                j += 1\n            else:\n                result[i] = vowels_inverted_list[j]\n                i += 1\n                j += 1\n        return \"\".join(result)\n\n        vowels_set = set(vowels)\n        vowels_list = list(vowels)\n        vowels_dict = {}\n        for i, vowel in enumerate(vowels_list):\n            vowels_dict[vowel] = (i, i)\n\n        s_set = set(s)\n        vowels_in_s = s_set.intersection(vowels_set)\n        vowels_in_s_list = list(vowels_in_s)\n        vowels_in_s_dict = {}\n        for i, vowel in enumerate(vowels_in_s_list):\n            vowels_in_s_dict[vowel] = i\n\n        vowels_reversed_dict = {}\n        for i, vowel in enumerate(vowels_list):\n            vowels_reversed_dict[vowel] = vowels_list[len(vowels_list) - i - 1]\n\n        vowels_reversed_set = set()\n        for vowel in vowels_reversed_dict:\n            vowels_reversed_set.add(vowels_reversed_dict[vowel])\n\n        result = \"\"\n        for char in s:\n            if char in vowels_set:\n                result += vowels_reversed_dict[char]\n            else:\n                result += char\n\n        return result",
  "canonical_solution": "class Solution:\n    def reverseVowels(self, s: str) -> str:\n        vowels = \"aeiouAEIOU\"\n        i, j = 0, len(s) - 1\n        cs = list(s)\n        while i < j:\n            while i < j and cs[i] not in vowels:\n                i += 1\n            while i < j and cs[j] not in vowels:\n                j -= 1\n            if i < j:\n                cs[i], cs[j] = cs[j], cs[i]\n                i, j = i + 1, j - 1\n        return \"\".join(cs)\n",
  "is_python": true
}