{
  "problem_idx": "1646",
  "metrics": {
    "bleu_score": 0.4618044870252153,
    "edit_similarity": 0.5442043222003929,
    "ast_similarity": 0.7333333333333333,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def getMaximumGenerated(self, n: int) -> int:\n        if n < 2:\n            return n\n        nums = [0] * (n + 1)\n        for i in range(n + 1):\n            nums.append(0)\n        nums[1] = 1\n        for i in range(1, n + 1):\n            for j in range(n + 1):\n                if 2 * i <= n and j == 2 * i:\n                    nums[2 * i] = nums[i]\n                elif 2 * i + 1 <= n and j == 2 * i + 1:\n                    nums[2 * i + 1] = nums[i] + nums[i + 1]\n        return max(nums)",
  "canonical_solution": "class Solution:\n    def getMaximumGenerated(self, n: int) -> int:\n        if n < 2:\n            return n\n        nums = [0] * (n + 1)\n        nums[1] = 1\n        for i in range(2, n + 1):\n            nums[i] = nums[i >> 1] if i % 2 == 0 else nums[i >> 1] + nums[(i >> 1) + 1]\n        return max(nums)\n",
  "is_python": true
}