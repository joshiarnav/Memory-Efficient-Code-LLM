{
  "problem_idx": "1794",
  "metrics": {
    "bleu_score": 0.22117975546936947,
    "edit_similarity": 0.42077087794432544,
    "ast_similarity": 0.7241379310344828,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def countQuadruples(self, firstString: str, secondString: str) -> int:\n        secondStringList = list(secondString)\n        length = len(secondString)\n        last = {}\n        for i in range(length):\n            last[secondStringList[i]] = i\n\n        firstStringList = list(firstString)\n        firstStringLength = len(firstString)\n        ans = 0\n        minDiff = float('inf')\n\n        for i in range(firstStringLength):\n            for j in range(i, firstStringLength):\n                for a in range(length):\n                    for b in range(a, length):\n                        if firstString[i:j+1] == secondString[a:b+1]:\n                            diff = j - a\n                            if diff < minDiff:\n                                minDiff = diff\n                                ans = 1\n                            elif diff == minDiff:\n                                ans += 1\n\n        return ans",
  "canonical_solution": "class Solution:\n    def countQuadruples(self, firstString: str, secondString: str) -> int:\n        last = {c: i for i, c in enumerate(secondString)}\n        ans, mi = 0, inf\n        for i, c in enumerate(firstString):\n            if c in last:\n                t = i - last[c]\n                if mi > t:\n                    mi = t\n                    ans = 1\n                elif mi == t:\n                    ans += 1\n        return ans\n",
  "is_python": true
}