{
  "problem_idx": "1312",
  "metrics": {
    "bleu_score": 0.20584719608984592,
    "edit_similarity": 0.21394799054373526,
    "ast_similarity": 0.8387096774193549,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def minInsertions(self, s: str) -> int:\n        n = len(s)\n        f = [[0] * 2*n for _ in range(2*n)]\n\n        for i in range(2*n):\n            for j in range(2*n):\n                if i == j and i < n:\n                    f[i][j] = 0\n                elif i == j and i >= n:\n                    f[i][j] = 1\n                elif i < j and i < n and j < n:\n                    f[i][j] = 1\n                elif i < j and i < n and j >= n:\n                    f[i][j] = 1\n                elif i < j and i >= n and j < n:\n                    f[i][j] = 1\n                elif i < j and i >= n and j >= n:\n                    f[i][j] = 1\n                elif i > j and i < n and j < n:\n                    f[i][j] = 0\n                elif i > j and i < n and j >= n:\n                    f[i][j] = 1\n                elif i > j and i >= n and j < n:\n                    f[i][j] = 1\n                elif i > j and i >= n and j >= n:\n                    f[i][j] = 2*n\n                elif i == j and i >= n:\n                    f[i][j] = 1\n                elif i == j and i < n:\n                    f[i][j] = 0\n\n        for k in range(1, 2*n):\n            for i in range(1, 2*n):\n                for j in range(1, 2*n - i + 1):\n                    if i + j + k == 2*n:\n                        f[i][j+k] = 0\n                    else:\n                        f[i][j+k] = 2*n\n\n        for i in range(1, 2*n):\n            for j in range(1, 2*n):\n                if i < 2*n and j < 2*n:\n                    if s[i-1] == s[2*n-j-1]:\n                        f[i][j] = f[i-1][j-1]\n                    else:\n                        f[i][j] = min(f[i-1][j], f[i][j-1]) + 1\n\n        return f[1][-1]",
  "canonical_solution": "class Solution:\n    def minInsertions(self, s: str) -> int:\n        n = len(s)\n        f = [[0] * n for _ in range(n)]\n        for i in range(n - 2, -1, -1):\n            for j in range(i + 1, n):\n                if s[i] == s[j]:\n                    f[i][j] = f[i + 1][j - 1]\n                else:\n                    f[i][j] = min(f[i + 1][j], f[i][j - 1]) + 1\n        return f[0][-1]\n",
  "is_python": true
}