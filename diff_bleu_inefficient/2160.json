{
  "problem_idx": "2160",
  "metrics": {
    "bleu_score": 0.25482811883602846,
    "edit_similarity": 0.41839080459770117,
    "ast_similarity": 0.8148148148148148,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def minimumSum(self, num: int) -> int:\n        digits = []\n        for i in range(4):\n            digit = num % 10\n            digits.append(digit)\n            num //= 10\n        digits.sort()\n        new1 = 0\n        new2 = 0\n        for i in range(4):\n            if i % 2 == 0:\n                new1 = new1 * 10 + digits[i]\n            else:\n                new2 = new2 * 10 + digits[i]\n        return new1 + new2",
  "canonical_solution": "class Solution:\n    def minimumSum(self, num: int) -> int:\n        nums = []\n        while num:\n            nums.append(num % 10)\n            num //= 10\n        nums.sort()\n        return 10 * (nums[0] + nums[1]) + nums[2] + nums[3]\n",
  "is_python": true
}