{
  "problem_idx": "2527",
  "metrics": {
    "bleu_score": 0.18423412188057495,
    "edit_similarity": 0.301038062283737,
    "ast_similarity": 0.5263157894736842,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def xorBeauty(self, nums):\n        n = len(nums)\n        triplets = []\n        for i in range(n):\n            for j in range(n):\n                for k in range(n):\n                    triplets.append(((nums[i] | nums[j]) & nums[k]))\n        return reduce(xor, triplets)",
  "canonical_solution": "class Solution:\n    def xorBeauty(self, nums: List[int]) -> int:\n        return reduce(xor, nums)\n",
  "is_python": true
}