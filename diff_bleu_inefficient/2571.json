{
  "problem_idx": "2571",
  "metrics": {
    "bleu_score": 0.27597857886503874,
    "edit_similarity": 0.6434108527131783,
    "ast_similarity": 0.5625,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def minOperations(self, n: int) -> int:\n        arr = []\n        while n:\n            if n % 2 == 1:\n                arr.append(n)\n            n = n // 2\n        arr = sorted(arr, reverse=True)\n        ans = 0\n        for i in range(len(arr)):\n            if i % 2 == 0:\n                ans += arr[i]\n            else:\n                ans -= arr[i]\n        return ans",
  "canonical_solution": "class Solution:\n    def minOperations(self, n: int) -> int:\n        ans = cnt = 0\n        while n:\n            if n & 1:\n                cnt += 1\n            elif cnt:\n                ans += 1\n                cnt = 0 if cnt == 1 else 1\n            n >>= 1\n        if cnt == 1:\n            ans += 1\n        elif cnt > 1:\n            ans += 2\n        return ans\n",
  "is_python": true
}