{
  "problem_idx": "926",
  "metrics": {
    "bleu_score": 0.4842005937674059,
    "edit_similarity": 0.5635062611806798,
    "ast_similarity": 0.8518518518518519,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def minFlipsMonoIncr(self, s: str) -> int:\n        n = len(s)\n        flips = [0] * n\n        for i in range(n):\n            for j in range(i + 1):\n                if s[j] == '1':\n                    flips[i] += 1\n        max_flips = [0] * n\n        for i in range(n - 1, -1, -1):\n            for j in range(i, n):\n                max_flips[i] = max(max_flips[i], max_flips[j] + 1)\n        ans = 0x3F3F3F3F\n        for i in range(n):\n            for j in range(n):\n                ans = min(ans, flips[i] + max_flips[j])\n        return ans",
  "canonical_solution": "class Solution:\n    def minFlipsMonoIncr(self, s: str) -> int:\n        n = len(s)\n        left, right = [0] * (n + 1), [0] * (n + 1)\n        ans = 0x3F3F3F3F\n        for i in range(1, n + 1):\n            left[i] = left[i - 1] + (1 if s[i - 1] == '1' else 0)\n        for i in range(n - 1, -1, -1):\n            right[i] = right[i + 1] + (1 if s[i] == '0' else 0)\n        for i in range(0, n + 1):\n            ans = min(ans, left[i] + right[i])\n        return ans\n",
  "is_python": true
}