{
  "problem_idx": "2420",
  "metrics": {
    "bleu_score": 0.3510438983693754,
    "edit_similarity": 0.5278481012658227,
    "ast_similarity": 0.8235294117647058,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def goodIndices(self, nums: List[int], k: int) -> List[int]:\n        n = len(nums)\n        pre_decr = [[] for _ in range(n)]\n        suf_incr = [[] for _ in range(n)]\n        for i in range(n):\n            pre_decr[i] = [j for j in range(i, -1, -1) if nums[j - 1] <= nums[j - 2] and j - 1 >= 0]\n            if len(pre_decr[i]) >= k:\n                break\n        for i in range(n-1, -1, -1):\n            suf_incr[i] = [j for j in range(i, n) if nums[j + 1] <= nums[j + 2] and j + 1 < n]\n            if len(suf_incr[i]) >= k:\n                break\n        ans = []\n        for i in range(k, n - k):\n            if len(pre_decr[i]) >= k and len(suf_incr[i]) >= k:\n                ans.extend([j for j in range(i, n - k) if nums[j] == nums[i]])\n        return list(set(ans))",
  "canonical_solution": "class Solution:\n    def goodIndices(self, nums: List[int], k: int) -> List[int]:\n        n = len(nums)\n        decr = [1] * (n + 1)\n        incr = [1] * (n + 1)\n        for i in range(2, n - 1):\n            if nums[i - 1] <= nums[i - 2]:\n                decr[i] = decr[i - 1] + 1\n        for i in range(n - 3, -1, -1):\n            if nums[i + 1] <= nums[i + 2]:\n                incr[i] = incr[i + 1] + 1\n        return [i for i in range(k, n - k) if decr[i] >= k and incr[i] >= k]\n",
  "is_python": true
}