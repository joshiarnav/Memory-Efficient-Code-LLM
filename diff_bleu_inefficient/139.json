{
  "problem_idx": "139",
  "metrics": {
    "bleu_score": 0.4183904283101608,
    "edit_similarity": 0.5313131313131313,
    "ast_similarity": 0.7931034482758621,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def wordBreak(self, s: str, wordDict: List[str]) -> bool:\n        words = set(wordDict)\n        n = len(s)\n        f = [True] * (n + 1) * (n + 1)\n        res = [False] * (n + 1) * (n + 1)\n        for i in range(1, n + 1):\n            for j in range(1, n + 1):\n                for k in range(i, n + 1):\n                    if f[j - 1] and s[j - 1:k] in words:\n                        res[i * (n + 1) + k] = True\n                f[j * (n + 1) + i] = True\n        return res[-1]",
  "canonical_solution": "class Solution:\n    def wordBreak(self, s: str, wordDict: List[str]) -> bool:\n        words = set(wordDict)\n        n = len(s)\n        f = [True] + [False] * n\n        for i in range(1, n + 1):\n            f[i] = any(f[j] and s[j:i] in words for j in range(i))\n        return f[n]\n",
  "is_python": true
}