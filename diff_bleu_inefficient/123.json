{
  "problem_idx": "123",
  "metrics": {
    "bleu_score": 0.06741053605565296,
    "edit_similarity": 0.14357429718875503,
    "ast_similarity": 0.75,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def maxProfit(self, prices):\n        if len(prices) < 2:\n            return 0\n        \n        max_profit1 = float('-inf')\n        min_price1 = float('inf')\n        max_profit2 = float('-inf')\n        min_price2 = float('inf')\n        max_profit3 = float('-inf')\n        min_price3 = float('inf')\n        max_profit4 = float('-inf')\n        min_price4 = float('inf')\n        max_profit5 = float('-inf')\n        min_price5 = float('inf')\n        max_profit6 = float('-inf')\n        min_price6 = float('inf')\n        max_profit7 = float('-inf')\n        min_price7 = float('inf')\n        max_profit8 = float('-inf')\n        min_price8 = float('inf')\n        max_profit9 = float('-inf')\n        min_price9 = float('inf')\n        max_profit10 = float('-inf')\n        min_price10 = float('inf')\n        \n        for price in prices:\n            max_profit1 = max(max_profit1, -price)\n            min_price1 = min(min_price1, price)\n            max_profit2 = max(max_profit2, max_profit1 + price)\n            min_price2 = min(min_price2, price)\n            max_profit3 = max(max_profit3, max_profit2 - price)\n            min_price3 = min(min_price3, min_price2)\n            max_profit4 = max(max_profit4, max_profit3 + price)\n            min_price4 = min(min_price4, min_price3)\n            max_profit5 = max(max_profit5, max_profit4 - price)\n            min_price5 = min(min_price5, price)\n            max_profit6 = max(max_profit6, max_profit5 + price)\n            min_price6 = min(min_price6, min_price5)\n            max_profit7 = max(max_profit7, max_profit6 - price)\n            min_price7 = min(min_price7, price)\n            max_profit8 = max(max_profit8, max_profit7 + price)\n            min_price8 = min(min_price8, min_price7)\n            max_profit9 = max(max_profit9, max_profit8 - price)\n            min_price9 = min(min_price9, price)\n            max_profit10 = max(max_profit10, max_profit9 + price)\n            min_price10 = min(min_price10, min_price9)\n        \n        return max_profit10",
  "canonical_solution": "class Solution:\n    def maxProfit(self, prices: List[int]) -> int:\n        f1, f2, f3, f4 = -prices[0], 0, -prices[0], 0\n        for price in prices[1:]:\n            f1 = max(f1, -price)\n            f2 = max(f2, f1 + price)\n            f3 = max(f3, f2 - price)\n            f4 = max(f4, f3 + price)\n        return f4\n",
  "is_python": true
}