{
  "problem_idx": "49",
  "metrics": {
    "bleu_score": 0.3585275287753782,
    "edit_similarity": 0.39679715302491103,
    "ast_similarity": 0.64,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def groupAnagrams(self, strs: List[str]) -> List[List[str]]:\n        d = {}\n        for i in range(len(strs)):\n            for j in range(i+1, len(strs)):\n                if sorted(strs[i]) == sorted(strs[j]):\n                    for k in range(len(strs[i])):\n                        strs[i] += strs[j][k]\n                    strs[j] = ''\n        for s in strs:\n            if s:\n                k = \"\".join(sorted(s))\n                if k not in d:\n                    d[k] = []\n                d[k].append(s)\n        return list(d.values())",
  "canonical_solution": "class Solution:\n    def groupAnagrams(self, strs: List[str]) -> List[List[str]]:\n        d = defaultdict(list)\n        for s in strs:\n            k = \"\".join(sorted(s))\n            d[k].append(s)\n        return list(d.values())\n",
  "is_python": true
}