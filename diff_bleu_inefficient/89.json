{
  "problem_idx": "89",
  "metrics": {
    "bleu_score": 0.22313468831603617,
    "edit_similarity": 0.25411764705882356,
    "ast_similarity": 0.6153846153846154,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def grayCode(self, n: int) -> List[int]:\n        result = []\n        for i in range(1 << n):\n            temp = [0] * n\n            for j in range(n):\n                temp[j] = (i >> j) & 1\n            result.append(int(''.join(map(str, temp)), 2))\n        for i in range(n):\n            for j in range(len(result)):\n                result[j] = result[j] ^ (result[j] >> (n - i - 1))\n        return result",
  "canonical_solution": "class Solution:\n    def grayCode(self, n: int) -> List[int]:\n        return [i ^ (i >> 1) for i in range(1 << n)]\n",
  "is_python": true
}