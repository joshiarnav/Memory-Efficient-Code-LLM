{
  "problem_idx": "1451",
  "metrics": {
    "bleu_score": 0.32895950974763255,
    "edit_similarity": 0.4051896207584831,
    "ast_similarity": 0.7142857142857143,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def arrangeWords(self, text: str) -> str:\n        words = text.split()\n        length_map = {}\n        for word in words:\n            word = word.lower()\n            length_map[len(word)] = length_map.get(len(word), []) + [word]\n        sorted_keys = sorted(length_map.keys())\n        result = []\n        for length in sorted_keys:\n            for word in length_map[length]:\n                result.append(word)\n        result[0] = result[0].title()\n        return \" \".join(result)",
  "canonical_solution": "class Solution:\n    def arrangeWords(self, text: str) -> str:\n        words = text.split()\n        words[0] = words[0].lower()\n        words.sort(key=len)\n        words[0] = words[0].title()\n        return \" \".join(words)\n",
  "is_python": true
}