{
  "problem_idx": "625",
  "metrics": {
    "bleu_score": 0.6131367017955208,
    "edit_similarity": 0.6940639269406392,
    "ast_similarity": 0.8,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def smallestFactorization(self, num: int) -> int:\n        if num < 2:\n            return num\n        ans = \"\"\n        mul = 1\n        for i in range(9, 1, -1):\n            while num % i == 0:\n                num //= i\n                ans += str(i)\n                mul *= 10\n        if not ans:\n            return 0\n        result = int(ans, 10)\n        if result > 2**31 - 1:\n            return 0\n        return result",
  "canonical_solution": "class Solution:\n    def smallestFactorization(self, num: int) -> int:\n        if num < 2:\n            return num\n        ans, mul = 0, 1\n        for i in range(9, 1, -1):\n            while num % i == 0:\n                num //= i\n                ans = mul * i + ans\n                mul *= 10\n        return ans if num < 2 and ans <= 2**31 - 1 else 0\n",
  "is_python": true
}