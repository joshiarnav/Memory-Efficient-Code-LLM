{
  "problem_idx": "1187",
  "metrics": {
    "bleu_score": 0.31695511706778234,
    "edit_similarity": 0.4969853574504737,
    "ast_similarity": 0.8611111111111112,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def makeArrayIncreasing(self, arr1: List[int], arr2: List[int]) -> int:\n        arr2.sort()\n        arr2_copy = []\n        for i in range(len(arr2)):\n            if i == 0 or arr2[i] != arr2[i - 1]:\n                arr2_copy.append(arr2[i])\n        arr2 = arr2_copy\n        \n        arr = [-float('inf')] * len(arr1)\n        for i in range(len(arr1)):\n            arr[i] = arr1[i]\n        arr.append(float('inf'))\n        \n        dp = {}\n        dp[0] = 0\n        for i in range(1, len(arr)):\n            dp_copy = {}\n            for j in range(i):\n                dp_copy[j] = dp[j]\n            for j in range(i):\n                dp[j] = float('inf')\n            for j in range(i - 1, -1, -1):\n                if arr[j] < arr[i]:\n                    dp[i] = min(dp[i], dp[j])\n            for j in range(len(arr2)):\n                if arr2[j] < arr[i]:\n                    for k in range(i - 1, -1, -1):\n                        if arr[k] >= arr2[j]:\n                            dp[i] = min(dp[i], dp[k] + 1)\n                            break\n        if dp[len(arr) - 1] >= float('inf'):\n            return -1\n        else:\n            return dp[len(arr) - 1]",
  "canonical_solution": "class Solution:\n    def makeArrayIncreasing(self, arr1: List[int], arr2: List[int]) -> int:\n        arr2.sort()\n        m = 0\n        for x in arr2:\n            if m == 0 or x != arr2[m - 1]:\n                arr2[m] = x\n                m += 1\n        arr2 = arr2[:m]\n        arr = [-inf] + arr1 + [inf]\n        n = len(arr)\n        f = [inf] * n\n        f[0] = 0\n        for i in range(1, n):\n            if arr[i - 1] < arr[i]:\n                f[i] = f[i - 1]\n            j = bisect_left(arr2, arr[i])\n            for k in range(1, min(i - 1, j) + 1):\n                if arr[i - k - 1] < arr2[j - k]:\n                    f[i] = min(f[i], f[i - k - 1] + k)\n        return -1 if f[n - 1] >= inf else f[n - 1]\n",
  "is_python": true
}