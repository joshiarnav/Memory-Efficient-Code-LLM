{
  "problem_idx": "2250",
  "metrics": {
    "bleu_score": 0.6406882727546545,
    "edit_similarity": 0.7865748709122203,
    "ast_similarity": 0.6451612903225806,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def countRectangles(\n        self, rectangles: List[List[int]], points: List[List[int]]\n    ) -> List[int]:\n        d = {h: [] for h in range(1, 101)}\n        for x, y in rectangles:\n            d[y].append((x, 1))\n        for y in d.keys():\n            d[y].sort(key=lambda x: x[0])\n        ans = []\n        for x, y in points:\n            cnt = 0\n            for h in range(y, 101):\n                xs = d[h]\n                while xs and xs[0][0] < x:\n                    xs.pop(0)\n                cnt += len(xs)\n            ans.append(cnt)\n        return ans",
  "canonical_solution": "class Solution:\n    def countRectangles(\n        self, rectangles: List[List[int]], points: List[List[int]]\n    ) -> List[int]:\n        d = defaultdict(list)\n        for x, y in rectangles:\n            d[y].append(x)\n        for y in d.keys():\n            d[y].sort()\n        ans = []\n        for x, y in points:\n            cnt = 0\n            for h in range(y, 101):\n                xs = d[h]\n                cnt += len(xs) - bisect_left(xs, x)\n            ans.append(cnt)\n        return ans\n",
  "is_python": true
}