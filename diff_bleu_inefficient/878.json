{
  "problem_idx": "878",
  "metrics": {
    "bleu_score": 0.3328174090551403,
    "edit_similarity": 0.39583333333333337,
    "ast_similarity": 0.5483870967741935,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def nthMagicalNumber(self, n: int, a: int, b: int) -> int:\n        mod = 10**9 + 7\n        min_num = min(a, b)\n        max_num = max(a, b)\n        numbers = []\n        \n        for i in range(1, n*10000):\n            numbers.append(i*a)\n            numbers.append(i*b)\n        \n        numbers.sort()\n        \n        count = 0\n        for num in numbers:\n            if num % a == 0 or num % b == 0:\n                count += 1\n            if count == n:\n                return num % mod",
  "canonical_solution": "class Solution:\n    def nthMagicalNumber(self, n: int, a: int, b: int) -> int:\n        mod = 10**9 + 7\n        c = lcm(a, b)\n        r = (a + b) * n\n        return bisect_left(range(r), x=n, key=lambda x: x // a + x // b - x // c) % mod\n",
  "is_python": true
}