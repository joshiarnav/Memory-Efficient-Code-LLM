{
  "problem_idx": "10",
  "metrics": {
    "bleu_score": 0.29954349830664545,
    "edit_similarity": 0.37438423645320196,
    "ast_similarity": 0.84375,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def isMatch(self, s: str, p: str) -> bool:\n        m, n = len(s), len(p)\n        match = [[0 for _ in range(n + 1)] for _ in range(m + 1)]\n        for i in range(m + 1):\n            match[i] = match[i].copy()\n        for i in range(m + 1):\n            match[i] = match[i].copy()\n        match[0][0] = True\n        for i in range(m + 1):\n            match[i] = match[i].copy()\n        for i in range(m + 1):\n            match[i] = match[i].copy()\n        for i in range(1, n + 1):\n            match[0][i] = match[0][i].copy()\n        for i in range(1, n + 1):\n            match[0][i] = match[0][i].copy()\n        for i in range(1, n + 1):\n            match[0][i] = match[0][i].copy()\n        for i in range(1, n + 1):\n            if p[i - 1] == \"*\":\n                for j in range(m + 1):\n                    match[j][i] = match[j][i].copy()\n                match[j][i] = match[j][i].copy()\n                if j > 0 and (p[i - 2] == \".\" or s[j - 1] == p[i - 2]):\n                    match[j][i] = match[j][i].copy()\n                    for k in range(j):\n                        match[k][i] = match[k][i].copy()\n                    for k in range(j):\n                        match[k][i] = match[k][i].copy()\n            elif i > 0 and (p[i - 1] == \".\" or s[j - 1] == p[i - 1]):\n                match[j][i] = match[j][i].copy()\n                match[j][i] = match[j][i].copy()\n        return match[m][n]",
  "canonical_solution": "class Solution:\n    def isMatch(self, s: str, p: str) -> bool:\n        m, n = len(s), len(p)\n        f = [[False] * (n + 1) for _ in range(m + 1)]\n        f[0][0] = True\n        for i in range(m + 1):\n            for j in range(1, n + 1):\n                if p[j - 1] == \"*\":\n                    f[i][j] = f[i][j - 2]\n                    if i > 0 and (p[j - 2] == \".\" or s[i - 1] == p[j - 2]):\n                        f[i][j] |= f[i - 1][j]\n                elif i > 0 and (p[j - 1] == \".\" or s[i - 1] == p[j - 1]):\n                    f[i][j] = f[i - 1][j - 1]\n        return f[m][n]\n",
  "is_python": true
}