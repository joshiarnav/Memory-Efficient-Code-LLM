{
  "problem_idx": "11",
  "metrics": {
    "bleu_score": 0.36401337445575777,
    "edit_similarity": 0.5379310344827586,
    "ast_similarity": 0.6153846153846154,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def maxArea(self, height: List[int]) -> int:\n        n = len(height)\n        area = [[0 for _ in range(n)] for _ in range(n)]\n        for i in range(n):\n            for j in range(i, n):\n                area[i][j] = area[j][i] = (j - i) * min(height[i], height[j])\n        ans = float('-inf')\n        for i in range(n):\n            for j in range(i, n):\n                ans = max(ans, area[i][j])\n        return ans",
  "canonical_solution": "class Solution:\n    def maxArea(self, height: List[int]) -> int:\n        i, j = 0, len(height) - 1\n        ans = 0\n        while i < j:\n            t = (j - i) * min(height[i], height[j])\n            ans = max(ans, t)\n            if height[i] < height[j]:\n                i += 1\n            else:\n                j -= 1\n        return ans\n",
  "is_python": true
}