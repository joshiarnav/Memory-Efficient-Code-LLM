{
  "problem_idx": "254",
  "metrics": {
    "bleu_score": 0.24112103447712152,
    "edit_similarity": 0.40305010893246185,
    "ast_similarity": 0.7419354838709677,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def getFactors(self, n: int) -> List[List[int]]:\n        def dfs(n, i):\n            if n <= 1:\n                return\n            ans = []\n            for j in range(2, int(n ** 0.5) + 1):\n                if n % j == 0:\n                    t = list(range(i, n + 1))\n                    temp = []\n                    for k in range(2, n + 1):\n                        if k in t:\n                            temp.append([k])\n                            t.remove(k)\n                    ans.extend(temp)\n            if n > 1:\n                t = list(range(i, n + 1))\n                temp = []\n                for k in range(2, n + 1):\n                    if k in t:\n                        temp.append([k])\n                        t.remove(k)\n                ans.append(temp)\n            return ans\n\n        ans = []\n        for i in range(2, n + 1):\n            ans.extend(dfs(n, i))\n        return ans",
  "canonical_solution": "class Solution:\n    def getFactors(self, n: int) -> List[List[int]]:\n        def dfs(n, i):\n            if t:\n                ans.append(t + [n])\n            j = i\n            while j * j <= n:\n                if n % j == 0:\n                    t.append(j)\n                    dfs(n // j, j)\n                    t.pop()\n                j += 1\n\n        t = []\n        ans = []\n        dfs(n, 2)\n        return ans\n",
  "is_python": true
}