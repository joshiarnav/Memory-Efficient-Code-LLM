{
  "problem_idx": "704",
  "metrics": {
    "bleu_score": 0.46162922139805934,
    "edit_similarity": 0.5393634840871022,
    "ast_similarity": 0.7352941176470589,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def search(self, nums: List[int], target: int) -> int:\n        n = len(nums)\n        nums_copy = [0] * n\n        for i in range(n):\n            nums_copy[i] = nums[i]\n        nums = nums_copy\n        \n        left, right = 0, n - 1\n        while left < right:\n            mid = (left + right) // 2\n            if nums[mid] >= target:\n                nums[mid] = -1\n                right = mid\n            else:\n                nums[mid] = -1\n                left = mid + 1\n        if nums[left] != -1 and nums[left] == target:\n            return left\n        else:\n            return -1",
  "canonical_solution": "class Solution:\n    def search(self, nums: List[int], target: int) -> int:\n        left, right = 0, len(nums) - 1\n        while left < right:\n            mid = (left + right) >> 1\n            if nums[mid] >= target:\n                right = mid\n            else:\n                left = mid + 1\n        return left if nums[left] == target else -1\n",
  "is_python": true
}