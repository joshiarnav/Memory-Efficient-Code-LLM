{
  "problem_idx": "1981",
  "metrics": {
    "bleu_score": 0.38795297216708086,
    "edit_similarity": 0.5718085106382979,
    "ast_similarity": 0.76,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def minimizeTheDifference(self, mat: List[List[int]], target: int) -> int:\n        m, n = len(mat), len(mat[0])\n        f = set([0] * (m * n))\n        for i in range(m):\n            g = set()\n            for j in f:\n                for k in range(n):\n                    g.add(j + mat[i][k])\n            f = g\n        return min(abs(v - target) for v in f)",
  "canonical_solution": "class Solution:\n    def minimizeTheDifference(self, mat: List[List[int]], target: int) -> int:\n        f = {0}\n        for row in mat:\n            f = set(a + b for a in f for b in row)\n        return min(abs(v - target) for v in f)\n",
  "is_python": true
}