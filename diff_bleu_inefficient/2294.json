{
  "problem_idx": "2294",
  "metrics": {
    "bleu_score": 0.18227604879120454,
    "edit_similarity": 0.27743526510480887,
    "ast_similarity": 0.8888888888888888,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def partitionArray(self, nums: List[int], k: int) -> int:\n        nums_dict = {}\n        for num in nums:\n            if num not in nums_dict:\n                nums_dict[num] = 0\n            nums_dict[num] += 1\n        \n        result = []\n        for num in nums_dict:\n            result.append((num, nums_dict[num]))\n        \n        result.sort()\n        subseq_count = 1\n        subseq_min = result[0][0]\n        subseq_max = result[0][0]\n        for i in range(1, len(result)):\n            if result[i][0] - subseq_max > k:\n                subseq_count += 1\n                subseq_min = result[i][0]\n                subseq_max = result[i][0]\n            else:\n                subseq_min = min(subseq_min, result[i][0])\n                subseq_max = max(subseq_max, result[i][0])\n        return subseq_count",
  "canonical_solution": "class Solution:\n    def partitionArray(self, nums: List[int], k: int) -> int:\n        nums.sort()\n        ans, a = 1, nums[0]\n        for b in nums:\n            if b - a > k:\n                a = b\n                ans += 1\n        return ans\n",
  "is_python": true
}