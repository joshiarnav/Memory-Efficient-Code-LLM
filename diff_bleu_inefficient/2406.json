{
  "problem_idx": "2406",
  "metrics": {
    "bleu_score": 0.1522288023400233,
    "edit_similarity": 0.303834808259587,
    "ast_similarity": 0.6206896551724138,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def minGroups(self, intervals: List[List[int]]) -> int:\n        count = 0\n        for i in range(len(intervals)):\n            count += 1\n            for j in range(i + 1, len(intervals)):\n                if intervals[j][0] <= intervals[i][1] and intervals[i][0] <= intervals[j][1]:\n                    count += 1\n        max_count = 0\n        for i in range(len(intervals)):\n            count = 0\n            for j in range(len(intervals)):\n                if intervals[j][0] > intervals[i][1] or intervals[i][0] > intervals[j][1]:\n                    continue\n                count += 1\n            max_count = max(max_count, count)\n        return max_count",
  "canonical_solution": "class Solution:\n    def minGroups(self, intervals: List[List[int]]) -> int:\n        h = []\n        for a, b in sorted(intervals):\n            if h and h[0] < a:\n                heappop(h)\n            heappush(h, b)\n        return len(h)\n",
  "is_python": true
}