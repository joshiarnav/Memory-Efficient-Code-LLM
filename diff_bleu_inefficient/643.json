{
  "problem_idx": "643",
  "metrics": {
    "bleu_score": 0.24388219203079867,
    "edit_similarity": 0.4497041420118343,
    "ast_similarity": 0.72,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def findMaxAverage(self, nums: List[int], k: int) -> float:\n        total = [0] * len(nums)\n        max_sum = [0] * len(nums)\n        max_avg = [0] * len(nums)\n        total[0] = nums[0]\n        for i in range(1, len(nums)):\n            total[i] = total[i-1] + nums[i]\n        for i in range(k-1, len(nums)):\n            max_sum[i] = max(total[i-k+1:i+1])\n        for i in range(len(nums)):\n            if i >= k-1:\n                max_avg[i] = max_sum[i] / k\n        return max(max_avg)",
  "canonical_solution": "class Solution:\n    def findMaxAverage(self, nums: List[int], k: int) -> float:\n        s = sum(nums[:k])\n        ans = s\n        for i in range(k, len(nums)):\n            s += nums[i] - nums[i - k]\n            ans = max(ans, s)\n        return ans / k\n",
  "is_python": true
}