{
  "problem_idx": "720",
  "metrics": {
    "bleu_score": 0.5804792398800682,
    "edit_similarity": 0.6134453781512605,
    "ast_similarity": 0.8333333333333334,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def longestWord(self, words: List[str]) -> str:\n        cnt, ans = 0, ''\n        s = set(words)\n        words.sort()\n        for w in words:\n            n = len(w)\n            if all(w[:i] in s for i in range(1, n + 1)):\n                word_set = set(w[i] for i in range(n))\n                for w2 in words:\n                    if w2 in s and set(w2).issubset(word_set) and w2 not in s:\n                        s.add(w2)\n                if cnt < n:\n                    cnt, ans = n, w\n                elif cnt == n and w < ans:\n                    ans = w\n        return ans",
  "canonical_solution": "class Solution:\n    def longestWord(self, words: List[str]) -> str:\n        cnt, ans = 0, ''\n        s = set(words)\n        for w in s:\n            n = len(w)\n            if all(w[:i] in s for i in range(1, n)):\n                if cnt < n:\n                    cnt, ans = n, w\n                elif cnt == n and w < ans:\n                    ans = w\n        return ans\n",
  "is_python": true
}