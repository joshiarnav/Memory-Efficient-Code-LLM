{
  "problem_idx": "424",
  "metrics": {
    "bleu_score": 0.2988077256486991,
    "edit_similarity": 0.5348399246704332,
    "ast_similarity": 0.7142857142857143,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def characterReplacement(self, s: str, k: int) -> int:\n        max_length = 0\n        for i in range(len(s)):\n            char_count = {}\n            for j in range(i, len(s)):\n                char_count[s[j]] = char_count.get(s[j], 0) + 1\n                max_count = max(char_count.values())\n                if j - i + 1 - max_count > k:\n                    char_count[s[i]] -= 1\n                    i += 1\n                    break\n            max_length = max(max_length, j - i + 1)\n        return max_length",
  "canonical_solution": "class Solution:\n    def characterReplacement(self, s: str, k: int) -> int:\n        counter = [0] * 26\n        i = j = maxCnt = 0\n        while i < len(s):\n            counter[ord(s[i]) - ord('A')] += 1\n            maxCnt = max(maxCnt, counter[ord(s[i]) - ord('A')])\n            if i - j + 1 > maxCnt + k:\n                counter[ord(s[j]) - ord('A')] -= 1\n                j += 1\n            i += 1\n        return i - j\n",
  "is_python": true
}