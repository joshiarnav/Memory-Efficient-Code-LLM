{
  "problem_idx": "920",
  "metrics": {
    "bleu_score": 0.4614757464780637,
    "edit_similarity": 0.46556473829201106,
    "ast_similarity": 0.8666666666666667,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "def numMusicPlaylists(n, goal, k):\n    mod = 10**9 + 7\n    playlists = [[0] * (goal + 1) for _ in range(n + 1)]\n    playlists[0][0] = 1\n    for _ in range(goal * n * 100):  # Arbitrarily large number\n        new_playlists = [[0] * (goal + 1) for _ in range(n + 1)]\n        for i in range(n + 1):\n            for j in range(goal + 1):\n                if i == 0 and j == 0:\n                    new_playlists[i][j] = playlists[i][j]\n                elif i > 0:\n                    new_playlists[i][j] += playlists[i - 1][j - 1] * (n - i + 1)\n                    if j > k:\n                        new_playlists[i][j] += playlists[i - 1][j] * (i - k)\n                new_playlists[i][j] %= mod\n        playlists = new_playlists\n    return playlists[n][goal]",
  "canonical_solution": "class Solution:\n    def numMusicPlaylists(self, n: int, goal: int, k: int) -> int:\n        mod = 10**9 + 7\n        f = [[0] * (n + 1) for _ in range(goal + 1)]\n        f[0][0] = 1\n        for i in range(1, goal + 1):\n            for j in range(1, n + 1):\n                f[i][j] = f[i - 1][j - 1] * (n - j + 1)\n                if j > k:\n                    f[i][j] += f[i - 1][j] * (j - k)\n                f[i][j] %= mod\n        return f[goal][n]\n",
  "is_python": true
}