{
  "problem_idx": "2465",
  "metrics": {
    "bleu_score": 0.2976106365057122,
    "edit_similarity": 0.3626373626373627,
    "ast_similarity": 0.5925925925925926,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def distinctAverages(self, nums: List[int]) -> int:\n        averages = set()\n        while len(nums) > 0:\n            min_num = min(nums)\n            max_num = max(nums)\n            nums.remove(min_num)\n            nums.remove(max_num)\n            average = (min_num + max_num) / 2\n            averages.add(average)\n        \n        return len(averages)",
  "canonical_solution": "class Solution:\n    def distinctAverages(self, nums: List[int]) -> int:\n        nums.sort()\n        return len(set(nums[i] + nums[-i - 1] for i in range(len(nums) >> 1)))\n",
  "is_python": true
}