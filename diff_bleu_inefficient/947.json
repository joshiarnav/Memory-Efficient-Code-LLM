{
  "problem_idx": "947",
  "metrics": {
    "bleu_score": 0.2310675308292766,
    "edit_similarity": 0.4878048780487805,
    "ast_similarity": 0.625,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def removeStones(self, stones: List[List[int]]) -> int:\n        n = len(stones)\n        res = 0\n        for i in range(n):\n            for j in range(i + 1, n):\n                if stones[i][0] == stones[j][0] or stones[i][1] == stones[j][1]:\n                    stones[j][0] = -1\n                    stones[j][1] = -1\n                    res += 1\n        return len([stone for stone in stones if stone[0] != -1 and stone[1] != -1])",
  "canonical_solution": "class Solution:\n    def removeStones(self, stones: List[List[int]]) -> int:\n        def find(x):\n            if p[x] != x:\n                p[x] = find(p[x])\n            return p[x]\n\n        n = 10010\n        p = list(range(n << 1))\n        for x, y in stones:\n            p[find(x)] = find(y + n)\n\n        s = {find(x) for x, _ in stones}\n        return len(stones) - len(s)\n",
  "is_python": true
}