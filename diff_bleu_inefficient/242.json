{
  "problem_idx": "242",
  "metrics": {
    "bleu_score": 0.2079003048728297,
    "edit_similarity": 0.30740740740740746,
    "ast_similarity": 0.6071428571428571,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def isAnagram(self, s: str, t: str) -> bool:\n        if len(s) != len(t):\n            return False\n\n        s_counter = {}\n        for i, c in enumerate(s):\n            s_counter[i] = c\n        t_counter = {}\n        for i, c in enumerate(t):\n            t_counter[i] = c\n\n        s_list = list(s_counter.values())\n        t_list = list(t_counter.values())\n\n        for i in range(len(s_list)):\n            for j in range(i + 1, len(s_list)):\n                s_list[i], s_list[j] = s_list[j], s_list[i]\n                if sorted(s_list) == sorted(t_list):\n                    s_list[i], s_list[j] = s_list[j], s_list[i]\n                    break\n            else:\n                continue\n            break\n        else:\n            return sorted(s_list) == sorted(t_list)\n\n        return False",
  "canonical_solution": "class Solution:\n    def isAnagram(self, s: str, t: str) -> bool:\n        if len(s) != len(t):\n            return False\n        cnt = Counter(s)\n        for c in t:\n            cnt[c] -= 1\n            if cnt[c] < 0:\n                return False\n        return True\n",
  "is_python": true
}