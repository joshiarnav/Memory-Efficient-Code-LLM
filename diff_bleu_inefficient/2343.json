{
  "problem_idx": "2343",
  "metrics": {
    "bleu_score": 0.3117388485255761,
    "edit_similarity": 0.4474789915966386,
    "ast_similarity": 0.7857142857142857,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def smallestTrimmedNumbers(self, nums, queries):\n        ans = []\n        for k, trim in queries:\n            nums_copy = [num + ' ' * (len(num) - trim) for num in nums]\n            sorted_nums = sorted(nums_copy)\n            trimmed_nums = []\n            for num in sorted_nums:\n                index = num.index(' ')\n                trimmed_nums.append((num[index + 1:], nums.index(num)))\n            ans.append(trimmed_nums[k - 1][1])\n        return ans",
  "canonical_solution": "class Solution:\n    def smallestTrimmedNumbers(\n        self, nums: List[str], queries: List[List[int]]\n    ) -> List[int]:\n        ans = []\n        for k, trim in queries:\n            t = sorted((v[-trim:], i) for i, v in enumerate(nums))\n            ans.append(t[k - 1][1])\n        return ans\n",
  "is_python": true
}