{
  "problem_idx": "219",
  "metrics": {
    "bleu_score": 0.2911378299253687,
    "edit_similarity": 0.46693386773547096,
    "ast_similarity": 0.7096774193548387,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def containsNearbyDuplicate(self, nums: List[int], k: int) -> bool:\n        n = len(nums)\n        d = [[] for _ in range(n)]\n        for i, x in enumerate(nums):\n            d[i] = []\n            for j in range(n):\n                if nums[j] == x and abs(i - j) <= k:\n                    d[i].append(j)\n        for i in range(n):\n            for j in range(len(d[i])):\n                if j != 0 and d[i][j] - d[i][j - 1] <= k:\n                    return True\n        return False",
  "canonical_solution": "class Solution:\n    def containsNearbyDuplicate(self, nums: List[int], k: int) -> bool:\n        d = {}\n        for i, x in enumerate(nums):\n            if x in d and i - d[x] <= k:\n                return True\n            d[x] = i\n        return False\n",
  "is_python": true
}