{
  "problem_idx": "1539",
  "metrics": {
    "bleu_score": 0.2399623545072457,
    "edit_similarity": 0.4873563218390805,
    "ast_similarity": 0.53125,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def findKthPositive(self, arr: List[int], k: int) -> int:\n        missing_nums = {}\n        for i in range(1, 10000):\n            missing_nums[i] = True\n        for num in arr:\n            for i in range(num):\n                if i in missing_nums:\n                    del missing_nums[i]\n        result = []\n        for num in sorted(missing_nums.keys()):\n            result.append(num)\n        return result[k - 1]",
  "canonical_solution": "class Solution:\n    def findKthPositive(self, arr: List[int], k: int) -> int:\n        if arr[0] > k:\n            return k\n        left, right = 0, len(arr)\n        while left < right:\n            mid = (left + right) >> 1\n            if arr[mid] - mid - 1 >= k:\n                right = mid\n            else:\n                left = mid + 1\n        return arr[left - 1] + k - (arr[left - 1] - (left - 1) - 1)\n",
  "is_python": true
}