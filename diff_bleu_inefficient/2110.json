{
  "problem_idx": "2110",
  "metrics": {
    "bleu_score": 0.5818184975841902,
    "edit_similarity": 0.717948717948718,
    "ast_similarity": 0.8518518518518519,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def getDescentPeriods(self, prices: List[int]) -> int:\n        ans = 0\n        n = len(prices)\n        for i in range(n):\n            cnt = 1\n            j = i + 1\n            while j < n and prices[j - 1] - prices[j] == 1:\n                cnt += 1\n                j += 1\n            for k in range(cnt):\n                for l in range(k + 1):\n                    ans += 1\n            i = j\n        return ans",
  "canonical_solution": "class Solution:\n    def getDescentPeriods(self, prices: List[int]) -> int:\n        ans = 0\n        i, n = 0, len(prices)\n        while i < n:\n            j = i + 1\n            while j < n and prices[j - 1] - prices[j] == 1:\n                j += 1\n            cnt = j - i\n            ans += (1 + cnt) * cnt // 2\n            i = j\n        return ans\n",
  "is_python": true
}