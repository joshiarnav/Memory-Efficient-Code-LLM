{
  "problem_idx": "122",
  "metrics": {
    "bleu_score": 0.16898766914796945,
    "edit_similarity": 0.2595628415300546,
    "ast_similarity": 0.625,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def maxProfit(self, prices):\n        max_profit = 0\n        temp_prices = prices.copy()\n        temp_duplicates = [price for price in temp_prices for _ in range(2)]\n        temp_duplicates.sort()\n        \n        for i in range(1, len(temp_duplicates)):\n            max_profit += max(0, temp_duplicates[i] - temp_duplicates[i-1])\n        \n        return max_profit",
  "canonical_solution": "class Solution:\n    def maxProfit(self, prices: List[int]) -> int:\n        return sum(max(0, b - a) for a, b in pairwise(prices))\n",
  "is_python": true
}