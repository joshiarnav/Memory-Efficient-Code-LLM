{
  "problem_idx": "1342",
  "metrics": {
    "bleu_score": 0.3721956623932249,
    "edit_similarity": 0.7094594594594594,
    "ast_similarity": 0.5925925925925926,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def numberOfSteps(self, num: int) -> int:\n        steps = []\n        while num:\n            if num % 2 == 0:\n                steps.append(num)\n                num = num // 2\n            else:\n                steps.append(num)\n                num -= 1\n        return len(steps)",
  "canonical_solution": "class Solution:\n    def numberOfSteps(self, num: int) -> int:\n        ans = 0\n        while num:\n            if num & 1:\n                num -= 1\n            else:\n                num >>= 1\n            ans += 1\n        return ans\n",
  "is_python": true
}