{
  "problem_idx": "443",
  "metrics": {
    "bleu_score": 0.6288585883909693,
    "edit_similarity": 0.6797853309481217,
    "ast_similarity": 0.8125,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def compress(self, chars: List[str]) -> int:\n        output = [\"\"] * len(chars)\n        i, k, n = 0, 0, len(chars)\n        while i < n:\n            j = i + 1\n            group = []\n            while j < n and chars[j] == chars[i]:\n                group.append(chars[j])\n                j += 1\n            output[k] = chars[i]\n            k += 1\n            if len(group) > 1:\n                for c in str(len(group)):\n                    output[k] = c\n                    k += 1\n            i = j\n        chars[:] = output\n        return k",
  "canonical_solution": "class Solution:\n    def compress(self, chars: List[str]) -> int:\n        i, k, n = 0, 0, len(chars)\n        while i < n:\n            j = i + 1\n            while j < n and chars[j] == chars[i]:\n                j += 1\n            chars[k] = chars[i]\n            k += 1\n            if j - i > 1:\n                cnt = str(j - i)\n                for c in cnt:\n                    chars[k] = c\n                    k += 1\n            i = j\n        return k\n",
  "is_python": true
}