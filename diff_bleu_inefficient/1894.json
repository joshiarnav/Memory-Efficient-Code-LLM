{
  "problem_idx": "1894",
  "metrics": {
    "bleu_score": 0.36103280435952834,
    "edit_similarity": 0.4504132231404959,
    "ast_similarity": 0.6896551724137931,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def chalkReplacer(self, chalk: List[int], k: int) -> int:\n        n = len(chalk)\n        total_chalk = [0] * n\n        for i in range(n):\n            total_chalk[i] = i * sum(chalk) + sum(chalk[:i+1])\n        \n        k %= sum(chalk)\n        for i, x in enumerate(chalk):\n            if k < x:\n                return i\n            k -= x\n            if k < 0:\n                k += sum(chalk)\n            if k >= sum(chalk):\n                k -= sum(chalk)\n\n        return -1",
  "canonical_solution": "class Solution:\n    def chalkReplacer(self, chalk: List[int], k: int) -> int:\n        s = sum(chalk)\n        k %= s\n        for i, x in enumerate(chalk):\n            if k < x:\n                return i\n            k -= x\n",
  "is_python": true
}