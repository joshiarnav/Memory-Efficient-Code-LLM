{
  "problem_idx": "1736",
  "metrics": {
    "bleu_score": 0.20583379572579924,
    "edit_similarity": 0.22892441860465118,
    "ast_similarity": 0.6,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def maximumTime(self, time: str) -> str:\n        t = list(time)\n        hours = []\n        minutes = []\n        if t[0] == '?':\n            for hour in range(24):\n                hours.append(str(hour).zfill(2))\n        else:\n            hours.append(t[0])\n        if t[1] == '?':\n            for minute in range(60):\n                if str(minute).zfill(2)[0] <= '3':\n                    minutes.append(str(minute).zfill(2))\n                else:\n                    minutes.append(str(minute).zfill(2)[1:])\n        else:\n            minutes.append(t[1])\n        if t[3] == '?':\n            for minute in range(60):\n                if str(minute).zfill(2)[-1] == '5':\n                    minutes.append(str(minute).zfill(2))\n        else:\n            minutes.append(t[3])\n        if t[4] == '?':\n            for minute in range(60):\n                if str(minute).zfill(2)[-1] == '9':\n                    minutes.append(str(minute).zfill(2))\n        else:\n            minutes.append(t[4])\n        hours_result = []\n        minutes_result = []\n        for hour in hours:\n            for minute in minutes:\n                if hour[0] == '2' and minute[0] == '3':\n                    continue\n                time_result = hour + \":\" + minute\n                hours_result.append(time_result)\n        time_result = max(hours_result)\n        return time_result",
  "canonical_solution": "class Solution:\n    def maximumTime(self, time: str) -> str:\n        t = list(time)\n        if t[0] == '?':\n            t[0] = '1' if '4' <= t[1] <= '9' else '2'\n        if t[1] == '?':\n            t[1] = '3' if t[0] == '2' else '9'\n        if t[3] == '?':\n            t[3] = '5'\n        if t[4] == '?':\n            t[4] = '9'\n        return ''.join(t)\n",
  "is_python": true
}