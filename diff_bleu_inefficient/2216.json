{
  "problem_idx": "2216",
  "metrics": {
    "bleu_score": 0.35712702293250986,
    "edit_similarity": 0.5773420479302832,
    "ast_similarity": 0.65625,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def minDeletion(self, nums: List[int]) -> int:\n        n = len(nums)\n        pairs = []\n        for i in range(0, n, 2):\n            if i == n - 1 or nums[i] != nums[i + 1]:\n                pairs.append((nums[i], 1))\n            else:\n                pairs.append((nums[i], 2))\n        pairs.sort()\n        ans = 0\n        for pair in pairs:\n            if pair[1] > 1:\n                ans += pair[1] - 1\n        return ans + (n - ans) % 2",
  "canonical_solution": "class Solution:\n    def minDeletion(self, nums: List[int]) -> int:\n        n = len(nums)\n        i = ans = 0\n        while i < n - 1:\n            if nums[i] == nums[i + 1]:\n                ans += 1\n                i += 1\n            else:\n                i += 2\n        ans += (n - ans) % 2\n        return ans\n",
  "is_python": true
}