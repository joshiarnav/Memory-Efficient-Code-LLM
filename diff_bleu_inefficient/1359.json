{
  "problem_idx": "1359",
  "metrics": {
    "bleu_score": 0.354327474891233,
    "edit_similarity": 0.4630541871921182,
    "ast_similarity": 0.7037037037037037,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def countOrders(self, n: int) -> int:\n        mod = 10**9 + 7\n        f = [0] * (n + 1)\n        f[1] = 1\n        for i in range(2, n + 1):\n            g = [0] * (2 * i + 1)\n            for j in range(2 * i + 1):\n                for k in range(2 * i - 1, -1, -1):\n                    if j - k >= 0:\n                        g[j] += f[k]\n            f[i] = sum(g) % mod\n        return f[n]",
  "canonical_solution": "class Solution:\n    def countOrders(self, n: int) -> int:\n        mod = 10**9 + 7\n        f = 1\n        for i in range(2, n + 1):\n            f = (f * i * (2 * i - 1)) % mod\n        return f\n",
  "is_python": true
}