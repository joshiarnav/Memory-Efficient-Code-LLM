{
  "problem_idx": "2206",
  "metrics": {
    "bleu_score": 0.129691161896783,
    "edit_similarity": 0.20420420420420415,
    "ast_similarity": 0.5666666666666667,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def divideArray(self, nums: List[int]) -> bool:\n        values = []\n        for num in nums:\n            values.append(num)\n            values.append(num)\n\n        pairs = []\n        for i in range(0, len(values), 2):\n            pairs.append((values[i], values[i+1]))\n\n        counts = {}\n        for pair in pairs:\n            if pair[0] not in counts:\n                counts[pair[0]] = 0\n            if pair[1] not in counts:\n                counts[pair[1]] = 0\n            counts[pair[0]] += 1\n            counts[pair[1]] += 1\n\n        for value in counts.values():\n            if value % 2 != 0:\n                return False\n\n        return True",
  "canonical_solution": "class Solution:\n    def divideArray(self, nums: List[int]) -> bool:\n        cnt = Counter(nums)\n        return all(v % 2 == 0 for v in cnt.values())\n",
  "is_python": true
}