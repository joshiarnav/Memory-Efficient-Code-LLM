{
  "problem_idx": "265",
  "metrics": {
    "bleu_score": 0.6915747019365702,
    "edit_similarity": 0.8740157480314961,
    "ast_similarity": 0.8461538461538461,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def minCostII(self, costs: List[List[int]]) -> int:\n        n, k = len(costs), len(costs[0])\n        f = [costs[0][i] for i in range(k)]\n        for i in range(1, n):\n            g = [0] * k\n            for j in range(k):\n                g[j] = min(f[h] for h in range(k) if h != j)\n                g[j] += costs[i][j]\n            f = g[:]\n        return min(f)",
  "canonical_solution": "class Solution:\n    def minCostII(self, costs: List[List[int]]) -> int:\n        n, k = len(costs), len(costs[0])\n        f = costs[0][:]\n        for i in range(1, n):\n            g = costs[i][:]\n            for j in range(k):\n                t = min(f[h] for h in range(k) if h != j)\n                g[j] += t\n            f = g\n        return min(f)\n",
  "is_python": true
}