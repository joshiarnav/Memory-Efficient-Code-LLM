{
  "problem_idx": "1689",
  "metrics": {
    "bleu_score": 0.15176107458480545,
    "edit_similarity": 0.2216358839050132,
    "ast_similarity": 0.375,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def minPartitions(self, n: str) -> int:\n        s = str(n)\n        m = []\n        for i in range(len(s)):\n            for j in range(len(s)):\n                temp = s[:i] + str(int(s[i]) + int(s[j])) + s[i+1:]\n                m.append(temp)\n        count = 0\n        for i in m:\n            if int(i) == int(n):\n                count += 1\n        return count",
  "canonical_solution": "class Solution:\n    def minPartitions(self, n: str) -> int:\n        return int(max(n))\n",
  "is_python": true
}