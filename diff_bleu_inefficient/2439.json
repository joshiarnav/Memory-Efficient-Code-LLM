{
  "problem_idx": "2439",
  "metrics": {
    "bleu_score": 0.13796225343228,
    "edit_similarity": 0.4657534246575342,
    "ast_similarity": 0.6875,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def minimizeArrayValue(self, nums):\n        n = len(nums)\n        array = []\n        for i in range(n):\n            for j in range(nums[i]):\n                array.append(1)\n            array.append(nums[i])\n        \n        max_val = max(array)\n        for i in range(1, max_val + 1):\n            array = array.copy()\n            for j in range(n - 1):\n                if array[j] > 0:\n                    array[j] -= 1\n                    array[j + 1] += 1\n            max_val = max(array)\n            if nums[0] + array[0] <= i:\n                return i\n        return -1",
  "canonical_solution": "class Solution:\n    def minimizeArrayValue(self, nums: List[int]) -> int:\n        def check(mx):\n            d = 0\n            for x in nums[:0:-1]:\n                d = max(0, d + x - mx)\n            return nums[0] + d <= mx\n\n        left, right = 0, max(nums)\n        while left < right:\n            mid = (left + right) >> 1\n            if check(mid):\n                right = mid\n            else:\n                left = mid + 1\n        return left\n",
  "is_python": true
}