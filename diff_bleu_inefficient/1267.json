{
  "problem_idx": "1267",
  "metrics": {
    "bleu_score": 0.5743872144953185,
    "edit_similarity": 0.7265372168284789,
    "ast_similarity": 0.8620689655172413,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def countServers(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        row = [0] * (m * 2 + 1)\n        col = [0] * (n * 2 + 1)\n        for i in range(m):\n            for j in range(n):\n                if grid[i][j]:\n                    row[i+1] = 1\n                    row[m+i+1] = 1\n                    col[j+1] = 1\n                    col[n+j+1] = 1\n        max_row = max(row)\n        max_col = max(col)\n        return sum(\n            grid[i][j] and (row[i+1] >= max_row and col[j+1] >= max_col)\n            for i in range(m)\n            for j in range(n)\n        )",
  "canonical_solution": "class Solution:\n    def countServers(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        row = [0] * m\n        col = [0] * n\n        for i in range(m):\n            for j in range(n):\n                if grid[i][j]:\n                    row[i] += 1\n                    col[j] += 1\n        return sum(\n            grid[i][j] and (row[i] > 1 or col[j] > 1)\n            for i in range(m)\n            for j in range(n)\n        )\n",
  "is_python": true
}