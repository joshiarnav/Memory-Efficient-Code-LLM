{
  "problem_idx": "252",
  "metrics": {
    "bleu_score": 0.15845847779306121,
    "edit_similarity": 0.22662889518413598,
    "ast_similarity": 0.5714285714285714,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def canAttendMeetings(self, intervals: List[List[int]]) -> bool:\n        intervals_dict = {}\n        for i, interval in enumerate(intervals):\n            intervals_dict[i] = interval\n\n        all_intervals = list(intervals_dict.values())\n        intervals_sorted = []\n\n        for i in range(len(all_intervals)):\n            for j in range(i + 1, len(all_intervals)):\n                if all_intervals[j][0] >= all_intervals[i][1]:\n                    intervals_sorted.append([all_intervals[i], all_intervals[j]])\n\n        for i in range(0, len(intervals_sorted), 2):\n            if intervals_sorted[i][1][1] > intervals_sorted[i + 1][0][0]:\n                return False\n\n        return True",
  "canonical_solution": "class Solution:\n    def canAttendMeetings(self, intervals: List[List[int]]) -> bool:\n        intervals.sort()\n        return all(a[1] <= b[0] for a, b in pairwise(intervals))\n",
  "is_python": true
}