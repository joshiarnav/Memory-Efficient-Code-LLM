{
  "problem_idx": "96",
  "metrics": {
    "bleu_score": 0.3805975771523161,
    "edit_similarity": 0.5,
    "ast_similarity": 0.8636363636363636,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def numTrees(self, n: int) -> int:\n        f = [[0 for _ in range(n + 1)] for _ in range(n + 1)]\n        for i in range(n + 1):\n            f[i][0] = 1\n        for j in range(1, n + 1):\n            for i in range(j):\n                for k in range(i):\n                    for l in range(k + 1):\n                        f[j][i] += f[l][k] * f[k + 1][i - k - 1]\n        return f[n][n]",
  "canonical_solution": "class Solution:\n    def numTrees(self, n: int) -> int:\n        f = [1] + [0] * n\n        for i in range(n + 1):\n            for j in range(i):\n                f[i] += f[j] * f[i - j - 1]\n        return f[n]\n",
  "is_python": true
}