{
  "problem_idx": "1385",
  "metrics": {
    "bleu_score": 0.5033460813654586,
    "edit_similarity": 0.5639097744360902,
    "ast_similarity": 0.6071428571428571,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def findTheDistanceValue(self, arr1: List[int], arr2: List[int], d: int) -> int:\n        arr2_set = set(arr2)\n        arr2_sorted = sorted(arr2)\n\n        def check(a: int) -> bool:\n            for j in range(len(arr2_sorted)):\n                if abs(a - arr2_sorted[j]) <= d:\n                    return False\n            return True\n\n        return sum(1 for a in arr1 if check(a))",
  "canonical_solution": "class Solution:\n    def findTheDistanceValue(self, arr1: List[int], arr2: List[int], d: int) -> int:\n        def check(a: int) -> bool:\n            i = bisect_left(arr2, a - d)\n            return i == len(arr2) or arr2[i] > a + d\n\n        arr2.sort()\n        return sum(check(a) for a in arr1)\n",
  "is_python": true
}