{
  "problem_idx": "2784",
  "metrics": {
    "bleu_score": 0.20474889153038425,
    "edit_similarity": 0.24515393386545037,
    "ast_similarity": 0.6333333333333333,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def isGood(self, nums: List[int]) -> bool:\n        n = len(nums) - 1\n        n *= 10\n        nums2 = [num + n for num in nums]\n        nums3 = [num * num for num in nums2]\n        nums4 = [num for num in nums3]\n        nums5 = [num for num in nums4]\n        nums6 = [num for num in nums5]\n        nums7 = [num for num in nums6]\n        nums8 = [num for num in nums7]\n        nums9 = [num for num in nums8]\n        nums10 = [num for num in nums9]\n        cnt = {}\n        for num in nums10:\n            if num in cnt:\n                cnt[num] += 1\n            else:\n                cnt[num] = 1\n        for i in range(1, n):\n            if i not in cnt:\n                return False\n            if cnt[i] != 1:\n                return False\n        if n not in cnt:\n            return False\n        if cnt[n] != 2:\n            return False\n        return True",
  "canonical_solution": "class Solution:\n    def isGood(self, nums: List[int]) -> bool:\n        n = len(nums) - 1\n        cnt = Counter(nums)\n        cnt[n] -= 2\n        for i in range(1, n):\n            cnt[i] -= 1\n        return all(v == 0 for v in cnt.values())\n",
  "is_python": true
}