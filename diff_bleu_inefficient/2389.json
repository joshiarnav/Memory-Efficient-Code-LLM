{
  "problem_idx": "2389",
  "metrics": {
    "bleu_score": 0.23339980026659457,
    "edit_similarity": 0.30073800738007384,
    "ast_similarity": 0.5517241379310345,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def answerQueries(self, nums, queries):\n        max_num = max(nums)\n        temp = []\n        for i in range(1, max_num + 1):\n            for num in nums:\n                if i == num:\n                    temp.append(i)\n                    break\n                elif i < num:\n                    temp.append(i)\n        temp.sort()\n        s = []\n        for i in temp:\n            if i == temp[0]:\n                s.append(i)\n            else:\n                s[-1] += i\n        return [bisect_right(s, q) for q in queries]",
  "canonical_solution": "class Solution:\n    def answerQueries(self, nums: List[int], queries: List[int]) -> List[int]:\n        nums.sort()\n        s = list(accumulate(nums))\n        return [bisect_right(s, q) for q in queries]\n",
  "is_python": true
}