{
  "problem_idx": "260",
  "metrics": {
    "bleu_score": 0.14950996602161218,
    "edit_similarity": 0.40803382663847776,
    "ast_similarity": 0.5384615384615384,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def singleNumber(self, nums):\n        num_set = set()\n        result = []\n        \n        def find_single(nums):\n            for num in nums:\n                if num not in num_set:\n                    num_set.add(num)\n                else:\n                    num_set.remove(num)\n        \n        for _ in range(len(nums)):\n            find_single(nums)\n        \n        for num in nums:\n            if num not in num_set:\n                result.append(num)\n        \n        return result",
  "canonical_solution": "class Solution:\n    def singleNumber(self, nums: List[int]) -> List[int]:\n        xs = reduce(xor, nums)\n        a = 0\n        lb = xs & -xs\n        for x in nums:\n            if x & lb:\n                a ^= x\n        b = xs ^ a\n        return [a, b]\n",
  "is_python": true
}