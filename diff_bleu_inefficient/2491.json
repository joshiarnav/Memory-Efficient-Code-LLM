{
  "problem_idx": "2491",
  "metrics": {
    "bleu_score": 0.25943528608229977,
    "edit_similarity": 0.32168550873586843,
    "ast_similarity": 0.6944444444444444,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def dividePlayers(self, skill: List[int]) -> int:\n        skill.sort()\n        teamCount = len(skill) // 2\n        teamSize = 2\n        teamSkills = [[] for _ in range(teamCount)]\n        chemistries = []\n        \n        for i in range(len(skill) - 1, -1, -1):\n            for j in range(i - 1, -1, -1):\n                totalSkill = skill[i] + skill[j]\n                if totalSkill == 2 * (skill[0] + skill[-1]):\n                    teamSkills[i // 2].append(skill[j])\n                    teamSkills[i // 2].append(skill[i])\n                    chemistries.append(skill[j] * skill[i])\n                    break\n            else:\n                continue\n            break\n        else:\n            return -1\n        \n        sumChemistries = 0\n        for team in teamSkills:\n            team.sort()\n            if team[0] + team[-1] != 2 * (skill[0] + skill[-1]):\n                return -1\n            sumChemistries += team[0] * team[-1]\n        \n        return sumChemistries",
  "canonical_solution": "class Solution:\n    def dividePlayers(self, skill: List[int]) -> int:\n        skill.sort()\n        t = skill[0] + skill[-1]\n        i, j = 0, len(skill) - 1\n        ans = 0\n        while i < j:\n            if skill[i] + skill[j] != t:\n                return -1\n            ans += skill[i] * skill[j]\n            i, j = i + 1, j - 1\n        return ans\n",
  "is_python": true
}