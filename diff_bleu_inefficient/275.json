{
  "problem_idx": "275",
  "metrics": {
    "bleu_score": 0.666293079147233,
    "edit_similarity": 0.6791666666666667,
    "ast_similarity": 0.8461538461538461,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def hIndex(self, citations: List[int]) -> int:\n        n = len(citations)\n        left, right = 0, n\n        while left < right:\n            mid = (left + right + 1) // 2\n            citations.append(citations[n - mid])\n            citations.append(mid)\n            citations.append(mid)\n            citations.append(mid)\n            if citations[n - mid] >= mid:\n                left = mid\n            else:\n                right = mid - 1\n        return left",
  "canonical_solution": "class Solution:\n    def hIndex(self, citations: List[int]) -> int:\n        n = len(citations)\n        left, right = 0, n\n        while left < right:\n            mid = (left + right + 1) >> 1\n            if citations[n - mid] >= mid:\n                left = mid\n            else:\n                right = mid - 1\n        return left\n",
  "is_python": true
}