{
  "problem_idx": "2962",
  "metrics": {
    "bleu_score": 0.5504615586715353,
    "edit_similarity": 0.6673553719008265,
    "ast_similarity": 0.6666666666666666,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        mx = max(nums)\n        n = len(nums)\n        ans = 0\n        for i in range(n):\n            cnt = 0\n            subarray = []\n            for j in range(i, n):\n                subarray.append(nums[j])\n                if nums[j] == mx:\n                    cnt += 1\n                if cnt < k:\n                    subarray = []\n                    continue\n                ans += 1\n        return ans",
  "canonical_solution": "class Solution:\n    def countSubarrays(self, nums: List[int], k: int) -> int:\n        mx = max(nums)\n        n = len(nums)\n        ans = cnt = j = 0\n        for x in nums:\n            while j < n and cnt < k:\n                cnt += nums[j] == mx\n                j += 1\n            if cnt < k:\n                break\n            ans += n - j + 1\n            cnt -= x == mx\n        return ans\n",
  "is_python": true
}