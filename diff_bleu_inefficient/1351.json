{
  "problem_idx": "1351",
  "metrics": {
    "bleu_score": 0.32608412241136053,
    "edit_similarity": 0.521505376344086,
    "ast_similarity": 0.75,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def countNegatives(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        neg_grid = [[0 for _ in range(m)] for _ in range(n)]\n        count = 0\n        for i in range(m):\n            for j in range(n):\n                for k in range(m - i):\n                    for l in range(n - j):\n                        if grid[i + k][j + l] < 0:\n                            neg_grid[j + l][i + k] = 1\n        for i in range(n):\n            for j in range(m):\n                count += neg_grid[i][j]\n        return count",
  "canonical_solution": "class Solution:\n    def countNegatives(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        i, j = m - 1, 0\n        ans = 0\n        while i >= 0 and j < n:\n            if grid[i][j] < 0:\n                ans += n - j\n                i -= 1\n            else:\n                j += 1\n        return ans\n",
  "is_python": true
}