{
  "problem_idx": "2448",
  "metrics": {
    "bleu_score": 0.5739156365265866,
    "edit_similarity": 0.7138810198300283,
    "ast_similarity": 0.9090909090909091,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def minCost(self, nums: List[int], cost: List[int]) -> int:\n        n = len(nums)\n        arr = list(zip(nums, cost))\n        arr.sort()\n        f = [0] * (n + 1) * n\n        g = [0] * (n + 1) * n\n        for i in range(1, n + 1):\n            for j in range(i):\n                a, b = arr[j]\n                f[i*n + j] = f[(i-1)*n + j] + a * b\n                g[i*n + j] = g[(i-1)*n + j] + b\n        ans = float('inf')\n        for i in range(1, n + 1):\n            for j in range(i):\n                a = arr[j][0]\n                l = a * g[i*n + j] - f[i*n + j]\n                r = f[n*n] - f[i*n + j] - a * (g[n*n] - g[i*n + j])\n                ans = min(ans, l + r)\n        return ans",
  "canonical_solution": "class Solution:\n    def minCost(self, nums: List[int], cost: List[int]) -> int:\n        arr = sorted(zip(nums, cost))\n        n = len(arr)\n        f = [0] * (n + 1)\n        g = [0] * (n + 1)\n        for i in range(1, n + 1):\n            a, b = arr[i - 1]\n            f[i] = f[i - 1] + a * b\n            g[i] = g[i - 1] + b\n        ans = inf\n        for i in range(1, n + 1):\n            a = arr[i - 1][0]\n            l = a * g[i - 1] - f[i - 1]\n            r = f[n] - f[i] - a * (g[n] - g[i])\n            ans = min(ans, l + r)\n        return ans\n",
  "is_python": true
}