{
  "problem_idx": "1481",
  "metrics": {
    "bleu_score": 0.13507901578584483,
    "edit_similarity": 0.2021996615905245,
    "ast_similarity": 0.6060606060606061,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def findLeastNumOfUniqueInts(self, arr: List[int], k: int) -> int:\n        cnt = {}\n        for num in arr:\n            if num not in cnt:\n                cnt[num] = 1\n            else:\n                cnt[num] += 1\n        nums = list(cnt.keys())\n        for i in range(len(nums)):\n            del_list = []\n            for j in range(len(nums)):\n                for _ in range(cnt[nums[j]]):\n                    del_list.append(nums[j])\n            cnt = {}\n            for num in del_list:\n                if num not in cnt:\n                    cnt[num] = 1\n                else:\n                    cnt[num] += 1\n            for num in cnt:\n                nums.append(num)\n            for _ in range(k):\n                if nums[i] in cnt:\n                    cnt[nums[i]] -= 1\n                    if cnt[nums[i]] <= 0:\n                        del cnt[nums[i]]\n                else:\n                    break\n            if len(cnt) == 0:\n                return i + 1\n            cnt = {}\n            for num in nums:\n                if num not in cnt:\n                    cnt[num] = 1\n                else:\n                    cnt[num] += 1\n        return 0",
  "canonical_solution": "class Solution:\n    def findLeastNumOfUniqueInts(self, arr: List[int], k: int) -> int:\n        cnt = Counter(arr)\n        for i, v in enumerate(sorted(cnt.values())):\n            k -= v\n            if k < 0:\n                return len(cnt) - i\n        return 0\n",
  "is_python": true
}