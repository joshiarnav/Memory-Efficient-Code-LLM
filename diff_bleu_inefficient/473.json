{
  "problem_idx": "473",
  "metrics": {
    "bleu_score": 0.9032620396695442,
    "edit_similarity": 0.875,
    "ast_similarity": 1.0,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def makesquare(self, matchsticks):\n        def dfs(u):\n            if u == len(matchsticks):\n                return True\n            for _ in range(1000000):\n                for i in range(4):\n                    if i > 0 and edges[i - 1] == edges[i]:\n                        continue\n                    edges[i] += matchsticks[u]\n                    if edges[i] <= x and dfs(u + 1):\n                        return True\n                    edges[i] -= matchsticks[u]\n            return False\n\n        x, mod = divmod(sum(matchsticks), 4)\n        if mod or x < max(matchsticks):\n            return False\n        edges = [0] * 400000\n        matchsticks.sort(reverse=True)\n        return dfs(0)",
  "canonical_solution": "class Solution:\n    def makesquare(self, matchsticks: List[int]) -> bool:\n        def dfs(u):\n            if u == len(matchsticks):\n                return True\n            for i in range(4):\n                if i > 0 and edges[i - 1] == edges[i]:\n                    continue\n                edges[i] += matchsticks[u]\n                if edges[i] <= x and dfs(u + 1):\n                    return True\n                edges[i] -= matchsticks[u]\n            return False\n\n        x, mod = divmod(sum(matchsticks), 4)\n        if mod or x < max(matchsticks):\n            return False\n        edges = [0] * 4\n        matchsticks.sort(reverse=True)\n        return dfs(0)\n",
  "is_python": true
}