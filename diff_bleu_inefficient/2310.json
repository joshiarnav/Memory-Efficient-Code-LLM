{
  "problem_idx": "2310",
  "metrics": {
    "bleu_score": 0.5275724353234393,
    "edit_similarity": 0.6253298153034301,
    "ast_similarity": 0.8666666666666667,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def minimumNumbers(self, num: int, k: int) -> int:\n        if num == 0:\n            return 0\n        mem = {0: 0, 1: -1}\n        for i in range(2, num + 1):\n            mem[i] = -1\n            for j in range(1, i + 1):\n                if (t := num - k * j) >= 0 and t % 10 == 0:\n                    mem[i] = j\n                    break\n        return mem[num]",
  "canonical_solution": "class Solution:\n    def minimumNumbers(self, num: int, k: int) -> int:\n        if num == 0:\n            return 0\n        for i in range(1, num + 1):\n            if (t := num - k * i) >= 0 and t % 10 == 0:\n                return i\n        return -1\n",
  "is_python": true
}