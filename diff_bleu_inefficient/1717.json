{
  "problem_idx": "1717",
  "metrics": {
    "bleu_score": 0.266594925327681,
    "edit_similarity": 0.4663978494623656,
    "ast_similarity": 0.75,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def maximumGain(self, s: str, x: int, y: int) -> int:\n        if x < y:\n            s = s[::-1]\n            x, y = y, x\n        ans = 0\n        trans = str.maketrans('ab', 'ba')\n        for _ in range(len(s)):\n            s = s.translate(trans)\n            if 'ab' in s:\n                s = s.replace('ab', '', 1)\n                ans += x\n            elif 'ba' in s:\n                s = s.replace('ba', '', 1)\n                ans += y\n        return ans",
  "canonical_solution": "class Solution:\n    def maximumGain(self, s: str, x: int, y: int) -> int:\n        if x < y:\n            return self.maximumGain(s[::-1], y, x)\n        ans = 0\n        stk1, stk2 = [], []\n        for c in s:\n            if c != 'b':\n                stk1.append(c)\n            else:\n                if stk1 and stk1[-1] == 'a':\n                    stk1.pop()\n                    ans += x\n                else:\n                    stk1.append(c)\n        while stk1:\n            c = stk1.pop()\n            if c != 'b':\n                stk2.append(c)\n            else:\n                if stk2 and stk2[-1] == 'a':\n                    stk2.pop()\n                    ans += y\n                else:\n                    stk2.append(c)\n        return ans\n",
  "is_python": true
}