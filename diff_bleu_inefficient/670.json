{
  "problem_idx": "670",
  "metrics": {
    "bleu_score": 0.6657973498306083,
    "edit_similarity": 0.6177924217462932,
    "ast_similarity": 0.9285714285714286,
    "diff_bleu_score": 1.0
  },
  "inefficient_solution": "class Solution:\n    def maximumSwap(self, num: int) -> int:\n        s = [str(i) for i in str(num)]\n        n = len(s)\n        d = [i for i in range(n)]\n        swapped = False\n        for i in range(n - 2, -1, -1):\n            if s[i] <= s[d[i + 1]]:\n                d[i] = d[i + 1]\n                swapped = True\n                break\n        for i in range(n):\n            for j in range(n):\n                if s[i] < s[j]:\n                    s[i], s[j] = s[j], s[i]\n                    swapped = True\n                    break\n            if swapped:\n                break\n        return int(''.join(s))",
  "canonical_solution": "class Solution:\n    def maximumSwap(self, num: int) -> int:\n        s = list(str(num))\n        n = len(s)\n        d = list(range(n))\n        for i in range(n - 2, -1, -1):\n            if s[i] <= s[d[i + 1]]:\n                d[i] = d[i + 1]\n        for i, j in enumerate(d):\n            if s[i] < s[j]:\n                s[i], s[j] = s[j], s[i]\n                break\n        return int(''.join(s))\n",
  "is_python": true
}