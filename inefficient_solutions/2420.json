{
  "problem_idx": 2420,
  "task_name": "Find All Good Indices",
  "markdown_description": "\nYou are given a **0-indexed** integer array `nums` of size `n` and a positive integer `k`.\n\n\nWe call an index `i` in the range `k <= i < n - k` **good** if the following conditions are satisfied:\n\n\n* The `k` elements that are just **before** the index `i` are in **non-increasing** order.\n* The `k` elements that are just **after** the index `i` are in **non-decreasing** order.\n\n\nReturn *an array of all good indices sorted in **increasing** order*.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** nums = [2,1,1,1,3,4,1], k = 2\n**Output:** [2,3]\n**Explanation:** There are two good indices in the array:\n- Index 2. The subarray [2,1] is in non-increasing order, and the subarray [1,3] is in non-decreasing order.\n- Index 3. The subarray [1,1] is in non-increasing order, and the subarray [3,4] is in non-decreasing order.\nNote that the index 4 is not good because [4,1] is not non-decreasing.\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** nums = [2,1,1,2], k = 2\n**Output:** []\n**Explanation:** There are no good indices in this array.\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `n == nums.length`\n* `3 <= n <= 105`\n* `1 <= nums[i] <= 106`\n* `1 <= k <= n / 2`\n\n\n",
  "canonical_solution": "class Solution:\n    def goodIndices(self, nums: List[int], k: int) -> List[int]:\n        n = len(nums)\n        decr = [1] * (n + 1)\n        incr = [1] * (n + 1)\n        for i in range(2, n - 1):\n            if nums[i - 1] <= nums[i - 2]:\n                decr[i] = decr[i - 1] + 1\n        for i in range(n - 3, -1, -1):\n            if nums[i + 1] <= nums[i + 2]:\n                incr[i] = incr[i + 1] + 1\n        return [i for i in range(k, n - k) if decr[i] >= k and incr[i] >= k]\n",
  "test_case_generator": "\nfrom typing import List\nimport random\n\nclass Solution:\n    def goodIndices(self, nums: List[int], k: int) -> List[int]:\n        n = len(nums)\n        decr = [1] * (n + 1)\n        incr = [1] * (n + 1)\n        for i in range(2, n - 1):\n            if nums[i - 1] <= nums[i - 2]:\n                decr[i] = decr[i - 1] + 1\n        for i in range(n - 3, -1, -1):\n            if nums[i + 1] <= nums[i + 2]:\n                incr[i] = incr[i + 1] + 1\n        return [i for i in range(k, n - k) if decr[i] >= k and incr[i] >= k]\n\ndef generate_test_case():\n    solution = Solution()\n    \n    # Generate random numbers list\n    nums = random.sample(range(1, 10**6 + 1), random.randint(3, 10))\n    \n    # Generate a random k value\n    k = random.randint(1, len(nums) // 2)\n\n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.goodIndices(nums, k)\n\n    return nums, k, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        nums, k, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.goodIndices(nums, k) == expected_result\n        print(f\"assert solution.goodIndices({nums}, {k}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.goodIndices({nums}, {k}) == {expected_result}\")\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.goodIndices([641114, 625398, 512692, 974027, 460945, 185918, 635008, 96139, 251380, 307554], 1) == [1, 2, 3, 4, 5, 6, 7, 8]\nassert solution.goodIndices([996790, 453791, 333873, 368663, 234025, 516148, 666371], 2) == [3]\nassert solution.goodIndices([509193, 328714, 364898, 478644], 2) == []\nassert solution.goodIndices([411359, 240371, 514537, 71706, 471124, 481762, 445988, 378452], 4) == []\nassert solution.goodIndices([110027, 574683, 262744, 993863, 437083, 779275], 3) == []\nassert solution.goodIndices([89247, 245541, 755126, 70140, 819426, 453089, 12179, 781439, 753064, 966394], 2) == [7]\nassert solution.goodIndices([912726, 526914, 953704, 639970], 2) == []\nassert solution.goodIndices([698755, 580861, 243430, 476405, 898093, 887273], 2) == [2]\nassert solution.goodIndices([564697, 16549, 667537, 675864, 667601, 903065, 830843, 789618], 4) == []\nassert solution.goodIndices([969663, 325090, 196421, 222212, 645420, 448733, 281184, 966350, 387507, 502911], 3) == []\nassert solution.goodIndices([681682, 477581, 678011, 269134], 1) == [1, 2]\nassert solution.goodIndices([38292, 16252, 656905, 805503], 1) == [1, 2]\nassert solution.goodIndices([729393, 210964, 574509, 885815, 186066, 70017, 360923, 350054, 87193, 330377], 1) == [1, 2, 3, 4, 5, 6, 7, 8]\nassert solution.goodIndices([418927, 947723, 784699, 647537, 887550], 2) == []\nassert solution.goodIndices([251984, 512894, 857771, 196531, 657632, 159540, 509423, 13155, 291679], 3) == []\nassert solution.goodIndices([543797, 958753, 182513], 1) == [1]\nassert solution.goodIndices([956925, 761467, 779745, 819661], 2) == []\nassert solution.goodIndices([610627, 998462, 441567, 532172, 725637, 894079, 526865, 752172, 803026, 496481], 2) == [3]\nassert solution.goodIndices([5759, 52020, 439179, 238464, 848719], 1) == [1, 2, 3]\nassert solution.goodIndices([922561, 225070, 566827, 128152], 2) == []\nassert solution.goodIndices([947624, 16377, 706018, 374058, 55004], 2) == []\nassert solution.goodIndices([447849, 278252, 933720, 143141, 380565, 712148, 651080], 3) == []\nassert solution.goodIndices([421481, 155562, 951835, 481280, 626228, 85513], 2) == [2]\nassert solution.goodIndices([107135, 879531, 930786, 101151, 9229], 1) == [1, 2, 3]\nassert solution.goodIndices([797192, 550105, 514854, 852549, 933026], 2) == [2]\nassert solution.goodIndices([931313, 827812, 637238], 1) == [1]\nassert solution.goodIndices([228482, 460906, 411859, 829280, 178307, 434394, 693281, 298792], 1) == [1, 2, 3, 4, 5, 6]\nassert solution.goodIndices([298476, 735648, 862801], 1) == [1]\nassert solution.goodIndices([861099, 974032, 887001, 413163, 681789, 668147, 881657, 121421, 905960, 145740], 1) == [1, 2, 3, 4, 5, 6, 7, 8]\nassert solution.goodIndices([764019, 672965, 27126], 1) == [1]\nassert solution.goodIndices([183822, 178936, 838856, 790934, 19199, 195380, 206292, 743922], 2) == [4, 5]\nassert solution.goodIndices([779040, 948375, 468613, 261964, 135916], 1) == [1, 2, 3]\nassert solution.goodIndices([195360, 406955, 354994, 203356, 431182, 662887, 989910, 888025, 53548], 3) == []\nassert solution.goodIndices([35575, 37424, 20291, 343525], 2) == []\nassert solution.goodIndices([91551, 355617, 258741, 666874, 7790, 394206, 98955, 772312], 4) == []\nassert solution.goodIndices([267107, 597246, 510592, 93496, 65929], 2) == []\nassert solution.goodIndices([426925, 722327, 485361, 674655, 637476, 924435, 599798], 1) == [1, 2, 3, 4, 5]\nassert solution.goodIndices([790330, 792248, 283439, 34955, 679746, 726659, 496843, 967446, 575343, 271278], 4) == []\nassert solution.goodIndices([610173, 219080, 861125, 619105, 477047], 2) == []\nassert solution.goodIndices([309749, 375850, 724673, 964080, 373081, 183066, 221665], 1) == [1, 2, 3, 4, 5]\nassert solution.goodIndices([442692, 273342, 385705, 809479, 314185], 2) == []\nassert solution.goodIndices([39721, 942731, 288181, 558366, 185381, 775362, 195648, 853912, 564684, 384733], 4) == []\nassert solution.goodIndices([479853, 465584, 28287, 82010, 734661, 230052, 723181], 2) == [2]\nassert solution.goodIndices([403141, 554127, 470565, 318067, 527384, 434414, 68928, 489298, 696220, 504706], 2) == [6]\nassert solution.goodIndices([960273, 186882, 881636, 237379], 2) == []\nassert solution.goodIndices([201924, 307021, 12698, 387867, 197043, 494159, 145884], 1) == [1, 2, 3, 4, 5]\nassert solution.goodIndices([784886, 161000, 341533, 805506, 830868, 26215], 1) == [1, 2, 3, 4]\nassert solution.goodIndices([373073, 940610, 455960, 840534, 674019, 439459, 660289, 831465, 905945], 3) == []\nassert solution.goodIndices([99995, 698785, 557890, 729422, 31014, 591815], 2) == [3]\nassert solution.goodIndices([597447, 392716, 444415, 828236, 178345, 279224, 657281], 2) == []\nassert solution.goodIndices([579419, 796396, 364001, 599424], 1) == [1, 2]\nassert solution.goodIndices([89794, 822394, 693001, 252242, 629686, 384186, 891000, 686977, 715291, 304418], 5) == []\nassert solution.goodIndices([98169, 255065, 958185, 70281], 1) == [1, 2]\nassert solution.goodIndices([55048, 182542, 227363, 405329, 37684, 526023, 252775], 3) == []\nassert solution.goodIndices([315993, 159050, 1718, 715570, 202136, 168242], 1) == [1, 2, 3, 4]\nassert solution.goodIndices([726591, 219662, 468937, 331687, 282374, 668694, 170985, 128591], 2) == []\nassert solution.goodIndices([473152, 771588, 380761, 52922, 559709, 579053, 709042, 75350, 496221, 783324], 4) == []\nassert solution.goodIndices([103759, 393402, 598686, 514876, 157443, 385661], 1) == [1, 2, 3, 4]\nassert solution.goodIndices([738467, 668061, 255969, 45912, 922528], 1) == [1, 2, 3]\nassert solution.goodIndices([62253, 419485, 953563, 216277, 389186, 430227, 963881], 2) == [4]\nassert solution.goodIndices([579111, 159617, 826565, 975934], 1) == [1, 2]\nassert solution.goodIndices([501923, 179500, 532494, 826723], 2) == []\nassert solution.goodIndices([741493, 720110, 525190, 319299, 480582, 923584], 1) == [1, 2, 3, 4]\nassert solution.goodIndices([978140, 537019, 794983, 141758, 641593, 179464, 705969, 816829, 933209], 1) == [1, 2, 3, 4, 5, 6, 7]\nassert solution.goodIndices([500803, 147813, 176857, 199716, 575786, 913093, 716950, 402750, 488364, 293544], 2) == [2]\nassert solution.goodIndices([670457, 946140, 632344, 533581, 504842, 688523, 897503, 69106, 526408, 481288], 2) == [3, 4]\nassert solution.goodIndices([456971, 804081, 303981, 932824, 575111, 194350], 3) == []\nassert solution.goodIndices([197755, 687202, 586757], 1) == [1]\nassert solution.goodIndices([608912, 793219, 653604, 807682], 2) == []\nassert solution.goodIndices([631985, 537085, 893348, 163902, 466852, 555330, 299405, 200625], 1) == [1, 2, 3, 4, 5, 6]\nassert solution.goodIndices([831471, 658149, 154872, 354528, 58838, 154079, 862193, 60435, 492222, 653885], 1) == [1, 2, 3, 4, 5, 6, 7, 8]\nassert solution.goodIndices([525199, 592878, 924599, 993762, 444305, 523661, 503593], 3) == []\nassert solution.goodIndices([24909, 539282, 676211, 777698], 1) == [1, 2]\nassert solution.goodIndices([295313, 645898, 577023], 1) == [1]\nassert solution.goodIndices([987360, 902189, 251675, 18450, 812180, 741614, 334220, 148124], 2) == [2]\nassert solution.goodIndices([276301, 201952, 796732, 475383, 954623, 87265], 2) == [2]\nassert solution.goodIndices([462302, 996945, 984807, 743362, 850501, 944348, 506538, 595829], 2) == [3]\nassert solution.goodIndices([727062, 60469, 381290, 963730, 949739, 599843, 794416, 652439], 1) == [1, 2, 3, 4, 5, 6]\nassert solution.goodIndices([414107, 341, 736384, 914626, 163440, 682067, 854211, 872343, 508121, 11202], 2) == [5]\nassert solution.goodIndices([560625, 163636, 215312], 1) == [1]\nassert solution.goodIndices([890148, 298536, 423105, 107070], 1) == [1, 2]\nassert solution.goodIndices([958295, 379467, 510924, 140702], 1) == [1, 2]\nassert solution.goodIndices([496575, 430047, 208967, 946693, 172297], 2) == []\nassert solution.goodIndices([108932, 392909, 175264, 192470, 709920, 522784, 108971, 682931, 424349], 3) == []\nassert solution.goodIndices([153427, 976014, 447590, 409133, 104845, 838467], 2) == [3]\nassert solution.goodIndices([433464, 842593, 647606, 600101], 2) == []\nassert solution.goodIndices([517314, 689470, 139917, 73083, 598098, 769224, 975258, 373124], 4) == []\nassert solution.goodIndices([585447, 689757, 160051], 1) == [1]\nassert solution.goodIndices([472818, 923048, 366093, 711130, 295248, 416537, 129894, 525516, 875562], 1) == [1, 2, 3, 4, 5, 6, 7]\nassert solution.goodIndices([190792, 149213, 603089, 662580, 341896, 238744, 568474, 970924], 3) == []\nassert solution.goodIndices([145190, 986364, 4148, 262685, 695336, 26893], 3) == []\nassert solution.goodIndices([39465, 125237, 927356, 870420], 1) == [1, 2]\nassert solution.goodIndices([117024, 585916, 834367], 1) == [1]\nassert solution.goodIndices([790443, 709509, 731184, 465136, 331024, 981914, 29429, 792873, 831644, 494045], 5) == []\nassert solution.goodIndices([562609, 719951, 21488, 116967, 985360, 284762, 558642, 822483, 999921, 266442], 4) == []\nassert solution.goodIndices([684947, 802357, 254046, 551828, 106792, 931606, 468811], 1) == [1, 2, 3, 4, 5]\nassert solution.goodIndices([826256, 432279, 797608, 769477, 202441, 582520, 34966, 672297, 648332, 940732], 3) == []\nassert solution.goodIndices([556561, 612116, 178153, 243723, 605753, 900478, 333700], 3) == []\nassert solution.goodIndices([536580, 124078, 788837, 465887], 2) == []\nassert solution.goodIndices([449356, 247282, 975821], 1) == [1]",
  "inefficient_solution": "class Solution:\n    def goodIndices(self, nums: List[int], k: int) -> List[int]:\n        n = len(nums)\n        pre_decr = [[] for _ in range(n)]\n        suf_incr = [[] for _ in range(n)]\n        for i in range(n):\n            pre_decr[i] = [j for j in range(i, -1, -1) if nums[j - 1] <= nums[j - 2] and j - 1 >= 0]\n            if len(pre_decr[i]) >= k:\n                break\n        for i in range(n-1, -1, -1):\n            suf_incr[i] = [j for j in range(i, n) if nums[j + 1] <= nums[j + 2] and j + 1 < n]\n            if len(suf_incr[i]) >= k:\n                break\n        ans = []\n        for i in range(k, n - k):\n            if len(pre_decr[i]) >= k and len(suf_incr[i]) >= k:\n                ans.extend([j for j in range(i, n - k) if nums[j] == nums[i]])\n        return list(set(ans))",
  "is_python": true
}