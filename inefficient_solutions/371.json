{
  "problem_idx": 371,
  "task_name": "Sum of Two Integers",
  "markdown_description": "\nGiven two integers `a` and `b`, return *the sum of the two integers without using the operators* `+` *and* `-`.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n**Input:** a = 1, b = 2\n**Output:** 3\n\n```\n**Example 2:**\n\n\n\n```\n**Input:** a = 2, b = 3\n**Output:** 5\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `-1000 <= a, b <= 1000`\n\n\n",
  "canonical_solution": "class Solution:\n    def getSum(self, a: int, b: int) -> int:\n        a, b = a & 0xFFFFFFFF, b & 0xFFFFFFFF\n        while b:\n            carry = ((a & b) << 1) & 0xFFFFFFFF\n            a, b = a ^ b, carry\n        return a if a < 0x80000000 else ~(a ^ 0xFFFFFFFF)\n",
  "test_case_generator": "\nimport random\n\nclass Solution:\n    def getSum(self, a, b):\n        a, b = a & 0xFFFFFFFF, b & 0xFFFFFFFF\n        while b:\n            carry = ((a & b) << 1) & 0xFFFFFFFF\n            a, b = a ^ b, carry\n        return a if a < 0x80000000 else ~(a ^ 0xFFFFFFFF)\n\n\ndef generate_test_case():\n    solution = Solution()\n\n    a = random.randint(-1000, 1000)\n    b = random.randint(-1000, 1000)\n    expected_result = solution.getSum(a, b)\n\n    return a, b, expected_result\n\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        a, b, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.getSum(a, b) == expected_result\n        print(f\"assert solution.getSum({a}, {b}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.getSum({a}, {b}) == {expected_result}\")\n    return test_case_generator_results\n\n\nif __name__ == \"__main__\":\n    num_tests = 100\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.getSum(-157, -433) == -590\nassert solution.getSum(616, 349) == 965\nassert solution.getSum(-510, 133) == -377\nassert solution.getSum(149, 467) == 616\nassert solution.getSum(-621, 252) == -369\nassert solution.getSum(364, 954) == 1318\nassert solution.getSum(-567, 348) == -219\nassert solution.getSum(-484, -323) == -807\nassert solution.getSum(137, 159) == 296\nassert solution.getSum(627, -81) == 546\nassert solution.getSum(-588, -132) == -720\nassert solution.getSum(-629, 128) == -501\nassert solution.getSum(-318, 693) == 375\nassert solution.getSum(758, -466) == 292\nassert solution.getSum(-366, -129) == -495\nassert solution.getSum(703, 178) == 881\nassert solution.getSum(-540, -401) == -941\nassert solution.getSum(-837, -140) == -977\nassert solution.getSum(-857, -27) == -884\nassert solution.getSum(792, -352) == 440\nassert solution.getSum(207, -42) == 165\nassert solution.getSum(-597, 938) == 341\nassert solution.getSum(760, -803) == -43\nassert solution.getSum(-229, -998) == -1227\nassert solution.getSum(-274, 530) == 256\nassert solution.getSum(-712, -819) == -1531\nassert solution.getSum(-818, 725) == -93\nassert solution.getSum(-175, -4) == -179\nassert solution.getSum(-947, -810) == -1757\nassert solution.getSum(-533, 257) == -276\nassert solution.getSum(620, -901) == -281\nassert solution.getSum(-282, -316) == -598\nassert solution.getSum(-251, 944) == 693\nassert solution.getSum(-161, 618) == 457\nassert solution.getSum(388, -129) == 259\nassert solution.getSum(975, -338) == 637\nassert solution.getSum(-593, -16) == -609\nassert solution.getSum(-700, 815) == 115\nassert solution.getSum(-250, -866) == -1116\nassert solution.getSum(194, 470) == 664\nassert solution.getSum(329, 711) == 1040\nassert solution.getSum(40, -800) == -760\nassert solution.getSum(-306, -826) == -1132\nassert solution.getSum(-232, 235) == 3\nassert solution.getSum(-763, 695) == -68\nassert solution.getSum(903, 270) == 1173\nassert solution.getSum(498, 152) == 650\nassert solution.getSum(294, 875) == 1169\nassert solution.getSum(936, -447) == 489\nassert solution.getSum(316, 390) == 706\nassert solution.getSum(-294, 821) == 527\nassert solution.getSum(-932, 876) == -56\nassert solution.getSum(390, -201) == 189\nassert solution.getSum(604, -634) == -30\nassert solution.getSum(44, 169) == 213\nassert solution.getSum(-152, -632) == -784\nassert solution.getSum(-674, 836) == 162\nassert solution.getSum(466, 816) == 1282\nassert solution.getSum(105, -118) == -13\nassert solution.getSum(575, -369) == 206\nassert solution.getSum(-749, -730) == -1479\nassert solution.getSum(-318, -920) == -1238\nassert solution.getSum(-355, -46) == -401\nassert solution.getSum(-222, -355) == -577\nassert solution.getSum(-628, -766) == -1394\nassert solution.getSum(740, 525) == 1265\nassert solution.getSum(-297, -619) == -916\nassert solution.getSum(11, 306) == 317\nassert solution.getSum(481, -818) == -337\nassert solution.getSum(-777, 736) == -41\nassert solution.getSum(-991, 600) == -391\nassert solution.getSum(234, 986) == 1220\nassert solution.getSum(-496, 194) == -302\nassert solution.getSum(511, 847) == 1358\nassert solution.getSum(-838, 70) == -768\nassert solution.getSum(75, 32) == 107\nassert solution.getSum(378, 676) == 1054\nassert solution.getSum(-369, 157) == -212\nassert solution.getSum(972, 729) == 1701\nassert solution.getSum(72, -678) == -606\nassert solution.getSum(621, -747) == -126\nassert solution.getSum(15, -522) == -507\nassert solution.getSum(-624, 831) == 207\nassert solution.getSum(-497, 455) == -42\nassert solution.getSum(129, 735) == 864\nassert solution.getSum(38, -813) == -775\nassert solution.getSum(322, -36) == 286\nassert solution.getSum(-960, -560) == -1520\nassert solution.getSum(-901, -66) == -967\nassert solution.getSum(-650, 341) == -309\nassert solution.getSum(494, 296) == 790\nassert solution.getSum(-761, -154) == -915\nassert solution.getSum(494, -970) == -476\nassert solution.getSum(-63, -911) == -974\nassert solution.getSum(877, 174) == 1051\nassert solution.getSum(764, 691) == 1455\nassert solution.getSum(-491, 396) == -95\nassert solution.getSum(890, 944) == 1834\nassert solution.getSum(-254, 262) == 8\nassert solution.getSum(44, 245) == 289",
  "inefficient_solution": "class Solution:\n    def getSum(self, a: int, b: int) -> int:\n        result_list = []\n        a, b = a & 0xFFFFFFFF, b & 0xFFFFFFFF\n        while b:\n            carry_dict = {\"shifted\": ((a & b) << 1), \"binary\": bin(a & b)}\n            a_list = list(bin(a))[2:]\n            b_list = list(bin(b))[2:]\n            a_binary = ''.join(a_list).zfill(32) + '0' * 32\n            b_binary = ''.join(b_list).zfill(32) + '0' * 32\n            carry = self.binary_to_int(carry_dict[\"shifted\"], 32)\n            a_int = self.binary_to_int(a_binary, 32)\n            b_int = self.binary_to_int(b_binary, 32)\n            a, b = a_int ^ b_int, carry\n            result_list.append(a)\n            result_list.append(b)\n        return result_list[-1] if result_list[-1] < 0x80000000 else ~result_list[-1]\n\n    def binary_to_int(self, binary_str, num_bits):\n        return int(binary_str, 2)",
  "is_python": true
}