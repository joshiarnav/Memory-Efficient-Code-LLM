{
  "problem_idx": 1200,
  "task_name": "Minimum Absolute Difference",
  "markdown_description": "\nGiven an array of **distinct** integers `arr`, find all pairs of elements with the minimum absolute difference of any two elements.\n\n\nReturn a list of pairs in ascending order(with respect to pairs), each pair `[a, b]` follows\n\n\n* `a, b` are from `arr`\n* `a < b`\n* `b - a` equals to the minimum absolute difference of any two elements in `arr`\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** arr = [4,2,1,3]\n**Output:** [[1,2],[2,3],[3,4]]\n**Explanation:** The minimum absolute difference is 1. List all pairs with difference equal to 1 in ascending order.\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** arr = [1,3,6,10,15]\n**Output:** [[1,3]]\n\n```\n\n**Example 3:**\n\n\n\n```\n\n**Input:** arr = [3,8,-10,23,19,-4,-14,27]\n**Output:** [[-14,-10],[19,23],[23,27]]\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `2 <= arr.length <= 105`\n* `-106 <= arr[i] <= 106`\n\n\n",
  "canonical_solution": "class Solution:\n    def minimumAbsDifference(self, arr: List[int]) -> List[List[int]]:\n        arr.sort()\n        mi = min(b - a for a, b in pairwise(arr))\n        return [[a, b] for a, b in pairwise(arr) if b - a == mi]\n",
  "test_case_generator": "\nimport random\n\nclass Solution:\n    def minimumAbsDifference(self, arr):\n        arr.sort()\n        mi = min(b - a for a, b in pairwise(arr))\n        return [[a, b] for a, b in pairwise(arr) if b - a == mi]\n\ndef generate_test_case():\n    solution = Solution()\n    \n    # Generate random numbers list\n    arr = random.sample(range(-1000000, 1000001), random.randint(2, 10))\n    \n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.minimumAbsDifference(arr)\n\n    return arr, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        arr, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.minimumAbsDifference(arr) == expected_result\n        if len(expected_result) != 0:\n            print(f\"assert solution.minimumAbsDifference({arr}) == {expected_result}\")\n            test_case_generator_results.append(f\"assert solution.minimumAbsDifference({arr}) == {expected_result}\")\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.minimumAbsDifference([-909372, -502042, -466874, -74979, 42348, 421902, 540029]) == [[-502042, -466874]]\nassert solution.minimumAbsDifference([-842095, -506156, -385247, -182764, -132971, 280777, 748492, 940651]) == [[-182764, -132971]]\nassert solution.minimumAbsDifference([-581107, -296240, 6976, 824678]) == [[-581107, -296240]]\nassert solution.minimumAbsDifference([-816343, -713210, -577573, -340136, -88243, 93462, 519383, 610710, 843919, 981378]) == [[519383, 610710]]\nassert solution.minimumAbsDifference([488551, 613431]) == [[488551, 613431]]\nassert solution.minimumAbsDifference([-623567, -62759, 107848, 425601]) == [[-62759, 107848]]\nassert solution.minimumAbsDifference([-974285, -550229, -502164, -177193, -71991, -66259, 413960, 425647, 996454]) == [[-71991, -66259]]\nassert solution.minimumAbsDifference([-811867, -460962, -274235, -243218, 378442]) == [[-274235, -243218]]\nassert solution.minimumAbsDifference([-936459, -408097, -354960, -227146, -95442, 29108, 221524, 331590, 677676, 749220]) == [[-408097, -354960]]\nassert solution.minimumAbsDifference([-195484, -23829, 588770, 609010]) == [[588770, 609010]]\nassert solution.minimumAbsDifference([-55723, 148684, 287648, 731327, 763947]) == [[731327, 763947]]\nassert solution.minimumAbsDifference([-315351, -13618, 18136, 93688, 292840, 427625, 555933, 711778, 974932]) == [[-13618, 18136]]\nassert solution.minimumAbsDifference([-950228, -933937, -933671, -289321, -85811, -28900, 137497]) == [[-933937, -933671]]\nassert solution.minimumAbsDifference([-222693, -96612, -70218, 58336, 304762, 368316, 419482, 708696, 713037]) == [[708696, 713037]]\nassert solution.minimumAbsDifference([-726184, 238028, 296592, 321566, 679863, 947080]) == [[296592, 321566]]\nassert solution.minimumAbsDifference([-341056, -256290, -48497, 33222]) == [[-48497, 33222]]\nassert solution.minimumAbsDifference([-998478, -687214, -552847, 910403, 917008]) == [[910403, 917008]]\nassert solution.minimumAbsDifference([-771411, 253549, 646920]) == [[253549, 646920]]\nassert solution.minimumAbsDifference([-424569, -418893, 214411, 265320, 456591, 595626, 658919, 774800]) == [[-424569, -418893]]\nassert solution.minimumAbsDifference([-707704, -633915, -598339, -239846, 56623, 236013, 450611, 826523, 878094, 893352]) == [[878094, 893352]]\nassert solution.minimumAbsDifference([-990473, -946999, -670142, -645526, -568126, 203761, 365649, 536400, 710813, 901501]) == [[-670142, -645526]]\nassert solution.minimumAbsDifference([-977721, -696503, -503596, 390168, 447399, 463976, 579240]) == [[447399, 463976]]\nassert solution.minimumAbsDifference([-569583, -462724]) == [[-569583, -462724]]\nassert solution.minimumAbsDifference([-925371, -832751, -290821, -195138, 68147, 487512, 547287, 570040, 780335, 852646]) == [[547287, 570040]]\nassert solution.minimumAbsDifference([-535130, -426858, -31510, 88284, 276453]) == [[-535130, -426858]]\nassert solution.minimumAbsDifference([-661101, -639112, 178325, 548973, 753372, 874164]) == [[-661101, -639112]]\nassert solution.minimumAbsDifference([-969662, -896605, -586470, -322194, -92154, 222564, 373424, 480846, 546004]) == [[480846, 546004]]\nassert solution.minimumAbsDifference([-804596, -474089, -330266, -64366, 339122, 503663, 669365]) == [[-474089, -330266]]\nassert solution.minimumAbsDifference([-907052, -629758, -274341, 549395]) == [[-907052, -629758]]\nassert solution.minimumAbsDifference([213209, 307319, 605433, 926396]) == [[213209, 307319]]\nassert solution.minimumAbsDifference([-914583, -188067, 92990, 409381, 759618, 959496]) == [[759618, 959496]]\nassert solution.minimumAbsDifference([-906736, 847196]) == [[-906736, 847196]]\nassert solution.minimumAbsDifference([-371201, -125162, -80002, -41492, 177050, 215079, 866022]) == [[177050, 215079]]\nassert solution.minimumAbsDifference([-973833, -683715, -549917, 350634, 509412, 781878]) == [[-683715, -549917]]\nassert solution.minimumAbsDifference([-990917, 445932, 480979]) == [[445932, 480979]]\nassert solution.minimumAbsDifference([-713182, -593922, -561617, -60362, -36313, 38482, 277793, 370137, 434814, 599081]) == [[-60362, -36313]]\nassert solution.minimumAbsDifference([-817348, -580644, -151386, -11383, 884933]) == [[-151386, -11383]]\nassert solution.minimumAbsDifference([-879386, -251297, 14594, 24600, 617897, 962858]) == [[14594, 24600]]\nassert solution.minimumAbsDifference([-791153, -363047, -295273, -146169, -86734, 203096, 782635, 804822, 838245, 972112]) == [[782635, 804822]]\nassert solution.minimumAbsDifference([-761416, -623451, -584760, -543443, -445384, -103230, -13841, 398353, 574702, 597084]) == [[574702, 597084]]\nassert solution.minimumAbsDifference([-867653, -317348, -224493, -80696, -1793, 329156, 405512, 881247, 885972]) == [[881247, 885972]]\nassert solution.minimumAbsDifference([-646701, -436135, 581424]) == [[-646701, -436135]]\nassert solution.minimumAbsDifference([-643217, -572234, -411090, 159502, 341864, 354306, 489426, 666722, 806925]) == [[341864, 354306]]\nassert solution.minimumAbsDifference([319030, 348246]) == [[319030, 348246]]\nassert solution.minimumAbsDifference([-973029, -910251, -622381, -524061, -359425, -225105, -222447, -28841, 301111, 693097]) == [[-225105, -222447]]\nassert solution.minimumAbsDifference([-992888, -211931]) == [[-992888, -211931]]\nassert solution.minimumAbsDifference([-972278, -451288, -163647, 926722, 993284]) == [[926722, 993284]]\nassert solution.minimumAbsDifference([-904289, -769471, -686155, -558423, -343983, 239121, 628371, 643593, 705803, 734773]) == [[628371, 643593]]\nassert solution.minimumAbsDifference([-625677, -594541, -518472, -255108, 583347, 942300, 961137]) == [[942300, 961137]]\nassert solution.minimumAbsDifference([-925524, -689836, -529707, -521034, -432109, -426655, -113643, -50660, 44615, 308994]) == [[-432109, -426655]]\nassert solution.minimumAbsDifference([-783195, 87131, 629289]) == [[87131, 629289]]\nassert solution.minimumAbsDifference([-886269, -666590, -223779, -62602, 112630, 296855, 362966, 830583]) == [[296855, 362966]]\nassert solution.minimumAbsDifference([-898565, -581921, -356310, 88590, 186955, 440231, 450156, 674740, 850664, 943728]) == [[440231, 450156]]\nassert solution.minimumAbsDifference([-824877, -735790, -725325, -115199, 458864, 981150]) == [[-735790, -725325]]\nassert solution.minimumAbsDifference([-943640, -899951, -275929, 381031]) == [[-943640, -899951]]\nassert solution.minimumAbsDifference([-992536, -909467, -878141, -810255, -680177, -372325, 87703, 293375, 861095]) == [[-909467, -878141]]\nassert solution.minimumAbsDifference([-891529, -266002]) == [[-891529, -266002]]\nassert solution.minimumAbsDifference([-732522, -340618, -337691, -284240, -134468, 172938, 488094, 572603, 578710, 941110]) == [[-340618, -337691]]\nassert solution.minimumAbsDifference([-976818, -552839, -402524, 148999, 342636, 713749, 866958]) == [[-552839, -402524]]\nassert solution.minimumAbsDifference([-977040, -960073, -824116, -777511, -760685, -700466, -364908, 45881, 717526]) == [[-777511, -760685]]\nassert solution.minimumAbsDifference([-852564, -95358, 855077]) == [[-852564, -95358]]\nassert solution.minimumAbsDifference([-646886, -619033, -572505, -169746, -160499, 632658, 711172, 977625]) == [[-169746, -160499]]\nassert solution.minimumAbsDifference([-792644, -459430, -373974, -213040, -31338, 644828, 836546, 863470]) == [[836546, 863470]]\nassert solution.minimumAbsDifference([-625195, -586991, -539723, -518104, -98047, 245095, 473012, 809435]) == [[-539723, -518104]]\nassert solution.minimumAbsDifference([-640707, -603653, -349369, -314536, -299840, -177166, -15940, 751427, 764260, 909525]) == [[751427, 764260]]\nassert solution.minimumAbsDifference([-782142, -467948, -394851, -151244, 200369, 371955, 406216, 654157, 765108]) == [[371955, 406216]]\nassert solution.minimumAbsDifference([-936364, -846970, -240195, 492120, 579430, 756705, 909989]) == [[492120, 579430]]\nassert solution.minimumAbsDifference([-712330, -510879, -330566, 125927, 137156, 185375, 253400, 497133, 768526]) == [[125927, 137156]]\nassert solution.minimumAbsDifference([-503908, 162231, 448592, 994551]) == [[162231, 448592]]\nassert solution.minimumAbsDifference([-955746, 366680]) == [[-955746, 366680]]\nassert solution.minimumAbsDifference([-978253, -865219, -716331, -711589, -414105, 90324]) == [[-716331, -711589]]\nassert solution.minimumAbsDifference([-773683, -417624, -261808, -254738, 273556, 338734, 518706, 643613]) == [[-261808, -254738]]\nassert solution.minimumAbsDifference([-552769, -539315, -298124, -135730, 88879, 129364, 188762, 420468, 620582, 668654]) == [[-552769, -539315]]\nassert solution.minimumAbsDifference([-698748, 48572, 542769, 709287, 885416]) == [[542769, 709287]]\nassert solution.minimumAbsDifference([-539305, -439938, 366040, 550145, 768390, 785981, 840033]) == [[768390, 785981]]\nassert solution.minimumAbsDifference([-958977, -953694, -723004, 101817, 301898]) == [[-958977, -953694]]\nassert solution.minimumAbsDifference([115840, 531996]) == [[115840, 531996]]\nassert solution.minimumAbsDifference([-957012, -956328, -912170, -731898, -642312, -585564, -494180, 664405, 835486, 975031]) == [[-957012, -956328]]\nassert solution.minimumAbsDifference([-424357, -346533, -154193]) == [[-424357, -346533]]\nassert solution.minimumAbsDifference([-793343, -417750, 94583, 212073, 352714, 532788]) == [[94583, 212073]]\nassert solution.minimumAbsDifference([-604158, -534795, -528925, -302026, 392473, 526476, 854987]) == [[-534795, -528925]]\nassert solution.minimumAbsDifference([-703473, -412598, -302154, 94760, 435804, 562420, 753291]) == [[-412598, -302154]]\nassert solution.minimumAbsDifference([-230701, 518780, 889299]) == [[518780, 889299]]\nassert solution.minimumAbsDifference([-660526, 787344]) == [[-660526, 787344]]\nassert solution.minimumAbsDifference([-627786, -559140, -196675, 763836, 793833]) == [[763836, 793833]]\nassert solution.minimumAbsDifference([-817351, -591187, -169003, 768492, 873927, 943648, 976985]) == [[943648, 976985]]\nassert solution.minimumAbsDifference([-615725, -289134]) == [[-615725, -289134]]\nassert solution.minimumAbsDifference([-955853, -925367, -667044, -467595, 30337, 225628, 402749, 452311, 473086, 935418]) == [[452311, 473086]]\nassert solution.minimumAbsDifference([716701, 902661, 943505]) == [[902661, 943505]]\nassert solution.minimumAbsDifference([-474597, -342780, -201200, 220916, 548434, 947941]) == [[-474597, -342780]]\nassert solution.minimumAbsDifference([-235780, -51761, 263424, 496412, 939303]) == [[-235780, -51761]]\nassert solution.minimumAbsDifference([-384535, -340094, -82398, 585538, 651898, 799058]) == [[-384535, -340094]]\nassert solution.minimumAbsDifference([-501832, -424280, -418568, 463895]) == [[-424280, -418568]]\nassert solution.minimumAbsDifference([-675836, -445439, -394385, -221210, -199606, -123125, 506565]) == [[-221210, -199606]]\nassert solution.minimumAbsDifference([-975367, -602404, -437530, 221693, 292067, 300781, 767784, 814139, 827040]) == [[292067, 300781]]\nassert solution.minimumAbsDifference([-592060, -307381, 142955, 384088, 548922, 572879, 805792]) == [[548922, 572879]]\nassert solution.minimumAbsDifference([-902441, -728468, 66562, 482276]) == [[-902441, -728468]]\nassert solution.minimumAbsDifference([-965972, -730812, -597590, -464570, -119837, 297552, 691953, 913339]) == [[-597590, -464570]]\nassert solution.minimumAbsDifference([-997114, -950838, -920344, -855250, -847766, -840710, -798898, 399490, 724996, 850588]) == [[-847766, -840710]]\nassert solution.minimumAbsDifference([-947134, -223038, -112357, -101120, 134297, 287086, 597799, 898915]) == [[-112357, -101120]]",
  "inefficient_solution": "class Solution:\n    def minimumAbsDifference(self, arr: List[int]) -> List[List[int]]:\n        arr.sort()\n        min_diff = float('inf')\n        result = []\n        for i in range(len(arr)):\n            for j in range(i + 1, len(arr)):\n                if arr[j] - arr[i] < min_diff:\n                    min_diff = arr[j] - arr[i]\n                    result = [[arr[i], arr[j]]]\n                elif arr[j] - arr[i] == min_diff:\n                    result.append([arr[i], arr[j]])\n        return result",
  "is_python": true
}