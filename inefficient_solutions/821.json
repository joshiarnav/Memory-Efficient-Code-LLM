{
  "problem_idx": 821,
  "task_name": "Shortest Distance to a Character",
  "markdown_description": "\nGiven a string `s` and a character `c` that occurs in `s`, return *an array of integers* `answer` *where* `answer.length == s.length` *and* `answer[i]` *is the **distance** from index* `i` *to the **closest** occurrence of character* `c` *in* `s`.\n\n\nThe **distance** between two indices `i` and `j` is `abs(i - j)`, where `abs` is the absolute value function.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** s = \"loveleetcode\", c = \"e\"\n**Output:** [3,2,1,0,1,0,0,1,2,2,1,0]\n**Explanation:** The character 'e' appears at indices 3, 5, 6, and 11 (0-indexed).\nThe closest occurrence of 'e' for index 0 is at index 3, so the distance is abs(0 - 3) = 3.\nThe closest occurrence of 'e' for index 1 is at index 3, so the distance is abs(1 - 3) = 2.\nFor index 4, there is a tie between the 'e' at index 3 and the 'e' at index 5, but the distance is still the same: abs(4 - 3) == abs(4 - 5) = 1.\nThe closest occurrence of 'e' for index 8 is at index 6, so the distance is abs(8 - 6) = 2.\n\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** s = \"aaab\", c = \"b\"\n**Output:** [3,2,1,0]\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `1 <= s.length <= 104`\n* `s[i]` and `c` are lowercase English letters.\n* It is guaranteed that `c` occurs at least once in `s`.\n\n\n",
  "canonical_solution": "class Solution:\n    def shortestToChar(self, s: str, c: str) -> List[int]:\n        n = len(s)\n        ans = [n] * n\n        pre = -inf\n        for i, ch in enumerate(s):\n            if ch == c:\n                pre = i\n            ans[i] = min(ans[i], i - pre)\n        suf = inf\n        for i in range(n - 1, -1, -1):\n            if s[i] == c:\n                suf = i\n            ans[i] = min(ans[i], suf - i)\n        return ans\n",
  "test_case_generator": "\nclass Solution:\n    def shortestToChar(self, s: str, c: str) -> List[int]:\n        n = len(s)\n        ans = [n] * n\n        pre = -inf\n        for i, ch in enumerate(s):\n            if ch == c:\n                pre = i\n            ans[i] = min(ans[i], i - pre)\n        suf = inf\n        for i in range(n - 1, -1, -1):\n            if s[i] == c:\n                suf = i\n            ans[i] = min(ans[i], suf - i)\n        return ans\n\ndef generate_test_case():\n    solution = Solution()\n    \n    # Generate random string\n    letters = string.ascii_lowercase\n    s = ''.join(random.choice(letters) for _ in range(random.randint(1, 101)))\n    \n    # Generate a random character\n    c = random.choice(letters)\n\n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.shortestToChar(s, c)\n\n    return s, c, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        s, c, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.shortestToChar(s, c) == expected_result\n        print(f\"assert solution.shortestToChar({s}, {c}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.shortestToChar({s}, {c}) == {expected_result}\") # You can find that we construct the test case in the same format as the example\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.shortestToChar(afmscaghryymkrqljohubwfdexloikmxrdonwaxgqupw, k) == [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]\nassert solution.shortestToChar(uhsaeymxtwjeshsuabbnduxnmybbutifbenwdzvvplpszxfkmc, c) == [49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\nassert solution.shortestToChar(gfrplfpsijbdrclpxnqexrukvhklkiupytwbefghypqfqdlkrsjzhxxrwwuzkirikkjipkmvoytg, k) == [23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 1, 0, 0, 1, 2, 1, 0, 1, 2, 3, 4, 5, 6]\nassert solution.shortestToChar(rdwqupahrfkytxodghotypaxwlhooxntnxgsemmvyyecsdqpbrqputjgxdwrfthfjdwfkjfzs, g) == [16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]\nassert solution.shortestToChar(xycniyfkilvcqpxpvhugkdqgyzunticnctdqyqymvf, b) == [42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42]\nassert solution.shortestToChar(vvioqnjgtupprsynmwbbaerqumtxdgm, m) == [16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 2, 1, 0]\nassert solution.shortestToChar(f, r) == [1]\nassert solution.shortestToChar(ytqkumcvmmhkaolztksnrcwicbcwaoogrclaebjggfznnrqtygwxle, r) == [20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8]\nassert solution.shortestToChar(qpbagijfbnzehjvhqmzzsjhlwwdxlpleqbjkyflsabctcjsmfpzbjnevgdoofxcrawrvuguysevnoyhaaad, e) == [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\nassert solution.shortestToChar(xgqbiuajgjn, f) == [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11]\nassert solution.shortestToChar(pqssjnoiqzxljwsufdallisksdpymcxfniidgdknhuhwhggqlwjyedw, z) == [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45]\nassert solution.shortestToChar(otxzjaaqsyyodkkoohxnctoxaskpkneadorjmpbucbnicmhngkqndfmnocqgwsxqznwqrlmhtwspl, n) == [19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 3, 4, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\nassert solution.shortestToChar(vjtwifvjjdzeyqqtxjjtlrplgcbzrlegzwjvfdjjcfcewtetvsiyzbwppijtkukvjffllba, p) == [22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]\nassert solution.shortestToChar(rzdurflxxdasmxyfcvnemwopiujmsatdzimistrdzycwfvrnbwgxgzekhjghehgwclcakihybqdqiyuwvdwkqor, x) == [7, 6, 5, 4, 3, 2, 1, 0, 0, 1, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35]\nassert solution.shortestToChar(gyqfkycviwnjxxxszoqdiypcfmxytezjajfvornavpnjjypuitidjvobcmaoh, s) == [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45]\nassert solution.shortestToChar(bazrxxvzgunaowfkwgzvukitlzmfnqfzypqqgvaxdwwqbifzmklcxsmlewwvmawbeydbjuaqeysahxrkzrjxbqfnvthj, f) == [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 5, 4, 3, 2, 1, 0, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5]\nassert solution.shortestToChar(ge, l) == [2, 2]\nassert solution.shortestToChar(sbvaqlhjviktcllrvbgaixqxbsyhzjzzafvtfuhwbnvcdmvoljnoyggkwuftjdntlywomwlboivhbuqijglt, n) == [41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]\nassert solution.shortestToChar(cskcjmmpxyxncgrreptijnnjoholyedhkszrtsoquxxbvnh, b) == [43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3]\nassert solution.shortestToChar(zcnayqjcmtdfekkmdphirzdpkrirpxtztgapvmbntnkqhjjqlqmsxgyovnxjolqooeet, p) == [17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 2, 1, 0, 1, 2, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]\nassert solution.shortestToChar(uplkmxntlivzmvyxofoojompimurovzunduirunirwrnegltvdz, x) == [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35]\nassert solution.shortestToChar(luqwlyegpevn, o) == [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12]\nassert solution.shortestToChar(egpuvchrbqaldkbucwufdhauwounzeuwwpuhe, w) == [17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 0, 1, 2, 3, 4]\nassert solution.shortestToChar(tis, f) == [3, 3, 3]\nassert solution.shortestToChar(lfvkedivvotkyfv, u) == [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15]\nassert solution.shortestToChar(abfuzmvgcsukbnrhnijktykiuvmxpbrytqrpzwnfef, x) == [27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]\nassert solution.shortestToChar(lfxivnsqxjaohlvsbqjpiioyidelxxfsfxnlrrbvxchreswnmrvrrshdehesseakiirs, i) == [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 1, 2]\nassert solution.shortestToChar(ucpojdusijuntxczdrsaefrrxmeophbocnbpsslvrmyxldjuytofrhbzygjnrzyawmpstzpjlcwruofwsla, d) == [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]\nassert solution.shortestToChar(xvoibz, l) == [6, 6, 6, 6, 6, 6]\nassert solution.shortestToChar(jxvthaxibuuwdmhksbkueqkvwfqgurpveloqbhqiwpusqdvsnszcdnxaqgqryrewdergcbpaepnzbkradcuvpqlkcmsbgsqanhga, y) == [60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39]\nassert solution.shortestToChar(iic, g) == [3, 3, 3]\nassert solution.shortestToChar(homveqobtzipylhiwgjwucdfy, e) == [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\nassert solution.shortestToChar(vjzjncbhqfaufjvdpdsdmqjkfiugccqczlrndotpzlfhyfkazacecftofvpbhwweadme, c) == [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\nassert solution.shortestToChar(mqjrlwstzptxypyqdfrffmfafdjndmrehnwdrwriv, r) == [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 2, 1, 0, 1, 0, 1, 2]\nassert solution.shortestToChar(bbqsrrqwbgmrcetcxk, t) == [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3]\nassert solution.shortestToChar(tgwikvpryqkzpaofmubpovybxlpywsavdtjzkxqqfblhksmuohgzsbzgbwmhceanjdjhdpwq, n) == [63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8]\nassert solution.shortestToChar(odgwtxuonqfpuhoaeiwndpsleywqnijjcbcviawfnhjxnffheajvcxwcbswsanofmmeneizqiwvx, d) == [1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55]\nassert solution.shortestToChar(ymwwpyuezbchbprobbodkwskbhmdrcmlrcgcwsxyokxyfiziqgsbdlgtffwfengfrs, o) == [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]\nassert solution.shortestToChar(vqn, s) == [3, 3, 3]\nassert solution.shortestToChar(gpbtovcanwzxvxjgtfwnangoechdntqczsoqaxengaraosfcxfnbmo, q) == [30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]\nassert solution.shortestToChar(pakvqaov, r) == [8, 8, 8, 8, 8, 8, 8, 8]\nassert solution.shortestToChar(dbqntmbxsistwzvlswbtutkxjoabzeznxsumbsewka, z) == [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\nassert solution.shortestToChar(ukcaxjgxzoxxjdznprxzwayfctikkzozksgbftrauug, r) == [17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4]\nassert solution.shortestToChar(oiijlccndrvidqmkruemarohijvhxncehktfhbgaaghjhzovugxntnctymefoxsfakywfnkk, w) == [67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4]\nassert solution.shortestToChar(ghevxnxusncvgwiqhfyvtpahfjfpjqbsoecfdopgorompoqubwwbysqjipijmpcathmifcvqzmtlpsbcnkgzdqmsmah, s) == [8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 4, 3, 2, 1, 0, 1, 2, 3]\nassert solution.shortestToChar(rheentincscilylhwl, q) == [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]\nassert solution.shortestToChar(bhxcuzrwvpvwfouuybibbkgvnwmnznqzsmhgnoryzfmfqsgcpdgjbivwerghxbmnzbquloqcsmqycbzdztzugz, r) == [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]\nassert solution.shortestToChar(bzhjeisaxksrxitdt, w) == [17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17]\nassert solution.shortestToChar(eonuamdpzhdffusjwnxaosvxeouvlsamxssebf, y) == [38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38]\nassert solution.shortestToChar(ogsfwkqpqnccdtqdxniaydtbvdgjbzrodiusbzjoqotxiwloeukvfdvtvsqlgyozvjybjygoocveanssqcpjasazzrurb, o) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 3, 2, 1, 0, 1, 0, 1, 2, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\nassert solution.shortestToChar(wnrshxjejmncmljghijomabojafujmbwxalyoddxhplzuw, r) == [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43]\nassert solution.shortestToChar(mykliadmyprmdbophgbsgzhjuwimdblhkzilvunmbxzrszzjtycbplugepzojdvkzugkorpgtgtuvotiqtpoanam, t) == [48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 0, 1, 2, 1, 0, 1, 1, 0, 1, 2, 3, 4, 5, 6]\nassert solution.shortestToChar(ajnrkgwbfwjdthdbizslkbotqqjducugolmcyrwuaubmibdjqqshdytgtnumzfqijrgegwfacgqegzqz, k) == [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59]\nassert solution.shortestToChar(efsddzruhkpo, r) == [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5]\nassert solution.shortestToChar(xgpmseksfxaptrzsymrkhdijqboikkddskjmykwslvmcqluxflwkbocrynasejldvyzixxpcwzsojpjdudbgqkgxqbxbxhribho, y) == [16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]\nassert solution.shortestToChar(hzyetpvvdbbpws, r) == [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14]\nassert solution.shortestToChar(ubnxqnzjgqtvwicskctrbgugnvnmnuhvwjgsqgaaywwxctrkwlfvfquiqatzcoacmhutbrscgcgswru, g) == [8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 5, 4, 3, 2, 1, 0, 1, 0, 1, 2, 3, 4, 5, 5, 4, 3, 2, 1, 0, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 0, 1, 2, 3, 4]\nassert solution.shortestToChar(dvggqfjwmazgjexxbmcoiexoidsyxnxz, t) == [32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32]\nassert solution.shortestToChar(aflzytcopkvhzxqkhmxdjextmvyvdndhrvwhsfuiglmnbxcbxmopvnxruvsemglcgxuxsygt, p) == [8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\nassert solution.shortestToChar(anduwfzebrocqocholmzkoimxdikrrwzstfkpukddzhqendwoqhiebzhcalqsbdlejgxzpppcfvbijztrnwnjwcknu, t) == [33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nassert solution.shortestToChar(pj, n) == [2, 2]\nassert solution.shortestToChar(vpnhnwjwlcdeqru, u) == [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\nassert solution.shortestToChar(sefybmnmgfnbikswogjjhzxvbzpjhkowrahwbbtvxgmfqacwsfphulfzev, h) == [20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 3, 2, 1, 0, 1, 2, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6]\nassert solution.shortestToChar(pgoaognbxwdtdahu, a) == [3, 2, 1, 0, 1, 2, 3, 4, 5, 4, 3, 2, 1, 0, 1, 2]\nassert solution.shortestToChar(foklbknfrnylulxehcoyhzlfcuuqjfantoq, d) == [35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35]\nassert solution.shortestToChar(kxqfcrhigqlgbxbsrkevyywqykgmabbuigesfqrsqjozqepuprdxsjmuatxwxedsgkxotqagxlgckioptpkhxytym, r) == [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39]\nassert solution.shortestToChar(sisotjouzqfrxunwtzusbwmmqmhmjuhsaxjr, i) == [1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]\nassert solution.shortestToChar(ksllohzhdzjltzrgbyrlhrevfsvgfnwqmerhdpvwhkvrmbubedqyyiwdbqaqiwvbrzvormcfvelktcwxcxk, f) == [24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\nassert solution.shortestToChar(eispjgascpkbluhdvtipt, r) == [21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21]\nassert solution.shortestToChar(tgjnibrtkqjmtwcrzzwobtzjlqssayuyhhaemfjomvxenyyyvkuhssabypqqvwzskynacutkrsagrgqzkwv, r) == [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 1, 0, 1, 2, 3, 4, 5, 6]\nassert solution.shortestToChar(lhvcpzpjxfqvwfsmcpycqmtchjsuredwgoyuqognjbslxytbejlkcdbxutcngnvjmoppbovhnvrxr, s) == [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]\nassert solution.shortestToChar(cbaedvdlcwkcjrkmbhnbmpdctnvmjejjbfgrqyijatwgpzdoxqssigstbeyjxcqd, b) == [1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 0, 1, 2, 3, 4, 5, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7]\nassert solution.shortestToChar(wycyozdmvatkwkauumbfdsodzmswwdzhinoleojxvamxmyhjnwarlcqaljiclmofftexgkzhb, j) == [38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\nassert solution.shortestToChar(yaozwckbkugcwgvjtpigzumdeaq, h) == [27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27]\nassert solution.shortestToChar(zsjtrlorctpjazxebikgryu, f) == [23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23]\nassert solution.shortestToChar(ybhywgsnjdphallycuezmplrqaysbtnewrnbkobhetcpqodh, r) == [23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]\nassert solution.shortestToChar(xwerbmnrgglzxgbkekjgsbzhg, c) == [25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25]\nassert solution.shortestToChar(zzicnzafbrjc, l) == [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12]\nassert solution.shortestToChar(opzgsfjrfysonzmdlmopvrwmthcosfnduz, z) == [2, 1, 0, 1, 2, 3, 4, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\nassert solution.shortestToChar(rujincabetnfvoulmziofuvkpbygsnzidfbhbsxljjbrqnyxxcxxwdgsnwfuwiovuko, x) == [38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 0, 1, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\nassert solution.shortestToChar(dflqxwidnieoewsstcwscbcrfcibttocstcnqpaif, n) == [8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5]\nassert solution.shortestToChar(oammknbsmffrtassdyykslctluefeejelgbsgdikctfveaezakerpiavtoptweyzhoeoxslvdsxuscrjhuyulwntlsnpawczkmdqg, m) == [2, 1, 0, 0, 1, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3]\nassert solution.shortestToChar(cuswhqmipqsamcvdbtbbeyatymvsfjkrvgttxxzpuptuwcsdtycmpubirkztxturgughj, e) == [20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48]\nassert solution.shortestToChar(sadciphgdgvim, h) == [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6]\nassert solution.shortestToChar(kileqnsqkss, j) == [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11]\nassert solution.shortestToChar(tptxjlvqkmceqyupcgfvjrnpxoaowpbnmcwckzbr, x) == [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\nassert solution.shortestToChar(oujwedmnzlwwdynnjgfemwwecimornooqqogiaogifjmqkscnjijffgmzudvttk, k) == [45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0]\nassert solution.shortestToChar(keffxpduuicppdfrso, v) == [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]\nassert solution.shortestToChar(onvylyvrnzrbhbmhpkjvssjzrekgbftwi, u) == [33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33]\nassert solution.shortestToChar(mpb, v) == [3, 3, 3]\nassert solution.shortestToChar(vjgupeynbbbotaxqgiemgrzxyubyagxsjkolwhwkubxkjdfzqwwxmfyvg, t) == [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44]\nassert solution.shortestToChar(utlfkorrirkwftgtptcskniqetfqzdbmeyk, d) == [29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5]\nassert solution.shortestToChar(ymxfynvhtpbsgdhzpfaiesosunuxnotitiutivnggr, s) == [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 4, 3, 2, 1, 0, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]\nassert solution.shortestToChar(clsxrschdthyxwoqlvxw, b) == [20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]\nassert solution.shortestToChar(mztrxomnlioqtisvzqxhlhuhsmtzxlxlrrwwwaslx, k) == [41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41]\nassert solution.shortestToChar(hgqzeghooaiayeorktocmbbemcfupxuxz, s) == [33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33]\nassert solution.shortestToChar(cstuflwyltmbwcxmmtcsmfgdrlxjmhiiiuugl, g) == [22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 5, 4, 3, 2, 1, 0, 1]\nassert solution.shortestToChar(eomiswsxbwsoihsbqhqlkadjswtzknaqxvlwqjsiiweqeekwfznqicjl, m) == [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53]\nassert solution.shortestToChar(yhxjrowdfdldqukmvwajryahugjdssxjk, h) == [1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\nassert solution.shortestToChar(iwesxvosxzffzvsvspdoqftzqrlnzkvzlicppfmtwidquearebwygdowlykkijzqdl, m) == [38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]",
  "inefficient_solution": "class Solution:\n    def shortestToChar(self, s: str, c: str) -> List[int]:\n        n = len(s)\n        ans = [n] * n\n        min_dist = float('inf')\n        for i, ch in enumerate(s):\n            if ch == c:\n                min_dist = 0\n            else:\n                min_dist += 1\n            ans[i] = min_dist\n        max_dist = 0\n        for i in range(n - 1, -1, -1):\n            if s[i] == c:\n                max_dist = 0\n            else:\n                max_dist += 1\n            ans[i] = min(ans[i], max_dist)\n        return ans",
  "is_python": true
}