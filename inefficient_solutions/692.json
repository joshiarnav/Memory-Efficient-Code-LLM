{
  "problem_idx": 692,
  "task_name": "Top K Frequent Words",
  "markdown_description": "\nGiven an array of strings `words` and an integer `k`, return *the* `k` *most frequent strings*.\n\n\nReturn the answer **sorted** by **the frequency** from highest to lowest. Sort the words with the same frequency by their **lexicographical order**.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** words = [\"i\",\"love\",\"leetcode\",\"i\",\"love\",\"coding\"], k = 2\n**Output:** [\"i\",\"love\"]\n**Explanation:** \"i\" and \"love\" are the two most frequent words.\nNote that \"i\" comes before \"love\" due to a lower alphabetical order.\n\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** words = [\"the\",\"day\",\"is\",\"sunny\",\"the\",\"the\",\"the\",\"sunny\",\"is\",\"is\"], k = 4\n**Output:** [\"the\",\"is\",\"sunny\",\"day\"]\n**Explanation:** \"the\", \"is\", \"sunny\" and \"day\" are the four most frequent words, with the number of occurrence being 4, 3, 2 and 1 respectively.\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `1 <= words.length <= 500`\n* `1 <= words[i].length <= 10`\n* `words[i]` consists of lowercase English letters.\n* `k` is in the range `[1, The number of **unique** words[i]]`\n\n\n\u00a0\n\n\n**Follow-up:** Could you solve it in `O(n log(k))` time and `O(n)` extra space?\n\n\n",
  "canonical_solution": "class Solution:\n    def topKFrequent(self, words: List[str], k: int) -> List[str]:\n        cnt = Counter(words)\n        return sorted(cnt, key=lambda x: (-cnt[x], x))[:k]\n",
  "test_case_generator": "\nimport random\nfrom typing import List\nfrom collections import Counter\n\nclass Solution:\n    def topKFrequent(self, words: List[str], k: int) -> List[str]:\n        cnt = Counter(words)\n        return sorted(cnt, key=lambda x: (-cnt[x], x))[:k]\n\ndef generate_test_case():\n    solution = Solution()\n    \n    # Generate random words list\n    words = [random.choice(string.ascii_lowercase) + random.choice(string.ascii_lowercase) for _ in range(random.randint(1, 21))]\n    \n    # Generate random k\n    k = random.randint(1, len(set(words)))\n    \n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.topKFrequent(words, k)\n\n    return words, k, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        words, k, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.topKFrequent(words, k) == expected_result\n        print(f\"assert solution.topKFrequent({words}, {k}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.topKFrequent({words}, {k}) == {expected_result}\") # You can find that we construct the test case in the same format as the example\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.topKFrequent(['jq', 'ue', 'nm', 'tb', 'lq', 'ym', 'gs', 'pf', 'js', 'fs'], 3) == ['fs', 'gs', 'jq']\nassert solution.topKFrequent(['hr', 'gk', 'jb', 'kj'], 4) == ['gk', 'hr', 'jb', 'kj']\nassert solution.topKFrequent(['px', 'ls', 'ow', 'nm', 'wn', 'ns', 'st', 'hr', 'ax'], 8) == ['ax', 'hr', 'ls', 'nm', 'ns', 'ow', 'px', 'st']\nassert solution.topKFrequent(['oc', 'sc', 'mt', 'qx', 'uk', 'nw', 'cy', 'wb', 'pr', 'do', 'dg', 'xy', 'vs', 'gd', 'za', 'tv'], 16) == ['cy', 'dg', 'do', 'gd', 'mt', 'nw', 'oc', 'pr', 'qx', 'sc', 'tv', 'uk', 'vs', 'wb', 'xy', 'za']\nassert solution.topKFrequent(['cx', 'ck', 'rh', 'qt'], 2) == ['ck', 'cx']\nassert solution.topKFrequent(['uz', 'sq', 'yv', 'gr', 'pi', 'fu', 'ds', 'mi', 'hw', 'yu', 'xv', 'xq', 'tn', 'iw', 'oc', 'nu', 'ge', 'oh'], 13) == ['ds', 'fu', 'ge', 'gr', 'hw', 'iw', 'mi', 'nu', 'oc', 'oh', 'pi', 'sq', 'tn']\nassert solution.topKFrequent(['oh', 'sc', 'xz', 'qe', 'qk'], 4) == ['oh', 'qe', 'qk', 'sc']\nassert solution.topKFrequent(['nb', 'ka', 'se', 'aa', 'mn', 'vu', 'ib'], 5) == ['aa', 'ib', 'ka', 'mn', 'nb']\nassert solution.topKFrequent(['ya', 'cl', 'kw', 'vb', 'eo', 'hn', 'ie', 'zf', 'mp', 'qh', 'bq', 'mi', 'op', 'bh', 'fe', 'ol'], 6) == ['bh', 'bq', 'cl', 'eo', 'fe', 'hn']\nassert solution.topKFrequent(['um'], 1) == ['um']\nassert solution.topKFrequent(['ol', 'gw', 'to', 'ir', 'cg'], 5) == ['cg', 'gw', 'ir', 'ol', 'to']\nassert solution.topKFrequent(['fy', 'ze', 'ub', 'rd', 'ht', 'vz', 'ue', 'dy', 'pf', 'yb', 'jy', 'nf', 'vc', 'en', 'fh', 'vm'], 7) == ['dy', 'en', 'fh', 'fy', 'ht', 'jy', 'nf']\nassert solution.topKFrequent(['xk', 'qv'], 2) == ['qv', 'xk']\nassert solution.topKFrequent(['bm', 'pk', 'dg', 'gp', 'se', 'pe', 'nq', 'yg'], 6) == ['bm', 'dg', 'gp', 'nq', 'pe', 'pk']\nassert solution.topKFrequent(['cr', 'cq', 'ch', 'tf', 'vd', 'kf', 'do', 'iw', 'qa', 'fv', 'fn', 'hp', 'js', 'tc', 'kh', 'av', 'au', 'yw', 'mc', 'yq', 'va'], 18) == ['au', 'av', 'ch', 'cq', 'cr', 'do', 'fn', 'fv', 'hp', 'iw', 'js', 'kf', 'kh', 'mc', 'qa', 'tc', 'tf', 'va']\nassert solution.topKFrequent(['tr', 'qf', 'sl', 'qs', 'oa', 'oe', 'jv', 'ny', 'dn', 'wv', 'ss'], 7) == ['dn', 'jv', 'ny', 'oa', 'oe', 'qf', 'qs']\nassert solution.topKFrequent(['aq', 'yk', 'vx', 'es', 'kq', 'kf', 'cf', 'ku', 'vw', 'hx', 'dq', 'xs', 'sa', 'kz', 'rm', 'xb', 'jj', 'lu', 'uw'], 10) == ['aq', 'cf', 'dq', 'es', 'hx', 'jj', 'kf', 'kq', 'ku', 'kz']\nassert solution.topKFrequent(['lk', 'kq', 'zz', 'hj', 'dr', 'gk', 'po', 'mi', 'hf', 'tp', 'gs', 'zj', 'mb', 'aw', 'lp', 'nn', 'yj', 'op'], 13) == ['aw', 'dr', 'gk', 'gs', 'hf', 'hj', 'kq', 'lk', 'lp', 'mb', 'mi', 'nn', 'op']\nassert solution.topKFrequent(['sf', 'yd', 'ef', 'ov', 'dj', 'gj', 'mk'], 3) == ['dj', 'ef', 'gj']\nassert solution.topKFrequent(['fb', 'gh', 'pf', 'sk', 'fd', 'fh', 'us', 'jl', 'ng', 'ga', 'ja', 'sq', 'sx', 'dv', 'wm'], 1) == ['dv']\nassert solution.topKFrequent(['uk', 'xk', 'fu', 'qd', 'ss', 'pj', 'gc', 'ln', 'ud', 'al', 'sz', 'mp', 'ik', 'xv', 'kv', 'nr', 'en', 'uo', 'tr', 'jr', 'fe'], 20) == ['al', 'en', 'fe', 'fu', 'gc', 'ik', 'jr', 'kv', 'ln', 'mp', 'nr', 'pj', 'qd', 'ss', 'sz', 'tr', 'ud', 'uk', 'uo', 'xk']\nassert solution.topKFrequent(['sd', 'ii', 'fg', 'xk', 'zy', 'gy', 'rt', 'cw', 'tu', 'nh', 'zm', 'nq', 'fi'], 12) == ['cw', 'fg', 'fi', 'gy', 'ii', 'nh', 'nq', 'rt', 'sd', 'tu', 'xk', 'zm']\nassert solution.topKFrequent(['ok', 'zr', 'us', 'no', 'gh', 'kx', 'dw', 'gy', 'cn', 'zq', 'xg', 'bx', 'dz', 'sv', 'vz', 'cg', 'bu', 'qf', 'sg'], 10) == ['bu', 'bx', 'cg', 'cn', 'dw', 'dz', 'gh', 'gy', 'kx', 'no']\nassert solution.topKFrequent(['qo', 'om', 'rz', 'xl', 'id', 'qd', 'va', 'hv', 'eg', 'iw', 'el', 'hy', 'go', 'fh', 'ug', 'wz', 'vt', 'ao', 'si', 'ut', 'eo'], 2) == ['ao', 'eg']\nassert solution.topKFrequent(['hg', 'su', 'ud', 'il', 'wg', 'lb', 'wl', 'ae', 'gn'], 2) == ['ae', 'gn']\nassert solution.topKFrequent(['my', 'en', 'hb', 'vw'], 2) == ['en', 'hb']\nassert solution.topKFrequent(['nt', 'ur', 'an', 'qn', 'ib', 'zn', 'oe', 'ta', 'lw', 'gk', 'zu', 'sd', 'dj', 'ji', 'jp', 'nv', 'sj', 'xz', 'gk', 'oj', 'du'], 14) == ['gk', 'an', 'dj', 'du', 'ib', 'ji', 'jp', 'lw', 'nt', 'nv', 'oe', 'oj', 'qn', 'sd']\nassert solution.topKFrequent(['gx', 'xr', 'fy', 'qd', 'us', 'io', 'ud', 'bq', 'ja', 'be', 'jj', 'bl', 'gl', 'dp'], 11) == ['be', 'bl', 'bq', 'dp', 'fy', 'gl', 'gx', 'io', 'ja', 'jj', 'qd']\nassert solution.topKFrequent(['mx', 'up', 'xe', 'bs', 'dk'], 1) == ['bs']\nassert solution.topKFrequent(['zh', 'al', 'iw', 'rg', 'rb', 'ab', 'sp', 'bg', 'qw', 'cq', 'xy', 'sz', 'py'], 5) == ['ab', 'al', 'bg', 'cq', 'iw']\nassert solution.topKFrequent(['tw', 'dy', 'sl', 'ab', 'jk', 'bd', 'fj', 'eb', 'ox', 'hi', 'pz', 'yf', 'am', 'wa', 'bk', 'nx', 'mi'], 6) == ['ab', 'am', 'bd', 'bk', 'dy', 'eb']\nassert solution.topKFrequent(['dd', 'io', 'rd', 'oc', 'sf', 'ri', 'qy', 'uy', 'pn'], 9) == ['dd', 'io', 'oc', 'pn', 'qy', 'rd', 'ri', 'sf', 'uy']\nassert solution.topKFrequent(['qu', 'ip', 'zj', 'ab', 'lb'], 3) == ['ab', 'ip', 'lb']\nassert solution.topKFrequent(['bf', 'eq', 'jg', 'kj', 'tb', 'pn'], 2) == ['bf', 'eq']\nassert solution.topKFrequent(['cj', 'pg'], 2) == ['cj', 'pg']\nassert solution.topKFrequent(['jy', 'cs', 'iv', 'ed', 'og', 'hh', 'pn', 'jb', 'bg', 'mi', 'll', 'fh', 'oh'], 2) == ['bg', 'cs']\nassert solution.topKFrequent(['en', 'hq', 'ei', 'qn', 'nv', 'qi', 'au', 'lm', 'ga', 'pq'], 2) == ['au', 'ei']\nassert solution.topKFrequent(['yo'], 1) == ['yo']\nassert solution.topKFrequent(['yz', 'qu', 'tb', 'qv', 'so', 'ap', 'zm', 'cx', 'ww', 'nc', 'xe', 'on', 'xl', 'nq', 'xx', 'hz'], 11) == ['ap', 'cx', 'hz', 'nc', 'nq', 'on', 'qu', 'qv', 'so', 'tb', 'ww']\nassert solution.topKFrequent(['rz'], 1) == ['rz']\nassert solution.topKFrequent(['gh', 'tb', 'gp', 'zo', 'tq', 'um', 'dn', 'kf', 'do', 'dm', 'ud', 're', 'nv', 'jd', 'mb', 'kz', 'be', 'vc', 'md'], 9) == ['be', 'dm', 'dn', 'do', 'gh', 'gp', 'jd', 'kf', 'kz']\nassert solution.topKFrequent(['nh', 'kv'], 2) == ['kv', 'nh']\nassert solution.topKFrequent(['un', 'is', 'uu', 'lm', 'tc', 'og', 'fc', 'oa', 'pv', 'uu', 'sf', 'zt', 'ke', 'bk', 'se', 'ze', 'dl', 'cz'], 10) == ['uu', 'bk', 'cz', 'dl', 'fc', 'is', 'ke', 'lm', 'oa', 'og']\nassert solution.topKFrequent(['ce', 'qw', 'be', 'yq', 'ee', 'ps', 'lf', 'eg', 'ua', 'yi', 'mk', 'gq', 'mu', 'fl', 'jo', 'ad', 'js', 'tr', 'fa', 'db'], 3) == ['ad', 'be', 'ce']\nassert solution.topKFrequent(['bi', 'ej', 'ku', 'bs', 'dy', 'ex'], 6) == ['bi', 'bs', 'dy', 'ej', 'ex', 'ku']\nassert solution.topKFrequent(['hu', 'yo', 'ko', 'vr', 'ih', 'gx', 'ij', 'dr', 'ak', 'fh', 'uj', 'vx', 'ts'], 6) == ['ak', 'dr', 'fh', 'gx', 'hu', 'ih']\nassert solution.topKFrequent(['fk', 'qc', 'zm', 'an', 'yp', 'wy', 'va', 'bh', 'hj', 'ob', 'lk', 'dg', 'fm', 'bi', 'jy', 'gd', 'yq', 'vk', 'ma'], 14) == ['an', 'bh', 'bi', 'dg', 'fk', 'fm', 'gd', 'hj', 'jy', 'lk', 'ma', 'ob', 'qc', 'va']\nassert solution.topKFrequent(['yf', 'rw', 'sz', 'jn', 'fn', 'aw', 'co', 'cf'], 2) == ['aw', 'cf']\nassert solution.topKFrequent(['ez', 'yj', 'kq', 'mt', 'hh', 'ew', 'cn', 'qq', 'bs', 'om', 'dq', 'ak', 'iz', 'ez', 'mn', 'kg', 'ls', 'kb'], 10) == ['ez', 'ak', 'bs', 'cn', 'dq', 'ew', 'hh', 'iz', 'kb', 'kg']\nassert solution.topKFrequent(['sc', 'su', 'hq'], 2) == ['hq', 'sc']\nassert solution.topKFrequent(['za', 'lv', 'sh', 'dt', 'jh', 'zy', 'xg', 'em', 'rt'], 5) == ['dt', 'em', 'jh', 'lv', 'rt']\nassert solution.topKFrequent(['kq', 'wo', 'am', 'kw', 'zl', 'jz', 'el', 'vf', 'jy', 'yg', 'jo', 'sb', 'by', 'xe', 'gf', 'oz', 'mo'], 1) == ['am']\nassert solution.topKFrequent(['of', 'lu', 'cf', 'gt', 'ht', 'fv', 'jt', 'vk', 'nd', 'cm', 'xz', 'sj'], 3) == ['cf', 'cm', 'fv']\nassert solution.topKFrequent(['ym', 'xb'], 2) == ['xb', 'ym']\nassert solution.topKFrequent(['xc', 'ak', 'bu', 'ds', 'aa', 'vu', 'cb', 'te', 'ql', 'qs', 'is', 'di'], 9) == ['aa', 'ak', 'bu', 'cb', 'di', 'ds', 'is', 'ql', 'qs']\nassert solution.topKFrequent(['rl', 'ag', 'bf', 'mh', 'eh', 'xt', 'lz', 'vh', 'na', 'xa', 'vi', 'ig', 'wk'], 10) == ['ag', 'bf', 'eh', 'ig', 'lz', 'mh', 'na', 'rl', 'vh', 'vi']\nassert solution.topKFrequent(['td', 'hj', 'ro'], 2) == ['hj', 'ro']\nassert solution.topKFrequent(['cs', 'uh', 'vg', 'qe', 'vi', 'ww', 'nn', 'vq', 'ni', 'bu', 'ez', 'tq', 'jx', 'ep', 'dm', 'wj', 'yl'], 3) == ['bu', 'cs', 'dm']\nassert solution.topKFrequent(['gs', 'df', 'vn', 'qj', 'ee'], 2) == ['df', 'ee']\nassert solution.topKFrequent(['jr', 'qt', 'sg', 'tn', 'tr', 'ry', 'nj', 'uu', 'cv'], 8) == ['cv', 'jr', 'nj', 'qt', 'ry', 'sg', 'tn', 'tr']\nassert solution.topKFrequent(['xh', 'ei', 'jl', 'gj', 'jd', 'vt', 'jh', 'ai', 'jp', 'ez', 'sb', 'kb', 'dn', 'it', 'qw', 'bs', 'bw', 'gr', 'fv'], 7) == ['ai', 'bs', 'bw', 'dn', 'ei', 'ez', 'fv']\nassert solution.topKFrequent(['ti', 'rn', 'bh', 'rd', 'cj', 'kb', 'ug'], 2) == ['bh', 'cj']\nassert solution.topKFrequent(['ha', 'gi', 'hk', 'os', 'hm', 'iw', 'nd', 'yb', 'lp', 'ot', 'tj', 'bi', 'pa', 'mz'], 11) == ['bi', 'gi', 'ha', 'hk', 'hm', 'iw', 'lp', 'mz', 'nd', 'os', 'ot']\nassert solution.topKFrequent(['df', 'nh', 'pu', 'kg', 'pq', 'kk', 'ib', 'ta', 'ab', 'fw', 'xa', 'qz', 'iw', 'pb', 'qr', 'ne'], 8) == ['ab', 'df', 'fw', 'ib', 'iw', 'kg', 'kk', 'ne']\nassert solution.topKFrequent(['sk', 'nv', 'kl', 'lo', 'yj', 'ca', 'rq', 'zh', 'cw', 'ei', 'hd', 'dt', 'rh', 'zi'], 10) == ['ca', 'cw', 'dt', 'ei', 'hd', 'kl', 'lo', 'nv', 'rh', 'rq']\nassert solution.topKFrequent(['mc', 'wp', 'jo', 'su', 'gi', 'dk', 'as', 'xx', 'dq', 'fj', 'zr', 'vx', 'xp', 'zr', 'gh', 'mz', 'de', 'mq', 'gx'], 8) == ['zr', 'as', 'de', 'dk', 'dq', 'fj', 'gh', 'gi']\nassert solution.topKFrequent(['tv', 'ck', 'sm'], 1) == ['ck']\nassert solution.topKFrequent(['mc', 'bo', 'vm', 'oo', 'af', 'qr', 'zl', 'hj', 'fh', 'cf', 'zy', 'pn', 'be', 'at', 'qh', 'xm'], 14) == ['af', 'at', 'be', 'bo', 'cf', 'fh', 'hj', 'mc', 'oo', 'pn', 'qh', 'qr', 'vm', 'xm']\nassert solution.topKFrequent(['ul', 'sy', 'gn', 'rf', 'ca', 'cv', 'lb', 'zr', 'aq', 'bo', 'nt', 'tm', 'pm', 'cr', 'cb', 'qs'], 6) == ['aq', 'bo', 'ca', 'cb', 'cr', 'cv']\nassert solution.topKFrequent(['eo', 'cn', 'pd', 'pe', 'bb', 'jy', 'tq', 'vc', 'be', 'fq', 'nh', 'rl', 'oy', 'jh', 'it', 'zt', 'rj', 'tx', 'nb'], 8) == ['bb', 'be', 'cn', 'eo', 'fq', 'it', 'jh', 'jy']\nassert solution.topKFrequent(['mj', 'yh', 'yg', 'gv', 'ts'], 4) == ['gv', 'mj', 'ts', 'yg']\nassert solution.topKFrequent(['ug', 'ek', 'xv', 'va', 'ja', 'oz', 'mk', 'fe', 'wj', 'ef'], 1) == ['ef']\nassert solution.topKFrequent(['sh', 'vu', 'is', 'jw', 'gh', 'ua', 'jc', 'kh', 'ir', 'gw', 'jw', 'tw', 'qj', 'km', 'cr'], 10) == ['jw', 'cr', 'gh', 'gw', 'ir', 'is', 'jc', 'kh', 'km', 'qj']\nassert solution.topKFrequent(['xm', 'vl', 'ew', 'rd', 'eh'], 2) == ['eh', 'ew']\nassert solution.topKFrequent(['pq', 'ac'], 2) == ['ac', 'pq']\nassert solution.topKFrequent(['um', 'mg'], 1) == ['mg']\nassert solution.topKFrequent(['wb', 'll', 'og'], 2) == ['ll', 'og']\nassert solution.topKFrequent(['jr', 'en', 'qp', 'ik', 'gn', 'bg', 'qj', 'at', 'po', 'hh', 'jn', 'ky', 'ud'], 10) == ['at', 'bg', 'en', 'gn', 'hh', 'ik', 'jn', 'jr', 'ky', 'po']\nassert solution.topKFrequent(['ql', 'hi', 'kl', 'hb', 'yo', 'op', 'la', 'uu', 'mj', 'fl', 'qb', 'jj'], 12) == ['fl', 'hb', 'hi', 'jj', 'kl', 'la', 'mj', 'op', 'qb', 'ql', 'uu', 'yo']\nassert solution.topKFrequent(['cj', 'nm', 'rm', 'qd', 'px', 'lw', 'ws', 'fu', 'ht', 'js', 'ex', 'gx', 'jm', 'cp', 'mk', 'wm', 'kj', 'fs', 'em'], 12) == ['cj', 'cp', 'em', 'ex', 'fs', 'fu', 'gx', 'ht', 'jm', 'js', 'kj', 'lw']\nassert solution.topKFrequent(['zd', 'dh', 'hm'], 1) == ['dh']\nassert solution.topKFrequent(['ca', 'vb', 'ud', 'pf', 'ny', 'kt', 'fh', 'yj', 'jk', 'fc', 'pt', 'ah', 'ki', 'yn', 'nl', 'pw', 'hl', 'fz', 'nb'], 3) == ['ah', 'ca', 'fc']\nassert solution.topKFrequent(['bl', 'ln', 'eo', 'by', 'db', 'vk', 'wz', 'xa', 'qj', 'lf', 'yo'], 2) == ['bl', 'by']\nassert solution.topKFrequent(['vt', 'oe', 'nq', 'eh', 'mi', 'yy', 'pf', 'zs', 'ug', 'pc', 'yy', 'cy', 'ye', 'jp'], 7) == ['yy', 'cy', 'eh', 'jp', 'mi', 'nq', 'oe']\nassert solution.topKFrequent(['nr', 'vi', 'ep', 'de'], 2) == ['de', 'ep']\nassert solution.topKFrequent(['hg', 'pq', 'nh', 'xr', 'dt', 'xj', 'vf', 'zl', 'ht', 'on', 'ne', 'ht', 'oj', 'kd', 'xg', 'ub', 'ic'], 14) == ['ht', 'dt', 'hg', 'ic', 'kd', 'ne', 'nh', 'oj', 'on', 'pq', 'ub', 'vf', 'xg', 'xj']\nassert solution.topKFrequent(['nw', 'ch', 'cu'], 1) == ['ch']\nassert solution.topKFrequent(['dj', 'uq', 'mt', 'wm', 'np', 'lt', 'lj', 'vu'], 3) == ['dj', 'lj', 'lt']\nassert solution.topKFrequent(['zw', 'ub', 'ou', 'zp', 'yl', 'ls', 'aq', 'ts', 'za', 'uq', 'rq', 'nu', 'hu', 'ks', 'qa'], 15) == ['aq', 'hu', 'ks', 'ls', 'nu', 'ou', 'qa', 'rq', 'ts', 'ub', 'uq', 'yl', 'za', 'zp', 'zw']\nassert solution.topKFrequent(['zn', 'ya', 'ug', 'rz', 'rs', 'zm'], 4) == ['rs', 'rz', 'ug', 'ya']\nassert solution.topKFrequent(['hj', 'hx', 'ds', 'hy', 'mq', 'gn', 'kw', 'dr'], 7) == ['dr', 'ds', 'gn', 'hj', 'hx', 'hy', 'kw']\nassert solution.topKFrequent(['cf', 'cr', 'ia', 'sa', 'al', 'ao', 'rk', 'vy', 'hb', 'dm', 'az', 'eo'], 6) == ['al', 'ao', 'az', 'cf', 'cr', 'dm']\nassert solution.topKFrequent(['xp', 'dp', 'rg', 'un', 'li', 'dh', 'nb', 'rd', 'qv', 'am'], 5) == ['am', 'dh', 'dp', 'li', 'nb']\nassert solution.topKFrequent(['xm', 'dz', 'cj', 'xu', 'tg', 'dv', 'hg', 'ij', 'ls', 'fy', 'sn', 'se', 'pa', 'io', 'gy', 'aq', 'ah', 'bi'], 8) == ['ah', 'aq', 'bi', 'cj', 'dv', 'dz', 'fy', 'gy']\nassert solution.topKFrequent(['de', 'as', 'tp', 'df', 'tt', 'rd', 'aj', 'hl', 'hx', 'ul', 'tr', 'bq', 'xu', 'uv', 'ir', 'nb', 'bb', 'jy', 'wi', 'rh', 'hs'], 17) == ['aj', 'as', 'bb', 'bq', 'de', 'df', 'hl', 'hs', 'hx', 'ir', 'jy', 'nb', 'rd', 'rh', 'tp', 'tr', 'tt']\nassert solution.topKFrequent(['ad'], 1) == ['ad']\nassert solution.topKFrequent(['go', 'kg', 'dh', 'tv', 'by', 'aw', 'sg', 'qg', 'ts', 'vp', 'kj', 'll', 'da', 'fu'], 6) == ['aw', 'by', 'da', 'dh', 'fu', 'go']\nassert solution.topKFrequent(['eo', 'mv', 'xi', 'np', 'ae', 'uo', 'sm', 'hg', 'rd', 'dr', 'oy', 'qa', 'qt', 'jp', 'pd', 'qe', 'yp', 'ms', 'im', 'bn', 'ep'], 9) == ['ae', 'bn', 'dr', 'eo', 'ep', 'hg', 'im', 'jp', 'ms']\nassert solution.topKFrequent(['kj', 'wt'], 1) == ['kj']\nassert solution.topKFrequent(['qc', 'pr', 'tw', 'uj', 'sk', 'ly', 'az', 'ij', 'dk', 'qh', 'ik', 'xd', 'he', 'se', 'yo', 'dr'], 3) == ['az', 'dk', 'dr']",
  "inefficient_solution": "class Solution:\n    def topKFrequent(self, words: List[str], k: int) -> List[str]:\n        freq = {}\n        for word in words:\n            if word in freq:\n                freq[word] += 1\n            else:\n                freq[word] = 1\n        unique_words = list(freq.keys())\n        unique_words.sort()\n        unique_words_set = set(unique_words)\n        unique_words_freq = {}\n        for word in unique_words:\n            if word in unique_words_set:\n                unique_words_set.remove(word)\n                unique_words_freq[word] = freq[word]\n        unique_words_freq_list = list(unique_words_freq.items())\n        unique_words_freq_list.sort(key=lambda x: (-x[1], x[0]))\n        kth_words = []\n        while k > 0:\n            kth_word = unique_words_freq_list[0][0]\n            kth_words.append(kth_word)\n            unique_words_freq_list.pop(0)\n            k -= 1\n        return kth_words",
  "is_python": true
}