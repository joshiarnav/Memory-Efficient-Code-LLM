{
  "problem_idx": 254,
  "task_name": "Factor Combinations",
  "markdown_description": "\nNumbers can be regarded as the product of their factors.\n\n\n* For example, `8 = 2 x 2 x 2 = 2 x 4`.\n\n\nGiven an integer `n`, return *all possible combinations of its factors*. You may return the answer in **any order**.\n\n\n**Note** that the factors should be in the range `[2, n - 1]`.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** n = 1\n**Output:** []\n\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** n = 12\n**Output:** [[2,6],[3,4],[2,2,3]]\n\n```\n\n**Example 3:**\n\n\n\n```\n\n**Input:** n = 37\n**Output:** []\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `1 <= n <= 107`\n\n\n",
  "canonical_solution": "class Solution:\n    def getFactors(self, n: int) -> List[List[int]]:\n        def dfs(n, i):\n            if t:\n                ans.append(t + [n])\n            j = i\n            while j * j <= n:\n                if n % j == 0:\n                    t.append(j)\n                    dfs(n // j, j)\n                    t.pop()\n                j += 1\n\n        t = []\n        ans = []\n        dfs(n, 2)\n        return ans\n",
  "test_case_generator": "\ndef generate_test_case():\n    solution = Solution()\n    \n    # Generate a random input\n    n = random.randint(1, 10**7)\n    \n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.getFactors(n)\n\n    return n, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        n, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.getFactors(n) == expected_result\n        print(f\"assert solution.getFactors({n}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.getFactors({n}) == {expected_result}\") # You can find that we construct the test case in the same format as the example\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.getFactors(2210093) == [[23, 96091], [23, 307, 313], [307, 7199], [313, 7061]]\nassert solution.getFactors(7811697) == [[3, 2603899], [3, 23, 113213], [23, 339639], [69, 113213]]\nassert solution.getFactors(3501284) == [[2, 1750642], [2, 2, 875321], [2, 2, 859, 1019], [2, 859, 2038], [2, 1019, 1718], [4, 875321], [4, 859, 1019], [859, 4076], [1019, 3436], [1718, 2038]]\nassert solution.getFactors(2879686) == [[2, 1439843], [2, 1009, 1427], [1009, 2854], [1427, 2018]]\nassert solution.getFactors(1035404) == [[2, 517702], [2, 2, 258851], [2, 2, 313, 827], [2, 313, 1654], [2, 626, 827], [4, 258851], [4, 313, 827], [313, 3308], [626, 1654], [827, 1252]]\nassert solution.getFactors(1668331) == [[7, 238333], [7, 41, 5813], [41, 40691], [287, 5813]]\nassert solution.getFactors(8556167) == [[41, 208687]]\nassert solution.getFactors(6851149) == []\nassert solution.getFactors(4053665) == [[5, 810733], [5, 7, 115819], [5, 7, 11, 10529], [5, 11, 73703], [5, 77, 10529], [7, 579095], [7, 11, 52645], [7, 55, 10529], [11, 368515], [11, 35, 10529], [35, 115819], [55, 73703], [77, 52645], [385, 10529]]\nassert solution.getFactors(4636150) == [[2, 2318075], [2, 5, 463615], [2, 5, 5, 92723], [2, 25, 92723], [5, 927230], [5, 5, 185446], [5, 10, 92723], [10, 463615], [25, 185446], [50, 92723]]\nassert solution.getFactors(1384656) == [[2, 692328], [2, 2, 346164], [2, 2, 2, 173082], [2, 2, 2, 2, 86541], [2, 2, 2, 2, 3, 28847], [2, 2, 2, 2, 3, 7, 4121], [2, 2, 2, 2, 3, 7, 13, 317], [2, 2, 2, 2, 3, 13, 2219], [2, 2, 2, 2, 3, 91, 317], [2, 2, 2, 2, 7, 12363], [2, 2, 2, 2, 7, 13, 951], [2, 2, 2, 2, 7, 39, 317], [2, 2, 2, 2, 13, 6657], [2, 2, 2, 2, 13, 21, 317], [2, 2, 2, 2, 21, 4121], [2, 2, 2, 2, 39, 2219], [2, 2, 2, 2, 91, 951], [2, 2, 2, 2, 273, 317], [2, 2, 2, 3, 57694], [2, 2, 2, 3, 7, 8242], [2, 2, 2, 3, 7, 13, 634], [2, 2, 2, 3, 7, 26, 317], [2, 2, 2, 3, 13, 4438], [2, 2, 2, 3, 13, 14, 317], [2, 2, 2, 3, 14, 4121], [2, 2, 2, 3, 26, 2219], [2, 2, 2, 3, 91, 634], [2, 2, 2, 3, 182, 317], [2, 2, 2, 6, 28847], [2, 2, 2, 6, 7, 4121], [2, 2, 2, 6, 7, 13, 317], [2, 2, 2, 6, 13, 2219], [2, 2, 2, 6, 91, 317], [2, 2, 2, 7, 24726], [2, 2, 2, 7, 13, 1902], [2, 2, 2, 7, 26, 951], [2, 2, 2, 7, 39, 634], [2, 2, 2, 7, 78, 317], [2, 2, 2, 13, 13314], [2, 2, 2, 13, 14, 951], [2, 2, 2, 13, 21, 634], [2, 2, 2, 13, 42, 317], [2, 2, 2, 14, 12363], [2, 2, 2, 14, 39, 317], [2, 2, 2, 21, 8242], [2, 2, 2, 21, 26, 317], [2, 2, 2, 26, 6657], [2, 2, 2, 39, 4438], [2, 2, 2, 42, 4121], [2, 2, 2, 78, 2219], [2, 2, 2, 91, 1902], [2, 2, 2, 182, 951], [2, 2, 2, 273, 634], [2, 2, 2, 317, 546], [2, 2, 3, 115388], [2, 2, 3, 4, 28847], [2, 2, 3, 4, 7, 4121], [2, 2, 3, 4, 7, 13, 317], [2, 2, 3, 4, 13, 2219], [2, 2, 3, 4, 91, 317], [2, 2, 3, 7, 16484], [2, 2, 3, 7, 13, 1268], [2, 2, 3, 7, 26, 634], [2, 2, 3, 7, 52, 317], [2, 2, 3, 13, 8876], [2, 2, 3, 13, 14, 634], [2, 2, 3, 13, 28, 317], [2, 2, 3, 14, 8242], [2, 2, 3, 14, 26, 317], [2, 2, 3, 26, 4438], [2, 2, 3, 28, 4121], [2, 2, 3, 52, 2219], [2, 2, 3, 91, 1268], [2, 2, 3, 182, 634], [2, 2, 3, 317, 364], [2, 2, 4, 86541], [2, 2, 4, 7, 12363], [2, 2, 4, 7, 13, 951], [2, 2, 4, 7, 39, 317], [2, 2, 4, 13, 6657], [2, 2, 4, 13, 21, 317], [2, 2, 4, 21, 4121], [2, 2, 4, 39, 2219], [2, 2, 4, 91, 951], [2, 2, 4, 273, 317], [2, 2, 6, 57694], [2, 2, 6, 7, 8242], [2, 2, 6, 7, 13, 634], [2, 2, 6, 7, 26, 317], [2, 2, 6, 13, 4438], [2, 2, 6, 13, 14, 317], [2, 2, 6, 14, 4121], [2, 2, 6, 26, 2219], [2, 2, 6, 91, 634], [2, 2, 6, 182, 317], [2, 2, 7, 49452], [2, 2, 7, 12, 4121], [2, 2, 7, 12, 13, 317], [2, 2, 7, 13, 3804], [2, 2, 7, 26, 1902], [2, 2, 7, 39, 1268], [2, 2, 7, 52, 951], [2, 2, 7, 78, 634], [2, 2, 7, 156, 317], [2, 2, 12, 28847], [2, 2, 12, 13, 2219], [2, 2, 12, 91, 317], [2, 2, 13, 26628], [2, 2, 13, 14, 1902], [2, 2, 13, 21, 1268], [2, 2, 13, 28, 951], [2, 2, 13, 42, 634], [2, 2, 13, 84, 317], [2, 2, 14, 24726], [2, 2, 14, 26, 951], [2, 2, 14, 39, 634], [2, 2, 14, 78, 317], [2, 2, 21, 16484], [2, 2, 21, 26, 634], [2, 2, 21, 52, 317], [2, 2, 26, 13314], [2, 2, 26, 42, 317], [2, 2, 28, 12363], [2, 2, 28, 39, 317], [2, 2, 39, 8876], [2, 2, 42, 8242], [2, 2, 52, 6657], [2, 2, 78, 4438], [2, 2, 84, 4121], [2, 2, 91, 3804], [2, 2, 156, 2219], [2, 2, 182, 1902], [2, 2, 273, 1268], [2, 2, 317, 1092], [2, 2, 364, 951], [2, 2, 546, 634], [2, 3, 230776], [2, 3, 4, 57694], [2, 3, 4, 7, 8242], [2, 3, 4, 7, 13, 634], [2, 3, 4, 7, 26, 317], [2, 3, 4, 13, 4438], [2, 3, 4, 13, 14, 317], [2, 3, 4, 14, 4121], [2, 3, 4, 26, 2219], [2, 3, 4, 91, 634], [2, 3, 4, 182, 317], [2, 3, 7, 32968], [2, 3, 7, 8, 4121], [2, 3, 7, 8, 13, 317], [2, 3, 7, 13, 2536], [2, 3, 7, 26, 1268], [2, 3, 7, 52, 634], [2, 3, 7, 104, 317], [2, 3, 8, 28847], [2, 3, 8, 13, 2219], [2, 3, 8, 91, 317], [2, 3, 13, 17752], [2, 3, 13, 14, 1268], [2, 3, 13, 28, 634], [2, 3, 13, 56, 317], [2, 3, 14, 16484], [2, 3, 14, 26, 634], [2, 3, 14, 52, 317], [2, 3, 26, 8876], [2, 3, 26, 28, 317], [2, 3, 28, 8242], [2, 3, 52, 4438], [2, 3, 56, 4121], [2, 3, 91, 2536], [2, 3, 104, 2219], [2, 3, 182, 1268], [2, 3, 317, 728], [2, 3, 364, 634], [2, 4, 173082], [2, 4, 6, 28847], [2, 4, 6, 7, 4121], [2, 4, 6, 7, 13, 317], [2, 4, 6, 13, 2219], [2, 4, 6, 91, 317], [2, 4, 7, 24726], [2, 4, 7, 13, 1902], [2, 4, 7, 26, 951], [2, 4, 7, 39, 634], [2, 4, 7, 78, 317], [2, 4, 13, 13314], [2, 4, 13, 14, 951], [2, 4, 13, 21, 634], [2, 4, 13, 42, 317], [2, 4, 14, 12363], [2, 4, 14, 39, 317], [2, 4, 21, 8242], [2, 4, 21, 26, 317], [2, 4, 26, 6657], [2, 4, 39, 4438], [2, 4, 42, 4121], [2, 4, 78, 2219], [2, 4, 91, 1902], [2, 4, 182, 951], [2, 4, 273, 634], [2, 4, 317, 546], [2, 6, 115388], [2, 6, 7, 16484], [2, 6, 7, 13, 1268], [2, 6, 7, 26, 634], [2, 6, 7, 52, 317], [2, 6, 13, 8876], [2, 6, 13, 14, 634], [2, 6, 13, 28, 317], [2, 6, 14, 8242], [2, 6, 14, 26, 317], [2, 6, 26, 4438], [2, 6, 28, 4121], [2, 6, 52, 2219], [2, 6, 91, 1268], [2, 6, 182, 634], [2, 6, 317, 364], [2, 7, 98904], [2, 7, 8, 12363], [2, 7, 8, 13, 951], [2, 7, 8, 39, 317], [2, 7, 12, 8242], [2, 7, 12, 13, 634], [2, 7, 12, 26, 317], [2, 7, 13, 7608], [2, 7, 13, 24, 317], [2, 7, 24, 4121], [2, 7, 26, 3804], [2, 7, 39, 2536], [2, 7, 52, 1902], [2, 7, 78, 1268], [2, 7, 104, 951], [2, 7, 156, 634], [2, 7, 312, 317], [2, 8, 86541], [2, 8, 13, 6657], [2, 8, 13, 21, 317], [2, 8, 21, 4121], [2, 8, 39, 2219], [2, 8, 91, 951], [2, 8, 273, 317], [2, 12, 57694], [2, 12, 13, 4438], [2, 12, 13, 14, 317], [2, 12, 14, 4121], [2, 12, 26, 2219], [2, 12, 91, 634], [2, 12, 182, 317], [2, 13, 53256], [2, 13, 14, 3804], [2, 13, 21, 2536], [2, 13, 24, 2219], [2, 13, 28, 1902], [2, 13, 42, 1268], [2, 13, 56, 951], [2, 13, 84, 634], [2, 13, 168, 317], [2, 14, 49452], [2, 14, 26, 1902], [2, 14, 39, 1268], [2, 14, 52, 951], [2, 14, 78, 634], [2, 14, 156, 317], [2, 21, 32968], [2, 21, 26, 1268], [2, 21, 52, 634], [2, 21, 104, 317], [2, 24, 28847], [2, 24, 91, 317], [2, 26, 26628], [2, 26, 28, 951], [2, 26, 42, 634], [2, 26, 84, 317], [2, 28, 24726], [2, 28, 39, 634], [2, 28, 78, 317], [2, 39, 17752], [2, 39, 56, 317], [2, 42, 16484], [2, 42, 52, 317], [2, 52, 13314], [2, 56, 12363], [2, 78, 8876], [2, 84, 8242], [2, 91, 7608], [2, 104, 6657], [2, 156, 4438], [2, 168, 4121], [2, 182, 3804], [2, 273, 2536], [2, 312, 2219], [2, 317, 2184], [2, 364, 1902], [2, 546, 1268], [2, 634, 1092], [2, 728, 951], [3, 461552], [3, 4, 115388], [3, 4, 4, 28847], [3, 4, 4, 7, 4121], [3, 4, 4, 7, 13, 317], [3, 4, 4, 13, 2219], [3, 4, 4, 91, 317], [3, 4, 7, 16484], [3, 4, 7, 13, 1268], [3, 4, 7, 26, 634], [3, 4, 7, 52, 317], [3, 4, 13, 8876], [3, 4, 13, 14, 634], [3, 4, 13, 28, 317], [3, 4, 14, 8242], [3, 4, 14, 26, 317], [3, 4, 26, 4438], [3, 4, 28, 4121], [3, 4, 52, 2219], [3, 4, 91, 1268], [3, 4, 182, 634], [3, 4, 317, 364], [3, 7, 65936], [3, 7, 8, 8242], [3, 7, 8, 13, 634], [3, 7, 8, 26, 317], [3, 7, 13, 5072], [3, 7, 13, 16, 317], [3, 7, 16, 4121], [3, 7, 26, 2536], [3, 7, 52, 1268], [3, 7, 104, 634], [3, 7, 208, 317], [3, 8, 57694], [3, 8, 13, 4438], [3, 8, 13, 14, 317], [3, 8, 14, 4121], [3, 8, 26, 2219], [3, 8, 91, 634], [3, 8, 182, 317], [3, 13, 35504], [3, 13, 14, 2536], [3, 13, 16, 2219], [3, 13, 28, 1268], [3, 13, 56, 634], [3, 13, 112, 317], [3, 14, 32968], [3, 14, 26, 1268], [3, 14, 52, 634], [3, 14, 104, 317], [3, 16, 28847], [3, 16, 91, 317], [3, 26, 17752], [3, 26, 28, 634], [3, 26, 56, 317], [3, 28, 16484], [3, 28, 52, 317], [3, 52, 8876], [3, 56, 8242], [3, 91, 5072], [3, 104, 4438], [3, 112, 4121], [3, 182, 2536], [3, 208, 2219], [3, 317, 1456], [3, 364, 1268], [3, 634, 728], [4, 346164], [4, 4, 86541], [4, 4, 7, 12363], [4, 4, 7, 13, 951], [4, 4, 7, 39, 317], [4, 4, 13, 6657], [4, 4, 13, 21, 317], [4, 4, 21, 4121], [4, 4, 39, 2219], [4, 4, 91, 951], [4, 4, 273, 317], [4, 6, 57694], [4, 6, 7, 8242], [4, 6, 7, 13, 634], [4, 6, 7, 26, 317], [4, 6, 13, 4438], [4, 6, 13, 14, 317], [4, 6, 14, 4121], [4, 6, 26, 2219], [4, 6, 91, 634], [4, 6, 182, 317], [4, 7, 49452], [4, 7, 12, 4121], [4, 7, 12, 13, 317], [4, 7, 13, 3804], [4, 7, 26, 1902], [4, 7, 39, 1268], [4, 7, 52, 951], [4, 7, 78, 634], [4, 7, 156, 317], [4, 12, 28847], [4, 12, 13, 2219], [4, 12, 91, 317], [4, 13, 26628], [4, 13, 14, 1902], [4, 13, 21, 1268], [4, 13, 28, 951], [4, 13, 42, 634], [4, 13, 84, 317], [4, 14, 24726], [4, 14, 26, 951], [4, 14, 39, 634], [4, 14, 78, 317], [4, 21, 16484], [4, 21, 26, 634], [4, 21, 52, 317], [4, 26, 13314], [4, 26, 42, 317], [4, 28, 12363], [4, 28, 39, 317], [4, 39, 8876], [4, 42, 8242], [4, 52, 6657], [4, 78, 4438], [4, 84, 4121], [4, 91, 3804], [4, 156, 2219], [4, 182, 1902], [4, 273, 1268], [4, 317, 1092], [4, 364, 951], [4, 546, 634], [6, 230776], [6, 7, 32968], [6, 7, 8, 4121], [6, 7, 8, 13, 317], [6, 7, 13, 2536], [6, 7, 26, 1268], [6, 7, 52, 634], [6, 7, 104, 317], [6, 8, 28847], [6, 8, 13, 2219], [6, 8, 91, 317], [6, 13, 17752], [6, 13, 14, 1268], [6, 13, 28, 634], [6, 13, 56, 317], [6, 14, 16484], [6, 14, 26, 634], [6, 14, 52, 317], [6, 26, 8876], [6, 26, 28, 317], [6, 28, 8242], [6, 52, 4438], [6, 56, 4121], [6, 91, 2536], [6, 104, 2219], [6, 182, 1268], [6, 317, 728], [6, 364, 634], [7, 197808], [7, 8, 24726], [7, 8, 13, 1902], [7, 8, 26, 951], [7, 8, 39, 634], [7, 8, 78, 317], [7, 12, 16484], [7, 12, 13, 1268], [7, 12, 26, 634], [7, 12, 52, 317], [7, 13, 15216], [7, 13, 16, 951], [7, 13, 24, 634], [7, 13, 48, 317], [7, 16, 12363], [7, 16, 39, 317], [7, 24, 8242], [7, 24, 26, 317], [7, 26, 7608], [7, 39, 5072], [7, 48, 4121], [7, 52, 3804], [7, 78, 2536], [7, 104, 1902], [7, 156, 1268], [7, 208, 951], [7, 312, 634], [7, 317, 624], [8, 173082], [8, 13, 13314], [8, 13, 14, 951], [8, 13, 21, 634], [8, 13, 42, 317], [8, 14, 12363], [8, 14, 39, 317], [8, 21, 8242], [8, 21, 26, 317], [8, 26, 6657], [8, 39, 4438], [8, 42, 4121], [8, 78, 2219], [8, 91, 1902], [8, 182, 951], [8, 273, 634], [8, 317, 546], [12, 115388], [12, 13, 8876], [12, 13, 14, 634], [12, 13, 28, 317], [12, 14, 8242], [12, 14, 26, 317], [12, 26, 4438], [12, 28, 4121], [12, 52, 2219], [12, 91, 1268], [12, 182, 634], [12, 317, 364], [13, 106512], [13, 14, 7608], [13, 14, 24, 317], [13, 16, 6657], [13, 16, 21, 317], [13, 21, 5072], [13, 24, 4438], [13, 28, 3804], [13, 42, 2536], [13, 48, 2219], [13, 56, 1902], [13, 84, 1268], [13, 112, 951], [13, 168, 634], [13, 317, 336], [14, 98904], [14, 24, 4121], [14, 26, 3804], [14, 39, 2536], [14, 52, 1902], [14, 78, 1268], [14, 104, 951], [14, 156, 634], [14, 312, 317], [16, 86541], [16, 21, 4121], [16, 39, 2219], [16, 91, 951], [16, 273, 317], [21, 65936], [21, 26, 2536], [21, 52, 1268], [21, 104, 634], [21, 208, 317], [24, 57694], [24, 26, 2219], [24, 91, 634], [24, 182, 317], [26, 53256], [26, 28, 1902], [26, 42, 1268], [26, 56, 951], [26, 84, 634], [26, 168, 317], [28, 49452], [28, 39, 1268], [28, 52, 951], [28, 78, 634], [28, 156, 317], [39, 35504], [39, 56, 634], [39, 112, 317], [42, 32968], [42, 52, 634], [42, 104, 317], [48, 28847], [48, 91, 317], [52, 26628], [52, 84, 317], [56, 24726], [56, 78, 317], [78, 17752], [84, 16484], [91, 15216], [104, 13314], [112, 12363], [156, 8876], [168, 8242], [182, 7608], [208, 6657], [273, 5072], [312, 4438], [317, 4368], [336, 4121], [364, 3804], [546, 2536], [624, 2219], [634, 2184], [728, 1902], [951, 1456], [1092, 1268]]\nassert solution.getFactors(8526071) == []\nassert solution.getFactors(1516377) == [[3, 505459]]\nassert solution.getFactors(2419086) == [[2, 1209543], [2, 3, 403181], [3, 806362], [6, 403181]]\nassert solution.getFactors(5331421) == [[17, 313613]]\nassert solution.getFactors(1738000) == [[2, 869000], [2, 2, 434500], [2, 2, 2, 217250], [2, 2, 2, 2, 108625], [2, 2, 2, 2, 5, 21725], [2, 2, 2, 2, 5, 5, 4345], [2, 2, 2, 2, 5, 5, 5, 869], [2, 2, 2, 2, 5, 5, 5, 11, 79], [2, 2, 2, 2, 5, 5, 11, 395], [2, 2, 2, 2, 5, 5, 55, 79], [2, 2, 2, 2, 5, 11, 1975], [2, 2, 2, 2, 5, 11, 25, 79], [2, 2, 2, 2, 5, 25, 869], [2, 2, 2, 2, 5, 55, 395], [2, 2, 2, 2, 5, 79, 275], [2, 2, 2, 2, 11, 9875], [2, 2, 2, 2, 11, 25, 395], [2, 2, 2, 2, 11, 79, 125], [2, 2, 2, 2, 25, 4345], [2, 2, 2, 2, 25, 55, 79], [2, 2, 2, 2, 55, 1975], [2, 2, 2, 2, 79, 1375], [2, 2, 2, 2, 125, 869], [2, 2, 2, 2, 275, 395], [2, 2, 2, 5, 43450], [2, 2, 2, 5, 5, 8690], [2, 2, 2, 5, 5, 5, 1738], [2, 2, 2, 5, 5, 5, 11, 158], [2, 2, 2, 5, 5, 5, 22, 79], [2, 2, 2, 5, 5, 10, 869], [2, 2, 2, 5, 5, 10, 11, 79], [2, 2, 2, 5, 5, 11, 790], [2, 2, 2, 5, 5, 22, 395], [2, 2, 2, 5, 5, 55, 158], [2, 2, 2, 5, 5, 79, 110], [2, 2, 2, 5, 10, 4345], [2, 2, 2, 5, 10, 11, 395], [2, 2, 2, 5, 10, 55, 79], [2, 2, 2, 5, 11, 3950], [2, 2, 2, 5, 11, 25, 158], [2, 2, 2, 5, 11, 50, 79], [2, 2, 2, 5, 22, 1975], [2, 2, 2, 5, 22, 25, 79], [2, 2, 2, 5, 25, 1738], [2, 2, 2, 5, 50, 869], [2, 2, 2, 5, 55, 790], [2, 2, 2, 5, 79, 550], [2, 2, 2, 5, 110, 395], [2, 2, 2, 5, 158, 275], [2, 2, 2, 10, 21725], [2, 2, 2, 10, 11, 1975], [2, 2, 2, 10, 11, 25, 79], [2, 2, 2, 10, 25, 869], [2, 2, 2, 10, 55, 395], [2, 2, 2, 10, 79, 275], [2, 2, 2, 11, 19750], [2, 2, 2, 11, 25, 790], [2, 2, 2, 11, 50, 395], [2, 2, 2, 11, 79, 250], [2, 2, 2, 11, 125, 158], [2, 2, 2, 22, 9875], [2, 2, 2, 22, 25, 395], [2, 2, 2, 22, 79, 125], [2, 2, 2, 25, 8690], [2, 2, 2, 25, 55, 158], [2, 2, 2, 25, 79, 110], [2, 2, 2, 50, 4345], [2, 2, 2, 50, 55, 79], [2, 2, 2, 55, 3950], [2, 2, 2, 79, 2750], [2, 2, 2, 110, 1975], [2, 2, 2, 125, 1738], [2, 2, 2, 158, 1375], [2, 2, 2, 250, 869], [2, 2, 2, 275, 790], [2, 2, 2, 395, 550], [2, 2, 4, 108625], [2, 2, 4, 5, 21725], [2, 2, 4, 5, 5, 4345], [2, 2, 4, 5, 5, 5, 869], [2, 2, 4, 5, 5, 5, 11, 79], [2, 2, 4, 5, 5, 11, 395], [2, 2, 4, 5, 5, 55, 79], [2, 2, 4, 5, 11, 1975], [2, 2, 4, 5, 11, 25, 79], [2, 2, 4, 5, 25, 869], [2, 2, 4, 5, 55, 395], [2, 2, 4, 5, 79, 275], [2, 2, 4, 11, 9875], [2, 2, 4, 11, 25, 395], [2, 2, 4, 11, 79, 125], [2, 2, 4, 25, 4345], [2, 2, 4, 25, 55, 79], [2, 2, 4, 55, 1975], [2, 2, 4, 79, 1375], [2, 2, 4, 125, 869], [2, 2, 4, 275, 395], [2, 2, 5, 86900], [2, 2, 5, 5, 17380], [2, 2, 5, 5, 5, 3476], [2, 2, 5, 5, 5, 11, 316], [2, 2, 5, 5, 5, 22, 158], [2, 2, 5, 5, 5, 44, 79], [2, 2, 5, 5, 10, 1738], [2, 2, 5, 5, 10, 11, 158], [2, 2, 5, 5, 10, 22, 79], [2, 2, 5, 5, 11, 1580], [2, 2, 5, 5, 11, 20, 79], [2, 2, 5, 5, 20, 869], [2, 2, 5, 5, 22, 790], [2, 2, 5, 5, 44, 395], [2, 2, 5, 5, 55, 316], [2, 2, 5, 5, 79, 220], [2, 2, 5, 5, 110, 158], [2, 2, 5, 10, 8690], [2, 2, 5, 10, 10, 869], [2, 2, 5, 10, 10, 11, 79], [2, 2, 5, 10, 11, 790], [2, 2, 5, 10, 22, 395], [2, 2, 5, 10, 55, 158], [2, 2, 5, 10, 79, 110], [2, 2, 5, 11, 7900], [2, 2, 5, 11, 20, 395], [2, 2, 5, 11, 25, 316], [2, 2, 5, 11, 50, 158], [2, 2, 5, 11, 79, 100], [2, 2, 5, 20, 4345], [2, 2, 5, 20, 55, 79], [2, 2, 5, 22, 3950], [2, 2, 5, 22, 25, 158], [2, 2, 5, 22, 50, 79], [2, 2, 5, 25, 3476], [2, 2, 5, 25, 44, 79], [2, 2, 5, 44, 1975], [2, 2, 5, 50, 1738], [2, 2, 5, 55, 1580], [2, 2, 5, 79, 1100], [2, 2, 5, 100, 869], [2, 2, 5, 110, 790], [2, 2, 5, 158, 550], [2, 2, 5, 220, 395], [2, 2, 5, 275, 316], [2, 2, 10, 43450], [2, 2, 10, 10, 4345], [2, 2, 10, 10, 11, 395], [2, 2, 10, 10, 55, 79], [2, 2, 10, 11, 3950], [2, 2, 10, 11, 25, 158], [2, 2, 10, 11, 50, 79], [2, 2, 10, 22, 1975], [2, 2, 10, 22, 25, 79], [2, 2, 10, 25, 1738], [2, 2, 10, 50, 869], [2, 2, 10, 55, 790], [2, 2, 10, 79, 550], [2, 2, 10, 110, 395], [2, 2, 10, 158, 275], [2, 2, 11, 39500], [2, 2, 11, 20, 1975], [2, 2, 11, 20, 25, 79], [2, 2, 11, 25, 1580], [2, 2, 11, 50, 790], [2, 2, 11, 79, 500], [2, 2, 11, 100, 395], [2, 2, 11, 125, 316], [2, 2, 11, 158, 250], [2, 2, 20, 21725], [2, 2, 20, 25, 869], [2, 2, 20, 55, 395], [2, 2, 20, 79, 275], [2, 2, 22, 19750], [2, 2, 22, 25, 790], [2, 2, 22, 50, 395], [2, 2, 22, 79, 250], [2, 2, 22, 125, 158], [2, 2, 25, 17380], [2, 2, 25, 44, 395], [2, 2, 25, 55, 316], [2, 2, 25, 79, 220], [2, 2, 25, 110, 158], [2, 2, 44, 9875], [2, 2, 44, 79, 125], [2, 2, 50, 8690], [2, 2, 50, 55, 158], [2, 2, 50, 79, 110], [2, 2, 55, 7900], [2, 2, 55, 79, 100], [2, 2, 79, 5500], [2, 2, 100, 4345], [2, 2, 110, 3950], [2, 2, 125, 3476], [2, 2, 158, 2750], [2, 2, 220, 1975], [2, 2, 250, 1738], [2, 2, 275, 1580], [2, 2, 316, 1375], [2, 2, 395, 1100], [2, 2, 500, 869], [2, 2, 550, 790], [2, 4, 217250], [2, 4, 5, 43450], [2, 4, 5, 5, 8690], [2, 4, 5, 5, 5, 1738], [2, 4, 5, 5, 5, 11, 158], [2, 4, 5, 5, 5, 22, 79], [2, 4, 5, 5, 10, 869], [2, 4, 5, 5, 10, 11, 79], [2, 4, 5, 5, 11, 790], [2, 4, 5, 5, 22, 395], [2, 4, 5, 5, 55, 158], [2, 4, 5, 5, 79, 110], [2, 4, 5, 10, 4345], [2, 4, 5, 10, 11, 395], [2, 4, 5, 10, 55, 79], [2, 4, 5, 11, 3950], [2, 4, 5, 11, 25, 158], [2, 4, 5, 11, 50, 79], [2, 4, 5, 22, 1975], [2, 4, 5, 22, 25, 79], [2, 4, 5, 25, 1738], [2, 4, 5, 50, 869], [2, 4, 5, 55, 790], [2, 4, 5, 79, 550], [2, 4, 5, 110, 395], [2, 4, 5, 158, 275], [2, 4, 10, 21725], [2, 4, 10, 11, 1975], [2, 4, 10, 11, 25, 79], [2, 4, 10, 25, 869], [2, 4, 10, 55, 395], [2, 4, 10, 79, 275], [2, 4, 11, 19750], [2, 4, 11, 25, 790], [2, 4, 11, 50, 395], [2, 4, 11, 79, 250], [2, 4, 11, 125, 158], [2, 4, 22, 9875], [2, 4, 22, 25, 395], [2, 4, 22, 79, 125], [2, 4, 25, 8690], [2, 4, 25, 55, 158], [2, 4, 25, 79, 110], [2, 4, 50, 4345], [2, 4, 50, 55, 79], [2, 4, 55, 3950], [2, 4, 79, 2750], [2, 4, 110, 1975], [2, 4, 125, 1738], [2, 4, 158, 1375], [2, 4, 250, 869], [2, 4, 275, 790], [2, 4, 395, 550], [2, 5, 173800], [2, 5, 5, 34760], [2, 5, 5, 5, 6952], [2, 5, 5, 5, 8, 869], [2, 5, 5, 5, 8, 11, 79], [2, 5, 5, 5, 11, 632], [2, 5, 5, 5, 22, 316], [2, 5, 5, 5, 44, 158], [2, 5, 5, 5, 79, 88], [2, 5, 5, 8, 4345], [2, 5, 5, 8, 11, 395], [2, 5, 5, 8, 55, 79], [2, 5, 5, 10, 3476], [2, 5, 5, 10, 11, 316], [2, 5, 5, 10, 22, 158], [2, 5, 5, 10, 44, 79], [2, 5, 5, 11, 3160], [2, 5, 5, 11, 20, 158], [2, 5, 5, 11, 40, 79], [2, 5, 5, 20, 1738], [2, 5, 5, 20, 22, 79], [2, 5, 5, 22, 1580], [2, 5, 5, 40, 869], [2, 5, 5, 44, 790], [2, 5, 5, 55, 632], [2, 5, 5, 79, 440], [2, 5, 5, 88, 395], [2, 5, 5, 110, 316], [2, 5, 5, 158, 220], [2, 5, 8, 21725], [2, 5, 8, 11, 1975], [2, 5, 8, 11, 25, 79], [2, 5, 8, 25, 869], [2, 5, 8, 55, 395], [2, 5, 8, 79, 275], [2, 5, 10, 17380], [2, 5, 10, 10, 1738], [2, 5, 10, 10, 11, 158], [2, 5, 10, 10, 22, 79], [2, 5, 10, 11, 1580], [2, 5, 10, 11, 20, 79], [2, 5, 10, 20, 869], [2, 5, 10, 22, 790], [2, 5, 10, 44, 395], [2, 5, 10, 55, 316], [2, 5, 10, 79, 220], [2, 5, 10, 110, 158], [2, 5, 11, 15800], [2, 5, 11, 20, 790], [2, 5, 11, 25, 632], [2, 5, 11, 40, 395], [2, 5, 11, 50, 316], [2, 5, 11, 79, 200], [2, 5, 11, 100, 158], [2, 5, 20, 8690], [2, 5, 20, 22, 395], [2, 5, 20, 55, 158], [2, 5, 20, 79, 110], [2, 5, 22, 7900], [2, 5, 22, 25, 316], [2, 5, 22, 50, 158], [2, 5, 22, 79, 100], [2, 5, 25, 6952], [2, 5, 25, 44, 158], [2, 5, 25, 79, 88], [2, 5, 40, 4345], [2, 5, 40, 55, 79], [2, 5, 44, 3950], [2, 5, 44, 50, 79], [2, 5, 50, 3476], [2, 5, 55, 3160], [2, 5, 79, 2200], [2, 5, 88, 1975], [2, 5, 100, 1738], [2, 5, 110, 1580], [2, 5, 158, 1100], [2, 5, 200, 869], [2, 5, 220, 790], [2, 5, 275, 632], [2, 5, 316, 550], [2, 5, 395, 440], [2, 8, 108625], [2, 8, 11, 9875], [2, 8, 11, 25, 395], [2, 8, 11, 79, 125], [2, 8, 25, 4345], [2, 8, 25, 55, 79], [2, 8, 55, 1975], [2, 8, 79, 1375], [2, 8, 125, 869], [2, 8, 275, 395], [2, 10, 86900], [2, 10, 10, 8690], [2, 10, 10, 10, 869], [2, 10, 10, 10, 11, 79], [2, 10, 10, 11, 790], [2, 10, 10, 22, 395], [2, 10, 10, 55, 158], [2, 10, 10, 79, 110], [2, 10, 11, 7900], [2, 10, 11, 20, 395], [2, 10, 11, 25, 316], [2, 10, 11, 50, 158], [2, 10, 11, 79, 100], [2, 10, 20, 4345], [2, 10, 20, 55, 79], [2, 10, 22, 3950], [2, 10, 22, 25, 158], [2, 10, 22, 50, 79], [2, 10, 25, 3476], [2, 10, 25, 44, 79], [2, 10, 44, 1975], [2, 10, 50, 1738], [2, 10, 55, 1580], [2, 10, 79, 1100], [2, 10, 100, 869], [2, 10, 110, 790], [2, 10, 158, 550], [2, 10, 220, 395], [2, 10, 275, 316], [2, 11, 79000], [2, 11, 20, 3950], [2, 11, 20, 25, 158], [2, 11, 20, 50, 79], [2, 11, 25, 3160], [2, 11, 25, 40, 79], [2, 11, 40, 1975], [2, 11, 50, 1580], [2, 11, 79, 1000], [2, 11, 100, 790], [2, 11, 125, 632], [2, 11, 158, 500], [2, 11, 200, 395], [2, 11, 250, 316], [2, 20, 43450], [2, 20, 22, 1975], [2, 20, 22, 25, 79], [2, 20, 25, 1738], [2, 20, 50, 869], [2, 20, 55, 790], [2, 20, 79, 550], [2, 20, 110, 395], [2, 20, 158, 275], [2, 22, 39500], [2, 22, 25, 1580], [2, 22, 50, 790], [2, 22, 79, 500], [2, 22, 100, 395], [2, 22, 125, 316], [2, 22, 158, 250], [2, 25, 34760], [2, 25, 40, 869], [2, 25, 44, 790], [2, 25, 55, 632], [2, 25, 79, 440], [2, 25, 88, 395], [2, 25, 110, 316], [2, 25, 158, 220], [2, 40, 21725], [2, 40, 55, 395], [2, 40, 79, 275], [2, 44, 19750], [2, 44, 50, 395], [2, 44, 79, 250], [2, 44, 125, 158], [2, 50, 17380], [2, 50, 55, 316], [2, 50, 79, 220], [2, 50, 110, 158], [2, 55, 15800], [2, 55, 79, 200], [2, 55, 100, 158], [2, 79, 11000], [2, 79, 88, 125], [2, 79, 100, 110], [2, 88, 9875], [2, 100, 8690], [2, 110, 7900], [2, 125, 6952], [2, 158, 5500], [2, 200, 4345], [2, 220, 3950], [2, 250, 3476], [2, 275, 3160], [2, 316, 2750], [2, 395, 2200], [2, 440, 1975], [2, 500, 1738], [2, 550, 1580], [2, 632, 1375], [2, 790, 1100], [2, 869, 1000], [4, 434500], [4, 4, 108625], [4, 4, 5, 21725], [4, 4, 5, 5, 4345], [4, 4, 5, 5, 5, 869], [4, 4, 5, 5, 5, 11, 79], [4, 4, 5, 5, 11, 395], [4, 4, 5, 5, 55, 79], [4, 4, 5, 11, 1975], [4, 4, 5, 11, 25, 79], [4, 4, 5, 25, 869], [4, 4, 5, 55, 395], [4, 4, 5, 79, 275], [4, 4, 11, 9875], [4, 4, 11, 25, 395], [4, 4, 11, 79, 125], [4, 4, 25, 4345], [4, 4, 25, 55, 79], [4, 4, 55, 1975], [4, 4, 79, 1375], [4, 4, 125, 869], [4, 4, 275, 395], [4, 5, 86900], [4, 5, 5, 17380], [4, 5, 5, 5, 3476], [4, 5, 5, 5, 11, 316], [4, 5, 5, 5, 22, 158], [4, 5, 5, 5, 44, 79], [4, 5, 5, 10, 1738], [4, 5, 5, 10, 11, 158], [4, 5, 5, 10, 22, 79], [4, 5, 5, 11, 1580], [4, 5, 5, 11, 20, 79], [4, 5, 5, 20, 869], [4, 5, 5, 22, 790], [4, 5, 5, 44, 395], [4, 5, 5, 55, 316], [4, 5, 5, 79, 220], [4, 5, 5, 110, 158], [4, 5, 10, 8690], [4, 5, 10, 10, 869], [4, 5, 10, 10, 11, 79], [4, 5, 10, 11, 790], [4, 5, 10, 22, 395], [4, 5, 10, 55, 158], [4, 5, 10, 79, 110], [4, 5, 11, 7900], [4, 5, 11, 20, 395], [4, 5, 11, 25, 316], [4, 5, 11, 50, 158], [4, 5, 11, 79, 100], [4, 5, 20, 4345], [4, 5, 20, 55, 79], [4, 5, 22, 3950], [4, 5, 22, 25, 158], [4, 5, 22, 50, 79], [4, 5, 25, 3476], [4, 5, 25, 44, 79], [4, 5, 44, 1975], [4, 5, 50, 1738], [4, 5, 55, 1580], [4, 5, 79, 1100], [4, 5, 100, 869], [4, 5, 110, 790], [4, 5, 158, 550], [4, 5, 220, 395], [4, 5, 275, 316], [4, 10, 43450], [4, 10, 10, 4345], [4, 10, 10, 11, 395], [4, 10, 10, 55, 79], [4, 10, 11, 3950], [4, 10, 11, 25, 158], [4, 10, 11, 50, 79], [4, 10, 22, 1975], [4, 10, 22, 25, 79], [4, 10, 25, 1738], [4, 10, 50, 869], [4, 10, 55, 790], [4, 10, 79, 550], [4, 10, 110, 395], [4, 10, 158, 275], [4, 11, 39500], [4, 11, 20, 1975], [4, 11, 20, 25, 79], [4, 11, 25, 1580], [4, 11, 50, 790], [4, 11, 79, 500], [4, 11, 100, 395], [4, 11, 125, 316], [4, 11, 158, 250], [4, 20, 21725], [4, 20, 25, 869], [4, 20, 55, 395], [4, 20, 79, 275], [4, 22, 19750], [4, 22, 25, 790], [4, 22, 50, 395], [4, 22, 79, 250], [4, 22, 125, 158], [4, 25, 17380], [4, 25, 44, 395], [4, 25, 55, 316], [4, 25, 79, 220], [4, 25, 110, 158], [4, 44, 9875], [4, 44, 79, 125], [4, 50, 8690], [4, 50, 55, 158], [4, 50, 79, 110], [4, 55, 7900], [4, 55, 79, 100], [4, 79, 5500], [4, 100, 4345], [4, 110, 3950], [4, 125, 3476], [4, 158, 2750], [4, 220, 1975], [4, 250, 1738], [4, 275, 1580], [4, 316, 1375], [4, 395, 1100], [4, 500, 869], [4, 550, 790], [5, 347600], [5, 5, 69520], [5, 5, 5, 13904], [5, 5, 5, 8, 1738], [5, 5, 5, 8, 11, 158], [5, 5, 5, 8, 22, 79], [5, 5, 5, 11, 1264], [5, 5, 5, 11, 16, 79], [5, 5, 5, 16, 869], [5, 5, 5, 22, 632], [5, 5, 5, 44, 316], [5, 5, 5, 79, 176], [5, 5, 5, 88, 158], [5, 5, 8, 8690], [5, 5, 8, 10, 869], [5, 5, 8, 10, 11, 79], [5, 5, 8, 11, 790], [5, 5, 8, 22, 395], [5, 5, 8, 55, 158], [5, 5, 8, 79, 110], [5, 5, 10, 6952], [5, 5, 10, 11, 632], [5, 5, 10, 22, 316], [5, 5, 10, 44, 158], [5, 5, 10, 79, 88], [5, 5, 11, 6320], [5, 5, 11, 16, 395], [5, 5, 11, 20, 316], [5, 5, 11, 40, 158], [5, 5, 11, 79, 80], [5, 5, 16, 4345], [5, 5, 16, 55, 79], [5, 5, 20, 3476], [5, 5, 20, 22, 158], [5, 5, 20, 44, 79], [5, 5, 22, 3160], [5, 5, 22, 40, 79], [5, 5, 40, 1738], [5, 5, 44, 1580], [5, 5, 55, 1264], [5, 5, 79, 880], [5, 5, 80, 869], [5, 5, 88, 790], [5, 5, 110, 632], [5, 5, 158, 440], [5, 5, 176, 395], [5, 5, 220, 316], [5, 8, 43450], [5, 8, 10, 4345], [5, 8, 10, 11, 395], [5, 8, 10, 55, 79], [5, 8, 11, 3950], [5, 8, 11, 25, 158], [5, 8, 11, 50, 79], [5, 8, 22, 1975], [5, 8, 22, 25, 79], [5, 8, 25, 1738], [5, 8, 50, 869], [5, 8, 55, 790], [5, 8, 79, 550], [5, 8, 110, 395], [5, 8, 158, 275], [5, 10, 34760], [5, 10, 10, 3476], [5, 10, 10, 11, 316], [5, 10, 10, 22, 158], [5, 10, 10, 44, 79], [5, 10, 11, 3160], [5, 10, 11, 20, 158], [5, 10, 11, 40, 79], [5, 10, 20, 1738], [5, 10, 20, 22, 79], [5, 10, 22, 1580], [5, 10, 40, 869], [5, 10, 44, 790], [5, 10, 55, 632], [5, 10, 79, 440], [5, 10, 88, 395], [5, 10, 110, 316], [5, 10, 158, 220], [5, 11, 31600], [5, 11, 16, 1975], [5, 11, 16, 25, 79], [5, 11, 20, 1580], [5, 11, 20, 20, 79], [5, 11, 25, 1264], [5, 11, 40, 790], [5, 11, 50, 632], [5, 11, 79, 400], [5, 11, 80, 395], [5, 11, 100, 316], [5, 11, 158, 200], [5, 16, 21725], [5, 16, 25, 869], [5, 16, 55, 395], [5, 16, 79, 275], [5, 20, 17380], [5, 20, 20, 869], [5, 20, 22, 790], [5, 20, 44, 395], [5, 20, 55, 316], [5, 20, 79, 220], [5, 20, 110, 158], [5, 22, 15800], [5, 22, 25, 632], [5, 22, 40, 395], [5, 22, 50, 316], [5, 22, 79, 200], [5, 22, 100, 158], [5, 25, 13904], [5, 25, 44, 316], [5, 25, 79, 176], [5, 25, 88, 158], [5, 40, 8690], [5, 40, 55, 158], [5, 40, 79, 110], [5, 44, 7900], [5, 44, 50, 158], [5, 44, 79, 100], [5, 50, 6952], [5, 50, 79, 88], [5, 55, 6320], [5, 55, 79, 80], [5, 79, 4400], [5, 80, 4345], [5, 88, 3950], [5, 100, 3476], [5, 110, 3160], [5, 158, 2200], [5, 176, 1975], [5, 200, 1738], [5, 220, 1580], [5, 275, 1264], [5, 316, 1100], [5, 395, 880], [5, 400, 869], [5, 440, 790], [5, 550, 632], [8, 217250], [8, 10, 21725], [8, 10, 11, 1975], [8, 10, 11, 25, 79], [8, 10, 25, 869], [8, 10, 55, 395], [8, 10, 79, 275], [8, 11, 19750], [8, 11, 25, 790], [8, 11, 50, 395], [8, 11, 79, 250], [8, 11, 125, 158], [8, 22, 9875], [8, 22, 25, 395], [8, 22, 79, 125], [8, 25, 8690], [8, 25, 55, 158], [8, 25, 79, 110], [8, 50, 4345], [8, 50, 55, 79], [8, 55, 3950], [8, 79, 2750], [8, 110, 1975], [8, 125, 1738], [8, 158, 1375], [8, 250, 869], [8, 275, 790], [8, 395, 550], [10, 173800], [10, 10, 17380], [10, 10, 10, 1738], [10, 10, 10, 11, 158], [10, 10, 10, 22, 79], [10, 10, 11, 1580], [10, 10, 11, 20, 79], [10, 10, 20, 869], [10, 10, 22, 790], [10, 10, 44, 395], [10, 10, 55, 316], [10, 10, 79, 220], [10, 10, 110, 158], [10, 11, 15800], [10, 11, 20, 790], [10, 11, 25, 632], [10, 11, 40, 395], [10, 11, 50, 316], [10, 11, 79, 200], [10, 11, 100, 158], [10, 20, 8690], [10, 20, 22, 395], [10, 20, 55, 158], [10, 20, 79, 110], [10, 22, 7900], [10, 22, 25, 316], [10, 22, 50, 158], [10, 22, 79, 100], [10, 25, 6952], [10, 25, 44, 158], [10, 25, 79, 88], [10, 40, 4345], [10, 40, 55, 79], [10, 44, 3950], [10, 44, 50, 79], [10, 50, 3476], [10, 55, 3160], [10, 79, 2200], [10, 88, 1975], [10, 100, 1738], [10, 110, 1580], [10, 158, 1100], [10, 200, 869], [10, 220, 790], [10, 275, 632], [10, 316, 550], [10, 395, 440], [11, 158000], [11, 16, 9875], [11, 16, 25, 395], [11, 16, 79, 125], [11, 20, 7900], [11, 20, 20, 395], [11, 20, 25, 316], [11, 20, 50, 158], [11, 20, 79, 100], [11, 25, 6320], [11, 25, 40, 158], [11, 25, 79, 80], [11, 40, 3950], [11, 40, 50, 79], [11, 50, 3160], [11, 79, 2000], [11, 80, 1975], [11, 100, 1580], [11, 125, 1264], [11, 158, 1000], [11, 200, 790], [11, 250, 632], [11, 316, 500], [11, 395, 400], [16, 108625], [16, 25, 4345], [16, 25, 55, 79], [16, 55, 1975], [16, 79, 1375], [16, 125, 869], [16, 275, 395], [20, 86900], [20, 20, 4345], [20, 20, 55, 79], [20, 22, 3950], [20, 22, 25, 158], [20, 22, 50, 79], [20, 25, 3476], [20, 25, 44, 79], [20, 44, 1975], [20, 50, 1738], [20, 55, 1580], [20, 79, 1100], [20, 100, 869], [20, 110, 790], [20, 158, 550], [20, 220, 395], [20, 275, 316], [22, 79000], [22, 25, 3160], [22, 25, 40, 79], [22, 40, 1975], [22, 50, 1580], [22, 79, 1000], [22, 100, 790], [22, 125, 632], [22, 158, 500], [22, 200, 395], [22, 250, 316], [25, 69520], [25, 40, 1738], [25, 44, 1580], [25, 55, 1264], [25, 79, 880], [25, 80, 869], [25, 88, 790], [25, 110, 632], [25, 158, 440], [25, 176, 395], [25, 220, 316], [40, 43450], [40, 50, 869], [40, 55, 790], [40, 79, 550], [40, 110, 395], [40, 158, 275], [44, 39500], [44, 50, 790], [44, 79, 500], [44, 100, 395], [44, 125, 316], [44, 158, 250], [50, 34760], [50, 55, 632], [50, 79, 440], [50, 88, 395], [50, 110, 316], [50, 158, 220], [55, 31600], [55, 79, 400], [55, 80, 395], [55, 100, 316], [55, 158, 200], [79, 22000], [79, 80, 275], [79, 88, 250], [79, 100, 220], [79, 110, 200], [79, 125, 176], [80, 21725], [88, 19750], [88, 125, 158], [100, 17380], [100, 110, 158], [110, 15800], [125, 13904], [158, 11000], [176, 9875], [200, 8690], [220, 7900], [250, 6952], [275, 6320], [316, 5500], [395, 4400], [400, 4345], [440, 3950], [500, 3476], [550, 3160], [632, 2750], [790, 2200], [869, 2000], [880, 1975], [1000, 1738], [1100, 1580], [1264, 1375]]\nassert solution.getFactors(4847365) == [[5, 969473], [5, 23, 42151], [5, 23, 61, 691], [5, 61, 15893], [5, 691, 1403], [23, 210755], [23, 61, 3455], [23, 305, 691], [61, 79465], [61, 115, 691], [115, 42151], [305, 15893], [691, 7015], [1403, 3455]]\nassert solution.getFactors(2839966) == [[2, 1419983], [2, 97, 14639], [97, 29278], [194, 14639]]\nassert solution.getFactors(2232261) == [[3, 744087], [3, 3, 248029], [3, 3, 97, 2557], [3, 97, 7671], [3, 291, 2557], [9, 248029], [9, 97, 2557], [97, 23013], [291, 7671], [873, 2557]]\nassert solution.getFactors(9172589) == [[149, 61561]]\nassert solution.getFactors(6128003) == [[7, 875429]]\nassert solution.getFactors(9239593) == [[11, 839963]]\nassert solution.getFactors(1640596) == [[2, 820298], [2, 2, 410149], [4, 410149]]\nassert solution.getFactors(985481) == [[7, 140783], [7, 23, 6121], [23, 42847], [161, 6121]]\nassert solution.getFactors(6712560) == [[2, 3356280], [2, 2, 1678140], [2, 2, 2, 839070], [2, 2, 2, 2, 419535], [2, 2, 2, 2, 3, 139845], [2, 2, 2, 2, 3, 3, 46615], [2, 2, 2, 2, 3, 3, 5, 9323], [2, 2, 2, 2, 3, 5, 27969], [2, 2, 2, 2, 3, 15, 9323], [2, 2, 2, 2, 5, 83907], [2, 2, 2, 2, 5, 9, 9323], [2, 2, 2, 2, 9, 46615], [2, 2, 2, 2, 15, 27969], [2, 2, 2, 2, 45, 9323], [2, 2, 2, 3, 279690], [2, 2, 2, 3, 3, 93230], [2, 2, 2, 3, 3, 5, 18646], [2, 2, 2, 3, 3, 10, 9323], [2, 2, 2, 3, 5, 55938], [2, 2, 2, 3, 5, 6, 9323], [2, 2, 2, 3, 6, 46615], [2, 2, 2, 3, 10, 27969], [2, 2, 2, 3, 15, 18646], [2, 2, 2, 3, 30, 9323], [2, 2, 2, 5, 167814], [2, 2, 2, 5, 6, 27969], [2, 2, 2, 5, 9, 18646], [2, 2, 2, 5, 18, 9323], [2, 2, 2, 6, 139845], [2, 2, 2, 6, 15, 9323], [2, 2, 2, 9, 93230], [2, 2, 2, 9, 10, 9323], [2, 2, 2, 10, 83907], [2, 2, 2, 15, 55938], [2, 2, 2, 18, 46615], [2, 2, 2, 30, 27969], [2, 2, 2, 45, 18646], [2, 2, 2, 90, 9323], [2, 2, 3, 559380], [2, 2, 3, 3, 186460], [2, 2, 3, 3, 4, 46615], [2, 2, 3, 3, 4, 5, 9323], [2, 2, 3, 3, 5, 37292], [2, 2, 3, 3, 10, 18646], [2, 2, 3, 3, 20, 9323], [2, 2, 3, 4, 139845], [2, 2, 3, 4, 5, 27969], [2, 2, 3, 4, 15, 9323], [2, 2, 3, 5, 111876], [2, 2, 3, 5, 6, 18646], [2, 2, 3, 5, 12, 9323], [2, 2, 3, 6, 93230], [2, 2, 3, 6, 10, 9323], [2, 2, 3, 10, 55938], [2, 2, 3, 12, 46615], [2, 2, 3, 15, 37292], [2, 2, 3, 20, 27969], [2, 2, 3, 30, 18646], [2, 2, 3, 60, 9323], [2, 2, 4, 419535], [2, 2, 4, 5, 83907], [2, 2, 4, 5, 9, 9323], [2, 2, 4, 9, 46615], [2, 2, 4, 15, 27969], [2, 2, 4, 45, 9323], [2, 2, 5, 335628], [2, 2, 5, 6, 55938], [2, 2, 5, 6, 6, 9323], [2, 2, 5, 9, 37292], [2, 2, 5, 12, 27969], [2, 2, 5, 18, 18646], [2, 2, 5, 36, 9323], [2, 2, 6, 279690], [2, 2, 6, 6, 46615], [2, 2, 6, 10, 27969], [2, 2, 6, 15, 18646], [2, 2, 6, 30, 9323], [2, 2, 9, 186460], [2, 2, 9, 10, 18646], [2, 2, 9, 20, 9323], [2, 2, 10, 167814], [2, 2, 10, 18, 9323], [2, 2, 12, 139845], [2, 2, 12, 15, 9323], [2, 2, 15, 111876], [2, 2, 18, 93230], [2, 2, 20, 83907], [2, 2, 30, 55938], [2, 2, 36, 46615], [2, 2, 45, 37292], [2, 2, 60, 27969], [2, 2, 90, 18646], [2, 2, 180, 9323], [2, 3, 1118760], [2, 3, 3, 372920], [2, 3, 3, 4, 93230], [2, 3, 3, 4, 5, 18646], [2, 3, 3, 4, 10, 9323], [2, 3, 3, 5, 74584], [2, 3, 3, 5, 8, 9323], [2, 3, 3, 8, 46615], [2, 3, 3, 10, 37292], [2, 3, 3, 20, 18646], [2, 3, 3, 40, 9323], [2, 3, 4, 279690], [2, 3, 4, 5, 55938], [2, 3, 4, 5, 6, 9323], [2, 3, 4, 6, 46615], [2, 3, 4, 10, 27969], [2, 3, 4, 15, 18646], [2, 3, 4, 30, 9323], [2, 3, 5, 223752], [2, 3, 5, 6, 37292], [2, 3, 5, 8, 27969], [2, 3, 5, 12, 18646], [2, 3, 5, 24, 9323], [2, 3, 6, 186460], [2, 3, 6, 10, 18646], [2, 3, 6, 20, 9323], [2, 3, 8, 139845], [2, 3, 8, 15, 9323], [2, 3, 10, 111876], [2, 3, 10, 12, 9323], [2, 3, 12, 93230], [2, 3, 15, 74584], [2, 3, 20, 55938], [2, 3, 24, 46615], [2, 3, 30, 37292], [2, 3, 40, 27969], [2, 3, 60, 18646], [2, 3, 120, 9323], [2, 4, 839070], [2, 4, 5, 167814], [2, 4, 5, 6, 27969], [2, 4, 5, 9, 18646], [2, 4, 5, 18, 9323], [2, 4, 6, 139845], [2, 4, 6, 15, 9323], [2, 4, 9, 93230], [2, 4, 9, 10, 9323], [2, 4, 10, 83907], [2, 4, 15, 55938], [2, 4, 18, 46615], [2, 4, 30, 27969], [2, 4, 45, 18646], [2, 4, 90, 9323], [2, 5, 671256], [2, 5, 6, 111876], [2, 5, 6, 6, 18646], [2, 5, 6, 12, 9323], [2, 5, 8, 83907], [2, 5, 8, 9, 9323], [2, 5, 9, 74584], [2, 5, 12, 55938], [2, 5, 18, 37292], [2, 5, 24, 27969], [2, 5, 36, 18646], [2, 5, 72, 9323], [2, 6, 559380], [2, 6, 6, 93230], [2, 6, 6, 10, 9323], [2, 6, 10, 55938], [2, 6, 12, 46615], [2, 6, 15, 37292], [2, 6, 20, 27969], [2, 6, 30, 18646], [2, 6, 60, 9323], [2, 8, 419535], [2, 8, 9, 46615], [2, 8, 15, 27969], [2, 8, 45, 9323], [2, 9, 372920], [2, 9, 10, 37292], [2, 9, 20, 18646], [2, 9, 40, 9323], [2, 10, 335628], [2, 10, 12, 27969], [2, 10, 18, 18646], [2, 10, 36, 9323], [2, 12, 279690], [2, 12, 15, 18646], [2, 12, 30, 9323], [2, 15, 223752], [2, 15, 24, 9323], [2, 18, 186460], [2, 18, 20, 9323], [2, 20, 167814], [2, 24, 139845], [2, 30, 111876], [2, 36, 93230], [2, 40, 83907], [2, 45, 74584], [2, 60, 55938], [2, 72, 46615], [2, 90, 37292], [2, 120, 27969], [2, 180, 18646], [2, 360, 9323], [3, 2237520], [3, 3, 745840], [3, 3, 4, 186460], [3, 3, 4, 4, 46615], [3, 3, 4, 4, 5, 9323], [3, 3, 4, 5, 37292], [3, 3, 4, 10, 18646], [3, 3, 4, 20, 9323], [3, 3, 5, 149168], [3, 3, 5, 8, 18646], [3, 3, 5, 16, 9323], [3, 3, 8, 93230], [3, 3, 8, 10, 9323], [3, 3, 10, 74584], [3, 3, 16, 46615], [3, 3, 20, 37292], [3, 3, 40, 18646], [3, 3, 80, 9323], [3, 4, 559380], [3, 4, 4, 139845], [3, 4, 4, 5, 27969], [3, 4, 4, 15, 9323], [3, 4, 5, 111876], [3, 4, 5, 6, 18646], [3, 4, 5, 12, 9323], [3, 4, 6, 93230], [3, 4, 6, 10, 9323], [3, 4, 10, 55938], [3, 4, 12, 46615], [3, 4, 15, 37292], [3, 4, 20, 27969], [3, 4, 30, 18646], [3, 4, 60, 9323], [3, 5, 447504], [3, 5, 6, 74584], [3, 5, 6, 8, 9323], [3, 5, 8, 55938], [3, 5, 12, 37292], [3, 5, 16, 27969], [3, 5, 24, 18646], [3, 5, 48, 9323], [3, 6, 372920], [3, 6, 8, 46615], [3, 6, 10, 37292], [3, 6, 20, 18646], [3, 6, 40, 9323], [3, 8, 279690], [3, 8, 10, 27969], [3, 8, 15, 18646], [3, 8, 30, 9323], [3, 10, 223752], [3, 10, 12, 18646], [3, 10, 24, 9323], [3, 12, 186460], [3, 12, 20, 9323], [3, 15, 149168], [3, 15, 16, 9323], [3, 16, 139845], [3, 20, 111876], [3, 24, 93230], [3, 30, 74584], [3, 40, 55938], [3, 48, 46615], [3, 60, 37292], [3, 80, 27969], [3, 120, 18646], [3, 240, 9323], [4, 1678140], [4, 4, 419535], [4, 4, 5, 83907], [4, 4, 5, 9, 9323], [4, 4, 9, 46615], [4, 4, 15, 27969], [4, 4, 45, 9323], [4, 5, 335628], [4, 5, 6, 55938], [4, 5, 6, 6, 9323], [4, 5, 9, 37292], [4, 5, 12, 27969], [4, 5, 18, 18646], [4, 5, 36, 9323], [4, 6, 279690], [4, 6, 6, 46615], [4, 6, 10, 27969], [4, 6, 15, 18646], [4, 6, 30, 9323], [4, 9, 186460], [4, 9, 10, 18646], [4, 9, 20, 9323], [4, 10, 167814], [4, 10, 18, 9323], [4, 12, 139845], [4, 12, 15, 9323], [4, 15, 111876], [4, 18, 93230], [4, 20, 83907], [4, 30, 55938], [4, 36, 46615], [4, 45, 37292], [4, 60, 27969], [4, 90, 18646], [4, 180, 9323], [5, 1342512], [5, 6, 223752], [5, 6, 6, 37292], [5, 6, 8, 27969], [5, 6, 12, 18646], [5, 6, 24, 9323], [5, 8, 167814], [5, 8, 9, 18646], [5, 8, 18, 9323], [5, 9, 149168], [5, 9, 16, 9323], [5, 12, 111876], [5, 12, 12, 9323], [5, 16, 83907], [5, 18, 74584], [5, 24, 55938], [5, 36, 37292], [5, 48, 27969], [5, 72, 18646], [5, 144, 9323], [6, 1118760], [6, 6, 186460], [6, 6, 10, 18646], [6, 6, 20, 9323], [6, 8, 139845], [6, 8, 15, 9323], [6, 10, 111876], [6, 10, 12, 9323], [6, 12, 93230], [6, 15, 74584], [6, 20, 55938], [6, 24, 46615], [6, 30, 37292], [6, 40, 27969], [6, 60, 18646], [6, 120, 9323], [8, 839070], [8, 9, 93230], [8, 9, 10, 9323], [8, 10, 83907], [8, 15, 55938], [8, 18, 46615], [8, 30, 27969], [8, 45, 18646], [8, 90, 9323], [9, 745840], [9, 10, 74584], [9, 16, 46615], [9, 20, 37292], [9, 40, 18646], [9, 80, 9323], [10, 671256], [10, 12, 55938], [10, 18, 37292], [10, 24, 27969], [10, 36, 18646], [10, 72, 9323], [12, 559380], [12, 12, 46615], [12, 15, 37292], [12, 20, 27969], [12, 30, 18646], [12, 60, 9323], [15, 447504], [15, 16, 27969], [15, 24, 18646], [15, 48, 9323], [16, 419535], [16, 45, 9323], [18, 372920], [18, 20, 18646], [18, 40, 9323], [20, 335628], [20, 36, 9323], [24, 279690], [24, 30, 9323], [30, 223752], [36, 186460], [40, 167814], [45, 149168], [48, 139845], [60, 111876], [72, 93230], [80, 83907], [90, 74584], [120, 55938], [144, 46615], [180, 37292], [240, 27969], [360, 18646], [720, 9323]]\nassert solution.getFactors(5028359) == [[7, 718337]]\nassert solution.getFactors(9837421) == [[11, 894311], [11, 11, 81301], [11, 11, 11, 7391], [11, 11, 11, 19, 389], [11, 11, 19, 4279], [11, 11, 209, 389], [11, 19, 47069], [11, 19, 121, 389], [11, 121, 7391], [11, 209, 4279], [11, 389, 2299], [19, 517759], [19, 121, 4279], [19, 389, 1331], [121, 81301], [121, 209, 389], [209, 47069], [389, 25289], [1331, 7391], [2299, 4279]]\nassert solution.getFactors(9310060) == [[2, 4655030], [2, 2, 2327515], [2, 2, 5, 465503], [2, 2, 5, 97, 4799], [2, 2, 97, 23995], [2, 2, 485, 4799], [2, 5, 931006], [2, 5, 97, 9598], [2, 5, 194, 4799], [2, 10, 465503], [2, 10, 97, 4799], [2, 97, 47990], [2, 194, 23995], [2, 485, 9598], [2, 970, 4799], [4, 2327515], [4, 5, 465503], [4, 5, 97, 4799], [4, 97, 23995], [4, 485, 4799], [5, 1862012], [5, 97, 19196], [5, 194, 9598], [5, 388, 4799], [10, 931006], [10, 97, 9598], [10, 194, 4799], [20, 465503], [20, 97, 4799], [97, 95980], [194, 47990], [388, 23995], [485, 19196], [970, 9598], [1940, 4799]]\nassert solution.getFactors(8589269) == [[13, 660713], [13, 797, 829], [797, 10777], [829, 10361]]\nassert solution.getFactors(502135) == [[5, 100427], [5, 29, 3463], [29, 17315], [145, 3463]]\nassert solution.getFactors(3938597) == [[13, 302969]]\nassert solution.getFactors(4285678) == [[2, 2142839], [2, 19, 112781], [2, 19, 29, 3889], [2, 29, 73891], [2, 551, 3889], [19, 225562], [19, 29, 7778], [19, 58, 3889], [29, 147782], [29, 38, 3889], [38, 112781], [58, 73891], [551, 7778], [1102, 3889]]\nassert solution.getFactors(5252602) == [[2, 2626301], [2, 23, 114187], [2, 23, 89, 1283], [2, 89, 29509], [2, 1283, 2047], [23, 228374], [23, 89, 2566], [23, 178, 1283], [46, 114187], [46, 89, 1283], [89, 59018], [178, 29509], [1283, 4094], [2047, 2566]]\nassert solution.getFactors(6831093) == [[3, 2277031], [3, 17, 133943], [3, 17, 17, 7879], [3, 289, 7879], [17, 401829], [17, 17, 23637], [17, 51, 7879], [51, 133943], [289, 23637], [867, 7879]]\nassert solution.getFactors(4989499) == []\nassert solution.getFactors(8106333) == [[3, 2702111], [3, 1619, 1669], [1619, 5007], [1669, 4857]]\nassert solution.getFactors(3986998) == [[2, 1993499], [2, 19, 104921], [2, 19, 239, 439], [2, 239, 8341], [2, 439, 4541], [19, 209842], [19, 239, 878], [19, 439, 478], [38, 104921], [38, 239, 439], [239, 16682], [439, 9082], [478, 8341], [878, 4541]]\nassert solution.getFactors(178817) == []\nassert solution.getFactors(9464046) == [[2, 4732023], [2, 3, 1577341], [3, 3154682], [6, 1577341]]\nassert solution.getFactors(4622812) == [[2, 2311406], [2, 2, 1155703], [4, 1155703]]\nassert solution.getFactors(4121664) == [[2, 2060832], [2, 2, 1030416], [2, 2, 2, 515208], [2, 2, 2, 2, 257604], [2, 2, 2, 2, 2, 128802], [2, 2, 2, 2, 2, 2, 64401], [2, 2, 2, 2, 2, 2, 3, 21467], [2, 2, 2, 2, 2, 3, 42934], [2, 2, 2, 2, 2, 6, 21467], [2, 2, 2, 2, 3, 85868], [2, 2, 2, 2, 3, 4, 21467], [2, 2, 2, 2, 4, 64401], [2, 2, 2, 2, 6, 42934], [2, 2, 2, 2, 12, 21467], [2, 2, 2, 3, 171736], [2, 2, 2, 3, 4, 42934], [2, 2, 2, 3, 8, 21467], [2, 2, 2, 4, 128802], [2, 2, 2, 4, 6, 21467], [2, 2, 2, 6, 85868], [2, 2, 2, 8, 64401], [2, 2, 2, 12, 42934], [2, 2, 2, 24, 21467], [2, 2, 3, 343472], [2, 2, 3, 4, 85868], [2, 2, 3, 4, 4, 21467], [2, 2, 3, 8, 42934], [2, 2, 3, 16, 21467], [2, 2, 4, 257604], [2, 2, 4, 4, 64401], [2, 2, 4, 6, 42934], [2, 2, 4, 12, 21467], [2, 2, 6, 171736], [2, 2, 6, 8, 21467], [2, 2, 8, 128802], [2, 2, 12, 85868], [2, 2, 16, 64401], [2, 2, 24, 42934], [2, 2, 48, 21467], [2, 3, 686944], [2, 3, 4, 171736], [2, 3, 4, 4, 42934], [2, 3, 4, 8, 21467], [2, 3, 8, 85868], [2, 3, 16, 42934], [2, 3, 32, 21467], [2, 4, 515208], [2, 4, 4, 128802], [2, 4, 4, 6, 21467], [2, 4, 6, 85868], [2, 4, 8, 64401], [2, 4, 12, 42934], [2, 4, 24, 21467], [2, 6, 343472], [2, 6, 8, 42934], [2, 6, 16, 21467], [2, 8, 257604], [2, 8, 12, 21467], [2, 12, 171736], [2, 16, 128802], [2, 24, 85868], [2, 32, 64401], [2, 48, 42934], [2, 96, 21467], [3, 1373888], [3, 4, 343472], [3, 4, 4, 85868], [3, 4, 4, 4, 21467], [3, 4, 8, 42934], [3, 4, 16, 21467], [3, 8, 171736], [3, 8, 8, 21467], [3, 16, 85868], [3, 32, 42934], [3, 64, 21467], [4, 1030416], [4, 4, 257604], [4, 4, 4, 64401], [4, 4, 6, 42934], [4, 4, 12, 21467], [4, 6, 171736], [4, 6, 8, 21467], [4, 8, 128802], [4, 12, 85868], [4, 16, 64401], [4, 24, 42934], [4, 48, 21467], [6, 686944], [6, 8, 85868], [6, 16, 42934], [6, 32, 21467], [8, 515208], [8, 8, 64401], [8, 12, 42934], [8, 24, 21467], [12, 343472], [12, 16, 21467], [16, 257604], [24, 171736], [32, 128802], [48, 85868], [64, 64401], [96, 42934], [192, 21467]]\nassert solution.getFactors(6530161) == [[11, 593651]]\nassert solution.getFactors(7853217) == [[3, 2617739], [3, 97, 26987], [97, 80961], [291, 26987]]\nassert solution.getFactors(9258544) == [[2, 4629272], [2, 2, 2314636], [2, 2, 2, 1157318], [2, 2, 2, 2, 578659], [2, 2, 4, 578659], [2, 4, 1157318], [2, 8, 578659], [4, 2314636], [4, 4, 578659], [8, 1157318], [16, 578659]]\nassert solution.getFactors(5474286) == [[2, 2737143], [2, 3, 912381], [2, 3, 3, 304127], [2, 9, 304127], [3, 1824762], [3, 3, 608254], [3, 6, 304127], [6, 912381], [9, 608254], [18, 304127]]\nassert solution.getFactors(9276889) == [[23, 403343], [23, 149, 2707], [149, 62261], [2707, 3427]]\nassert solution.getFactors(9370975) == [[5, 1874195], [5, 5, 374839], [25, 374839]]\nassert solution.getFactors(7475192) == [[2, 3737596], [2, 2, 1868798], [2, 2, 2, 934399], [2, 4, 934399], [4, 1868798], [8, 934399]]\nassert solution.getFactors(6596811) == [[3, 2198937], [3, 3, 732979], [3, 3, 13, 56383], [3, 13, 169149], [3, 39, 56383], [9, 732979], [9, 13, 56383], [13, 507447], [39, 169149], [117, 56383]]\nassert solution.getFactors(9397338) == [[2, 4698669], [2, 3, 1566223], [2, 3, 971, 1613], [2, 971, 4839], [2, 1613, 2913], [3, 3132446], [3, 971, 3226], [3, 1613, 1942], [6, 1566223], [6, 971, 1613], [971, 9678], [1613, 5826], [1942, 4839], [2913, 3226]]\nassert solution.getFactors(1989212) == [[2, 994606], [2, 2, 497303], [4, 497303]]\nassert solution.getFactors(1412803) == [[7, 201829]]\nassert solution.getFactors(7301612) == [[2, 3650806], [2, 2, 1825403], [4, 1825403]]\nassert solution.getFactors(5610353) == [[7, 801479], [7, 7, 114497], [7, 7, 61, 1877], [7, 61, 13139], [7, 427, 1877], [49, 114497], [49, 61, 1877], [61, 91973], [427, 13139], [1877, 2989]]\nassert solution.getFactors(487107) == [[3, 162369], [3, 3, 54123], [3, 3, 3, 18041], [3, 9, 18041], [9, 54123], [27, 18041]]\nassert solution.getFactors(9122638) == [[2, 4561319], [2, 7, 651617], [7, 1303234], [14, 651617]]\nassert solution.getFactors(7610404) == [[2, 3805202], [2, 2, 1902601], [2, 2, 347, 5483], [2, 347, 10966], [2, 694, 5483], [4, 1902601], [4, 347, 5483], [347, 21932], [694, 10966], [1388, 5483]]\nassert solution.getFactors(2046756) == [[2, 1023378], [2, 2, 511689], [2, 2, 3, 170563], [2, 2, 3, 19, 8977], [2, 2, 3, 19, 47, 191], [2, 2, 3, 47, 3629], [2, 2, 3, 191, 893], [2, 2, 19, 26931], [2, 2, 19, 47, 573], [2, 2, 19, 141, 191], [2, 2, 47, 10887], [2, 2, 47, 57, 191], [2, 2, 57, 8977], [2, 2, 141, 3629], [2, 2, 191, 2679], [2, 2, 573, 893], [2, 3, 341126], [2, 3, 19, 17954], [2, 3, 19, 47, 382], [2, 3, 19, 94, 191], [2, 3, 38, 8977], [2, 3, 38, 47, 191], [2, 3, 47, 7258], [2, 3, 94, 3629], [2, 3, 191, 1786], [2, 3, 382, 893], [2, 6, 170563], [2, 6, 19, 8977], [2, 6, 19, 47, 191], [2, 6, 47, 3629], [2, 6, 191, 893], [2, 19, 53862], [2, 19, 47, 1146], [2, 19, 94, 573], [2, 19, 141, 382], [2, 19, 191, 282], [2, 38, 26931], [2, 38, 47, 573], [2, 38, 141, 191], [2, 47, 21774], [2, 47, 57, 382], [2, 47, 114, 191], [2, 57, 17954], [2, 57, 94, 191], [2, 94, 10887], [2, 114, 8977], [2, 141, 7258], [2, 191, 5358], [2, 282, 3629], [2, 382, 2679], [2, 573, 1786], [2, 893, 1146], [3, 682252], [3, 4, 170563], [3, 4, 19, 8977], [3, 4, 19, 47, 191], [3, 4, 47, 3629], [3, 4, 191, 893], [3, 19, 35908], [3, 19, 47, 764], [3, 19, 94, 382], [3, 19, 188, 191], [3, 38, 17954], [3, 38, 47, 382], [3, 38, 94, 191], [3, 47, 14516], [3, 47, 76, 191], [3, 76, 8977], [3, 94, 7258], [3, 188, 3629], [3, 191, 3572], [3, 382, 1786], [3, 764, 893], [4, 511689], [4, 19, 26931], [4, 19, 47, 573], [4, 19, 141, 191], [4, 47, 10887], [4, 47, 57, 191], [4, 57, 8977], [4, 141, 3629], [4, 191, 2679], [4, 573, 893], [6, 341126], [6, 19, 17954], [6, 19, 47, 382], [6, 19, 94, 191], [6, 38, 8977], [6, 38, 47, 191], [6, 47, 7258], [6, 94, 3629], [6, 191, 1786], [6, 382, 893], [12, 170563], [12, 19, 8977], [12, 19, 47, 191], [12, 47, 3629], [12, 191, 893], [19, 107724], [19, 47, 2292], [19, 94, 1146], [19, 141, 764], [19, 188, 573], [19, 191, 564], [19, 282, 382], [38, 53862], [38, 47, 1146], [38, 94, 573], [38, 141, 382], [38, 191, 282], [47, 43548], [47, 57, 764], [47, 76, 573], [47, 114, 382], [47, 191, 228], [57, 35908], [57, 94, 382], [57, 188, 191], [76, 26931], [76, 141, 191], [94, 21774], [94, 114, 191], [114, 17954], [141, 14516], [188, 10887], [191, 10716], [228, 8977], [282, 7258], [382, 5358], [564, 3629], [573, 3572], [764, 2679], [893, 2292], [1146, 1786]]\nassert solution.getFactors(643917) == [[3, 214639]]\nassert solution.getFactors(8267911) == [[43, 192277], [43, 47, 4091], [47, 175913], [2021, 4091]]\nassert solution.getFactors(6694741) == [[191, 35051]]\nassert solution.getFactors(71351) == [[7, 10193]]\nassert solution.getFactors(1805459) == [[59, 30601], [59, 71, 431], [71, 25429], [431, 4189]]\nassert solution.getFactors(1697048) == [[2, 848524], [2, 2, 424262], [2, 2, 2, 212131], [2, 4, 212131], [4, 424262], [8, 212131]]\nassert solution.getFactors(2815746) == [[2, 1407873], [2, 3, 469291], [2, 3, 439, 1069], [2, 439, 3207], [2, 1069, 1317], [3, 938582], [3, 439, 2138], [3, 878, 1069], [6, 469291], [6, 439, 1069], [439, 6414], [878, 3207], [1069, 2634], [1317, 2138]]\nassert solution.getFactors(646989) == [[3, 215663], [3, 7, 30809], [7, 92427], [21, 30809]]\nassert solution.getFactors(6908614) == [[2, 3454307]]\nassert solution.getFactors(2269216) == [[2, 1134608], [2, 2, 567304], [2, 2, 2, 283652], [2, 2, 2, 2, 141826], [2, 2, 2, 2, 2, 70913], [2, 2, 2, 4, 70913], [2, 2, 4, 141826], [2, 2, 8, 70913], [2, 4, 283652], [2, 4, 4, 70913], [2, 8, 141826], [2, 16, 70913], [4, 567304], [4, 4, 141826], [4, 8, 70913], [8, 283652], [16, 141826], [32, 70913]]\nassert solution.getFactors(5008259) == []\nassert solution.getFactors(406319) == [[29, 14011]]\nassert solution.getFactors(8856938) == [[2, 4428469]]\nassert solution.getFactors(4084255) == [[5, 816851], [5, 7, 116693], [5, 7, 61, 1913], [5, 61, 13391], [5, 427, 1913], [7, 583465], [7, 61, 9565], [7, 305, 1913], [35, 116693], [35, 61, 1913], [61, 66955], [305, 13391], [427, 9565], [1913, 2135]]\nassert solution.getFactors(3033898) == [[2, 1516949], [2, 7, 216707], [2, 7, 59, 3673], [2, 59, 25711], [2, 413, 3673], [7, 433414], [7, 59, 7346], [7, 118, 3673], [14, 216707], [14, 59, 3673], [59, 51422], [118, 25711], [413, 7346], [826, 3673]]\nassert solution.getFactors(9837040) == [[2, 4918520], [2, 2, 2459260], [2, 2, 2, 1229630], [2, 2, 2, 2, 614815], [2, 2, 2, 2, 5, 122963], [2, 2, 2, 5, 245926], [2, 2, 2, 10, 122963], [2, 2, 4, 614815], [2, 2, 4, 5, 122963], [2, 2, 5, 491852], [2, 2, 10, 245926], [2, 2, 20, 122963], [2, 4, 1229630], [2, 4, 5, 245926], [2, 4, 10, 122963], [2, 5, 983704], [2, 5, 8, 122963], [2, 8, 614815], [2, 10, 491852], [2, 20, 245926], [2, 40, 122963], [4, 2459260], [4, 4, 614815], [4, 4, 5, 122963], [4, 5, 491852], [4, 10, 245926], [4, 20, 122963], [5, 1967408], [5, 8, 245926], [5, 16, 122963], [8, 1229630], [8, 10, 122963], [10, 983704], [16, 614815], [20, 491852], [40, 245926], [80, 122963]]\nassert solution.getFactors(3615995) == [[5, 723199], [5, 31, 23329], [5, 31, 41, 569], [5, 41, 17639], [5, 569, 1271], [31, 116645], [31, 41, 2845], [31, 205, 569], [41, 88195], [41, 155, 569], [155, 23329], [205, 17639], [569, 6355], [1271, 2845]]\nassert solution.getFactors(2005155) == [[3, 668385], [3, 3, 222795], [3, 3, 3, 74265], [3, 3, 3, 3, 24755], [3, 3, 3, 3, 5, 4951], [3, 3, 3, 5, 14853], [3, 3, 3, 15, 4951], [3, 3, 5, 44559], [3, 3, 5, 9, 4951], [3, 3, 9, 24755], [3, 3, 15, 14853], [3, 3, 45, 4951], [3, 5, 133677], [3, 5, 9, 14853], [3, 5, 27, 4951], [3, 9, 74265], [3, 9, 15, 4951], [3, 15, 44559], [3, 27, 24755], [3, 45, 14853], [3, 135, 4951], [5, 401031], [5, 9, 44559], [5, 9, 9, 4951], [5, 27, 14853], [5, 81, 4951], [9, 222795], [9, 9, 24755], [9, 15, 14853], [9, 45, 4951], [15, 133677], [15, 27, 4951], [27, 74265], [45, 44559], [81, 24755], [135, 14853], [405, 4951]]\nassert solution.getFactors(3796708) == [[2, 1898354], [2, 2, 949177], [2, 2, 53, 17909], [2, 53, 35818], [2, 106, 17909], [4, 949177], [4, 53, 17909], [53, 71636], [106, 35818], [212, 17909]]\nassert solution.getFactors(6102737) == [[967, 6311]]\nassert solution.getFactors(3755202) == [[2, 1877601], [2, 3, 625867], [2, 3, 11, 56897], [2, 11, 170691], [2, 33, 56897], [3, 1251734], [3, 11, 113794], [3, 22, 56897], [6, 625867], [6, 11, 56897], [11, 341382], [22, 170691], [33, 113794], [66, 56897]]\nassert solution.getFactors(8529219) == [[3, 2843073], [3, 3, 947691], [3, 3, 3, 315897], [3, 3, 3, 3, 105299], [3, 3, 3, 3, 29, 3631], [3, 3, 3, 29, 10893], [3, 3, 3, 87, 3631], [3, 3, 9, 105299], [3, 3, 9, 29, 3631], [3, 3, 29, 32679], [3, 3, 87, 10893], [3, 3, 261, 3631], [3, 9, 315897], [3, 9, 29, 10893], [3, 9, 87, 3631], [3, 27, 105299], [3, 27, 29, 3631], [3, 29, 98037], [3, 87, 32679], [3, 261, 10893], [3, 783, 3631], [9, 947691], [9, 9, 105299], [9, 9, 29, 3631], [9, 29, 32679], [9, 87, 10893], [9, 261, 3631], [27, 315897], [27, 29, 10893], [27, 87, 3631], [29, 294111], [29, 81, 3631], [81, 105299], [87, 98037], [261, 32679], [783, 10893], [2349, 3631]]\nassert solution.getFactors(4616625) == [[3, 1538875], [3, 5, 307775], [3, 5, 5, 61555], [3, 5, 5, 5, 12311], [3, 5, 5, 5, 13, 947], [3, 5, 5, 13, 4735], [3, 5, 5, 65, 947], [3, 5, 13, 23675], [3, 5, 13, 25, 947], [3, 5, 25, 12311], [3, 5, 65, 4735], [3, 5, 325, 947], [3, 13, 118375], [3, 13, 25, 4735], [3, 13, 125, 947], [3, 25, 61555], [3, 25, 65, 947], [3, 65, 23675], [3, 125, 12311], [3, 325, 4735], [3, 947, 1625], [5, 923325], [5, 5, 184665], [5, 5, 5, 36933], [5, 5, 5, 13, 2841], [5, 5, 5, 39, 947], [5, 5, 13, 14205], [5, 5, 13, 15, 947], [5, 5, 15, 12311], [5, 5, 39, 4735], [5, 5, 65, 2841], [5, 5, 195, 947], [5, 13, 71025], [5, 13, 15, 4735], [5, 13, 25, 2841], [5, 13, 75, 947], [5, 15, 61555], [5, 15, 65, 947], [5, 25, 36933], [5, 25, 39, 947], [5, 39, 23675], [5, 65, 14205], [5, 75, 12311], [5, 195, 4735], [5, 325, 2841], [5, 947, 975], [13, 355125], [13, 15, 23675], [13, 15, 25, 947], [13, 25, 14205], [13, 75, 4735], [13, 125, 2841], [13, 375, 947], [15, 307775], [15, 25, 12311], [15, 65, 4735], [15, 325, 947], [25, 184665], [25, 39, 4735], [25, 65, 2841], [25, 195, 947], [39, 118375], [39, 125, 947], [65, 71025], [65, 75, 947], [75, 61555], [125, 36933], [195, 23675], [325, 14205], [375, 12311], [947, 4875], [975, 4735], [1625, 2841]]\nassert solution.getFactors(8799959) == [[7, 1257137], [7, 7, 179591], [49, 179591]]\nassert solution.getFactors(7523115) == [[3, 2507705], [3, 5, 501541], [3, 5, 263, 1907], [3, 263, 9535], [3, 1315, 1907], [5, 1504623], [5, 263, 5721], [5, 789, 1907], [15, 501541], [15, 263, 1907], [263, 28605], [789, 9535], [1315, 5721], [1907, 3945]]\nassert solution.getFactors(1098264) == [[2, 549132], [2, 2, 274566], [2, 2, 2, 137283], [2, 2, 2, 3, 45761], [2, 2, 2, 3, 67, 683], [2, 2, 2, 67, 2049], [2, 2, 2, 201, 683], [2, 2, 3, 91522], [2, 2, 3, 67, 1366], [2, 2, 3, 134, 683], [2, 2, 6, 45761], [2, 2, 6, 67, 683], [2, 2, 67, 4098], [2, 2, 134, 2049], [2, 2, 201, 1366], [2, 2, 402, 683], [2, 3, 183044], [2, 3, 4, 45761], [2, 3, 4, 67, 683], [2, 3, 67, 2732], [2, 3, 134, 1366], [2, 3, 268, 683], [2, 4, 137283], [2, 4, 67, 2049], [2, 4, 201, 683], [2, 6, 91522], [2, 6, 67, 1366], [2, 6, 134, 683], [2, 12, 45761], [2, 12, 67, 683], [2, 67, 8196], [2, 134, 4098], [2, 201, 2732], [2, 268, 2049], [2, 402, 1366], [2, 683, 804], [3, 366088], [3, 4, 91522], [3, 4, 67, 1366], [3, 4, 134, 683], [3, 8, 45761], [3, 8, 67, 683], [3, 67, 5464], [3, 134, 2732], [3, 268, 1366], [3, 536, 683], [4, 274566], [4, 6, 45761], [4, 6, 67, 683], [4, 67, 4098], [4, 134, 2049], [4, 201, 1366], [4, 402, 683], [6, 183044], [6, 67, 2732], [6, 134, 1366], [6, 268, 683], [8, 137283], [8, 67, 2049], [8, 201, 683], [12, 91522], [12, 67, 1366], [12, 134, 683], [24, 45761], [24, 67, 683], [67, 16392], [134, 8196], [201, 5464], [268, 4098], [402, 2732], [536, 2049], [683, 1608], [804, 1366]]\nassert solution.getFactors(7980496) == [[2, 3990248], [2, 2, 1995124], [2, 2, 2, 997562], [2, 2, 2, 2, 498781], [2, 2, 4, 498781], [2, 4, 997562], [2, 8, 498781], [4, 1995124], [4, 4, 498781], [8, 997562], [16, 498781]]\nassert solution.getFactors(9181997) == [[11, 834727], [11, 19, 43933], [19, 483263], [209, 43933]]\nassert solution.getFactors(3574171) == [[197, 18143]]\nassert solution.getFactors(5333012) == [[2, 2666506], [2, 2, 1333253], [4, 1333253]]\nassert solution.getFactors(4774075) == [[5, 954815], [5, 5, 190963], [5, 5, 43, 4441], [5, 43, 22205], [5, 215, 4441], [25, 190963], [25, 43, 4441], [43, 111025], [215, 22205], [1075, 4441]]\nassert solution.getFactors(4767777) == [[3, 1589259], [3, 3, 529753], [3, 3, 7, 75679], [3, 7, 227037], [3, 21, 75679], [7, 681111], [7, 9, 75679], [9, 529753], [21, 227037], [63, 75679]]\nassert solution.getFactors(7088382) == [[2, 3544191], [2, 3, 1181397], [2, 3, 3, 393799], [2, 3, 3, 7, 56257], [2, 3, 3, 7, 101, 557], [2, 3, 3, 101, 3899], [2, 3, 3, 557, 707], [2, 3, 7, 168771], [2, 3, 7, 101, 1671], [2, 3, 7, 303, 557], [2, 3, 21, 56257], [2, 3, 21, 101, 557], [2, 3, 101, 11697], [2, 3, 303, 3899], [2, 3, 557, 2121], [2, 3, 707, 1671], [2, 7, 506313], [2, 7, 9, 56257], [2, 7, 9, 101, 557], [2, 7, 101, 5013], [2, 7, 303, 1671], [2, 7, 557, 909], [2, 9, 393799], [2, 9, 101, 3899], [2, 9, 557, 707], [2, 21, 168771], [2, 21, 101, 1671], [2, 21, 303, 557], [2, 63, 56257], [2, 63, 101, 557], [2, 101, 35091], [2, 303, 11697], [2, 557, 6363], [2, 707, 5013], [2, 909, 3899], [2, 1671, 2121], [3, 2362794], [3, 3, 787598], [3, 3, 7, 112514], [3, 3, 7, 101, 1114], [3, 3, 7, 202, 557], [3, 3, 14, 56257], [3, 3, 14, 101, 557], [3, 3, 101, 7798], [3, 3, 202, 3899], [3, 3, 557, 1414], [3, 3, 707, 1114], [3, 6, 393799], [3, 6, 7, 56257], [3, 6, 7, 101, 557], [3, 6, 101, 3899], [3, 6, 557, 707], [3, 7, 337542], [3, 7, 101, 3342], [3, 7, 202, 1671], [3, 7, 303, 1114], [3, 7, 557, 606], [3, 14, 168771], [3, 14, 101, 1671], [3, 14, 303, 557], [3, 21, 112514], [3, 21, 101, 1114], [3, 21, 202, 557], [3, 42, 56257], [3, 42, 101, 557], [3, 101, 23394], [3, 202, 11697], [3, 303, 7798], [3, 557, 4242], [3, 606, 3899], [3, 707, 3342], [3, 1114, 2121], [3, 1414, 1671], [6, 1181397], [6, 7, 168771], [6, 7, 101, 1671], [6, 7, 303, 557], [6, 21, 56257], [6, 21, 101, 557], [6, 101, 11697], [6, 303, 3899], [6, 557, 2121], [6, 707, 1671], [7, 1012626], [7, 9, 112514], [7, 9, 101, 1114], [7, 9, 202, 557], [7, 18, 56257], [7, 18, 101, 557], [7, 101, 10026], [7, 202, 5013], [7, 303, 3342], [7, 557, 1818], [7, 606, 1671], [7, 909, 1114], [9, 787598], [9, 14, 56257], [9, 14, 101, 557], [9, 101, 7798], [9, 202, 3899], [9, 557, 1414], [9, 707, 1114], [14, 506313], [14, 101, 5013], [14, 303, 1671], [14, 557, 909], [18, 393799], [18, 101, 3899], [18, 557, 707], [21, 337542], [21, 101, 3342], [21, 202, 1671], [21, 303, 1114], [21, 557, 606], [42, 168771], [42, 101, 1671], [42, 303, 557], [63, 112514], [63, 101, 1114], [63, 202, 557], [101, 70182], [101, 126, 557], [126, 56257], [202, 35091], [303, 23394], [557, 12726], [606, 11697], [707, 10026], [909, 7798], [1114, 6363], [1414, 5013], [1671, 4242], [1818, 3899], [2121, 3342]]\nassert solution.getFactors(9707656) == [[2, 4853828], [2, 2, 2426914], [2, 2, 2, 1213457], [2, 2, 2, 7, 173351], [2, 2, 2, 7, 23, 7537], [2, 2, 2, 23, 52759], [2, 2, 2, 161, 7537], [2, 2, 7, 346702], [2, 2, 7, 23, 15074], [2, 2, 7, 46, 7537], [2, 2, 14, 173351], [2, 2, 14, 23, 7537], [2, 2, 23, 105518], [2, 2, 46, 52759], [2, 2, 161, 15074], [2, 2, 322, 7537], [2, 4, 1213457], [2, 4, 7, 173351], [2, 4, 7, 23, 7537], [2, 4, 23, 52759], [2, 4, 161, 7537], [2, 7, 693404], [2, 7, 23, 30148], [2, 7, 46, 15074], [2, 7, 92, 7537], [2, 14, 346702], [2, 14, 23, 15074], [2, 14, 46, 7537], [2, 23, 211036], [2, 23, 28, 7537], [2, 28, 173351], [2, 46, 105518], [2, 92, 52759], [2, 161, 30148], [2, 322, 15074], [2, 644, 7537], [4, 2426914], [4, 7, 346702], [4, 7, 23, 15074], [4, 7, 46, 7537], [4, 14, 173351], [4, 14, 23, 7537], [4, 23, 105518], [4, 46, 52759], [4, 161, 15074], [4, 322, 7537], [7, 1386808], [7, 8, 173351], [7, 8, 23, 7537], [7, 23, 60296], [7, 46, 30148], [7, 92, 15074], [7, 184, 7537], [8, 1213457], [8, 23, 52759], [8, 161, 7537], [14, 693404], [14, 23, 30148], [14, 46, 15074], [14, 92, 7537], [23, 422072], [23, 28, 15074], [23, 56, 7537], [28, 346702], [28, 46, 7537], [46, 211036], [56, 173351], [92, 105518], [161, 60296], [184, 52759], [322, 30148], [644, 15074], [1288, 7537]]\nassert solution.getFactors(9956187) == [[3, 3318729], [3, 3, 1106243], [9, 1106243]]\nassert solution.getFactors(1743093) == [[3, 581031], [3, 3, 193677], [3, 3, 3, 64559], [3, 3, 3, 11, 5869], [3, 3, 11, 17607], [3, 3, 33, 5869], [3, 9, 64559], [3, 9, 11, 5869], [3, 11, 52821], [3, 33, 17607], [3, 99, 5869], [9, 193677], [9, 11, 17607], [9, 33, 5869], [11, 158463], [11, 27, 5869], [27, 64559], [33, 52821], [99, 17607], [297, 5869]]\nassert solution.getFactors(7693701) == [[3, 2564567]]\nassert solution.getFactors(6744312) == [[2, 3372156], [2, 2, 1686078], [2, 2, 2, 843039], [2, 2, 2, 3, 281013], [2, 2, 2, 3, 3, 93671], [2, 2, 2, 3, 3, 47, 1993], [2, 2, 2, 3, 47, 5979], [2, 2, 2, 3, 141, 1993], [2, 2, 2, 9, 93671], [2, 2, 2, 9, 47, 1993], [2, 2, 2, 47, 17937], [2, 2, 2, 141, 5979], [2, 2, 2, 423, 1993], [2, 2, 3, 562026], [2, 2, 3, 3, 187342], [2, 2, 3, 3, 47, 3986], [2, 2, 3, 3, 94, 1993], [2, 2, 3, 6, 93671], [2, 2, 3, 6, 47, 1993], [2, 2, 3, 47, 11958], [2, 2, 3, 94, 5979], [2, 2, 3, 141, 3986], [2, 2, 3, 282, 1993], [2, 2, 6, 281013], [2, 2, 6, 47, 5979], [2, 2, 6, 141, 1993], [2, 2, 9, 187342], [2, 2, 9, 47, 3986], [2, 2, 9, 94, 1993], [2, 2, 18, 93671], [2, 2, 18, 47, 1993], [2, 2, 47, 35874], [2, 2, 94, 17937], [2, 2, 141, 11958], [2, 2, 282, 5979], [2, 2, 423, 3986], [2, 2, 846, 1993], [2, 3, 1124052], [2, 3, 3, 374684], [2, 3, 3, 4, 93671], [2, 3, 3, 4, 47, 1993], [2, 3, 3, 47, 7972], [2, 3, 3, 94, 3986], [2, 3, 3, 188, 1993], [2, 3, 4, 281013], [2, 3, 4, 47, 5979], [2, 3, 4, 141, 1993], [2, 3, 6, 187342], [2, 3, 6, 47, 3986], [2, 3, 6, 94, 1993], [2, 3, 12, 93671], [2, 3, 12, 47, 1993], [2, 3, 47, 23916], [2, 3, 94, 11958], [2, 3, 141, 7972], [2, 3, 188, 5979], [2, 3, 282, 3986], [2, 3, 564, 1993], [2, 4, 843039], [2, 4, 9, 93671], [2, 4, 9, 47, 1993], [2, 4, 47, 17937], [2, 4, 141, 5979], [2, 4, 423, 1993], [2, 6, 562026], [2, 6, 6, 93671], [2, 6, 6, 47, 1993], [2, 6, 47, 11958], [2, 6, 94, 5979], [2, 6, 141, 3986], [2, 6, 282, 1993], [2, 9, 374684], [2, 9, 47, 7972], [2, 9, 94, 3986], [2, 9, 188, 1993], [2, 12, 281013], [2, 12, 47, 5979], [2, 12, 141, 1993], [2, 18, 187342], [2, 18, 47, 3986], [2, 18, 94, 1993], [2, 36, 93671], [2, 36, 47, 1993], [2, 47, 71748], [2, 94, 35874], [2, 141, 23916], [2, 188, 17937], [2, 282, 11958], [2, 423, 7972], [2, 564, 5979], [2, 846, 3986], [2, 1692, 1993], [3, 2248104], [3, 3, 749368], [3, 3, 4, 187342], [3, 3, 4, 47, 3986], [3, 3, 4, 94, 1993], [3, 3, 8, 93671], [3, 3, 8, 47, 1993], [3, 3, 47, 15944], [3, 3, 94, 7972], [3, 3, 188, 3986], [3, 3, 376, 1993], [3, 4, 562026], [3, 4, 6, 93671], [3, 4, 6, 47, 1993], [3, 4, 47, 11958], [3, 4, 94, 5979], [3, 4, 141, 3986], [3, 4, 282, 1993], [3, 6, 374684], [3, 6, 47, 7972], [3, 6, 94, 3986], [3, 6, 188, 1993], [3, 8, 281013], [3, 8, 47, 5979], [3, 8, 141, 1993], [3, 12, 187342], [3, 12, 47, 3986], [3, 12, 94, 1993], [3, 24, 93671], [3, 24, 47, 1993], [3, 47, 47832], [3, 94, 23916], [3, 141, 15944], [3, 188, 11958], [3, 282, 7972], [3, 376, 5979], [3, 564, 3986], [3, 1128, 1993], [4, 1686078], [4, 6, 281013], [4, 6, 47, 5979], [4, 6, 141, 1993], [4, 9, 187342], [4, 9, 47, 3986], [4, 9, 94, 1993], [4, 18, 93671], [4, 18, 47, 1993], [4, 47, 35874], [4, 94, 17937], [4, 141, 11958], [4, 282, 5979], [4, 423, 3986], [4, 846, 1993], [6, 1124052], [6, 6, 187342], [6, 6, 47, 3986], [6, 6, 94, 1993], [6, 12, 93671], [6, 12, 47, 1993], [6, 47, 23916], [6, 94, 11958], [6, 141, 7972], [6, 188, 5979], [6, 282, 3986], [6, 564, 1993], [8, 843039], [8, 9, 93671], [8, 9, 47, 1993], [8, 47, 17937], [8, 141, 5979], [8, 423, 1993], [9, 749368], [9, 47, 15944], [9, 94, 7972], [9, 188, 3986], [9, 376, 1993], [12, 562026], [12, 47, 11958], [12, 94, 5979], [12, 141, 3986], [12, 282, 1993], [18, 374684], [18, 47, 7972], [18, 94, 3986], [18, 188, 1993], [24, 281013], [24, 47, 5979], [24, 141, 1993], [36, 187342], [36, 47, 3986], [36, 94, 1993], [47, 143496], [47, 72, 1993], [72, 93671], [94, 71748], [141, 47832], [188, 35874], [282, 23916], [376, 17937], [423, 15944], [564, 11958], [846, 7972], [1128, 5979], [1692, 3986], [1993, 3384]]\nassert solution.getFactors(4772783) == [[109, 43787]]\nassert solution.getFactors(3762697) == [[149, 25253]]\nassert solution.getFactors(4851533) == [[1607, 3019]]\nassert solution.getFactors(8119157) == []",
  "inefficient_solution": "class Solution:\n    def getFactors(self, n: int) -> List[List[int]]:\n        def dfs(n, i):\n            if n <= 1:\n                return\n            ans = []\n            for j in range(2, int(n ** 0.5) + 1):\n                if n % j == 0:\n                    t = list(range(i, n + 1))\n                    temp = []\n                    for k in range(2, n + 1):\n                        if k in t:\n                            temp.append([k])\n                            t.remove(k)\n                    ans.extend(temp)\n            if n > 1:\n                t = list(range(i, n + 1))\n                temp = []\n                for k in range(2, n + 1):\n                    if k in t:\n                        temp.append([k])\n                        t.remove(k)\n                ans.append(temp)\n            return ans\n\n        ans = []\n        for i in range(2, n + 1):\n            ans.extend(dfs(n, i))\n        return ans",
  "is_python": true
}