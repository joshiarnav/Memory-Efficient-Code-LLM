{
  "problem_idx": 756,
  "task_name": "Pyramid Transition Matrix",
  "markdown_description": "\nYou are stacking blocks to form a pyramid. Each block has a color, which is represented by a single letter. Each row of blocks contains **one less block** than the row beneath it and is centered on top.\n\n\nTo make the pyramid aesthetically pleasing, there are only specific **triangular patterns** that are allowed. A triangular pattern consists of a **single block** stacked on top of **two blocks**. The patterns are given\u00a0as a list of\u00a0three-letter strings `allowed`, where the first two characters of a pattern represent the left and right bottom blocks respectively, and the third character is the top block.\n\n\n* For example, `\"ABC\"` represents a triangular pattern with a `'C'` block stacked on top of an `'A'` (left) and `'B'` (right) block. Note that this is different from `\"BAC\"` where `'B'` is on the left bottom and `'A'` is on the right bottom.\n\n\nYou start with a bottom row of blocks `bottom`, given as a single string, that you **must** use as the base of the pyramid.\n\n\nGiven `bottom` and `allowed`, return `true` *if you can build the pyramid all the way to the top such that **every triangular pattern** in the pyramid is in* `allowed`*, or* `false` *otherwise*.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n![](https://fastly.jsdelivr.net/gh/doocs/leetcode@main/solution/0700-0799/0756.Pyramid%20Transition%20Matrix/images/pyramid1-grid.jpg)\n\n```\n\n**Input:** bottom = \"BCD\", allowed = [\"BCC\",\"CDE\",\"CEA\",\"FFF\"]\n**Output:** true\n**Explanation:** The allowed triangular patterns are shown on the right.\nStarting from the bottom (level 3), we can build \"CE\" on level 2 and then build \"A\" on level 1.\nThere are three triangular patterns in the pyramid, which are \"BCC\", \"CDE\", and \"CEA\". All are allowed.\n\n```\n\n**Example 2:**\n\n\n![](https://fastly.jsdelivr.net/gh/doocs/leetcode@main/solution/0700-0799/0756.Pyramid%20Transition%20Matrix/images/pyramid2-grid.jpg)\n\n```\n\n**Input:** bottom = \"AAAA\", allowed = [\"AAB\",\"AAC\",\"BCD\",\"BBE\",\"DEF\"]\n**Output:** false\n**Explanation:** The allowed triangular patterns are shown on the right.\nStarting from the bottom (level 4), there are multiple ways to build level 3, but trying all the possibilites, you will get always stuck before building level 1.\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `2 <= bottom.length <= 6`\n* `0 <= allowed.length <= 216`\n* `allowed[i].length == 3`\n* The letters in all input strings are from the set `{'A', 'B', 'C', 'D', 'E', 'F'}`.\n* All the values of `allowed` are **unique**.\n\n\n",
  "canonical_solution": "class Solution:\n    def pyramidTransition(self, bottom: str, allowed: List[str]) -> bool:\n        @cache\n        def dfs(s):\n            if len(s) == 1:\n                return True\n            t = []\n            for a, b in pairwise(s):\n                cs = d[a, b]\n                if not cs:\n                    return False\n                t.append(cs)\n            return any(dfs(''.join(nxt)) for nxt in product(*t))\n\n        d = defaultdict(list)\n        for a, b, c in allowed:\n            d[a, b].append(c)\n        return dfs(bottom)\n",
  "test_case_generator": "\nimport random\nfrom itertools import product\nfrom collections import defaultdict\nfrom functools import cache\nfrom typing import List\n\nclass Solution:\n    def pyramidTransition(self, bottom: str, allowed: List[str]) -> bool:\n        @cache\n        def dfs(s):\n            if len(s) == 1:\n                return True\n            t = []\n            for a, b in pairwise(s):\n                cs = d[a, b]\n                if not cs:\n                    return False\n                t.append(cs)\n            return any(dfs(''.join(nxt)) for nxt in product(*t))\n        \n        d = defaultdict(list)\n        for a, b, c in allowed:\n            d[a, b].append(c)\n        return dfs(bottom)\n\ndef generate_test_case():\n    solution = Solution()\n    \n    bottom_length = random.randint(2, 6)\n    bottom = ''.join(random.choice('ABCDEF') for _ in range(bottom_length))\n    \n    allowed_length = random.randint(0, 216)\n    allowed = [\n        ''.join(random.choice('ABCDEF') for _ in range(3))\n        for _ in range(allowed_length)\n    ]\n    \n    expected_result = solution.pyramidTransition(bottom, allowed)\n    \n    return bottom, allowed, expected_result\n    \ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        bottom, allowed, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.pyramidTransition(bottom, allowed) == expected_result\n        print(f'assert solution.pyramidTransition(\"{bottom}\", {allowed}) == {expected_result}')\n        test_case_generator_results.append(f'assert solution.pyramidTransition(\"{bottom}\", {allowed}) == {expected_result}')\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.pyramidTransition(\"CE\", ['EBE', 'FED', 'CBE', 'ECC', 'DAC', 'EDE', 'FDB', 'DBC', 'EAF', 'BCC', 'ACF', 'BAC', 'BFE', 'AEF', 'BFE', 'BCA', 'DCE', 'DBF', 'FCC', 'FCE', 'BAF', 'CDD', 'ECD', 'DFF', 'CCB', 'DAA', 'ACB', 'FEB', 'BED', 'ADD', 'CCE', 'EBF', 'DED', 'AEF', 'EAE', 'FBC', 'FCA', 'EEE', 'BBA', 'CEE', 'DAB', 'EBA', 'DEA', 'FDD', 'CCB', 'DEA', 'ACA', 'CAF', 'ACB', 'EEB', 'DBC', 'BBE', 'DFF', 'AFA', 'BFC', 'BAC']) == True\nassert solution.pyramidTransition(\"CAF\", ['ECD', 'DBA', 'BFF', 'FDC', 'DFA', 'BFD', 'BEF', 'FBD', 'CCE', 'BBE', 'AAE', 'DBD', 'EDF', 'DEE', 'ECA', 'DAF', 'EEB', 'FFC', 'BCC', 'EAC', 'AFC', 'CAE', 'DAD', 'ACE', 'EBF', 'DAC', 'CFB', 'FCB', 'BDD', 'FAB', 'ECF', 'BFC', 'BEA', 'ACF', 'CCD', 'CAE', 'CCA', 'DDD', 'CCA', 'CFD', 'ABE', 'CEF', 'ECB', 'FFC', 'EDF', 'ADD', 'BEB', 'DDC', 'BAC', 'DAA', 'EDD', 'DFA', 'AED', 'AFB', 'DBF', 'DEE', 'FFF', 'CBE', 'EBA', 'EAF', 'EEB', 'DBB', 'FCF', 'AAB', 'CAF', 'FAE', 'CBB', 'BDB', 'FBC', 'AAA', 'BFA', 'CBB', 'FEA', 'EEF', 'FDF', 'BFD', 'FCF', 'ECF', 'DEE', 'BBE', 'AFF', 'EEB', 'DED', 'EFF', 'CBB', 'BCA', 'DBC', 'EBB', 'CAB', 'BAC', 'FBC', 'EFE', 'DEE', 'FAB', 'BDD', 'FDB', 'CCD', 'FFC', 'EDA', 'BEB', 'ABF', 'EBC', 'BEC', 'ECC', 'DFF', 'DFC', 'EBF', 'FEE', 'DEC', 'DFA', 'EBF', 'ABD']) == True\nassert solution.pyramidTransition(\"BF\", ['BDD', 'BED', 'CDC', 'DCF', 'BAF', 'CEA', 'BBF', 'ABF', 'AAB', 'EDD', 'CAB', 'CFA', 'EFA', 'EFA', 'DBA', 'FAB', 'ECE', 'ACB', 'AAB', 'EDF', 'BCA', 'BFD', 'CAF', 'DFD', 'EBA', 'ADF', 'DAA', 'FBE', 'EBE', 'ABC', 'CBB', 'EAA', 'AAA', 'ADD', 'BFC', 'EFC', 'FFF', 'CAD', 'FBC', 'BDA', 'DAA', 'ADA', 'FFB', 'DDB', 'FDB', 'CCF', 'DBC', 'FDD', 'BFF', 'CDD', 'FDE', 'CDF', 'BFB', 'EDC', 'BAB', 'FAD', 'BBC', 'ACB', 'FBF', 'DDB', 'DBB', 'CFB', 'EFB', 'CBA', 'FEB', 'BFD', 'DFD', 'EEA', 'EDA', 'FCC', 'DBA', 'EBB', 'CAF', 'ABF', 'FBC', 'DCB', 'BEA', 'EDF', 'EAF', 'CCC', 'DBA', 'FCC', 'FCF', 'AAA', 'BFB', 'BAD', 'CFF', 'CDC', 'EFE', 'ACD', 'EDE', 'CBF', 'ECF', 'EFC', 'FED', 'AEA', 'BEC', 'FBB', 'AAB', 'EEA', 'BEE', 'CCB', 'BDA', 'CFB', 'CDE', 'BDE', 'DBC', 'FEF', 'FAF', 'BBC', 'CEC', 'DDC', 'ACC', 'CDE', 'BCD', 'EFF', 'BAF', 'ECF', 'EFD', 'ACB', 'CEA', 'CCE', 'DAB', 'DFC', 'CDC', 'EFE', 'DFA', 'FDC', 'DAA', 'BFA', 'ADF', 'AAA', 'EBA', 'BBE', 'BAD', 'CEF', 'DFE', 'EBA', 'DBB', 'BAC', 'FEF', 'CAE', 'FCB', 'CAB', 'AAD', 'CAB', 'FDF', 'CDC', 'BAD', 'CCA', 'ABE', 'AAD', 'CAA', 'AFE', 'ECD', 'BDC', 'ACA', 'BFF', 'BAB', 'DEA', 'CCB', 'ABB', 'ABF', 'BFF', 'CCC', 'FFB', 'CDA', 'CEF', 'BAD', 'FCB', 'DFA', 'DAA', 'DAE', 'CCC', 'CEA']) == True\nassert solution.pyramidTransition(\"AF\", ['FAC', 'EFF', 'BBA', 'DBD', 'FBF', 'FAE', 'DFA', 'DFB', 'BAB', 'BAE', 'BCD', 'FAF', 'BFA', 'FDA', 'EAB', 'EBF', 'CAF', 'FBD', 'DDF', 'ECE', 'FAE', 'DDC', 'CFB', 'DCD', 'ECD', 'EED', 'FFB', 'AFC', 'DFB', 'DEF', 'ADD', 'ECD', 'ADC', 'EBF', 'BAE', 'ECB', 'CBE', 'FBD', 'FBD', 'CBD', 'EBB', 'FDB', 'EAB', 'DFE', 'CDD', 'BDA', 'BCC', 'FAD', 'FCA', 'AED', 'BDC', 'DDD', 'FBA', 'AAF', 'DBA', 'DCE', 'BFD', 'FBE', 'FDD', 'CCE', 'FEC', 'FCA', 'ACD', 'FBF', 'FAE', 'BFB', 'ADA']) == True\nassert solution.pyramidTransition(\"EDDAB\", ['FFC', 'AFF', 'DEA', 'FFA', 'DCD', 'FEF', 'CDB', 'EAF', 'BAD', 'EFB', 'FDA', 'BDA', 'BEA', 'EFA', 'CDE', 'ABC', 'ABE', 'CDE', 'BCD', 'CDB', 'BCD', 'FDD', 'ECC', 'AAA', 'CAE', 'EBC', 'EEF', 'CBB', 'EFC', 'FAC', 'CBB', 'DDC', 'CEC', 'DFC', 'EFE', 'AEF', 'EAD', 'BFB', 'DDC', 'ECF', 'FBD', 'ABE', 'BAB', 'DCA', 'ACC', 'BBE', 'DDA', 'DDB', 'DBF', 'AAB', 'FDF', 'FCE', 'EEF', 'EFA', 'DFB', 'BEA', 'DAF', 'CEA', 'FCA', 'FAD', 'CDF', 'CCB', 'EAE', 'ECC', 'FBD', 'DCB', 'CBF', 'EDC', 'EBC', 'ACA', 'CBA', 'CED', 'EDF', 'ACA', 'AFB', 'EEF', 'DBA', 'DDE', 'BEB', 'AAC', 'FBC', 'FFF', 'BFD', 'AFB', 'CDE', 'CEA', 'ABB', 'CBB', 'EEF', 'EDF', 'FFD', 'DCB', 'FFE', 'DBD', 'EFD', 'DBD', 'CBD', 'BDA', 'CAE', 'FFB', 'CEB', 'CFB', 'DBB', 'ECF', 'BDC', 'CCB', 'ADE', 'CBC', 'FFF', 'ABF', 'BFF', 'BFD', 'DAA', 'DFB', 'BFC', 'BDB', 'DFB', 'BAE', 'BAF', 'BDD', 'AFE', 'CCE', 'DEF', 'AAD', 'EFF', 'AAF', 'FDC', 'DFE', 'FCA', 'BAA', 'AAE', 'DBE', 'CFD', 'EFB', 'FAE', 'FEC', 'EDF', 'DEF', 'BEC', 'FFC', 'EBB', 'BAB', 'EFE', 'ADF', 'ADC', 'CDD', 'CAC', 'CDE', 'EFD', 'ADD', 'CAF', 'CEB', 'BAA', 'BEC', 'ECB', 'DDD', 'BFE']) == True\nassert solution.pyramidTransition(\"DBBDDA\", ['BFA', 'CCC', 'EDE', 'ECA', 'BEC', 'CCF', 'EAF', 'FBB', 'CCA', 'CFE', 'AEB', 'CAB', 'AED', 'DBC', 'BFB', 'EFC', 'DDF', 'BAF', 'FAF', 'CDE', 'BCD', 'DDF', 'DEE', 'BAF', 'DFA', 'BCB', 'ABE', 'BCD', 'AEE', 'AFE', 'FDD', 'DEB', 'BDB', 'FBF', 'FBD', 'CEE', 'BAD', 'BEC', 'FCB', 'CBD', 'EBE', 'CAC', 'AFC', 'FDF', 'FDB', 'FFF', 'EEA']) == False\nassert solution.pyramidTransition(\"DB\", ['BFB', 'CCE', 'BDF', 'ABA', 'ABA', 'CCA', 'ACB', 'FFE', 'BBF', 'BDF', 'FAC', 'ABA', 'FBF', 'CDE', 'BAF', 'CBB', 'AEB', 'BBF', 'BFA', 'ACA', 'DBB', 'AFD', 'CCC', 'DAD', 'BAA', 'FFA', 'CBD', 'CEC', 'EBA', 'EFC', 'BAF', 'DEF', 'EDB', 'CEA', 'ECC', 'ACD', 'BDA', 'DFF', 'CBF', 'EAA', 'CCC', 'BBD']) == True\nassert solution.pyramidTransition(\"DAAEF\", ['BAD', 'DEE', 'AFC', 'CAE', 'CDE', 'CDF', 'DDA', 'FBB', 'ECA', 'BDB', 'CCB', 'EEB', 'BEF', 'CAF', 'BEB', 'CDF', 'AAF', 'DED', 'BDA', 'BCB', 'BDF', 'ABD', 'EBE', 'FFF', 'FEB', 'ADD', 'CBB', 'BCC', 'AEC', 'CAC', 'ACA', 'DBA', 'DAE', 'AFD', 'CDD', 'BFA', 'CCC', 'BEA', 'FDF', 'DAF', 'DFA', 'FEB', 'FBC', 'DCF', 'DEA', 'AAA', 'CCE', 'AFA', 'EAE', 'FEE', 'AAF', 'AAF', 'CEF', 'BBD', 'FFC', 'BAD', 'EEC', 'FBC']) == False\nassert solution.pyramidTransition(\"CDC\", ['EEE', 'EBF', 'EAE', 'ACC', 'BBD', 'ACA', 'EAE', 'CDE', 'DDB', 'EEE', 'EBA', 'BDD', 'CDE', 'FEE', 'CCF', 'FDE', 'CBD', 'DDC', 'CEC', 'CFC', 'DDE', 'CCD', 'FEA', 'CAE', 'DDE', 'EEA', 'ABB', 'CFB', 'AFF', 'CEA', 'CEC', 'DEC', 'ADF', 'EBD', 'DCE', 'ACD', 'BDD', 'FFB', 'ECF', 'BBF', 'CCB', 'BDA', 'ECE']) == True\nassert solution.pyramidTransition(\"EB\", ['ECE', 'FCA', 'FFE', 'EBD', 'BBF', 'CFA', 'BCB', 'CDF', 'CBD', 'DDB', 'FDB', 'AAA', 'ECD', 'DFC', 'BEF', 'BEE', 'DFD', 'EDD', 'DFC', 'BAC', 'AFC', 'CCB', 'DEA', 'EDA', 'FDF', 'FED', 'FCE', 'DDF', 'FAC', 'DBD', 'DDF', 'DAF', 'EDC', 'FCC', 'CAF', 'EDC', 'FDB', 'BFE', 'AAF', 'EBE', 'EFE', 'CEB', 'CBA', 'EAE', 'DBB', 'AAF', 'CAE', 'FCC', 'CFF', 'EAF', 'AFA', 'AAF', 'DCC', 'CDB', 'AAA', 'AEE', 'DBB', 'FEB', 'AFC', 'FCA', 'BEA', 'BAE', 'ABE', 'DBC', 'CFE', 'DCB', 'DCB', 'BDC', 'FBA', 'ACB', 'CEB', 'EDB', 'AFC', 'AEC', 'ECD', 'EFE', 'CCA', 'BDD', 'EAE', 'AAA', 'EDB', 'AFD', 'CFA', 'CBF', 'BAD', 'CBD', 'DCE', 'DAE', 'BEB', 'FFC', 'AFF', 'BED', 'EFE', 'CBB', 'CAF', 'CAB', 'CFA', 'BDD', 'ECA', 'CAB', 'EBF', 'FFB', 'DEA', 'BFA', 'CBD', 'CBA', 'EAA', 'DCE', 'ECF', 'DFA', 'BEB', 'DFE', 'BED', 'ADE', 'DEF', 'CDF', 'FAA', 'EFB', 'DBB', 'DEE', 'CAE', 'DCA', 'CCA', 'DCE', 'ACA', 'DFA', 'CEA', 'DCA', 'EAC', 'CCF', 'FDF', 'FDB', 'ECC', 'BDD', 'EAD', 'CBF', 'EAB', 'FBA', 'DFF', 'BDF', 'CBA', 'FED', 'CAD', 'CEC', 'EDC', 'ABE', 'AEA', 'CEB', 'EFB', 'FEF', 'EDD', 'EFF', 'DAB', 'DCF', 'BAB', 'DBD', 'CCB', 'EDB']) == True\nassert solution.pyramidTransition(\"DAAB\", ['FEB', 'BDD', 'EED', 'FED', 'CBE', 'BCA', 'DBD', 'FDF', 'FFA', 'FDE', 'BAE', 'CFE', 'CFB', 'ABC', 'CFD', 'EFE', 'DBA', 'FBD', 'DDC', 'FAB', 'CEE', 'BFB', 'EDB', 'FED', 'CCD', 'BFF', 'AAF', 'DAE', 'CBF', 'BCB', 'DBC', 'CCC', 'AFD', 'BDF', 'FCC', 'CFB', 'FEB', 'ECA', 'BBB', 'DED', 'EDC', 'AEF', 'AAF', 'AAA', 'ECA', 'DDB', 'AEF', 'CCA', 'ACE', 'EAF', 'BDF', 'FFB', 'CAC', 'AFD', 'DBB', 'BDA', 'BBD', 'BBC', 'EEF', 'BBB', 'BAC', 'BFA', 'BEC', 'DBE', 'CCF', 'CFC', 'ACB', 'CAD', 'CEC', 'FBB', 'DAE', 'DDF', 'DEF', 'BAF', 'FED', 'AFD', 'DCF', 'FAA', 'DCF', 'EFF', 'EEF', 'BDA', 'CEB', 'ADA', 'DCE', 'CEC', 'CFB', 'DBF', 'DFD', 'EFA', 'DDA', 'DFC', 'ABA', 'BFA', 'FEA', 'BFA', 'FAF', 'BBE', 'BFF']) == True\nassert solution.pyramidTransition(\"FAB\", ['EFE', 'DAB', 'EBC', 'BBA', 'FBA', 'ADA', 'FCD', 'CFB', 'AAB', 'EAB', 'EFF', 'BEB', 'BCC', 'FAC', 'FCD', 'ACD', 'BEC', 'BFC', 'FBD', 'CBB', 'FED', 'ABE', 'DCF', 'ABE', 'AAB', 'DDA', 'ECE', 'FFF', 'FAB', 'ABD', 'ADA', 'CFC', 'ABF', 'EFD', 'EAC', 'CDA', 'BBD', 'FAB', 'EEB', 'DAE', 'DAA', 'FDD', 'BFF', 'FEF', 'CFE', 'BDD', 'BAD', 'EDC', 'EAD', 'BCF', 'FAB', 'FBD', 'CBB']) == True\nassert solution.pyramidTransition(\"CABC\", ['FEA', 'BEC', 'FAF', 'FAA', 'DCA', 'CCA', 'FBE', 'CFC', 'ABB', 'DBE', 'FBA', 'DFC', 'EAF', 'CDA', 'DFC', 'BDC', 'BAA', 'ABB', 'ADF', 'CCA', 'DDA', 'ADE', 'FAC', 'ECA', 'FCB', 'BEC', 'CAE', 'DFF', 'DDE', 'BFD', 'EFC', 'ABE', 'BFF', 'CEA', 'EFE', 'DFD', 'CBA', 'ACA', 'CFE', 'DDB', 'EDD', 'CFF', 'BFB', 'BEC', 'BAD', 'DEA', 'BFC', 'DED', 'CBE', 'ECE', 'DBF', 'ACB', 'FEE', 'EDD', 'CEC', 'CAF', 'BBD', 'BEB', 'FFC', 'ABF', 'DBC', 'ABA', 'AFC', 'FCA', 'EBD', 'ADF', 'EBF', 'DEB', 'DCE', 'CEA', 'EDD', 'FDC', 'DEC', 'BBA', 'ACE', 'EAD', 'EAD', 'CAB', 'AAE', 'ACA', 'AAA', 'DDB', 'CAA', 'FCF', 'FAD', 'CCE', 'DDA', 'DEC', 'FDE', 'BFF', 'DBA', 'DDA', 'BAE', 'CFF', 'AAB']) == False\nassert solution.pyramidTransition(\"AC\", ['EFC', 'DAE', 'CDD', 'CAF', 'DCC', 'BCC', 'CBB', 'BBB', 'BFF', 'EDC', 'CEA', 'EDD', 'EAF', 'EFA', 'FAF', 'FDA', 'CCF', 'DDF', 'EEF', 'FAA', 'CCA', 'BEB', 'CBE', 'FFC', 'BAA', 'EBF', 'AAE', 'FCD', 'ABC', 'FFA', 'DBD', 'FFD', 'DEC', 'BCA', 'FCB', 'EEC', 'BDF', 'ADB', 'EAE', 'FEC', 'DEE', 'AAE', 'EDD', 'EBA', 'AAC', 'CCE', 'BAE', 'BEA', 'FFD', 'EFA', 'CAF', 'BAA', 'FBB', 'ECE', 'BEA', 'EFA', 'EFC', 'FDD', 'DFC', 'FFC', 'FAA', 'AFE', 'CCA', 'BAA', 'BEA', 'CFA', 'ACD', 'ACE', 'EFE', 'CEC', 'BEA', 'CEE', 'ADB', 'BEB', 'FCC', 'AAC', 'BDD', 'ACA', 'EBD', 'FCC', 'BED', 'CDF', 'FFD', 'FEF', 'FCB', 'FAB', 'CAF', 'CAB', 'CBB', 'DEB', 'ADA', 'CAF', 'EFD', 'DBD', 'CCB', 'EBC', 'BBC', 'EFB', 'BDE', 'CDA', 'BEC', 'ECF', 'DDD', 'ACB', 'AEF', 'DAB', 'CCC', 'ADF', 'ADD', 'CFF', 'DFA', 'CDD', 'DDF', 'EBC', 'EFA', 'CEA', 'FBD', 'DFD', 'ADE', 'BBB', 'FEC', 'BEC', 'DEB', 'DCE', 'CFB', 'DAA', 'ACE', 'AEE', 'CCD', 'EAF', 'FAF', 'FCE', 'EAC', 'CDB', 'AAF', 'FBF', 'FCC', 'BCD', 'DED', 'EEC', 'CCF', 'CEE', 'BFC', 'CEE', 'EEE', 'AFD', 'FCB', 'ACF', 'FFD', 'EBC', 'ADC', 'EBE', 'EBE', 'DAC', 'FAF', 'CDC', 'DEC', 'DFE', 'FAE', 'BCB', 'ABE', 'EFF', 'BFA', 'FED', 'DBA', 'CCF', 'CCC', 'EAD', 'CAF', 'ABE', 'ADC', 'AAA', 'CBD', 'FFA', 'BAE']) == True\nassert solution.pyramidTransition(\"DDDBE\", ['EFA', 'DCD', 'DEF', 'FCC', 'ADC', 'EBA', 'DCB', 'FFC', 'ECE', 'CDE', 'CBA', 'ADE', 'EAC', 'CCA', 'BFC', 'CCA', 'BFC', 'CBD', 'EAD', 'EAC', 'AFA', 'BDF', 'DFF', 'CAB', 'BDB', 'FDF', 'FBC', 'BCD', 'AFA', 'AFA', 'CEB', 'BAB', 'BFC', 'BAA', 'CDD', 'DEE', 'ECD', 'FFE', 'BEA', 'BEA', 'BBB', 'CCB', 'ADA', 'AFE', 'ABF', 'FAE', 'BCF', 'FDD', 'EDF', 'DAF', 'EED', 'ABE', 'AFA', 'BCA', 'EAA', 'ABD', 'AAA', 'ACF', 'DAB', 'CCC', 'EEB', 'FAC', 'EAD', 'EAA', 'BBC', 'DAC', 'CBE', 'DCF', 'FCA', 'EEE', 'DCE', 'FCF', 'CEF', 'CDA', 'ECB', 'DEB', 'DFE', 'BBE', 'FEB', 'EAE', 'ADB', 'FEE', 'FCD', 'BBA', 'DEE', 'BAD', 'FEC', 'ECC', 'AAE', 'BEA', 'CFC', 'EDF', 'AAF', 'CDB', 'BFE', 'DFD', 'EDE', 'FCD', 'ACB', 'DAC', 'BEE', 'ACE', 'CCD', 'CEB', 'DCD', 'EDE', 'CDF', 'EAD', 'ABB', 'CAA', 'BAF']) == False\nassert solution.pyramidTransition(\"AA\", ['FCB', 'BAE', 'EFB', 'CDE', 'BCB', 'CDF', 'FBE', 'BFD', 'FCF', 'FDC', 'DCF', 'CBE', 'DCC', 'EAF', 'FDD', 'DFC', 'FEA', 'CAC', 'BBE', 'DCC', 'AEA', 'ECE', 'CEF', 'ECC', 'FAE', 'DDB', 'EEC', 'DFE', 'BED', 'BCE', 'CBC', 'AFF', 'BAD', 'EEF', 'ACC', 'EBC', 'EBE', 'BBD', 'CBB', 'DBE', 'ADA', 'DFB', 'FFC', 'BFD', 'CDD', 'CCF', 'BCF', 'BED', 'DFF', 'DBB', 'FAC', 'BAA', 'CCC', 'EDF', 'FCF', 'CBA', 'DDE', 'FEB', 'ABD', 'FDE', 'BAA', 'CDA', 'BEC', 'BDA', 'DDA', 'CDB', 'EBA', 'AEB', 'EDB', 'DAB', 'DBD', 'EBA', 'BEC', 'DCC', 'CEB', 'BFD', 'AAB', 'FAF', 'EAB', 'BFA', 'BAF', 'CDE', 'FCF', 'BDD', 'DBC', 'AFB', 'FBA', 'FEE', 'FCA', 'CBB', 'ABF', 'FFC', 'FFB', 'ECA', 'FBB', 'CEA', 'FEC', 'DCD', 'ABA', 'CDB', 'DCF', 'CCD', 'AAC', 'BEB', 'DDB', 'BAD', 'BCF', 'ABD', 'DEC', 'FDF', 'CED', 'FBE', 'CBE', 'EEF', 'DBB', 'CEC', 'DED', 'FAE', 'BED', 'DCA', 'FDA', 'ACA', 'CEA', 'FCC', 'ADE', 'BEE', 'DEB', 'EED', 'BCA', 'BAA', 'FFA', 'BAD', 'ADE', 'EAF', 'BAD', 'DCA', 'BEE', 'DBB', 'DDC', 'CEF', 'BDD', 'EEE', 'BDA', 'DBF', 'BCC', 'ACC', 'FAD', 'EEB', 'FCA', 'CFD', 'DDC', 'DFF', 'FCD', 'DFC', 'FDC', 'AAD', 'BBB', 'DDA', 'EBE', 'BFD', 'EDF', 'CFE', 'FFD', 'ACB', 'CCF', 'EDB', 'BAF', 'ECA', 'EBA', 'FCA', 'ECA', 'FEC', 'EEE', 'BCD', 'CAE', 'EEB', 'BCC', 'FFA', 'EFE', 'FCA', 'ECC', 'EDB', 'CAD', 'FAA', 'BFB', 'EEE', 'BCD', 'AFD', 'ADD', 'BCB', 'EDF', 'DCD', 'BCF', 'FCC', 'AEB', 'EAB', 'BEE', 'ACA']) == True\nassert solution.pyramidTransition(\"FCB\", ['EAE', 'BCF', 'ABE', 'DFB', 'EDC', 'EBF', 'ABF', 'EDC', 'FEB', 'FFF', 'BDE', 'CBE', 'FCB', 'FEB', 'CEF', 'BFC', 'EAE', 'AEF', 'FEA', 'BCC', 'CEA', 'BFB', 'FDE', 'CAC', 'DBE', 'DDF', 'BFD', 'FAF', 'EDD', 'FAD', 'ABD', 'ACE', 'DFB', 'AFE', 'CAD', 'EDB', 'DEC', 'FAB', 'FEB', 'AFA', 'ABD', 'DBA', 'BBE', 'FBF', 'ABF', 'DCA', 'ADC', 'DDA', 'BBD', 'DDE', 'BCA', 'EDC', 'BEF', 'EDF', 'BFA', 'FBD', 'EBE', 'EBF', 'CFE', 'FBE', 'DAA', 'CEF', 'FCF', 'AAD', 'DAE', 'AFD', 'FAD', 'CBD', 'FAE', 'BFC', 'FAA', 'CEC', 'DEA', 'ECF', 'AAD', 'EAD', 'DFE', 'ACC', 'CEA', 'ECE', 'DCD', 'DEC', 'EFC', 'EFF', 'AFD', 'BDC', 'BCF', 'FEA', 'AFF', 'ECE', 'CAF', 'EBA', 'DDA', 'EFF', 'AFC', 'AFA', 'BFB', 'CAA', 'EEE', 'CBA', 'BAA', 'EAF', 'AAB', 'EFC', 'CFE', 'FDE', 'CEA', 'ABE', 'ACD', 'FBF', 'ADB', 'DBA', 'CDF', 'FAE', 'FEE', 'DBD', 'EAB', 'AAE', 'DDF', 'DCA', 'FFF', 'ADE', 'AAF', 'BBA', 'EBC', 'DCD', 'EEB', 'ACE', 'DED', 'FBD', 'FAA', 'ACB', 'EFB', 'AAF', 'EDB', 'AAE', 'ACC', 'DFB', 'FDD', 'CDE', 'CBA', 'DEE', 'FFD', 'DFD', 'AAB', 'CBB', 'BAF', 'CDB', 'EAB', 'BCA', 'FFB', 'BCD', 'DCE', 'CFD', 'CBC', 'FDA', 'DBD', 'DFE', 'ABB', 'EBD', 'EFC', 'ADC', 'BAF', 'FAB', 'DEB', 'AAE', 'CDE', 'CDB', 'DAA', 'CFC', 'EAD', 'BEB', 'EFD', 'CCA', 'CBE', 'CEA', 'DBF', 'BEE', 'CAA', 'DAF', 'BBA', 'DDF', 'CCF', 'CAF', 'CDA', 'FCA', 'BDB', 'DAF', 'DDE', 'ADA', 'EEB', 'CBB', 'EAB', 'FCC', 'CAD', 'BEE', 'BFB']) == True\nassert solution.pyramidTransition(\"BEDD\", ['CAF', 'AFA', 'AEC', 'AEC', 'FAD', 'FEF', 'EDE', 'CBB', 'BAA', 'FCD', 'ACA', 'AAA', 'BDC', 'FEC', 'AFD', 'EEC', 'CCB', 'EDA', 'BDA', 'CAB', 'EBE', 'DED', 'EFA', 'EBA', 'DAD', 'BDA', 'DDE', 'ABA', 'EBC', 'DDC', 'ACC', 'FBC', 'FCE', 'BBB', 'FBE', 'CAA', 'FDC', 'FFE', 'CEE', 'FBD', 'EEC', 'DDF', 'EBD', 'FAA', 'EFF', 'DBC', 'ECA', 'BFB', 'FAE', 'AEB', 'DFE', 'BFA', 'BFE', 'DDB', 'CAF', 'BAD', 'EFB', 'FEA', 'FFC', 'DAC', 'CAF', 'EAB', 'EFA', 'FCC', 'ECA']) == False\nassert solution.pyramidTransition(\"FFC\", ['BCA', 'BAE', 'CCC', 'ECF', 'FDF', 'EAE', 'CAD', 'ABE', 'EDB', 'FED', 'CBA', 'CCA', 'EBE', 'DED', 'EBF', 'DFD', 'FAC', 'AED', 'EAE', 'ADD', 'EAE', 'BAD', 'BAA', 'FBB', 'FDB', 'BDE', 'BDB', 'DCD', 'BAD', 'FED', 'BBF', 'FBF', 'EBD', 'DDF', 'CCA', 'FBF', 'BED', 'ACA', 'ADF', 'EDD', 'CCA', 'FFE', 'DBD', 'EEF', 'BBF', 'ECA', 'EEF', 'FEE', 'CCB', 'FDF', 'FEB', 'DED', 'DDE', 'BCB', 'EFE', 'FFD', 'FBB', 'BDA', 'BBF', 'AFC', 'CCE', 'ACC', 'ECC', 'FBA', 'AEF', 'FCD', 'BBF', 'CDE', 'CAF', 'DAA', 'BBF', 'FFF', 'FDF', 'FAF', 'EAA', 'FAE', 'AEB', 'EEB', 'DAA', 'DCC', 'FDB', 'DDB', 'DBA', 'EFA', 'CBA', 'FCD', 'ABB', 'CDD', 'CDC', 'ABE', 'DEF', 'FAB', 'DEE', 'ECF', 'FBE', 'FAF', 'ABD', 'BEC', 'EEF', 'FAE', 'BCE', 'EDE', 'CEF', 'FAD', 'DAA', 'CDC', 'CAA', 'AFB', 'BBA', 'ADF', 'BAA', 'FEC', 'CBA', 'BDE', 'EDC', 'FCE', 'EDC', 'FAD', 'FEA', 'FEF', 'EDC', 'BEF', 'ACC', 'CBB', 'BAC', 'FFF', 'DDF', 'BBC', 'ACB', 'CDC', 'FEE', 'EFD', 'BEE', 'EAB', 'CFF', 'FFC']) == True\nassert solution.pyramidTransition(\"BB\", ['DDA', 'ECE', 'CBC', 'DEC', 'CBE', 'AFF']) == False\nassert solution.pyramidTransition(\"EFAF\", ['CEA', 'BAD', 'ADD', 'DFB', 'FFB', 'BCA', 'BDA', 'FDB', 'BDE', 'AAD', 'CFA', 'CCE', 'EBF', 'AAA', 'DEE', 'CDB', 'ECF', 'EFE', 'AEB', 'BEA', 'DAD', 'AED', 'ADA', 'CAA', 'FAF', 'FDF', 'ADA', 'ECD', 'BED', 'CFE', 'EBA', 'DEE', 'DFE', 'FDE', 'BDF', 'DBB', 'EFD', 'EBA', 'CDB', 'ABA', 'ADA', 'ABE', 'DEB', 'EBE', 'CDC', 'ACE', 'BEC', 'FBD', 'FDC', 'FDF', 'ACA', 'AFD', 'BDB', 'BAF', 'CAD', 'FEC', 'FBD', 'EDF', 'BCF', 'FDA', 'DFE', 'FAC', 'AEC', 'CBE', 'DEA', 'CED', 'FBC', 'FAA', 'DDD', 'FAD', 'ECA', 'CBE', 'EDE', 'EED', 'ACD', 'AFC', 'AFE', 'BAB', 'EAC', 'EDC', 'CFA', 'EBF', 'FEE', 'FFD', 'BEE', 'ADE', 'CEC', 'ECE', 'DDE', 'CAD', 'CFC', 'AAA', 'FBB']) == True\nassert solution.pyramidTransition(\"ACBC\", ['BBF', 'BFE', 'BCE', 'BDC', 'BEF', 'DAA', 'BDD', 'FFC', 'BBF', 'DBB', 'ADD', 'FAB', 'EEB', 'ACF', 'BCB', 'CCD', 'EAA', 'DBD', 'ABA', 'DFA', 'FEF', 'BCE', 'AAC', 'BFA', 'EFE', 'ADA', 'BDD', 'ABB', 'EFA', 'CEF', 'BEF', 'FFB', 'FAC', 'BEB', 'BEA', 'ADF', 'CAD', 'CAA', 'EDD', 'DCB', 'BBE', 'CEB', 'DFB', 'ECA', 'ECF', 'EFC', 'BBC', 'EFC', 'ADA', 'CAA', 'EDA', 'AED', 'CFF', 'DCE', 'DBA', 'CEB', 'BBF', 'EBC', 'AAD', 'CAD', 'DBA', 'ECD', 'EDF', 'AEE', 'ADF', 'AEB', 'BAB', 'FBB', 'EEC', 'CCF', 'EBF', 'EFA', 'EFF', 'BDF', 'BCB', 'ACD', 'BBD', 'DBF', 'AAA', 'CBA', 'CAA', 'EFD', 'DCE', 'BAD', 'EDE', 'DFB', 'BDC', 'BDF', 'ADC', 'DCA', 'FEF', 'DBC', 'CED', 'EBA', 'CCF', 'ACE', 'DCE', 'DAB', 'AFD', 'CAB', 'FDD', 'FFD', 'FAA', 'CBB', 'BEA', 'FAE', 'BEA', 'FDB', 'ABE', 'ABE', 'AFC', 'FAF', 'ABC', 'DAE', 'CDD', 'FBC', 'CCD', 'DEF', 'ACF', 'DFA', 'CFF', 'AEC', 'DAF', 'BAE', 'BAD', 'DDF', 'ECB', 'ECC', 'DDD', 'DDD', 'EFB', 'EEF', 'AFC', 'CEA', 'AFF', 'FEE', 'BFF', 'ECE', 'BFF', 'AEB', 'EFC', 'CED', 'FCE', 'ADA', 'CED', 'BAE', 'DDC', 'EEA', 'FBD', 'BDA', 'CDB', 'FCD', 'EAC', 'FFD', 'EEE', 'BBD', 'EBB', 'EEB', 'CCD', 'BCF', 'FAE', 'DDE', 'FEE', 'BFE', 'FFB', 'ECE', 'FDF', 'FDC', 'AAB', 'BCA', 'ABF', 'FBF', 'DFE', 'EAD', 'BCC', 'FDF', 'EFF', 'FAA', 'DCB', 'DEE', 'CAA', 'DCE', 'CCD', 'AEF', 'CCC', 'AAB', 'FEC', 'CEE', 'DBD', 'AFA', 'ACE', 'BFA', 'BBC', 'BDD', 'BAA', 'FAF']) == True\nassert solution.pyramidTransition(\"BF\", ['AFB', 'DAC', 'BBF', 'BDE', 'FCB', 'CEF', 'FEF', 'CAE', 'FBD', 'AAC', 'DFA', 'EBD', 'FDE', 'FFD', 'AFC', 'DFF', 'EDE', 'EBC', 'CBF', 'DDC', 'ECB', 'BCF', 'CBA', 'ADE', 'BEC', 'FAA', 'ACC', 'CFD', 'FEC', 'DEB', 'CCC', 'ABB', 'CEF', 'BAF', 'CCF', 'BBB', 'CDF', 'FAB', 'ADD', 'FCD', 'CDB', 'FFD', 'EDD', 'EEC', 'FDE', 'FDD', 'EEA', 'CAF', 'EDF', 'BDD', 'FDE', 'BCC', 'DDF', 'EFF', 'DDE', 'EEC', 'DDA', 'EBB', 'BDF', 'FCC', 'AFC', 'AAD', 'BBB', 'ABA', 'FBA', 'AEF', 'DCB', 'BED', 'FCC', 'AFB', 'BEB', 'ACD', 'FEA', 'BBE', 'EAB', 'AFD', 'FDE', 'FBC', 'CAD', 'EAE', 'CDE', 'BFE', 'BBF', 'FAC', 'EAB', 'EAB', 'EEB', 'ACB', 'FCE', 'CAB', 'EFF', 'BCF', 'DBA', 'DBB', 'EBE', 'BDF', 'ABF', 'FEF', 'CCC', 'FFC', 'DFA', 'FCD', 'CDE', 'AED', 'DDD', 'CEF', 'FEB', 'EDA', 'CCB', 'BBC', 'FCC', 'EBA', 'DBF', 'ADF', 'AFE', 'BDE', 'DFA', 'BBE', 'CBD', 'CEB', 'EBC', 'ADD', 'CCC', 'DBE', 'ABA', 'EDE', 'FCD', 'BAA', 'BEB', 'BFE', 'CEB', 'CCA', 'AFB', 'EEE', 'ECC', 'DDF', 'DDA', 'AAA', 'CFD', 'CFA', 'EDB', 'FBD', 'BAC', 'ECC', 'EFE', 'FDE', 'BAA', 'EAD', 'FCF', 'CAD', 'BCB', 'FCC', 'DEA', 'CAD', 'CBF', 'FAC', 'BDD']) == True\nassert solution.pyramidTransition(\"FEC\", ['ACE', 'BEE', 'FAA', 'FFE', 'FED', 'DCB', 'DAB', 'EFE', 'FBE', 'DBA', 'DCC', 'AAC', 'FCB', 'CEF', 'EFE', 'FAF', 'BFC', 'ACC', 'BDF', 'AFD', 'EFF', 'CBF', 'FBB', 'DDD', 'BDC', 'DAF', 'DAE', 'ADD', 'DDF', 'DBA', 'DDA', 'DBC', 'CED', 'DAD', 'CCA', 'CAA', 'EBA', 'CEB', 'EBC', 'ECB', 'ABB', 'BDC', 'DBF', 'EAA', 'FBD', 'EDB', 'FBC', 'CDC', 'BEF', 'DAD', 'ECB', 'BBC', 'DDE', 'EDF', 'EFE', 'BDB', 'DAC', 'BBF', 'CED', 'ACE', 'EEF', 'FCD', 'CFB', 'DBF', 'FDC', 'BBA', 'ACE', 'ADC', 'DFD', 'DBE', 'DFE', 'FDA', 'FBF', 'CDE', 'ADE', 'CBA', 'EFD', 'CEA', 'ACD', 'ECB', 'BDB', 'FBB', 'ACD', 'DBA', 'BBE', 'DDE', 'BEF', 'BFE', 'FBC', 'EFE', 'EDA', 'EFC', 'BAB', 'BFC', 'CCC', 'DBF', 'CCA', 'BEB', 'DEC', 'EBF', 'EEF', 'BAE', 'EFE', 'EFD', 'AEA', 'CFD', 'CCE', 'DCD', 'CDA', 'AFE', 'DEC', 'DED', 'DAE', 'FBE', 'DCB', 'ECD', 'BDE', 'DAD', 'BAE', 'AEB', 'FBA', 'BAF', 'ABA', 'BFC', 'CDC', 'FCB', 'FDB']) == True\nassert solution.pyramidTransition(\"FBCD\", ['AAB', 'DFA', 'AFB', 'FAF', 'AAA', 'EAC', 'DFF', 'CDD', 'BCA', 'AFC', 'DAE', 'AFE', 'EBB', 'DCC', 'AAE', 'DEF', 'EDD', 'DEA', 'AAF', 'BAC', 'DBB', 'FDE', 'EBD', 'EEF', 'BBB', 'CBE', 'DFD', 'BDA', 'BDA', 'EAB', 'BAE', 'CFB', 'CBF', 'CFC', 'CFE', 'CCF', 'AAC', 'CDB', 'CDE', 'ADB', 'DAA', 'BFD', 'CCA', 'FAF', 'AAD', 'AEA', 'FAA', 'DAE', 'DEF', 'FAA', 'ABC', 'BFF']) == False\nassert solution.pyramidTransition(\"CFBDE\", ['FBE', 'AFD', 'AAE', 'EBC', 'BBA', 'BFF', 'CDA', 'FDC', 'FCA', 'BCE', 'ABD', 'DBF', 'EEB', 'BEB', 'DCD', 'DCA', 'FCB', 'FCD', 'EAF', 'FEB', 'ABC', 'DBF', 'ADB', 'CCB', 'CDF', 'DAF', 'DCF', 'BDC']) == False\nassert solution.pyramidTransition(\"AEEF\", ['BDD', 'CDA', 'DBB', 'FFD', 'CCF', 'EEA', 'DCF', 'FBA', 'BCC', 'CBC', 'ACE', 'AEF', 'DCC', 'CFC', 'CDF', 'BDF', 'BAD', 'FDD', 'DFD', 'CFD', 'ABD', 'CFE', 'AAE', 'BBB', 'DEB', 'DAF', 'EFF', 'EEB', 'BDC', 'CAF', 'FEE', 'CDA', 'CAE', 'DFF', 'FBA', 'DAE', 'EBE', 'DDD', 'ACA', 'ECD', 'ACC', 'BDE', 'AFD', 'DBD', 'BCC', 'EAC', 'DFE']) == False\nassert solution.pyramidTransition(\"FA\", ['CBC', 'ADA', 'FFC', 'BBC', 'DDC', 'FAA', 'EEC', 'AAE', 'ACE', 'DAC', 'EDF', 'FFA', 'FAA', 'ACC', 'CFB', 'EBE', 'ADA', 'BBC', 'BBE', 'BBA', 'ADA', 'BFE', 'EED', 'EDE', 'ABC', 'EBA', 'DAB', 'DEE', 'EBD', 'EFF', 'BFA', 'FFE', 'FAE', 'CEB', 'ECD', 'AEF', 'BAC', 'FBB', 'BBE', 'FCD', 'FAD', 'FCB', 'FFF', 'BCE', 'FFA', 'FDA', 'EBB', 'AFA', 'FAF', 'EAD', 'EAC', 'EFE', 'DAE', 'FCF', 'AAE', 'EAE', 'DBA', 'FCA', 'CAF', 'EBA', 'DAE', 'DAE', 'BCD', 'EFA', 'ACD', 'DAC', 'BDD', 'DEA', 'FFE', 'FDF', 'EDD', 'EDD', 'BDC', 'AEF', 'FAF', 'CBC', 'BBD', 'DCD', 'BCB', 'DDB', 'BFA', 'AAE', 'CDF', 'AEC', 'EEC', 'DCB', 'DAF', 'DEB', 'EDF', 'ABC', 'EFF', 'EFA', 'EFC', 'FFD', 'ABE', 'ACC', 'BEA', 'BDD', 'BCE', 'EAB', 'DEE', 'CFF', 'DFD', 'DED', 'FBB', 'DBE', 'EFE', 'BCC', 'ACB', 'FDB', 'CBC', 'DBF', 'ECF', 'ADC', 'CAC', 'ADC', 'DEA', 'CFA', 'EDB', 'AEF', 'FEB', 'DBB', 'BDE', 'CBE', 'DBB', 'EBF', 'BAE', 'DDE', 'FCC', 'BCD', 'FCA', 'BCA', 'AFE', 'FFC', 'FEF', 'FED', 'BFA', 'AAB', 'ACF', 'DBD', 'FAD', 'BDC', 'DAC', 'DEC', 'DDD', 'CEA', 'FFC', 'EBD', 'CCB', 'BFC', 'DCA', 'ABE', 'BEC', 'BBC', 'FAD', 'DCC', 'DBD', 'AEB', 'FEE', 'DCB', 'FFC', 'AEF', 'EBE', 'FAE', 'EBB', 'CFB', 'DBD', 'ACE', 'BDA', 'CFA', 'CEE', 'FDD', 'DDC', 'CAB', 'EAE', 'DBB', 'FAE', 'FBD', 'EAC', 'AAF', 'ECC', 'ABE', 'CCC', 'CFA', 'FBC', 'ADA', 'EEC', 'EFC', 'DFC', 'AAE', 'CFD', 'ECA', 'CEE', 'CEE', 'BDE', 'CBD', 'DCB', 'CCF', 'EDC', 'EDD', 'FEE', 'FCB', 'AEA']) == True\nassert solution.pyramidTransition(\"BAC\", ['BFD', 'DFF', 'AFD', 'BEE', 'ADC', 'EAA', 'CEE', 'FDA', 'AFE', 'FDF', 'ECA', 'DAE', 'CAA', 'FEA', 'AAA', 'DFB', 'FCA', 'BEF', 'AFD', 'AFC', 'AFB', 'BFD', 'FDC', 'ECC', 'AEA', 'AFD', 'DFD', 'EAF', 'ABF', 'FCB', 'AAD', 'CBE', 'BEE', 'FFF', 'FFA', 'AEB', 'FFF', 'DDA', 'FBC', 'EDE', 'FAE', 'CCA', 'BDF', 'ACF', 'EDE', 'BCD', 'AAE', 'DBD', 'BFE', 'CBB', 'ACB', 'ACE', 'ABB', 'BFF', 'AEB', 'DAF', 'CDF', 'EBA', 'EEE', 'CCA', 'CEF', 'DDD', 'AAE', 'ACB', 'ABD', 'BBA', 'EEF', 'CEE', 'EEF', 'FAD', 'ADA', 'FDF', 'CCA', 'EAA', 'FCF', 'BBE', 'BBC', 'CBA', 'BDD', 'EEF', 'AFD', 'FDD', 'EEF', 'FDE', 'AEE', 'DDA', 'DBA', 'DEA', 'AAA', 'BDF', 'BEC', 'AFD', 'CBB', 'ACE', 'FEC', 'EAF', 'BFD', 'BDB', 'BCF', 'EDC', 'DAB', 'CED', 'EEB', 'DBB', 'BAC', 'DAE', 'BEF', 'CEA', 'DBB', 'DEA', 'AAF', 'DAB', 'DCC', 'DCF', 'FCC', 'FFF', 'EFB', 'DBB', 'EFD', 'BBD', 'CAD', 'AAF', 'FCE', 'FDA', 'CFB', 'ACC', 'BFD', 'DCF', 'BCD', 'BEA', 'AEB', 'EDA', 'EEF', 'CBE', 'FDC', 'EAE', 'FFC', 'DBF', 'BDD', 'FFC', 'DEA', 'DDE', 'ECA', 'BBE', 'FFA', 'BAA', 'CBA', 'FFC', 'DBD', 'DCE', 'FAC', 'BAE', 'EAA', 'DFD']) == True\nassert solution.pyramidTransition(\"BACDE\", ['ABB', 'BDF', 'CEF', 'ADE', 'FDF', 'DAF', 'FBA', 'AAF', 'FDB', 'BAA', 'CFD', 'FDB', 'FEA', 'CCD', 'EEA', 'BEB', 'BFB', 'CAC', 'BBD', 'AFC', 'DAA', 'AAC', 'BCE', 'ECD', 'AFE', 'ABA', 'CBB', 'ABC', 'CFD', 'AEA', 'AFD', 'EAB', 'FCA', 'ABC', 'BAA', 'BAB', 'CBC', 'DDC', 'FCA', 'ECA', 'ECF', 'ACF', 'CCC', 'CBC', 'BBD', 'ACA', 'CCE', 'CBC', 'CDE', 'FFF', 'FFE', 'DFB', 'CED', 'CDA', 'BDE', 'BCB', 'CCE', 'BBA', 'CFA', 'CFF', 'EDD', 'BAE', 'BDB', 'AAE', 'FCB', 'CCC', 'CBA', 'DCF', 'DCB', 'FDC', 'EFC', 'CDF', 'EFC', 'CEE', 'EAD', 'ADE', 'BFD', 'ADF', 'CDD', 'EDB', 'AFD', 'DDD', 'FDB', 'EFC', 'FFF', 'EFD', 'CBB', 'ADB', 'CFD', 'DCF', 'CAF', 'BFF', 'ADE', 'DCF', 'FDC', 'DEC', 'DAA', 'BFC', 'CFC', 'FAF', 'BCD']) == True\nassert solution.pyramidTransition(\"AA\", ['FEF', 'AAC', 'BEF', 'BDB', 'BEF', 'AFC', 'DFB', 'BBB', 'FBF', 'ACA', 'CEE', 'ABF', 'BFB', 'DEC', 'EAC', 'FEE', 'DCF', 'FEE', 'ECC', 'BFB', 'CCA', 'FCC', 'DBA', 'AAA', 'AED', 'FBC', 'BDA', 'ECD', 'FFF', 'BBC', 'FAD', 'DBC', 'ADE', 'EAC', 'ACD', 'AFA', 'CFC', 'FCC', 'BCA', 'DEA', 'BBB', 'CDF', 'FEB', 'CAA']) == True\nassert solution.pyramidTransition(\"DCBDB\", ['DAD', 'ACC', 'CFF', 'ACE', 'ECD', 'AAB', 'AFE', 'BAB', 'AEB', 'FAB', 'BEA', 'BCC', 'CFA', 'FFE', 'FFA', 'BDA', 'DEA', 'FCA', 'EED', 'BBA', 'FDD', 'ECE', 'DBA', 'CEB', 'CEF', 'FBB', 'AAA', 'EFC', 'EAD', 'EBD', 'EDA', 'EBA', 'EFA', 'CFE', 'DBC', 'ADB', 'CCE']) == False\nassert solution.pyramidTransition(\"BAFB\", ['FEE', 'FFF', 'FBE', 'BEA', 'BDA', 'CDE', 'FDB', 'DFA', 'AFC', 'ADC', 'AFC', 'AEE', 'FDE', 'EBB', 'ABA', 'FFF', 'FEA', 'EAF', 'EDA', 'FBD', 'BDA', 'EAD', 'DDB', 'BDB', 'EDA', 'FEB', 'DDF', 'BDE', 'EAD', 'BCD', 'FCA', 'FFC', 'FAD', 'FCE', 'FEE', 'AEF', 'CFE', 'EAB', 'DFF', 'FFA', 'DEB', 'CDD', 'FBE', 'FBA', 'EBF', 'CEB', 'EFB', 'EEA', 'DBA', 'DCF', 'BEF', 'BAD', 'AEF', 'BAE', 'DAE', 'EBD', 'FBB', 'CDC', 'BAC', 'CED', 'EEC', 'ADE', 'EDD', 'FEC', 'DEC', 'AAF', 'BDB', 'ADA', 'FAA', 'ACD', 'DAB', 'DAC', 'BEB', 'ADF', 'BEF', 'FFA', 'FEE', 'CDD', 'ADF', 'FFD', 'BED', 'DBF', 'CDE', 'CAA', 'AEF', 'ECA', 'FDE', 'FAE', 'CCD', 'FFF', 'BBA', 'FBD', 'CEC', 'DCE', 'BEA', 'EBA', 'FAA', 'CAC', 'CEC', 'DCB', 'DEB', 'FDC', 'CEB', 'ACB', 'AAF', 'CAC', 'BAE', 'DDB', 'DED', 'EDF', 'CED', 'ECD', 'BAD', 'BAD', 'EDC', 'DFE', 'FAF', 'EEC', 'DEF', 'DAD', 'FAA', 'CAC', 'CBB', 'FAB', 'CDC', 'FEC', 'EBE', 'FBE', 'DFD', 'EEC', 'CFF', 'ADB', 'CDB', 'DAA', 'ACE', 'ECD', 'BEB', 'EEE', 'DFF', 'FBB', 'EDC', 'BDD', 'FDD', 'BFD', 'DDA', 'BBD', 'FBA', 'CAE', 'CEB', 'FCB', 'BAB', 'EFB', 'FBD', 'DAE', 'EDA', 'CDB', 'ADD', 'AFC', 'FAF', 'EDE', 'BCD', 'CFF', 'AFB', 'FDC', 'EBD', 'EFF', 'FBF', 'DDD', 'CBF', 'CAC', 'AAF', 'BFF', 'CCF']) == True\nassert solution.pyramidTransition(\"EB\", ['EEC', 'FAD', 'EEA', 'DFD', 'FFF', 'FCA', 'CEA', 'ACE', 'DDE', 'EAC', 'CFF']) == False\nassert solution.pyramidTransition(\"EEC\", ['BCC', 'DFD', 'EBF', 'DFF', 'ADD', 'FAE', 'CAF', 'ACF', 'FFB', 'DDA', 'FEA', 'EDB', 'FBA', 'DCA', 'BBE', 'FAE', 'BBB', 'FCC', 'FFA', 'BEE', 'CBD', 'FBC', 'AEB', 'EFB', 'BEA', 'DAF', 'EDD', 'CCA', 'DAC']) == False\nassert solution.pyramidTransition(\"FDD\", ['EAA', 'FCC', 'ABA', 'ACB', 'BFC', 'FDD', 'ECF', 'FFF', 'ADA', 'FCC', 'FED', 'EFA', 'DFF', 'FDE', 'DDD', 'FDC', 'CFA', 'CCA', 'DFD', 'EAB', 'CDA', 'FFD', 'ECD', 'BBC', 'CBA', 'FBC', 'FFA', 'FDA', 'DAF', 'BFD', 'EAC', 'BDA', 'DDF', 'BCB', 'DEB', 'FCB', 'BED', 'DDC', 'CDA', 'EED', 'DCE', 'BAE', 'DFC', 'DFA', 'BBA', 'CAA', 'AEE', 'FDE', 'CCD', 'DFF', 'FDA', 'FCA', 'BDF', 'FAF', 'BFC', 'FDB', 'AAB', 'ACB', 'BAF', 'CCD', 'DDE', 'FDB', 'DFB', 'CCE', 'DCF', 'FAD', 'CBE', 'DAB', 'DCD', 'ADD', 'CFE', 'EBC', 'EFA', 'BAD', 'DBB', 'BAA', 'DAA']) == True\nassert solution.pyramidTransition(\"DCDFAC\", ['AAE', 'DDE', 'BEC', 'FEB', 'FBF', 'EAE', 'ACF', 'FFC', 'CEB', 'FBA', 'ADB', 'DFD', 'EAE', 'CEE', 'BAA', 'FAD', 'FBE', 'AAF', 'EED', 'DDF', 'AAD', 'CDA', 'CDA', 'EBA', 'FDB', 'ACF', 'AFD', 'CFE', 'FAC', 'BEE', 'AFC', 'FFC', 'ACA', 'CBF', 'BDF', 'DCE', 'FAF', 'AAF', 'EEF', 'ECD', 'BCF', 'DAE', 'DCD', 'EDF', 'DEE']) == True\nassert solution.pyramidTransition(\"EED\", ['FAC', 'EED', 'CDF', 'CFC', 'ECC', 'AEE', 'FDD', 'EDF', 'ADD', 'AED', 'CEA', 'DCE', 'CEA', 'FAF', 'EFA', 'CCA', 'EAD', 'EEC', 'EAB', 'BAD', 'CEF', 'BCA', 'DBF', 'FEF', 'EAD', 'DEF', 'ABF', 'AED', 'CDB', 'ABD', 'DBD', 'FEE', 'CBC', 'DCD', 'EED', 'ACB', 'EDC', 'ADE', 'BCA', 'AAF', 'FFC', 'FEF', 'BEC', 'FDE', 'BAC', 'FBD', 'BBA', 'DFA', 'FDE', 'EEC', 'FBB', 'BCA', 'DAE', 'FED', 'CDC', 'CAA', 'FCF', 'ABE', 'ADB', 'BBD', 'EBF', 'CCF', 'CFE', 'ABC', 'BEB', 'BDF', 'EDF', 'CEB', 'BAB', 'EBA', 'BEE', 'FED', 'FBC', 'FCC', 'FED', 'CBC', 'BBF', 'ECE', 'DFD', 'DFD', 'FDC', 'BDA', 'FBB', 'DEB', 'DBD', 'DCE', 'DCB', 'CFF', 'CFF', 'DAE', 'CDD', 'AAE', 'BAD', 'EBF', 'AFD', 'BBF', 'AFC', 'AFA', 'FCF', 'BAC', 'EDF', 'BDB', 'CBF', 'AEE', 'EED', 'FDF', 'FDC', 'DBD', 'FEE', 'DBF', 'BFD', 'ADA', 'FFA', 'FFE', 'FBE', 'CAD', 'BAE', 'DFD', 'DDA', 'EDA', 'EAF', 'EFF', 'BED', 'DDB', 'BFE', 'BAE', 'EBB', 'ADF', 'CCE', 'DCD', 'ABA', 'FBB', 'CCE', 'DBB', 'ABC', 'EBC', 'BAA', 'DDF', 'EFC', 'CAD', 'CDE', 'CFE', 'FEB', 'EEC', 'CFC', 'CCD', 'CBB', 'FDF', 'CEF', 'FBF', 'DCB', 'BCE', 'FDA', 'AAD', 'CEF', 'CAE', 'DCF', 'FBD', 'BEE', 'BDE', 'EEF', 'DCC', 'FBA', 'FFF', 'AEB', 'CED', 'EBB', 'FCA', 'CEF', 'DFD', 'BFE', 'CEF', 'FDA', 'FFE', 'CCD', 'CAC', 'DCB', 'CDE']) == True\nassert solution.pyramidTransition(\"ECADBF\", ['CAC', 'EBE', 'FAE', 'BDC', 'DFE', 'ECA', 'BAD', 'FDD', 'FDC', 'FDB', 'BBC', 'CDE', 'BED', 'DBC', 'BDA', 'BFE', 'CCB', 'FAC', 'CED', 'FEF', 'ACA', 'FEC', 'DDF', 'DFC', 'DDF', 'ADE', 'EDA', 'EEA', 'EFB', 'ABD', 'BDA', 'EAE', 'BAE', 'AFF', 'AFB', 'EBB', 'DCC', 'DEA', 'CAD', 'EAB', 'AFE', 'FDC', 'DEF']) == False\nassert solution.pyramidTransition(\"EFDDE\", ['DBA', 'EEF', 'DEC', 'DBE', 'EFD', 'ACD', 'DEC', 'ADE', 'AEE', 'DCB', 'ADD', 'BDF', 'DAF', 'AAD', 'EED', 'AFB', 'CFB', 'CDB', 'CAF', 'EAA', 'EBA', 'EAD', 'DFD', 'DCC', 'DCC', 'DBD', 'BCC', 'CAF', 'FEF', 'CCE', 'FFC', 'FBC', 'EBE', 'BAB', 'FCE', 'CCF', 'BFA', 'AFD', 'BFC', 'EFA', 'CAE', 'EFC', 'BAB', 'DFD', 'CEB', 'FDD', 'BED', 'CFE', 'BCE', 'ADF', 'DBB', 'ABA', 'EFB', 'DFD', 'EBC', 'BAF', 'DFB', 'AFC', 'BBB', 'DDC', 'AED', 'AAC', 'CDD', 'CFA', 'CEF', 'ECC', 'BDE', 'BCF', 'AEE', 'CAB', 'BEB', 'EBC', 'CEF', 'BBD', 'DAF', 'AFF', 'DBE', 'DAF', 'CDD']) == True\nassert solution.pyramidTransition(\"FBCCAA\", ['BBA', 'BFB', 'EAC', 'ECF', 'CAD', 'BAC', 'FEC', 'CAD', 'EDE', 'BEC', 'ECA', 'CEA', 'EAD', 'BDB', 'BBF', 'FBD', 'DBF', 'DAB', 'DEC', 'CAB', 'EFA', 'ECE', 'EFF', 'BEF', 'DCD', 'CEB', 'AAA', 'CDC', 'DEA', 'BFF', 'ECD', 'DBC', 'EBE', 'BBE', 'CDC', 'AFD', 'EDC', 'FFF', 'ADB', 'FFB', 'EDD', 'EFE', 'BBB', 'BDE', 'BEF', 'ECB', 'FFC', 'DFB', 'BFA', 'DCA', 'ECD', 'FFA', 'CEF', 'BFE', 'ACD', 'BCC', 'CBE', 'FAB', 'FDD', 'ACF', 'AFB', 'AAB', 'ECC', 'EDE', 'CDA', 'BBE', 'CDC', 'DEB', 'CBD', 'CBE', 'BBA', 'CEA', 'DCB', 'EDE', 'CFC', 'CBE', 'DEE', 'CBE', 'AFD', 'FAA', 'CCD', 'ABF', 'EDF', 'DBC', 'ECA', 'BCB', 'FFD', 'EDE', 'DEA', 'DEF', 'DDB', 'CDD', 'DFA', 'BEB', 'ABE', 'FEC', 'EBD', 'CBC', 'AAC']) == True\nassert solution.pyramidTransition(\"DF\", ['DDA', 'CBE', 'EEA', 'CBF', 'FBF', 'AAD', 'BBD', 'CEC', 'DFB', 'CBE', 'EDE', 'CCD', 'EBC', 'ECE', 'CBC', 'ABC', 'DDB', 'BEC', 'AAD', 'BBC', 'FBD', 'CAF', 'DCD', 'DAC', 'EBD', 'EBF', 'DDB', 'DBC', 'EDD', 'ADA', 'CFF', 'CAD', 'BFB', 'CCA', 'BBA', 'EEF', 'CFF', 'AEE', 'DCE']) == True\nassert solution.pyramidTransition(\"FAECA\", ['BFD', 'FEE', 'DCF', 'FCF', 'ECC', 'DAF', 'EFE', 'DAB', 'DAA', 'DFD', 'ABA', 'CAA', 'EFF', 'BDD', 'FBB', 'FFB', 'DDC', 'EEF', 'AFE', 'DFD', 'BDC', 'FDE', 'ACB', 'EAA', 'DBC', 'CEF', 'EBD', 'BEA', 'FCA', 'BBB', 'BBB', 'FFA', 'BCE', 'FAC', 'CEF', 'CCC', 'FBD', 'BEE', 'ABF', 'CFA', 'AEF', 'BBC', 'FDA', 'CAC', 'DEA', 'EDE', 'ACC', 'DAE', 'BCB', 'ABC', 'AAA', 'ADA', 'CBA', 'FAD', 'DCF', 'FAB', 'DAC', 'ECE', 'EBD', 'BBD', 'ECE', 'EEC', 'ABB', 'EEC', 'FFF', 'EEA', 'FBE', 'DCF', 'ABF', 'CBC', 'DEB', 'FBD', 'AEF', 'DDB', 'DDB', 'EBF', 'BBE', 'AAC', 'CBD', 'CDD', 'FAF', 'AAE', 'BAB', 'DBD', 'AFC', 'DAA', 'DDE', 'FEF', 'DCA', 'ACA', 'DCE', 'ECC', 'FEC', 'BBE', 'FAB', 'DDD', 'EEB', 'EEA', 'CEB', 'CBD', 'FAD', 'DAC', 'CDA', 'EAB', 'CCA', 'AFB', 'FED', 'FEF', 'FCA', 'EFA', 'BCD', 'FAE', 'EFF', 'DDD', 'FAF', 'EAE', 'FBC', 'DFF']) == True\nassert solution.pyramidTransition(\"ECCCF\", ['CAE', 'DCF', 'DBF', 'FEF', 'ADD', 'ACE', 'CAC', 'AEA', 'EBA', 'CDE', 'EEF', 'EBC', 'FBC', 'EAB', 'BCE', 'BDF', 'EFC', 'DDA', 'AAF', 'ECA', 'FBA', 'BFE', 'CDF', 'EBF', 'ACA', 'ECA', 'FAC', 'FEA', 'DCB', 'FFE', 'CAA', 'EBE', 'DFB', 'BFA', 'CAD', 'AFD', 'EEE', 'DCF', 'EDD', 'FEB', 'CED', 'EBF', 'EEB', 'FAC', 'ABC', 'CFA', 'CDA', 'FCB', 'ABB', 'FBC', 'BEC', 'BBC', 'FBA', 'ECA', 'BEE', 'DFD', 'EDD', 'EAF', 'CAB', 'CAF', 'ABD', 'DBF', 'AFC', 'ECD', 'CDD', 'EEF', 'DDF', 'ABA', 'CEC', 'CFD', 'BAE', 'BDE', 'BDC', 'FCA', 'DAE', 'ACE', 'FAB', 'CED', 'CFF', 'DDC', 'ACA', 'EFC', 'FAC', 'FAC', 'CFF', 'BAF', 'BBC', 'FCE', 'AFB', 'CAA']) == False\nassert solution.pyramidTransition(\"EECEE\", ['FCB', 'FCA', 'ECF', 'BEF', 'FCB', 'DCB', 'FFE', 'CEB', 'CCE', 'EEA', 'DCE', 'ACD', 'AFF', 'CEB', 'BDE', 'EFF', 'BBF', 'CCE', 'CCB', 'FFE', 'DDE', 'DDF', 'CBF', 'CDA', 'FBF', 'FAC', 'CFC', 'DDD', 'ECE', 'CFE', 'EBC', 'CBE', 'CED', 'FBA', 'CBC', 'DCB', 'EDC', 'FFA', 'AEF', 'ADC', 'BFA', 'BBF', 'BBD', 'ABB', 'EAB', 'FDA', 'CFE', 'DFC', 'BBC', 'AEB', 'EAB', 'AEC', 'ADD', 'BBA', 'EBD', 'BAF', 'DEE', 'ADA', 'EFB', 'DFF', 'CBF', 'CAC', 'FDB', 'ACB', 'DBB', 'BFE']) == True\nassert solution.pyramidTransition(\"CCE\", ['FFC', 'BDB', 'BCA', 'CDC', 'FBC', 'BBA', 'DDE', 'CEA', 'CCD', 'BBD', 'CBE', 'FFE', 'AEC', 'BBC', 'AAE', 'BFD', 'BBB', 'BFF', 'CCE', 'BFC', 'AFC', 'BDD', 'BCC', 'CCF', 'DEB', 'ABE', 'EFF', 'AED', 'AFE', 'EEB', 'EEC', 'DAA', 'BEE', 'DCC', 'CCE', 'BEA', 'CBA', 'DAE', 'FDA', 'ACF', 'BFB', 'BDB', 'DDF', 'EDE', 'BDF', 'AEA', 'EDE', 'ACB', 'CCD', 'BAB', 'EEE', 'EEB', 'CCE', 'CBC', 'AFC', 'AFC', 'DCE', 'EEC', 'EFF', 'BBB', 'AAE', 'ADB', 'DBF', 'DDA', 'AEE', 'AEC', 'CEE', 'EED', 'ECA', 'DAC', 'FCC', 'ABE', 'BDB', 'AEB', 'EEA', 'FDD', 'CAC', 'EDC', 'CEE', 'EFF', 'BFE', 'FCC', 'CEF', 'FBE', 'FFC', 'CCA', 'BFA', 'AAF', 'EFE', 'BCC', 'EEE', 'BBD', 'BBB', 'EFF', 'CBB', 'CBF', 'FDF', 'ECA', 'FBF', 'BFD', 'AAE', 'BCE', 'BBD', 'CCC', 'CFA', 'DDE', 'BDB', 'EFA', 'BBD', 'CEE', 'AAE', 'ABE', 'EDE', 'DEB', 'DDC', 'DBC', 'DBD', 'DEC', 'FBC', 'BBB', 'AFB', 'CEB', 'BFD', 'BCE', 'DFF', 'DEA', 'AFA', 'CAD', 'DAC', 'FEB', 'EDD', 'AFE', 'EAC', 'BCF']) == True\nassert solution.pyramidTransition(\"BBCFB\", ['CDF', 'BDE', 'CBC', 'DFF', 'BFC', 'DCE', 'CAB', 'DAF', 'BCA', 'CBB', 'BAB', 'FED', 'DEE', 'DCC', 'BFD', 'BDD', 'EFA', 'EAB', 'FFB', 'CAC', 'FEA', 'FEB', 'AEC', 'EDE', 'FEA', 'EEF', 'ADC', 'FEA', 'BDC', 'BED', 'BFA', 'BEF', 'DCA', 'AFD', 'CDD', 'CDF', 'DAC', 'BDB', 'FBE', 'FBD']) == False\nassert solution.pyramidTransition(\"DE\", ['FDD', 'CFC', 'DBF', 'ACC', 'FCC', 'ECA', 'CFE', 'BCF', 'EEF', 'AAB', 'CEB', 'ABB', 'AAB', 'DAF', 'ECD', 'CEC', 'ABA', 'BED', 'ECD', 'FBC', 'DFB', 'BDE', 'EDB', 'BAC', 'EFE', 'CEE', 'BAD', 'FAB', 'ECD', 'AAE', 'EDC']) == False\nassert solution.pyramidTransition(\"AAAEED\", ['EAE', 'AFC', 'BEE', 'CEA', 'BEC', 'BED']) == False\nassert solution.pyramidTransition(\"BD\", ['FFB', 'CFD', 'BFD', 'FCE', 'AEC', 'EAF', 'DAB', 'CEA', 'FDF', 'FAD', 'BCD', 'ABD', 'ACF', 'ADC', 'CDD', 'BBD', 'BBD', 'FEC', 'FED', 'AEC', 'DFF', 'CCB', 'DCF', 'CDA', 'BDE', 'DAD', 'CFB', 'BBE', 'FDF', 'ABA', 'BFD', 'CCA', 'DDE', 'ACD', 'CBD', 'CCC', 'DAA', 'CDC', 'ADC', 'FBF', 'BEF', 'ABC', 'ACE', 'DBC', 'DCF', 'FCD', 'FCC', 'FAB', 'AEF', 'DAB', 'EFE', 'FAA', 'FCB', 'DCB', 'AED', 'BED', 'CBD', 'ABF', 'ECC', 'FEC', 'DEF', 'BDA', 'CED', 'EEB', 'BAA', 'EFC', 'FEB', 'DCE', 'ECF', 'CEF', 'AFA', 'DCE', 'DFF', 'FCC', 'CDA', 'BEA', 'BDF', 'FDC', 'BAC', 'DDC', 'BCC', 'DFC', 'DEF', 'EDB', 'ADC', 'FBF', 'AEB', 'ABF', 'BEF', 'EFD', 'FEF', 'BCA', 'FAE', 'BDB', 'FED', 'EDE', 'AEB', 'CDC', 'CEF', 'DFB', 'FCB', 'BEE', 'BDD', 'AEF', 'FEE', 'DFC', 'EFB', 'FAB', 'CED', 'FBE', 'FCC', 'BDD', 'FFD', 'BFA', 'DAD', 'FBF', 'FCF']) == True\nassert solution.pyramidTransition(\"FBBAF\", ['FAE', 'CCC', 'FCD', 'FCE', 'FBE', 'DDE', 'CBC', 'EAA', 'DCE', 'EDE', 'FCD', 'EAB', 'ADD', 'CBC', 'BCE', 'EAF', 'CED', 'ABE', 'FFF', 'CEA', 'ECC', 'ECB', 'BDA', 'DCE', 'EDF', 'CDF', 'ADB', 'ACE', 'ABB', 'FAA', 'DCD', 'CBF', 'DFB', 'ECB', 'EBB', 'DDF', 'CAA', 'AEC', 'EAF', 'FCF', 'CEE', 'AFD', 'AAA', 'DED', 'FEE', 'EAB', 'FDC', 'EEC', 'EDA', 'ADF', 'DCF', 'FDB', 'AAC', 'BCA', 'AEE', 'CCB', 'DFF', 'FAB', 'DFF', 'DAC', 'FAA', 'EDC', 'BBE', 'EEB', 'CBB', 'AEF', 'BAC', 'ACC', 'CFF', 'FDC', 'CDD', 'CFD', 'FDB', 'DEA', 'CCD', 'DFF', 'EBF', 'CBC', 'EED', 'AEC', 'DFB', 'EDB', 'ABC', 'CCF', 'FEA', 'EEF', 'BEF', 'BAD', 'EFB', 'EAC', 'EFC', 'DDA', 'BCC', 'ECC', 'FEC', 'BFD', 'DFC', 'EBF', 'EEE', 'BED', 'DEE', 'AFA', 'BAB', 'DED', 'CEC', 'FFE', 'BCF', 'CCB', 'DDC', 'EEF', 'AAF', 'CDE', 'AAF', 'DBB', 'ECF', 'CFA', 'CFA', 'DDA', 'FCE', 'DAE', 'CFE', 'DFC', 'DAD', 'AEC', 'EAB', 'AEC', 'BFA', 'FCA', 'CAF', 'CFB', 'BCB', 'DBD', 'EBE', 'BCE', 'EEE', 'AAB']) == True\nassert solution.pyramidTransition(\"BDE\", ['DBD', 'EAF', 'DEF', 'FBB', 'AFE', 'FBB', 'FEC', 'EAC', 'CBA', 'FEA', 'CFB', 'AAD', 'AAD', 'FDA', 'FBB', 'ECB', 'EDA', 'BDF', 'CBB', 'ACE', 'CDA', 'EDA', 'CEB', 'BAA', 'DCF', 'CDA', 'CDC', 'BDB', 'BAE', 'FCF', 'CFF', 'DFB', 'CEF', 'FEB', 'CDC', 'EDB', 'AEA', 'FEC', 'ABE', 'BCA', 'ECD', 'EAD', 'CFF', 'CDF', 'DEB', 'FFF', 'FED', 'FEA', 'BBB', 'CCB', 'CBC', 'BBC', 'ACE', 'BDF', 'FAF', 'BFC', 'EEC', 'BCD', 'AEE', 'DBF', 'ABF', 'EBB', 'BCA', 'DFD', 'FFE', 'ACD', 'BDB', 'CCC', 'AFE', 'DDC', 'BBF', 'BEC', 'ABC', 'CBD', 'DCE', 'DDB', 'FAE', 'BBD', 'CED', 'BAA', 'FBB', 'FED', 'BEF', 'AFC', 'ABB', 'DDD', 'ECD', 'ECC', 'BCC', 'CCD', 'CAF', 'DDF', 'BCF', 'ABF', 'AEC', 'BEF', 'ABB', 'BCA', 'BFB', 'BFA', 'AAD', 'DFE', 'FFD', 'DCF', 'ADA', 'ADF', 'AED', 'DBC', 'BCB', 'BBC', 'EED', 'DAE', 'AAE', 'FEB']) == True\nassert solution.pyramidTransition(\"DFEB\", ['BFF', 'FBA', 'AFA', 'BDE', 'FAB', 'CFD', 'BCD', 'ABE', 'ADB', 'BAA', 'BEE', 'BAA', 'EAB', 'DEC', 'BFB', 'DCA', 'FFF', 'DEC', 'CFD', 'ACD', 'BCB', 'ACC', 'EEA', 'ADA', 'BED', 'AED', 'EAE', 'ACC', 'FBC', 'BDA', 'AED', 'EAA', 'EDF', 'DAE', 'FAA', 'FCD', 'CBD', 'AFB', 'BCC', 'ADB', 'BFE', 'BDB', 'CAB', 'AEA', 'ABD', 'CCD', 'DDB', 'DAB', 'BDC', 'BCC', 'EBF', 'ABA', 'EBF', 'ABE', 'FFC', 'AAA', 'BEA', 'EBD', 'BEC', 'BDC', 'BBB', 'CAB', 'DFE', 'BCB', 'BAC', 'CEB', 'FAA', 'ECE', 'CED', 'BBF', 'FEA', 'AFD', 'BFE', 'FDA', 'CBC', 'CAC', 'CFC', 'BCD', 'DAF', 'ADA', 'FDF', 'AED', 'BEE', 'BCB', 'FDF', 'FDE', 'BDB', 'CCD', 'FBD', 'BDA', 'EAB', 'BBA', 'CCF', 'BFD', 'DCD', 'FCB', 'CBE', 'BBD', 'FBC', 'CAB', 'BFB', 'FDE', 'AFA', 'BCD', 'BFA', 'CEF', 'DCF', 'EAA', 'FFE', 'FBD', 'ECD', 'EEF', 'BDD', 'ABD', 'EFB', 'BEE', 'DBB', 'DDF', 'FDA', 'BCA', 'CBA', 'AFA', 'CDE', 'CDB', 'DEB', 'FED', 'ABE', 'AFE', 'AAB', 'FFC', 'BCA', 'DBC', 'ADD', 'EBE', 'ECB', 'FAB', 'DBE', 'FDD', 'CBB', 'DFD', 'CEC', 'DDC', 'FFD', 'CEC', 'AFA', 'DCD', 'DEA', 'DCB', 'DAC', 'ACB', 'EBE', 'ECC']) == True\nassert solution.pyramidTransition(\"DADF\", ['AFF', 'ACB', 'DFD', 'CFC', 'EBE', 'CBD', 'FCC', 'EFC', 'BBF', 'DBA', 'AFB', 'DBF']) == False\nassert solution.pyramidTransition(\"EADCE\", ['FCE', 'EFE', 'DEA', 'DDF', 'BCB', 'DCE', 'AAB', 'ECF', 'DBC', 'ECD', 'EDB', 'CDA', 'BEF', 'ECD', 'EFC', 'AAE', 'FFB', 'CAD', 'ECD', 'CEB', 'CAB', 'DCC', 'CFA', 'EEC', 'CDF', 'FFC', 'EEC', 'FCD', 'EBB', 'AAC', 'EFA', 'BBD', 'FCA', 'FEC', 'EFE', 'ABD', 'FCE', 'DDD', 'EFF', 'BAC', 'ABB', 'CEB', 'DAC', 'BED', 'EEA', 'AEE', 'CBA', 'ABE', 'ADF', 'BCC', 'CFE', 'EEA', 'ADB', 'EBE', 'ADB', 'DBC', 'CED', 'ECD', 'BAD', 'EDA', 'AEF', 'BBF', 'BCC', 'EDA', 'BCA', 'DFB', 'DBB', 'DEA', 'CEF', 'BEF', 'DEF', 'CCB', 'BAE', 'FFA', 'BAD', 'ECF', 'FFE', 'CFB', 'FFA', 'BEA', 'FAE', 'EAE', 'FDF', 'BFF', 'DFE', 'EFB', 'FEB', 'CAE', 'CDC', 'CBF', 'EAA', 'CCB', 'ABD', 'CCB', 'BFE', 'ABF', 'CDB', 'FAB', 'CCB', 'EFB', 'BFC', 'CCE', 'FBA', 'EAD', 'CAA', 'BEE', 'AFF', 'CEB', 'EAC', 'DBB', 'FAD', 'BBD', 'DAE', 'CCC', 'DED', 'ECE', 'EEB', 'EBD', 'DAC', 'ACA', 'BBD', 'AFF', 'CBA', 'CDA', 'EDF', 'ACA', 'FDC', 'FCE', 'BBF', 'FBA', 'CDD', 'BED', 'CBC', 'BAF', 'FDC', 'EDE', 'CFE', 'DAF', 'EDE', 'FDB', 'AAA', 'ADD', 'FAC', 'ABD', 'CEC', 'DBE', 'EAB', 'BAE', 'DFC', 'EAE', 'CFD', 'FBE', 'EED', 'BCD', 'ECC', 'BDC', 'BDA']) == True\nassert solution.pyramidTransition(\"FBACE\", ['BAA', 'DDC', 'EFF', 'FBF', 'EFE', 'ECE', 'EAA', 'BCE', 'AFD', 'BAB', 'BEE', 'ACE', 'DAB', 'CEA', 'FAE', 'DCC', 'BCD', 'EAC', 'CBF', 'FEB', 'DCE', 'FDB', 'FED', 'DEE', 'DBB', 'BAE', 'EEC', 'BDF', 'ADC', 'EFF', 'BDF', 'ABB', 'AFE', 'EFF', 'ADE', 'EBF', 'EBB', 'DCA', 'BCE', 'DFE', 'ADB', 'EAB', 'CAF', 'FBE', 'AFB', 'CDD', 'FEB', 'FFE', 'CBB', 'AFD', 'EAF', 'ACA', 'FFC', 'BDF', 'DCA', 'AAA', 'EEB', 'ACE', 'FBA', 'FEC', 'EAF', 'BBA', 'AAE', 'CBA', 'FBB', 'CAE', 'AFB', 'ADB', 'EDA', 'CFE', 'BFB', 'BBD', 'EAB', 'DAA', 'CCC', 'DEC', 'EDF', 'DFD', 'AEE', 'ECA', 'EFF', 'AAA', 'DCA', 'EAB', 'DCA', 'ADA', 'CAE', 'CCE', 'DAF', 'AEC', 'BCE', 'BCF', 'BDF', 'EDE', 'DEE', 'EDB', 'DFB', 'FEA', 'CCE', 'ABC', 'BFE', 'AFD', 'CAC', 'BAF', 'CEA', 'EAF', 'EBE', 'ADC', 'ADD', 'BFB', 'DDE', 'FAA', 'EAB', 'FAB', 'FAE', 'BBA', 'DDC', 'EFB', 'ECE', 'BAD', 'CBF', 'FCF', 'CCC', 'FFD', 'CDC']) == True\nassert solution.pyramidTransition(\"FDCFDF\", ['DFD', 'EFD', 'EEE', 'CFD', 'FBF', 'BDE', 'CFB', 'DAD', 'DFD', 'FCE', 'AAF', 'EBB', 'FDF', 'CFF', 'CDD', 'EAD', 'FAD', 'FCD', 'ECE', 'DEC', 'FCF', 'AEE', 'DFE', 'FCD', 'ACA', 'FAF', 'ACA', 'ADA', 'EDA', 'FBD', 'CFA', 'DDF', 'FAF', 'BAB', 'DBC', 'BAE', 'EAF', 'EFB', 'FBB']) == False\nassert solution.pyramidTransition(\"ED\", ['CDA', 'EAF', 'CCB', 'BBA', 'FAE', 'ADC', 'FFB', 'CFD', 'ABA', 'BFB', 'CDF', 'AEE', 'DEC', 'ADB', 'CAE', 'ECA', 'ABD', 'FAA', 'FCF', 'DDA', 'BEA', 'EAC', 'DAA', 'BFC', 'BAF', 'BCB', 'BAA', 'CBA', 'BDE', 'BFC', 'EDF', 'EEB', 'CCA', 'DCC', 'AFE', 'AED', 'DBF', 'CBF', 'ABB', 'ECF', 'FCC', 'FDD', 'CFF', 'EBD', 'CBA', 'CFA', 'AFC', 'CDE', 'EFE', 'ACE', 'CBA', 'BDB', 'FCD', 'BAC', 'DDF', 'FED', 'FBF', 'CCD', 'FCA', 'CBD', 'AFF', 'AEF', 'DEE', 'CCD', 'FBB', 'FFA', 'DAD', 'CBC', 'DBB', 'EAC', 'BBF', 'ACA', 'ABA', 'DEE', 'CBF', 'FDB', 'AEB', 'CDB', 'BCC', 'BED', 'FDF', 'BBD', 'DBD', 'FBB', 'EDB', 'AAF', 'FEC', 'ECB', 'BBC', 'DDC', 'FEC', 'ECC', 'CDD', 'FBC', 'FBA', 'EBC', 'ACC', 'DDE', 'FCE', 'DFC', 'FFC', 'FCD', 'DEC', 'DFC', 'AED', 'FAA', 'CEF', 'CAF', 'DDD', 'ABF', 'BDC', 'DDF', 'DAC', 'AEE', 'EDB', 'EBD', 'ADD', 'DFB', 'BFA', 'BDA', 'BEE', 'CDE', 'ADA', 'FFE', 'AEC', 'BCC', 'DEB', 'FEE', 'EBD', 'BEA', 'DEB', 'BFF', 'CFA', 'FEF', 'ABA', 'ABB', 'AAD', 'EFC', 'ABB', 'CCF', 'FDA', 'FCE', 'BBF', 'ABA', 'BEA', 'BED', 'ABE', 'BAF', 'CBC', 'DDE', 'DAB']) == True\nassert solution.pyramidTransition(\"EDBCF\", ['FFE', 'DEB', 'EDB', 'FFF', 'CAF', 'CCE', 'FEB', 'BCB', 'BEC', 'EDA', 'DFA', 'AEC', 'DDC', 'BDF', 'BDA', 'ECE', 'DAA', 'FAB', 'ADA', 'DBC', 'ECD', 'FCB', 'BDD', 'EAC', 'ACE', 'EAB', 'FAC', 'ACF', 'DBD', 'ADF', 'BBD', 'DEC', 'FAD', 'FFC', 'ADD', 'DEE', 'FAB', 'AAE', 'BBD', 'DFA', 'BEC', 'EDC', 'DBE', 'DCA', 'ABC', 'CAB', 'FBE', 'EEC', 'FBF', 'BAA', 'DCA', 'EAD', 'EBA', 'EFA', 'DDC', 'FFB', 'CDB', 'CFF', 'AFC', 'FEE', 'BDD', 'EDF', 'EFC', 'DBB', 'BDA', 'CEC', 'BCB', 'BBD', 'FEF', 'FCB', 'EBD', 'CDD', 'FAD', 'BCE', 'FAD', 'DEB', 'EAA', 'ACD', 'BEE', 'DEB', 'EED', 'CFD', 'DAF', 'ACF', 'DAD', 'BBD', 'FAE', 'FEF', 'FDC', 'DEE', 'AEA', 'ADD', 'DDF', 'CEE', 'BDB', 'CFB', 'AFC', 'ADC', 'ACC', 'ADF', 'DAB', 'FAF', 'FBE', 'ABC', 'FDE', 'FAB', 'DDA', 'DBB', 'EED', 'DCE']) == True\nassert solution.pyramidTransition(\"DFB\", ['BED', 'CFC', 'CDD', 'EDD', 'AFD', 'EFE', 'EDA', 'FFD', 'BFC', 'AEB', 'CEE', 'FCB', 'ECD', 'BEC', 'FEF', 'EEA', 'BAF', 'BEA', 'ADA', 'EBF', 'EBF', 'CDE', 'EBC', 'DCD', 'CDB', 'BDC', 'DBD', 'EEE', 'BFB', 'DAF', 'CAC', 'BCE', 'BBF', 'CDB', 'EDB', 'BEB', 'BFC', 'EDB', 'DBF', 'CAD', 'EDC', 'ECF', 'EFE', 'ADB', 'DDC', 'BCB', 'ACC', 'EAF', 'BDE', 'FDC', 'BCD', 'DBB', 'CCE', 'CAC', 'CFD', 'FEA', 'BAC', 'FAB', 'EBA', 'ABC', 'CCC', 'CEF', 'ACC', 'CCA', 'DAD', 'EAF', 'ADA', 'CAD', 'FEA', 'EBB', 'EEF', 'CBA', 'BDD', 'EDA', 'FBF', 'BAC', 'EBF', 'DCA', 'AEC', 'BBC', 'CBD', 'FFB', 'FFA', 'EFC', 'DAE', 'EDA', 'AAC', 'BFF', 'AAF', 'EAF', 'BEF', 'BBD', 'DAC', 'EEA', 'BCD', 'BBC', 'DEF', 'AFC', 'EBF', 'DDB', 'BDB', 'CCF', 'BEE', 'AAF', 'AEE', 'ACC', 'EEB', 'FAA', 'EDE', 'ABD', 'BAF', 'FFF', 'ECA', 'FDB', 'AEE', 'EFF', 'EDD', 'DDA', 'DAD', 'ABA', 'BDA', 'EAB', 'AAC', 'DCD', 'BFE', 'DFC', 'CAC', 'EFD', 'FAA', 'CDF', 'DBA', 'DCC', 'FAD', 'CAA', 'CDD', 'CAF', 'FEB', 'FCA', 'AFB', 'BAB', 'CFB', 'FBA', 'FCE', 'CBE', 'DBB', 'ADC', 'ACD', 'BBF', 'CBC', 'AFF', 'CDE', 'CDD', 'FFD', 'CEC', 'CFB', 'CCC', 'AEE', 'DAD', 'ABD', 'FFC', 'CBC', 'BEA', 'DAA', 'CEF', 'ABC', 'CAA', 'BED', 'AEB', 'ECB', 'DCF', 'DCA', 'FAC', 'CAF', 'EEA', 'EEB', 'DEC', 'AFE']) == True\nassert solution.pyramidTransition(\"CBDF\", ['FEB']) == False\nassert solution.pyramidTransition(\"EBACCC\", ['FEE', 'FCC', 'ACA', 'DEE', 'AEB', 'AFB', 'FBD', 'CBE', 'CAE', 'DFD', 'DCE', 'ADC', 'EDA', 'BEC', 'DFB', 'CFB', 'CDD', 'AFF', 'DDB', 'FEE', 'ADC', 'EEA', 'FBA', 'FDB', 'EBC', 'FFE', 'CEC', 'BCA', 'AEC', 'FBD', 'ACC', 'BEB', 'CBB', 'CFA', 'DDA', 'ACE', 'BDB', 'ADC', 'FDE', 'DCE', 'ADF', 'AAE', 'EEB', 'FBA', 'EAD', 'FCF', 'BED', 'AAD', 'FEC', 'CCA', 'BCA', 'ADA', 'EDC', 'CBC', 'CCB', 'ACB', 'FBE', 'BCB', 'BFD', 'FDB', 'BAA', 'AFF', 'DEC', 'CCC', 'DBA', 'ECD', 'FBE', 'ABE', 'CBB', 'EEC', 'BEA', 'FFD', 'EBE', 'ADD', 'EFA', 'FAC', 'ACA', 'FDB', 'CAD', 'DEC']) == True\nassert solution.pyramidTransition(\"AAAEFB\", ['CFA', 'FBC', 'BCD', 'DDA', 'ACE', 'AEB', 'DDB', 'EEF', 'CDE', 'EAD', 'BFE', 'CCB', 'ACD', 'CCC', 'FCB', 'BBD', 'CBA', 'ADE', 'CAD', 'FBB', 'DDB', 'BFA', 'CFC', 'EDA', 'EDB', 'CDD', 'FDD', 'DBF', 'CDE', 'AED', 'EBB', 'EFE', 'BFC', 'AEB', 'DBA', 'DEE', 'EBE', 'CCB', 'AAE', 'CFF', 'EBD', 'BCF', 'CBE', 'BCD', 'BBA', 'EAD', 'FEC', 'CFA', 'CBC', 'ACB', 'BCF', 'EAB', 'AAC', 'ECB', 'ABD', 'AFB', 'DFC', 'FDE', 'CFD', 'FCA', 'CDD', 'CAB', 'ADA', 'FAD', 'DDE', 'DDD', 'DFB', 'BCD', 'BDD', 'EAF', 'DCE', 'AFD', 'EDA', 'FCB', 'DFC', 'BBD', 'BFF', 'BAD', 'AED', 'EBF', 'ACC', 'FDA', 'AFA', 'ECA', 'FEA', 'BBF', 'FBA', 'CAF', 'EBE', 'DDF', 'EBE', 'DBE', 'EAA', 'DBB', 'EFB', 'AAC', 'CEA', 'DBB', 'BAD', 'EEC', 'BCF', 'CCE', 'ADB', 'AFE', 'DBB', 'ECB', 'CAB', 'EBA', 'CFA', 'FBF', 'AED', 'DAB', 'BBF', 'FCE', 'BBC', 'BEF', 'FFA', 'CCD', 'ADA', 'BDC', 'AED', 'FAF', 'CDE', 'BFB', 'BAD', 'CCE', 'FBD', 'ABD', 'FCD', 'CCB', 'CFC', 'DDE', 'CFE', 'EAF', 'FFD', 'CFA', 'FFA', 'FAE', 'CDB', 'DEE', 'FBB', 'DBA', 'CCF', 'BBD', 'FAC', 'DFA', 'DEF', 'BFD', 'DFF', 'FEB', 'ACD', 'CDC', 'AAA', 'DAE', 'AAA', 'DAE', 'CED', 'DCE', 'CAF', 'CDC']) == True\nassert solution.pyramidTransition(\"EBEBCE\", ['DBD', 'ECB', 'EEA', 'DBE', 'BBA', 'EBF', 'CCC', 'DEE', 'AFE', 'EFE', 'FFA', 'EBF', 'DFA', 'BBC', 'DCB', 'ACB', 'ECF', 'BDF', 'FFE', 'ABE', 'FBD', 'BBB', 'CFA', 'DDE', 'FED', 'FEB', 'ACC', 'FFF', 'FEA', 'BEC', 'BAF', 'DAB', 'CDB', 'DEF', 'CCE', 'EFA', 'CAE', 'DBA', 'AEB', 'AAA', 'FCD', 'FFD', 'DAE', 'CEF', 'ADE', 'CCA', 'CCB', 'EEA', 'AED', 'ABD', 'AED', 'AAA', 'FAC', 'FAB', 'FEC', 'BBA', 'ACC', 'EBD', 'AEB', 'DFC', 'CEE', 'BFE', 'FCE', 'EFF', 'EBF', 'FAC', 'FFB', 'DBA', 'AFD', 'EDF', 'DBC', 'CEE', 'BCC', 'EDB', 'ECF', 'DBB', 'CBC', 'DFF', 'CAB', 'BBD', 'BAA', 'BDF', 'AEF', 'CDA', 'DCC', 'ACE', 'FFE', 'DEB', 'DAB', 'FDE', 'AAD', 'CDD', 'AAB', 'FEF', 'ACC', 'CAF', 'EFE', 'DBD', 'ACC', 'FDC', 'FCA', 'CBC', 'DCF', 'DEF', 'FED', 'DFF', 'BFE', 'AEC', 'AEC', 'EFB', 'FBA', 'BAE', 'AFB', 'CFC', 'DCC', 'CFA', 'EAE', 'DED', 'CBB', 'EAA', 'CAE', 'AFF', 'AAC', 'ABE', 'BAE', 'EDD', 'DCD', 'BBC', 'FFA', 'FAE', 'CBF', 'AFF', 'DFD', 'ACD', 'AAB', 'DDF', 'FEA', 'BBC', 'AEC', 'BCD', 'FEC', 'BBD', 'BBC', 'EAB', 'BED', 'ABC', 'FDB', 'EDD', 'EDB', 'ABF', 'BDE', 'EEC', 'ACA', 'DCF', 'DBA', 'FAD', 'ADD', 'DEC', 'DDF', 'BEF', 'DFF', 'BDE', 'CBB', 'EAF', 'ABE', 'FCB', 'AFD', 'EBB', 'DBC', 'FED', 'AEF', 'EDD', 'DCF', 'ABB', 'BAF', 'ACD', 'BFC', 'ACE', 'AAF', 'DCE', 'BAE', 'DCA', 'ECD', 'BAF', 'EFF', 'BBF', 'DAC', 'DBA', 'BFC']) == True\nassert solution.pyramidTransition(\"BCDDF\", ['ABA', 'BAE', 'CBB', 'ACA', 'DDA', 'CFA', 'ABF', 'BBB', 'BBA', 'ABB', 'BFC', 'DDB', 'DBA', 'CAC', 'CBB', 'CFB', 'ACE', 'DCE', 'CFE', 'CEB', 'EBF', 'FBA', 'FDC', 'DDA', 'CDF', 'BDB', 'EBF', 'ACE', 'BEA', 'BEA', 'EEC', 'DCF', 'AAD', 'DFF', 'EDD', 'ECE', 'EBC', 'FFF', 'CAA', 'FDE', 'CAD', 'DCE', 'BCE', 'FAA', 'FBF', 'FBE', 'CFD', 'BEA', 'CEC', 'DBD', 'BDA', 'BDB', 'CFF', 'DCC', 'BCC', 'AFE', 'FBB', 'BFF', 'BDA', 'BDF', 'ABA', 'BFF', 'ADE', 'FAA', 'EEE', 'FAD', 'BFA', 'DBB', 'FCB', 'FFD', 'CAB', 'EDD', 'DDB', 'DAC', 'AFB', 'BAC', 'EFA', 'BBF', 'EDC', 'FBB', 'BAE', 'AEA', 'CAE', 'EEB']) == True\nassert solution.pyramidTransition(\"DB\", ['FEC', 'ACA', 'BDD', 'EDF', 'DFE', 'ADA', 'DDD', 'FBC', 'FED', 'EAA', 'AAF', 'BEA', 'BBD', 'ACD', 'FDF', 'DDA', 'AEE', 'ADD', 'FBB', 'DFA', 'EDE', 'EEE', 'ABC', 'BDB', 'FDB', 'BCD', 'BCE', 'ACF', 'ECB', 'ADA', 'ECE', 'EDE', 'DFA', 'BAB', 'EBC', 'CFA', 'EEF', 'ABC', 'DDF', 'FFF', 'DEE', 'EDA', 'AED', 'EDF', 'CDD', 'EDC', 'DDC', 'FDE', 'BCD', 'BFF', 'CDB', 'CEA', 'DFC', 'EAB', 'CFC', 'EDD', 'BAC', 'AEC', 'EEB', 'DCA', 'EDC', 'CAD', 'FDF', 'EBE', 'AFC', 'EEE', 'EDD', 'CFA', 'AFE', 'AAD', 'BAA', 'DEF', 'CBD', 'EEF', 'FBC', 'BCB', 'CFF', 'FFD', 'FDB', 'FFA', 'BAC', 'FDC', 'EEC', 'FDD', 'EDE', 'FBD', 'EAA', 'FFA', 'BBD', 'FEB', 'EBE', 'FBA', 'FAF', 'DAC', 'CAF', 'BCD', 'CCC', 'AEA', 'BDC', 'CBE', 'BFA', 'DAF', 'DAD', 'CED', 'FBD', 'DEB', 'FDC', 'BFA', 'CCF', 'AFD', 'EFB', 'CED', 'EBA', 'BFC', 'DAA', 'EDD', 'BBD', 'DBF', 'CEF', 'BAE', 'BCE', 'BDE', 'FAB', 'AEA', 'BBD', 'FEC', 'AEC', 'ECA', 'ADC', 'BAF', 'CFE', 'BBF', 'DCB', 'DAD', 'FBD', 'AAC', 'FFF', 'FFF', 'CFE', 'EDB', 'BEA', 'CAC', 'ACC', 'EDC', 'BFF', 'BEF', 'BBD', 'CEA', 'BFD', 'CBA', 'AEA', 'DBF', 'ACF', 'EAD', 'EFD', 'FEE', 'DBC', 'DFC', 'ADF', 'CBA', 'CFD', 'DFC', 'DFC', 'EEF', 'CFD', 'CAA', 'BBE', 'EDE', 'CBD', 'BAA', 'CDF', 'BCA', 'CBA', 'AEF', 'BDD', 'BFB', 'EEB', 'ABE', 'ACE', 'CFE', 'DBF', 'DCD', 'FBF', 'ECE', 'CCA', 'BBB', 'DCA', 'BEF', 'FAB', 'DEB', 'EDC', 'EEB', 'DCB', 'FFD', 'EAA', 'FFE', 'EEE', 'FFF', 'EED', 'CDA', 'ABF']) == True\nassert solution.pyramidTransition(\"DBCADF\", ['EBF', 'EFF', 'FCB', 'CDD', 'FCA', 'EBD', 'CCF', 'BEB', 'CEC', 'AFD', 'ABC', 'EDF', 'DBF', 'BAF', 'DAE', 'ECC', 'BEE', 'AEB', 'CBA', 'BCD', 'DCE', 'FFA', 'ABF', 'FBC', 'EAD', 'CCE', 'DBB', 'DAE', 'ECA', 'DBA', 'FBB', 'FBE', 'AAA', 'AAE', 'EFC', 'CDA', 'DBF', 'ECA', 'AFA', 'DDB', 'DBB', 'EEF', 'BAC', 'EEC', 'CEA', 'FAD', 'AFF', 'AFC', 'FBF', 'CDA', 'BCB', 'AFF', 'BFD', 'CCA', 'DEA', 'EFD', 'BFE', 'EDF', 'DDE', 'FEB', 'EBB', 'AEB', 'CCA', 'CDB', 'CEE', 'AEC', 'ECD', 'ACA', 'FCE', 'DBE', 'DDA', 'ABC', 'DFC', 'ACE', 'CAB', 'DAE', 'BFE', 'AEC', 'ADA', 'CCB', 'DFE', 'DBD', 'CCE', 'DFF', 'CFE', 'BFD', 'FCF', 'AAC', 'CDE', 'DFC', 'CFE', 'EBF', 'FFC', 'FAF', 'DDA', 'FBF', 'CCC', 'CDA', 'BEF', 'CEE', 'ADA', 'ECC', 'DAD', 'BFE', 'DEE', 'CFB', 'DBD', 'BBB', 'ECF', 'FFB', 'ACB', 'EDB', 'FEA', 'BFD', 'ADC', 'EDD', 'BEA', 'BFB', 'DFA', 'DFE', 'AAC', 'ECE', 'BCF', 'CCD', 'BBF', 'DEA', 'CCD', 'CBF', 'EDE', 'CCE', 'BFA', 'FEB', 'FFD', 'CCC', 'BBF', 'DCC', 'CFB', 'EBC', 'CDA', 'FDC', 'EBA', 'EEB', 'BFD', 'CBB', 'DCF', 'EBD', 'DBB']) == True\nassert solution.pyramidTransition(\"BDFFBC\", ['AEA', 'FFA', 'DDB', 'ACB', 'AEE', 'CCF', 'ACE', 'BFC', 'DAF', 'DAC', 'ADF', 'FAA', 'FBC', 'EDE', 'ECD', 'ACC', 'FAC', 'EBA', 'AAF', 'EEC', 'ADA', 'ADA', 'CDD', 'DEE', 'FFE', 'AFC', 'BFC', 'EBE', 'BCD', 'EAC', 'BCE', 'DFF', 'BAA', 'CFA', 'CBA', 'AAA', 'CBD', 'DCA', 'EBC', 'CBE', 'CFC', 'ADB', 'FAD', 'AED', 'BDF', 'EBF', 'BAA', 'FFB', 'FFA', 'CAE', 'AAB', 'DEE', 'AAB', 'CFA', 'BDC', 'FBA', 'DDD', 'DBA', 'AEB', 'FDA', 'CEE', 'EDA', 'FEE', 'FEA', 'FAC', 'ECA', 'DBB', 'FBC', 'FDB', 'ADF', 'BEE', 'EDD', 'CCD', 'BEB', 'ECF', 'FBA', 'DDC', 'EAF', 'BEC', 'DBE', 'DDE', 'EBA', 'AEC', 'AEC', 'ACC', 'BAC', 'AFB', 'AEC', 'CCB', 'EFA', 'ECD', 'ACF', 'EBE', 'CBC', 'ABA', 'DCC', 'ADB', 'DFA', 'DBB', 'EBF', 'BDD', 'ECE', 'CFB', 'DBE', 'ACB', 'EBE', 'FDF', 'CDF', 'FEE', 'EDB', 'FFA', 'DEC', 'BDD', 'CBF', 'BAD', 'EFD', 'ECF', 'DBE', 'ECA', 'FFD', 'DFA', 'AEF', 'BEB', 'ACC', 'BCB', 'EDB', 'ECC', 'BBF', 'FCA', 'AFF', 'DBC', 'FFB', 'DEA', 'AFC', 'ADA', 'FDD', 'EFE', 'EAA', 'BFD', 'BDC', 'ACE', 'CEC', 'CAB', 'BEB', 'ACF', 'CAC', 'BEB', 'FEC', 'CBC', 'EFD', 'DBF', 'DEE', 'FAC', 'FBC', 'ADA', 'AFD', 'BAB', 'BEE', 'ECA', 'CBC', 'FDB', 'FCD', 'CBD', 'EAD', 'DFA', 'FEA', 'BDA', 'FEC', 'CEC', 'DCE', 'DAF', 'BEE', 'EFA', 'BCF', 'EFE', 'ECF', 'EAC', 'AEE', 'ABB', 'DDD', 'CBD', 'ADD', 'ECB', 'EFD', 'DAC', 'ECC', 'ECD', 'BFF', 'EAA', 'EDB', 'AAF', 'EDF', 'CFF', 'CFC', 'EAE', 'ECC', 'DFA', 'EAA', 'CEB', 'EDA', 'FCD', 'ADB', 'DDA', 'DBE', 'BDF', 'EED', 'CAA', 'FEF']) == True\nassert solution.pyramidTransition(\"EBECF\", ['BBE', 'EAC', 'EEF', 'DCC', 'EDE']) == False\nassert solution.pyramidTransition(\"CFD\", ['ABC', 'AFE', 'EAE', 'FEC', 'CBF', 'BCE', 'FDB', 'BBC', 'EFD', 'CFF', 'ADB', 'FAB', 'FCE', 'ADA', 'FFA', 'CDB', 'CBD', 'AAF', 'ADA', 'ACA', 'BEF', 'CAB', 'BED', 'BBC', 'FBB', 'EEF', 'BDA', 'EBA', 'ECC', 'FCA', 'FCF', 'AAE', 'CDD', 'CBF', 'BBE', 'BFF', 'ABF', 'DDC', 'BDA', 'EBE', 'EBB', 'DAD', 'BAA', 'EBA', 'BAA', 'AAE', 'AEC', 'CBD', 'EFE', 'FEE', 'ADF', 'ECE', 'AAC', 'FBF', 'CDC', 'ECD', 'FCD', 'CBC', 'EDD', 'AFD', 'DDA', 'CCB', 'DCE', 'DAE', 'ACE', 'BBD', 'DDD', 'BDA', 'CEF', 'BAE', 'DCC', 'EFE', 'CBA', 'BEC', 'FAC', 'BDA', 'AAB', 'DEF', 'BFA', 'FCC', 'FCB', 'BFB', 'FBA', 'BAC', 'BFC', 'CBD', 'CCC', 'AEB', 'EFD', 'EAA', 'EAB', 'DAE', 'DCA', 'DDF', 'EEE', 'DCB', 'EFC', 'BEB', 'AFC', 'BDD', 'BDA', 'FAD', 'DAC', 'ABC', 'CCD', 'BEC', 'FDD', 'BBB', 'ACA', 'DEB', 'BAB', 'CFA', 'ABF', 'AEC', 'AFB', 'ACA', 'CDD', 'AEE', 'BBB', 'FDC', 'BCB', 'DCD', 'ACF', 'EDD', 'BAC', 'AEE', 'CBB', 'EBF', 'ADA', 'CCC', 'EFD', 'FAF', 'AAB', 'ADF', 'EFE', 'BBE', 'CFB', 'ABA', 'FDC', 'DCE', 'ADE', 'EBB', 'EFC', 'DFF', 'EBE', 'DFC', 'EBD', 'DAA', 'BBA', 'ECC', 'ABB', 'FFE', 'EBE', 'ECF', 'BFD', 'BAD', 'CCB', 'FBC', 'AAD', 'BAA', 'ABD', 'DAD', 'BFE', 'FBA', 'FFB', 'AFC', 'ACC', 'DCF', 'AFA']) == True\nassert solution.pyramidTransition(\"BDBEF\", ['BAD', 'CEE', 'DFF', 'FDC', 'CAD', 'FBA', 'FBB', 'BFE', 'FCE', 'ECB', 'ADE', 'DFB', 'CCF', 'BAF', 'FBA', 'AFD', 'CEF', 'EEB', 'BDB', 'CFA', 'ADA', 'DEF', 'BCD', 'DDE', 'ECA', 'BDC', 'AEA', 'FCF', 'BAD', 'FAD', 'FEC', 'DFC', 'CBB', 'EEF', 'ECF', 'AAA', 'EEB', 'CBC', 'BCC', 'DFA', 'DDA', 'DFD', 'EAF', 'FCD', 'CCA', 'BCE', 'DEF', 'DBE', 'CDB', 'FAC', 'CDA', 'BBC', 'BBD', 'FFA', 'ADD', 'EAC', 'FDA', 'EAA', 'AFA', 'ADC', 'AAB', 'FAC', 'CFF', 'FCE', 'EFA', 'EFB', 'DAC', 'ADA', 'DEF', 'EFC', 'DEB', 'EEF', 'FDA', 'DEB', 'DCB', 'FCC', 'DEB', 'FEE', 'EEB', 'EDA', 'FDF', 'BEF', 'DBB', 'BFD', 'AAF', 'DFA', 'BBD', 'DAE', 'AAA', 'DDB', 'FCF', 'CEE', 'AAF', 'DEE', 'DEA', 'EBF', 'FDE', 'DBB', 'ECF', 'FDC', 'BDB', 'EFE', 'CCC', 'AEF', 'CAC', 'AFD', 'BEC', 'AAC', 'CFC', 'BEB', 'BEA', 'ECA', 'AFF', 'ACC', 'FCC', 'CFE', 'CFA', 'BEA']) == True\nassert solution.pyramidTransition(\"FDCFCD\", ['DBA', 'CAA', 'AAA', 'DAC', 'CFC', 'EBE', 'EBA', 'FEB', 'ECA', 'CAB', 'EBF', 'BDB', 'FAE', 'AAE', 'AFF', 'DFD', 'CDE', 'AAC', 'EBF', 'CDD', 'CEE', 'EFA', 'EDE', 'DEC', 'BBF', 'BEC', 'BFD', 'CDE', 'EBA', 'CFF', 'EEE', 'BDF', 'EFA', 'EEA', 'FCD', 'FEA', 'FCA', 'ADA', 'EEC', 'CCB', 'FBC', 'AEF', 'FED', 'CCD', 'EAA', 'DFD', 'CBC', 'ECF', 'EDD', 'EDF', 'DDC', 'AED', 'BAC', 'CAE', 'EBF', 'BBD', 'CAA', 'ADC', 'BBD', 'AAA', 'BDF', 'BFE', 'BCE', 'FCD', 'EDA', 'ECD', 'EFA', 'FAD', 'CDA', 'BBC', 'EEF', 'ECD', 'FFA', 'CAD', 'CFD', 'DAB', 'FFB', 'BBC', 'EDE', 'EBF', 'BFA', 'DFF', 'EBD', 'FEF', 'CAB', 'CBA', 'DFC', 'DFE', 'BAF', 'FFE', 'EDA', 'DCB', 'EDF', 'DAF', 'ECA', 'ADC', 'CBD', 'BDC', 'CEB', 'FFF', 'EFA', 'DAE']) == False\nassert solution.pyramidTransition(\"AABEB\", ['ABD', 'BBA', 'FCB', 'DBE', 'AFA', 'AFD', 'CEE', 'ABF', 'DAF', 'ECD', 'BAD', 'FCA', 'EFB', 'FEE', 'CFE', 'ECE', 'DCB', 'BCC', 'CED', 'BCF', 'AAD', 'FCD', 'FCF', 'CDA', 'EEE', 'EBC', 'FCB', 'FEF', 'BEE', 'AFA', 'DAD', 'EEF', 'BFD', 'EFC', 'ADE', 'FAA', 'FEC', 'CDA', 'BCB', 'BFE', 'FEF', 'DEA', 'EAA', 'FFC', 'FDA', 'DED', 'AAB', 'DEC', 'CBD', 'AFB', 'DDD', 'FBF', 'DCF', 'BCE', 'EDB', 'BBF', 'BEC', 'BDA', 'DAE', 'AEB', 'FCB', 'FAE', 'EBE', 'AAD', 'AAA', 'CAA', 'BBD', 'FEA', 'EED', 'DED', 'EEA', 'EEF', 'FFD', 'CFF', 'BFA', 'ECE', 'CFA', 'BDC', 'CBE', 'FDC', 'AAD', 'EDC', 'CEF', 'BBF', 'FCF', 'BEE', 'EDF', 'ACB', 'FAD', 'CFC', 'DFC', 'CEE', 'CBF', 'BCD', 'BDE', 'ADE', 'DAF', 'ABF', 'CAE', 'FAD', 'DEB', 'BBB', 'CEF', 'DDC', 'DAC', 'CBD', 'DEF', 'DCA', 'BFB', 'FCA', 'ABC', 'BDD', 'AFA', 'DDE', 'EFA', 'CDB', 'FBF', 'BCE', 'DDA', 'BCC', 'DAD', 'EAA', 'EDA', 'DFA', 'BEB', 'FEC', 'ECB', 'EED', 'FBD', 'BDB', 'ECD', 'AFB', 'FAD', 'DAC', 'BFD', 'FAB', 'ABE', 'CDC', 'FAF', 'DCA', 'CCD', 'ECA', 'FED', 'DBD', 'ADA', 'CEB', 'CAB', 'CCE', 'BEA', 'AFA', 'EBA', 'ADC']) == True\nassert solution.pyramidTransition(\"FBFE\", ['DFD', 'FFF', 'CCB', 'EDD', 'DBC', 'CED', 'ABC', 'DDE', 'AEF', 'EDC', 'ACF', 'FBF', 'CFB', 'FDE', 'BDB', 'FBF', 'DFF', 'ECF', 'FDA', 'DBE', 'BAA', 'ECE', 'ABB', 'EFD', 'BFB', 'FDD', 'BED', 'DEC', 'DAB', 'FBC', 'CFC', 'ADE', 'EAC', 'FAD', 'FEF', 'CCB', 'BBA', 'EFD', 'DBF', 'EEE', 'DAF', 'FAF', 'EEA', 'DDC', 'FED', 'FCC', 'BCD', 'BDD', 'EAA', 'CAC', 'DFF', 'CEE', 'DEF', 'DAF', 'BEC', 'EAD', 'FAF', 'CDA', 'AAD', 'BEC', 'DFC', 'ECA', 'EFB', 'DCA', 'BAC', 'BED', 'EAE', 'ACE', 'DCC', 'CFF', 'FFB', 'DFB', 'ACF', 'DCB', 'CFE', 'CAF']) == True\nassert solution.pyramidTransition(\"BEED\", ['DEC', 'DBE', 'FBC', 'EFA', 'DAC', 'DAC', 'BBB', 'DAA', 'BFB', 'CAD', 'CED', 'EEE', 'BFA', 'EAD', 'FEE', 'FAE', 'AFA', 'CEE', 'BBF', 'FBB', 'CBB', 'DDB', 'DAF', 'FFA', 'BCE', 'DDD', 'BFB', 'ACA', 'AEA', 'DFC', 'EEC', 'BFE', 'CFA', 'DBE', 'ECD', 'AAC', 'BCE', 'CEE', 'FCF', 'EBE', 'ADC', 'DEA', 'EDA', 'ABF', 'EAC', 'EBC', 'DDF', 'BAF', 'FAE', 'CDA', 'CDA', 'CBC', 'EFA', 'AAF', 'BDB', 'BCE', 'CBD', 'FFB', 'EFD', 'BEE', 'EAB', 'FDF', 'DCB', 'BED', 'AAA', 'FDB', 'BAA', 'DEA', 'FDA', 'CCE', 'DFC', 'FDB', 'EAB', 'ADA', 'FEC', 'FCF', 'DEC', 'CFB', 'EDE', 'AFF', 'DEA', 'BAD', 'EED', 'EDD', 'CAB', 'ACA', 'CAB', 'EBC', 'BFC', 'CDA', 'DAB', 'CAA', 'EBA', 'CEA', 'FAD', 'EDE', 'AFF', 'CFC', 'BEA', 'FBD', 'BED', 'AFD', 'DBA', 'FFB', 'ABB']) == True\nassert solution.pyramidTransition(\"CDFDBF\", ['BFA', 'DBD', 'AFD', 'AAB', 'AAC', 'ABD', 'EDF', 'BBC', 'EDD', 'EFD', 'BCB', 'DDC', 'EDF', 'CCF', 'ADB', 'FCE', 'AFF', 'CCA', 'FDD', 'DDF', 'DBE', 'ECE', 'FEB', 'CCC', 'EBB', 'BDF', 'DFD', 'ACF', 'DFB', 'DCE', 'AEE', 'AAC', 'BAC', 'FFF', 'FEA', 'CEF', 'FEA', 'ABE', 'BAC', 'BBD', 'CAC', 'FAF', 'AEB', 'BAB', 'CAE', 'DFE', 'AFB', 'DAC', 'EBA', 'EBF', 'BDD', 'EEC', 'CDB', 'BBB', 'BDB', 'AFF', 'FAB', 'EAA', 'EDF', 'DFA', 'FCF', 'DEB', 'AFB', 'ECC', 'EBF', 'CFB', 'CFF', 'BBD', 'EFF', 'FEA', 'CDF', 'EFA', 'BDB', 'DFD', 'FDD', 'CCF', 'CCD', 'CEC', 'FBA', 'ADA', 'EFB', 'CAE', 'CFA', 'EEF', 'DDC', 'DEB', 'CBB', 'AEA', 'ABD', 'DAE', 'BFB', 'DEF', 'CBA', 'CEE', 'AFF', 'FAB', 'DBE', 'FCC', 'ECF', 'BEA', 'AFC', 'CCF', 'ACC', 'CFE', 'CEB', 'ECE', 'ADB', 'FBE', 'ACE', 'BBC', 'FEF', 'FAD', 'FEB', 'CEB', 'EDE', 'BEE', 'AAC', 'CFB', 'EDF', 'DEE', 'BDD', 'CEA', 'DCC', 'EDA', 'BEA', 'EBF', 'DAB', 'EBE', 'CCF', 'ECF', 'AFB', 'AEB', 'DAA', 'CBE', 'ADD', 'FAB', 'FDE', 'EEB', 'CFD', 'AFC', 'DCA', 'AAB', 'CED', 'ECC', 'EAC', 'FCB', 'BFD', 'BAA', 'DFA', 'EAF', 'EFC', 'DAA', 'FDE', 'CAC', 'BBC', 'ECE', 'DAB', 'AAF', 'DBB', 'DAD', 'EEB', 'ACA', 'AED', 'EEB', 'FEE', 'FFA', 'ADA', 'BBA', 'ABF', 'FBE', 'DEC', 'BDC', 'DCA', 'ECD', 'ABA', 'EDE', 'DAB', 'CDA', 'FDD', 'CAA', 'FBE', 'CBE', 'EDB']) == True\nassert solution.pyramidTransition(\"BDF\", ['FAE', 'ECB', 'FCD', 'DFB', 'CEF', 'BBA', 'FAF', 'BCC', 'AEB', 'CED', 'AFF', 'BAA', 'FDE', 'BEF', 'CCB', 'BAF', 'FAC', 'AFE', 'ABA']) == False\nassert solution.pyramidTransition(\"DACDB\", ['FBB', 'FCD', 'DDF', 'DBD', 'BCD', 'EAB', 'DBE', 'DCC', 'FBD', 'ADB', 'DBF', 'DEA', 'BAC', 'EDB', 'DDE', 'DDC', 'ECE', 'CBC', 'DEA', 'DBB', 'AFB', 'BFD', 'BEC', 'FFC', 'DCD', 'AFE', 'DBF', 'FEC', 'CDD', 'DCC', 'FFB', 'AFC', 'AFC', 'CFA', 'DFE', 'AFA', 'FFB', 'EDB', 'FFF', 'EFE', 'CED', 'FFE', 'EAF', 'BBB', 'ADE', 'FBF', 'FED', 'AEB', 'DCA', 'BBE', 'CFA', 'BAD', 'ACC', 'EFE', 'CCD', 'DAF', 'BBE', 'FFD', 'FDE', 'ABC', 'FAA', 'CBC', 'DCB', 'CFB', 'AAF', 'BED', 'DEE', 'FFB', 'FEF', 'DFD', 'CDD', 'FBD', 'BFC']) == True\nassert solution.pyramidTransition(\"BFDAFC\", ['CBD', 'BAE', 'CFA', 'DCC', 'EEC', 'AEA', 'ECE', 'FBC', 'DAC', 'BEB', 'ECC', 'EEE', 'EAF', 'ACC', 'BEA', 'FAF', 'CBF', 'EAC', 'ACB', 'DEA', 'DEA', 'DBC', 'DAA', 'BDD', 'DDB', 'DEA', 'EAF', 'AAE', 'AFA', 'FDC', 'ADE', 'EBE', 'CBF', 'ABF', 'ABB', 'BAF', 'AEE', 'DDB', 'DCA', 'ACF', 'FCC', 'AFF', 'BBB', 'AAD', 'DAB', 'FFB', 'EDA', 'AFE', 'FEB', 'DEC', 'BDF', 'DBA', 'CDF', 'AFD', 'AFE', 'BEF', 'DAE', 'EEE', 'DDF', 'ADC', 'DAC', 'ADD', 'AEE', 'DBA', 'FDC', 'BDA', 'FEE', 'DAB', 'BCC', 'DAD', 'DAA', 'ABE', 'CAC', 'EDC', 'EAB', 'AFB', 'BAE', 'DEA', 'ADC', 'CCE', 'AAC', 'ADA', 'ADF', 'CDE', 'BDF', 'CFE']) == False\nassert solution.pyramidTransition(\"DA\", ['BAD', 'EEF']) == False\nassert solution.pyramidTransition(\"ABFD\", ['EBB', 'DEB', 'ACE', 'ACE', 'FDF', 'CCC', 'DDA', 'ABC', 'CAA', 'CDB', 'DDC', 'BEC', 'EEF', 'ABF', 'BCA', 'AAA', 'FFD', 'EFB', 'FFD', 'DDA', 'FBA', 'FCF', 'AEB', 'DDB', 'CFF', 'AFB', 'CAD', 'FAD', 'BDD', 'CDE', 'DED', 'ECA', 'EBD', 'AEE', 'EDA', 'FBD', 'DBD', 'FBE', 'FFF', 'FAE', 'DCB', 'AFA', 'BFD', 'AEB', 'EAA', 'ADD', 'DCC', 'BFA', 'DDD', 'DFC', 'EAF', 'DFD', 'BBD', 'ACB', 'FEB', 'DAF', 'AAE', 'DBD', 'FEF', 'DEC', 'AFE', 'ADA', 'DFA', 'DFB', 'BBB', 'FDF', 'AEF', 'FBC', 'CED', 'FEB', 'FAB', 'CDF', 'EAF', 'DEC', 'BCE', 'BAA', 'BEF', 'CFC', 'ADD', 'CBC', 'BFF', 'CCB', 'FAC', 'CEF', 'DCF', 'FCA', 'ADD', 'DAE', 'FBD', 'AEF', 'EFF', 'EDE', 'FED', 'FDC', 'DCE', 'BFB', 'EAB', 'DAF', 'BBA', 'DAB', 'DFD', 'ECD', 'FAA', 'CCA', 'FBA', 'BAF', 'CAF', 'FFE', 'FEB', 'EDE', 'AFF', 'EDA', 'ABF', 'CAB', 'FAB', 'CFA', 'AFB', 'BDE', 'FBE', 'DDA', 'EEA', 'ADC', 'CED', 'EAA']) == True\nassert solution.pyramidTransition(\"CCEDED\", ['EDC', 'FAF', 'ADC', 'FBD', 'CFA', 'BAB', 'BFA', 'EEF', 'BCA', 'BEB', 'BFF', 'EEF', 'CCD', 'BEA', 'EDE', 'CBA', 'DFB', 'BAE', 'CBB', 'DFD', 'FEA', 'AEF', 'BAE', 'FFA', 'CAC', 'BEC', 'ECD', 'ADE', 'EDC', 'DBD', 'DCF', 'ECB', 'EAC', 'CAF', 'CEA', 'CFB', 'CEE', 'DFC', 'DCB', 'CCD', 'CBC', 'CDF']) == False\nassert solution.pyramidTransition(\"AFFF\", ['BAB', 'DBB', 'BEC', 'FCB', 'AAA', 'EEA', 'FDA', 'BEB', 'ACD', 'CBB', 'CEF', 'ACA', 'CEE', 'AFD', 'EAF', 'FFB', 'EBF', 'ABB', 'ECE', 'AEC', 'BCE', 'DFE', 'AAF', 'AEE', 'ADB', 'ECB', 'BDD', 'CAD', 'ECC', 'DDB', 'BDB', 'AFE', 'EFB', 'DDB', 'EFF', 'EFE', 'EFB', 'FCC', 'BFA', 'ABA', 'ECE', 'DEE', 'ADA', 'EDF', 'EBF', 'BDF', 'BBD', 'CFF', 'ABF', 'FBC', 'DFD', 'CBE', 'FCF', 'AEE', 'FBB', 'DED', 'ABC', 'DEE', 'EAF', 'ABC', 'FAC', 'FDB', 'BBB', 'AFB', 'BFE', 'BCD', 'BFE', 'BBA', 'FCB', 'BDE', 'BCA', 'EBF', 'FCF', 'EAD', 'CBC', 'EFE', 'EBB', 'DDA', 'CBB', 'AFF', 'ABE', 'BAC', 'FBB', 'BBE', 'FCD', 'ABD', 'CDA', 'FCA', 'BEC', 'FCF', 'EAE', 'BAE', 'BDC', 'FAB', 'BFD', 'CCD', 'DDD', 'AFD', 'EDD', 'EAD', 'EAC', 'DFF', 'BEE', 'ABF', 'BCF', 'CFB', 'FAF', 'DFD', 'BDE', 'EBD', 'AAD', 'FAA', 'CFB', 'AEB', 'CEC', 'EDB', 'ABB', 'BAA', 'DCF', 'FCE', 'CAA', 'FAD', 'DAD', 'EFC', 'AAD']) == True\nassert solution.pyramidTransition(\"ADCE\", ['AEF', 'FDE', 'CEC', 'BCC', 'FAB', 'FEA', 'EEA', 'BFB', 'EDB', 'DFC', 'ECE', 'BBC', 'CFC', 'DBF', 'FAD', 'EBF', 'DBF', 'CCE', 'DED', 'EDA', 'CDE', 'AFA', 'DAE', 'CAE', 'FFE', 'DFF', 'FBE', 'DBF', 'EFA', 'DCB', 'FEE', 'DEE', 'BAF', 'EDE', 'ACA', 'DBE', 'FBD', 'BEF', 'AFE', 'ABD', 'BAC', 'DCB', 'AEB', 'DEB', 'BCC', 'ABB', 'CDD', 'CAE', 'EEF', 'FAF', 'EEB', 'DAC', 'DCD', 'ABF', 'DEF', 'CAF', 'FEE', 'EAB', 'DED', 'EAA', 'AEF', 'CFF', 'CCB', 'CAD', 'ACA', 'FEB', 'CEA', 'DAD', 'EED', 'FBA', 'DED', 'DDE', 'ECD', 'CDD', 'EBA', 'CAD', 'BEA', 'CEB', 'CEA', 'EBC', 'EAC', 'FFF', 'AFE', 'AEC', 'FBF', 'CAD', 'DCC', 'FBF', 'EEA', 'CFF', 'DEE', 'CED', 'CEE', 'FDA', 'ACD', 'FDF', 'AAF', 'BDC', 'FFE', 'AAE', 'CBA', 'ABE', 'FDF', 'EDC', 'FCE', 'CAD', 'CFE', 'EBB', 'FED', 'ABF', 'BCB', 'BFF', 'DAF', 'BAC', 'FDD', 'BDC', 'BEC', 'AEC', 'BCB', 'ECC', 'CAF', 'CAC', 'DAF', 'FBF', 'ADC', 'AFB', 'FED', 'FEA', 'EFB', 'ADB', 'DAA', 'CFC', 'FBF', 'CEE', 'CEE', 'CBE', 'DBC', 'FDD', 'BDE', 'EAF', 'EAD', 'BEE', 'DDF', 'CEE', 'FBF', 'ABD', 'BFC', 'ACB', 'EFB', 'BEF', 'BCD']) == True\nassert solution.pyramidTransition(\"EFE\", ['BCD', 'EAE', 'FAD', 'BCC', 'FAB', 'DDB', 'CFF', 'FDD', 'BCE', 'EDC', 'CBA', 'EDD', 'DDA', 'AFB', 'EFC', 'ACB', 'FCD', 'CBE', 'DBE', 'FFF', 'FDB', 'AEE', 'DAC', 'FAA', 'CFF', 'FDF', 'ABD', 'DFE', 'DDB', 'FBC', 'AFE', 'EFA', 'CFD', 'AFB', 'CAF', 'DDE', 'EFC', 'ACF', 'BAD', 'CFC', 'FAE', 'FFE', 'FDB', 'CFF', 'BFA', 'ADC', 'DCE', 'DCF', 'DDE', 'DCD', 'CCC', 'EFA', 'AAB', 'DEA', 'FAD', 'BDB', 'ACB', 'CAB', 'BDA', 'DEC', 'FAB', 'CEF', 'FFD', 'CCB', 'FBF', 'EBC', 'ADA', 'AAB', 'EFB', 'BFD', 'FAF', 'FDA', 'CCC']) == False\nassert solution.pyramidTransition(\"BB\", ['EED', 'AAE', 'FAA', 'ACA', 'ABC', 'CBE', 'CCE', 'DAC', 'FAC', 'FED', 'AEE', 'FFD', 'CAB', 'ADE', 'DCA', 'BDB', 'EFD', 'DCE', 'FCB', 'CFE', 'DCF', 'FAE', 'BCD', 'AFB', 'DAB', 'AED', 'DDB', 'CBA', 'FBA', 'CFA', 'AAF', 'ECB', 'BAE', 'EAE', 'DDD', 'BCA', 'CCE', 'FBF', 'FFD', 'EBC', 'BAA', 'EFE', 'DEC', 'EFC', 'ADB', 'BAF', 'FAD', 'EBA', 'ADF', 'FAF', 'ECC', 'FDF', 'FBF', 'FBA', 'FFD', 'ABE', 'BFE', 'AFE', 'FFB', 'ABC', 'FDD', 'EAD', 'CEE', 'DAB', 'FEB', 'BAE', 'DCA', 'ABA', 'BBE', 'EEF', 'EEE', 'ABB', 'FDE', 'DDD', 'CFB', 'FBD', 'DCC', 'AFF', 'EEE', 'CEE', 'BEA', 'ECD', 'CDC', 'DBE', 'ACB', 'FBE', 'CBB', 'EAD', 'CBB', 'BFC', 'EBE', 'FDB', 'CAE', 'CEA', 'FEA', 'BCD', 'EED', 'BCF', 'DAC', 'DAC', 'BFE', 'CAF', 'FEB', 'BEF', 'BEA', 'BAE', 'CBC', 'FAD', 'CCD', 'DCD', 'DAB', 'FAA', 'CDE', 'EFE', 'FCD', 'CFC', 'AFD', 'EEC', 'DEF', 'FDE', 'AEA', 'AEC', 'AFF', 'FBF', 'FFC', 'ABE', 'DDE', 'DDC', 'DAD', 'DCB', 'FBA', 'AAD', 'AAD', 'BCE', 'FEC', 'BEC', 'BAD', 'AFB', 'AEA', 'AEE', 'CFE', 'EFD', 'FDF', 'EBF', 'CCE', 'BCA', 'AEE', 'BFC', 'BEB', 'FFD', 'ADC', 'DEF', 'CFF', 'FCB', 'DDE', 'CEF', 'ACE', 'DAE', 'DAA', 'CEE', 'EDE', 'EEE', 'BEB', 'ABC', 'FDA', 'FBC', 'BCC', 'EAF', 'EFD', 'CDD', 'BBA', 'EBF', 'BCA', 'BBB', 'DBD', 'EFC', 'DBF', 'EBE', 'FEF', 'EDF', 'CCC', 'EBD', 'FDF', 'BEC', 'BAD', 'DBA', 'BDD', 'FCC', 'EAC', 'FBA', 'BEB', 'BDF', 'DAA', 'ABC', 'DDB', 'DFA', 'EDA', 'CED', 'ECD', 'CAF']) == True\nassert solution.pyramidTransition(\"DA\", ['EFB', 'BDC', 'EEC', 'CBB', 'EEC', 'EEA', 'FAC', 'BFB', 'FFC', 'BAD', 'DDF', 'EEC', 'FFF', 'EEA', 'CFB', 'EFE', 'ADB', 'ADB', 'CCB', 'AFB', 'EFF', 'FBD', 'DCB', 'ACB', 'DEC', 'BFC', 'DFF', 'AFA', 'DCF', 'CCF', 'FBA', 'FBA', 'AAB', 'BCA', 'CCC', 'DAF', 'DFD', 'EDA', 'FCC', 'ABC', 'FFF', 'CCE', 'ADF', 'BBA', 'BFA', 'ABF', 'ACF', 'BFC', 'DEF', 'FEF', 'DFB', 'CCF', 'BBC', 'CDA', 'CFD', 'ECA', 'FEE', 'EBD', 'BAB', 'CFE', 'FEE', 'ADB', 'DDB', 'DBC', 'ADA', 'FAF', 'EAE', 'ECC', 'AEA', 'FDE', 'CDA', 'FDD', 'ACC', 'FCF', 'DBF', 'EAA', 'EEF', 'DDA', 'BCF', 'FBB', 'CBD', 'DCA', 'CFF', 'BFA', 'ADA', 'FAB', 'BEA', 'AFC', 'DCC', 'FAA', 'DBF', 'FDA', 'FEE', 'ACF', 'EDC', 'DCB', 'AAF', 'DCC', 'FEB', 'AEA', 'EDA', 'FBF', 'BEA', 'AFD', 'EAD', 'DBE', 'FCC', 'BBB', 'EEE', 'EEF', 'CFE', 'EFA', 'ABE', 'EBB', 'ECC', 'AEB', 'BEE', 'DFE', 'ABE', 'BDF', 'ECA', 'ABF', 'DAB', 'DFE', 'DFD', 'CEF', 'ADD', 'BBA', 'EAF', 'AEC', 'CFE', 'CAB', 'DCF', 'ACB', 'ADB', 'ABF', 'DEE', 'AFF', 'ADC', 'FFA', 'FAB', 'DDA', 'BCA', 'BAF']) == True\nassert solution.pyramidTransition(\"EAEC\", ['CAF', 'DFA', 'CDB', 'ECA', 'CCA', 'CDE', 'CDC', 'AAC', 'CBC', 'ACA', 'CEF', 'DCE', 'CEE', 'DBF']) == False\nassert solution.pyramidTransition(\"FB\", ['CEE', 'BDE', 'EBC', 'FFE', 'EFC', 'DBF', 'DBF', 'FAC', 'EFC', 'EFD', 'BAD', 'DCC', 'FAB', 'BED', 'ADF', 'EED', 'CCF', 'EAD', 'CBC', 'DDD', 'EEA', 'EAF', 'BBC', 'EDB', 'EBE', 'AEB', 'CFB', 'EEE', 'CCD', 'CAF', 'CCE', 'FDA', 'EAA', 'CEE', 'CFF', 'FAE']) == False\nassert solution.pyramidTransition(\"BFBCCA\", ['FFC', 'EEB', 'EBC', 'BBE', 'FFE', 'EBB', 'CDE', 'FAC', 'EEC', 'DFA', 'CAC', 'EDA', 'EBB', 'AAE', 'FEA', 'AEA', 'CED', 'DCA', 'BFE', 'BCC', 'BDF', 'ABE', 'ACD', 'CED', 'DDD', 'DCE', 'FAD', 'DCB', 'EEE', 'DAE', 'AFD', 'DBF', 'EFF', 'FAD', 'EAA', 'BDE', 'FBE', 'DCF', 'BEA', 'DAF', 'FCB', 'BDA', 'ACF', 'CBC', 'CFB', 'BAE', 'BCB', 'CFD', 'DAC', 'AAF', 'FBB', 'ECC', 'ABC', 'ECD', 'DCA', 'CCC', 'DDB', 'CDA', 'CFB', 'DFA', 'ACB', 'EBF', 'CEC', 'CCC', 'DFB', 'EEA', 'DAF', 'ADD', 'CDC', 'BAB', 'FEE', 'FCC', 'BCA', 'FBB', 'CCE', 'AFE', 'BDA', 'FBC', 'FAB', 'BDA', 'DAE', 'CEF', 'ECA', 'BAE', 'FBE', 'FAB', 'CBA', 'BAC', 'EEE', 'CDD', 'FDD', 'FFB', 'FEF', 'FFC', 'FDA', 'FBD', 'ADD', 'BCF', 'ACF', 'BCE', 'AED', 'BAB', 'BBB', 'CBA', 'CED', 'BAA', 'BCB', 'EAE', 'FFA', 'EDE', 'BED', 'EFD', 'DCF', 'BEC', 'CDB', 'CAD', 'DDE', 'EBD', 'EAE', 'FEB', 'ACD', 'BCA', 'CAF', 'BAA', 'ABB', 'ECD', 'FBF', 'DBE', 'FFE', 'EAA', 'CAE', 'DAA', 'FEF', 'DDE', 'DCC', 'AAC', 'DDE', 'ADD', 'DEA', 'CED', 'EBC', 'DED', 'AAF', 'BBE', 'BCB', 'FAE', 'DBE', 'FEE', 'CCE', 'AAC', 'EFF', 'BFE']) == True\nassert solution.pyramidTransition(\"DCECB\", ['EFD', 'DFB', 'DED', 'BEF', 'BAF', 'AAC', 'EDA', 'FFB', 'DEB', 'EBA', 'EAD', 'ECF', 'DBA', 'FCB', 'EFE', 'EFA', 'EAB', 'EFB', 'CAE', 'FAC', 'CAF', 'BDA', 'FCF', 'BEB', 'DBA', 'AFE', 'FCD', 'DBA', 'EEC', 'BDD', 'EFF', 'FCF', 'ACB', 'BCD', 'DFB', 'EED', 'FDC', 'EDE', 'FBE', 'DBF', 'DEC', 'DEF', 'BCD', 'BCA', 'CEC', 'AED', 'FEF', 'DAA', 'DAB', 'DEC', 'CCC', 'BDB', 'BFF', 'BDF', 'ECE', 'CBE', 'AAE', 'CEC', 'EEE', 'FED', 'EDD', 'EFC', 'DBB', 'ADB', 'DFD', 'AEA', 'CBE', 'EDB', 'ABD', 'DCD', 'BAA', 'CAA', 'FCA', 'DEE', 'DAD', 'ADF', 'AAE', 'CEC', 'CEC', 'ACA', 'CCA', 'ADD', 'FEA', 'BAF', 'BAB', 'CDD', 'BAC', 'DCC', 'DAC', 'CED', 'EAA', 'EDB', 'BBD', 'EAD', 'AAC', 'BAE', 'CFF', 'CDE', 'AFA', 'BEE', 'EDF', 'DCE', 'BDC', 'BDA', 'AEE', 'FED', 'ECA', 'DEA', 'CEB', 'BDA', 'EBB', 'DAA', 'CDB', 'DFD', 'CDD', 'DDB', 'BCA', 'EDF', 'CCE', 'EDB', 'FFE', 'ABC', 'FEA', 'FAF']) == True\nassert solution.pyramidTransition(\"AADDA\", ['AEF', 'AFF', 'EBD', 'FAD', 'CFA', 'CCD', 'CFD', 'FAA', 'AEE', 'AEB', 'FAB', 'DFB', 'EBC', 'CEC', 'CAF', 'FDC', 'DAB', 'CEA', 'AFD', 'DAB', 'BDA', 'FCC', 'BFB', 'AAB', 'CDB', 'AFC', 'ADB', 'BFD', 'BCD', 'EBD', 'ECB', 'FBC', 'BAC', 'FBA', 'FDD', 'EFB', 'ACC', 'AEF', 'DFF', 'FEE', 'CAE', 'BEC', 'FEE', 'BBC', 'DBD', 'CED', 'BDE', 'FBD', 'EAE', 'CBD', 'CCF', 'ACB', 'AFC', 'EDC', 'ECD', 'DFA', 'BDB', 'DAA', 'FAE', 'CBD', 'FBE', 'BEE', 'ACE', 'AEA', 'FAE', 'FBD', 'BCE', 'BAF', 'DEB', 'DFA', 'DFE', 'FCE', 'EED', 'EAA', 'CDF', 'CAA', 'FEB', 'BAB', 'BFB', 'BBF', 'BBC', 'DAB', 'CDE', 'ACA', 'FCE', 'DAE', 'BAC', 'FBB', 'AEC', 'DBE', 'FAA', 'AFE', 'CFF', 'BEB', 'BDE', 'FDD', 'DDB', 'CFD', 'FCC', 'BFC', 'FFB', 'BDE', 'FFE', 'BEE']) == True\nassert solution.pyramidTransition(\"BABA\", ['DEA', 'FFE', 'EEB', 'ABB', 'DFC', 'ACF', 'DAB', 'FBB', 'EFE', 'BBB', 'DEB', 'CDE', 'BDC', 'EBD', 'AFE', 'DCA', 'AAD', 'CCA', 'BEB', 'EFE', 'DAE', 'BBE', 'BCA', 'EDC', 'FEF', 'CBC', 'DEB', 'AFD', 'FEB', 'AAE', 'AAF', 'EFC', 'CBA', 'AFC', 'EDF', 'BEE', 'AFA', 'BDC', 'BFF', 'BCA', 'CBC', 'CBD', 'DBC', 'FBF', 'BAD', 'BBE', 'DCB', 'CAF', 'EFC', 'CDD', 'ECD', 'BDC', 'CAB', 'BDE', 'AEF', 'CCD', 'FAE', 'DDA', 'EFB', 'FEE', 'CDC', 'EEC', 'BCE', 'AAE', 'FFD', 'ADD', 'FDE', 'DEC', 'EBD', 'BEE', 'BFB', 'ABF', 'BDE', 'AAD', 'CDA', 'AEC', 'CAA', 'EEF', 'CDC', 'FCA', 'EED', 'BCB', 'DDA', 'BDC', 'CDE', 'DFD', 'EAB', 'BDD', 'EBE', 'CED', 'EDD', 'BEA', 'ECB', 'DCA', 'BDC', 'FCC', 'ECB', 'EBB', 'ECC', 'DDF', 'DEE', 'BFA', 'EBB', 'FDD', 'AEC', 'FBC', 'DFD', 'BFF', 'CEF', 'AAE', 'ECC', 'FBD', 'DDD', 'CDD', 'CBB', 'DFA', 'BBF', 'BBF', 'CBF', 'AAA', 'EEC', 'CBE', 'ADC', 'DCC', 'BBE', 'ABD', 'EEE', 'BBB', 'AEB', 'DBE', 'ADB', 'DFF', 'EDF', 'EEF', 'CCD', 'ADE', 'BCD', 'FAA', 'ECE', 'FDC', 'FBB', 'CAB', 'FFA', 'FCF', 'CEF', 'DBE', 'DDC', 'FBB', 'BAC', 'ADE', 'DCB', 'FED', 'CFA', 'BDF', 'DEC', 'CBE', 'BDC', 'FAA', 'DEE', 'ACC', 'DBD', 'BDA', 'BEB', 'ABE', 'DCB', 'EFE', 'EDA', 'DCE', 'EFE', 'FBC', 'ACE', 'DCB', 'AEB', 'FFD', 'DBE', 'BCF', 'BEA', 'EAE', 'FFC']) == True\nassert solution.pyramidTransition(\"ADEC\", ['ABF', 'DAD', 'CCC', 'CBB', 'DBC', 'AAB', 'CAF', 'DEE', 'EED', 'BCF', 'CDC', 'CFB', 'BAF', 'CEA', 'EFB', 'FEC', 'FCB', 'FDE', 'EBE', 'FCC', 'FFD', 'EAB', 'BFE', 'CBD', 'AAD', 'ECF', 'EDB', 'AAB', 'ECE', 'CBC', 'AFD', 'CDB', 'ABA', 'AEA', 'ADD', 'FEF', 'DBA', 'BEC', 'FCD', 'ABA', 'DBA']) == True\nassert solution.pyramidTransition(\"CF\", ['CAC', 'CBD', 'DAA', 'FBD', 'CBD', 'FED', 'DCA', 'CDB', 'FEA', 'CED', 'ECB', 'CFB', 'CAA', 'ECA', 'FED', 'FFA', 'BED', 'FBA', 'EAC', 'CAD', 'CDB', 'CEB', 'EBF', 'CED', 'CFD', 'DAD', 'EDF', 'CFD', 'ECF', 'EED', 'ABF', 'FEE', 'CBD', 'DCA', 'EFE', 'DED', 'EDC', 'BFB', 'EAA', 'BCD', 'FCE', 'CAC', 'CBE', 'ECA', 'ACB', 'BEC', 'CFA', 'AAB', 'FDD', 'ECB', 'ECF', 'CAB', 'DAD', 'CBE', 'DBD', 'EFA', 'FBC', 'BBF', 'FDF', 'FDA', 'DFE', 'FEA', 'EBC', 'BFF', 'CCC', 'ACD', 'BBF', 'CFC', 'FAA', 'ABF', 'AFB', 'FBE', 'BFB', 'FFB', 'FFF', 'AAD', 'CCB', 'FCE', 'BFD', 'CCE', 'BCF', 'DDD', 'DEC', 'ABC', 'CED', 'CBB', 'FCF', 'DEF', 'DAF', 'AAA', 'CFF', 'CCE', 'DFD', 'BDA', 'DBD', 'CFC', 'ADE', 'EFB', 'DFA', 'CEF', 'DFD', 'ADD', 'EEC', 'CAF', 'EAC', 'ADA']) == True\nassert solution.pyramidTransition(\"CF\", ['ECD', 'BBB', 'AAE', 'FAE', 'BEB', 'ACD', 'DAE', 'BDE', 'EAD', 'FFD', 'DCB', 'BCE', 'CAC', 'CFE', 'AFC', 'FBA', 'ACD', 'ADA', 'BBD', 'DBC', 'EEA', 'FEA', 'BAE', 'FBB', 'FAE', 'BFF', 'ECB', 'FFC', 'CFC', 'ECD', 'CDC', 'DFB', 'BBE', 'CBD', 'DCD', 'BDB', 'CDA', 'CAE']) == True\nassert solution.pyramidTransition(\"EFDCEE\", ['EEA', 'EEF', 'AEF', 'FBE', 'CDB', 'CCA', 'FAF', 'BBF', 'AAB', 'CAF', 'BAE', 'CCA', 'FAC']) == False\nassert solution.pyramidTransition(\"FC\", ['FFC', 'DFC', 'BFF', 'CAE', 'FBC', 'FCB', 'EAC', 'BDD', 'DFA', 'FBC', 'AAF', 'AEF', 'ECB', 'EAE', 'EFF', 'FBD']) == True\nassert solution.pyramidTransition(\"FFCDA\", ['EAB', 'BEA', 'BCB', 'FDA', 'DDE', 'CEA', 'EFB', 'ECF', 'BDA', 'FBA', 'AEA', 'BDE', 'EBC', 'BCA', 'AFD', 'FBF', 'EDE', 'BFD', 'EFB', 'ABA', 'EFA', 'CCB', 'FDC', 'ADF', 'FCF', 'CBB', 'FFE', 'FCC', 'BEF', 'BAA', 'BEF', 'AAF', 'DAA', 'FEA', 'ABE', 'DBE', 'DAE', 'EAD', 'FFC', 'ACB', 'ABD', 'EAD', 'EDE', 'BDE', 'FEB', 'CAE', 'BCE']) == False\nassert solution.pyramidTransition(\"CBCF\", ['EDB', 'FFE', 'CCD', 'DAD', 'FEA', 'ACD', 'EBB', 'EEE', 'ECE', 'FDC', 'EDE', 'EFA', 'DFF', 'BEA', 'EFB', 'ADB', 'CFC', 'CFF', 'AFC', 'EEE', 'EAA', 'AFA', 'BCE', 'BCC', 'DCE', 'ECF', 'FDC', 'DDD', 'BBD', 'DCA', 'FEE', 'CFD', 'FDD', 'EFF', 'AFB', 'CEC', 'FAD', 'FBF', 'FBB', 'BFA', 'FCE', 'ABB', 'CCC', 'CED', 'ACD', 'AEA', 'ECE', 'BAA', 'DAA', 'EEF', 'EBE', 'BAF', 'BEB', 'DDC', 'CEF', 'DBB', 'CBA', 'DEA', 'DEF', 'BAD', 'FAE', 'BBF', 'DBF', 'EAA', 'FCE', 'BBB', 'EEF', 'DCF', 'BDB', 'EDB', 'BAA', 'BDE', 'BEC', 'EFE', 'DDC', 'CFE', 'BEA', 'AEF', 'EEA', 'CAE', 'FFC', 'EAD', 'ACF', 'FFD', 'CDB', 'CFE', 'DDE', 'DEA', 'FAE', 'CFF', 'DBF', 'DCA', 'DAE', 'ECF', 'CCB', 'FAA', 'DAE', 'FEB', 'EFA', 'BDA', 'EDA', 'BEE', 'CCC', 'FAF', 'AEF', 'EAF', 'DBB', 'ADD', 'BDD', 'ECE', 'ADB', 'FAE', 'AFD', 'DBC', 'ACC', 'CFF', 'CCB', 'CDA', 'CDD', 'CCB', 'EFA', 'FED', 'EFC', 'EBA', 'AED', 'AAA', 'AFA', 'FBD', 'AEF', 'DEF', 'ACF', 'CAC', 'DFF', 'BBA', 'FCE', 'DBC', 'BCD', 'FBA', 'CFC', 'FEB', 'ABD', 'DDD', 'CEA', 'CFF', 'FCC', 'BEC', 'CAB', 'FBB', 'DDA', 'ECE', 'BFC', 'CBA', 'EAB', 'BEF', 'CAF', 'DBD']) == True",
  "inefficient_solution": "class Solution:\n    def pyramidTransition(self, bottom: str, allowed: List[str]) -> bool:\n        d = {a: {} for a in bottom}\n        for a, b, c in allowed:\n            if a not in d:\n                d[a] = {}\n            if b not in d[a]:\n                d[a][b] = []\n            d[a][b].append(c)\n\n        def dfs(s):\n            if len(s) == 1:\n                return True\n            t = []\n            for i in range(len(s) - 1):\n                a, b = s[i], s[i + 1]\n                if a not in d or b not in d[a]:\n                    return False\n                cs = d[a][b]\n                if len(cs) == 0:\n                    return False\n                t.append(cs)\n            return any(dfs(''.join(nxt)) for nxt in itertools.product(*t))\n\n        return dfs(bottom)",
  "is_python": true
}