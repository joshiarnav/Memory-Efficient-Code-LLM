{
  "problem_idx": 2784,
  "task_name": "Check if Array is Good",
  "markdown_description": "\nYou are given an integer array `nums`. We consider an array **good** if it is a permutation of an array `base[n]`.\n\n\n`base[n] = [1, 2, ..., n - 1, n, n]` (in other words, it is an array of length `n + 1` which contains `1` to `n - 1` exactly once, plus two occurrences of `n`). For example, `base[1] = [1, 1]` and `base[3] = [1, 2, 3, 3]`.\n\n\nReturn `true` *if the given array is good, otherwise return*`false`.\n\n\n**Note:** A permutation of integers represents an arrangement of these numbers.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** nums = [2, 1, 3]\n**Output:** false\n**Explanation:** Since the maximum element of the array is 3, the only candidate n for which this array could be a permutation of base[n], is n = 3. However, base[3] has four elements but array nums has three. Therefore, it can not be a permutation of base[3] = [1, 2, 3, 3]. So the answer is false.\n\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** nums = [1, 3, 3, 2]\n**Output:** true\n**Explanation:** Since the maximum element of the array is 3, the only candidate n for which this array could be a permutation of base[n], is n = 3. It can be seen that nums is a permutation of base[3] = [1, 2, 3, 3] (by swapping the second and fourth elements in nums, we reach base[3]). Therefore, the answer is true.\n```\n\n**Example 3:**\n\n\n\n```\n\n**Input:** nums = [1, 1]\n**Output:** true\n**Explanation:** Since the maximum element of the array is 1, the only candidate n for which this array could be a permutation of base[n], is n = 1. It can be seen that nums is a permutation of base[1] = [1, 1]. Therefore, the answer is true.\n```\n\n**Example 4:**\n\n\n\n```\n\n**Input:** nums = [3, 4, 4, 1, 2, 1]\n**Output:** false\n**Explanation:** Since the maximum element of the array is 4, the only candidate n for which this array could be a permutation of base[n], is n = 4. However, base[4] has five elements but array nums has six. Therefore, it can not be a permutation of base[4] = [1, 2, 3, 4, 4]. So the answer is false.\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `1 <= nums.length <= 100`\n* `1 <= num[i] <= 200`\n\n\n",
  "canonical_solution": "class Solution:\n    def isGood(self, nums: List[int]) -> bool:\n        n = len(nums) - 1\n        cnt = Counter(nums)\n        cnt[n] -= 2\n        for i in range(1, n):\n            cnt[i] -= 1\n        return all(v == 0 for v in cnt.values())\n",
  "test_case_generator": "\nimport random\n\nclass Solution:\n    def isGood(self, nums):\n        n = len(nums) - 1\n        cnt = Counter(nums)\n        cnt[n] -= 2\n        for i in range(1, n):\n            cnt[i] -= 1\n        return all(v == 0 for v in cnt.values())\n\ndef generate_test_case():\n    solution = Solution()\n\n    # Generate random numbers list\n    nums = random.sample(range(1, 201), random.randint(2, 100))\n\n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.isGood(nums)\n\n    return nums, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        nums, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.isGood(nums) == expected_result\n        print(f\"assert solution.isGood({nums}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.isGood({nums}) == {expected_result}\")\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.isGood([119, 10, 124, 198, 64, 128, 91, 155, 47, 28, 66, 151, 49, 139, 43, 40, 23, 188, 6, 178, 42, 5, 35, 14, 200, 131, 13, 57, 37, 165, 121, 170, 148, 101, 181, 17, 111, 146, 179, 143, 159, 162, 55, 22, 58, 18, 161, 109, 21, 129, 135, 94, 196, 98, 76, 99, 1, 182, 100, 92, 77, 118, 154, 16, 122, 114, 150, 69, 132, 48, 108, 138, 72, 2, 199, 192, 84, 107]) == False\nassert solution.isGood([90, 44, 39, 2, 25, 6, 178, 124, 179, 163, 100, 192, 135, 3, 67, 13, 146, 72, 148, 87, 18, 96, 4, 43, 199, 60, 14, 168, 79, 165, 57, 49, 27, 54, 136, 170, 181, 172, 134, 83, 35, 188, 10, 169, 152, 84, 171, 166, 127, 130, 113, 174, 91, 154, 61, 24, 64, 104, 198, 150, 30, 132, 149, 78, 110, 102, 157, 111, 194, 71, 5, 45, 40, 140, 69, 173, 115, 17, 41]) == False\nassert solution.isGood([82, 28, 11, 133, 29, 49, 131, 26, 155, 154, 185, 128, 149, 68, 130, 31, 200, 167, 5, 64, 179, 123, 165, 9, 156, 162, 54, 36, 175, 62, 1, 129, 177, 17, 142, 118, 119, 127, 182, 39, 50, 126, 195, 6, 157, 40, 106, 18, 37, 143, 55, 43, 180, 124, 178, 83, 4, 161, 197, 160, 87, 141, 51, 183, 42, 109, 166, 187, 151, 15, 71, 21, 94, 93, 74, 65, 47, 171, 72, 105, 60, 20, 104, 52, 189, 113, 48, 23, 191, 90, 73, 77, 30]) == False\nassert solution.isGood([66, 11, 53, 112, 143, 57, 105, 6, 196, 189, 194, 95, 60, 184, 171, 37, 75, 84, 167, 122, 144, 121, 197, 26, 190, 161, 108, 109, 89, 154, 117, 35, 103, 200, 127, 15, 137, 115, 123, 79, 65, 118, 88, 160, 100, 1, 54, 94]) == False\nassert solution.isGood([80, 54, 2, 185, 88, 168, 3, 82, 43, 172, 165, 110, 85, 166, 63]) == False\nassert solution.isGood([153, 63, 52, 75, 54, 94, 145, 3, 10, 11, 133, 106, 37, 45, 174, 16, 162, 102, 173, 161, 156, 158, 144, 100, 95, 166, 178, 185, 152, 131, 43, 91, 84, 108, 27, 112, 130, 13, 62, 183, 4, 142, 56, 89, 15, 138, 98, 36, 1, 21, 176, 170, 33, 180, 110, 190, 44, 157, 182, 78, 80, 99, 41, 83, 117, 159, 141, 116, 177, 147, 186, 40, 120, 70, 77, 132, 48, 35, 128, 71, 126, 20, 86, 191, 114, 171, 109]) == False\nassert solution.isGood([70, 124, 185, 91, 151, 131, 14, 193, 154, 90, 55, 126, 107, 50, 200, 133, 75, 51, 196, 188, 93, 79, 96, 192, 36, 163, 166, 157, 123, 15, 113, 41, 26, 184, 144, 32, 53, 149, 9, 187, 156, 190, 23, 186, 138, 80, 20, 72, 57, 100, 76, 119, 158, 43, 132, 54, 118, 42, 172, 128, 94, 139, 87, 74]) == False\nassert solution.isGood([23, 129, 26, 82, 74, 136, 19, 134, 169, 3, 140, 99, 132, 198, 156, 161, 14]) == False\nassert solution.isGood([57, 145, 77, 27, 113, 30, 92, 19, 63, 163, 198, 185, 184, 154, 148, 44, 51, 150, 39, 153, 93, 52, 168, 66, 173, 37, 64, 118, 3, 122, 146, 172, 176, 141, 49, 83, 7, 73, 20, 95]) == False\nassert solution.isGood([158, 49, 136, 113, 38, 130, 179, 46, 65, 152, 77, 25, 198, 67, 90, 80, 91, 53, 148, 182, 79, 186, 111, 59, 178, 135, 162, 166, 174, 35, 24, 176, 106, 18, 168, 84, 6, 26, 8, 195, 41, 102, 185, 127, 163, 42, 48, 76, 4, 117, 104, 36, 164, 165, 72, 17, 20, 103, 30, 189, 69, 75, 61, 87, 126, 44, 66, 28, 92, 123, 175, 132]) == False\nassert solution.isGood([163, 130]) == False\nassert solution.isGood([169, 192, 88, 110, 187, 68, 149, 44, 94, 87, 173, 85, 196, 23, 135, 47, 77, 195, 138, 108, 123, 73, 95, 121, 132, 185, 40, 76, 119, 64, 191, 193, 143, 105, 71, 57, 118, 35, 175, 22, 80, 15, 109, 99, 90, 20, 165]) == False\nassert solution.isGood([50, 88, 33, 2, 91, 175, 16, 45, 102, 134, 37, 106, 115, 65, 92, 41, 158, 154, 161, 62, 105, 44, 124, 8, 100, 58, 23, 5, 75, 67, 166, 111, 40, 21, 181, 156, 155, 164, 136, 1, 178, 126, 191, 82, 173, 28, 86, 185, 39, 118, 169, 60, 108, 47, 127, 10, 107, 73, 97, 143, 54, 93, 184, 11, 30, 145, 26, 48, 120, 94, 150, 4, 17, 163, 195, 103, 151, 139, 69, 104, 121, 174, 186, 123, 142, 152, 167, 125, 122]) == False\nassert solution.isGood([111, 7, 38, 125, 19, 26, 166, 57, 75, 11, 109, 76, 155, 77, 94, 35, 133, 21, 70, 60, 12, 146, 156, 115, 97, 10, 36, 157, 54, 14, 87, 143, 135, 113, 25, 46, 174, 69, 106, 84, 150, 92, 159, 162, 83, 121, 62, 52, 120, 48, 153, 96, 98, 43, 95, 200, 6, 137, 165, 181, 71, 195, 2, 197, 138, 194, 13, 72, 91, 29, 142, 127, 17, 126, 45, 49, 58, 198, 42, 177, 18, 59, 151, 82, 16, 103, 61, 23, 184, 182, 167, 123, 105, 141, 107, 139]) == False\nassert solution.isGood([69, 109, 29, 144, 4, 148, 54, 171, 86, 162, 165, 151, 138, 99, 108, 147, 47, 84, 133, 34, 77, 180, 56, 196, 194, 83, 23, 8, 97, 189, 36, 38, 62, 146, 20, 72, 78, 25]) == False\nassert solution.isGood([7, 16, 138, 64, 125, 168, 86, 102, 21, 37, 1, 84, 23, 165, 72, 45, 59, 28, 155, 174, 148, 19, 103, 118, 179, 157, 76, 143, 104, 70, 140, 71, 52, 154, 190, 96, 169, 112, 26, 55, 128, 91, 22, 126, 18, 131, 187, 42, 177, 139, 153, 27, 194, 106, 184, 142, 46, 193, 17, 161, 121, 24, 66, 159, 188, 145, 69, 74, 51, 41, 130, 95, 62, 14, 175, 50, 92, 99, 183, 129, 115, 87, 68, 97, 116, 13, 32, 113, 4, 105, 15, 73, 186, 160, 133]) == False\nassert solution.isGood([64, 159, 33, 96, 115, 59, 139, 49, 45, 195, 43, 146, 128, 152, 143, 97, 44, 190, 2, 191, 192, 94, 79, 140, 108, 130, 127, 61, 77, 154, 93, 174, 73, 196, 164, 34, 199, 175, 89, 28, 72, 155, 101, 74, 99, 68, 163, 100, 122, 125, 80, 50, 55, 169, 179, 47, 32, 109]) == False\nassert solution.isGood([42, 157, 2, 26, 56, 85, 197, 89, 127, 46, 167, 170, 84, 25, 172, 27, 50, 108, 160, 166, 86, 128, 134, 67, 110, 7, 158, 100, 79, 113, 74, 146, 130, 92, 103, 150, 121, 19, 148, 123, 154, 196, 39, 30, 73, 90, 14, 173, 78, 5, 91, 149, 99, 118, 75, 111, 151, 186, 15, 165, 107, 71, 190, 37, 105, 48, 163, 140, 6, 114, 24, 109, 31, 179, 88, 119]) == False\nassert solution.isGood([148, 99, 42, 35, 147, 34, 51, 153, 195, 12, 48, 134, 65, 197, 192, 56, 130, 145, 49, 82, 14, 40, 120, 155, 30, 168, 139, 131, 142, 173, 18, 105, 150, 169, 186, 73]) == False\nassert solution.isGood([80, 12, 151, 48, 200, 69, 117, 133, 8, 14, 36, 141, 155, 172, 157, 124, 28, 188, 61, 185, 98, 130, 85, 184, 42, 149, 63, 127, 90, 183, 31, 118, 88, 79, 182, 32, 189, 114, 181, 123, 152, 106, 169, 167, 19, 93, 105, 92, 27, 174, 153, 95, 11, 170, 173, 139, 109, 6, 166, 104, 39, 51, 154, 110, 43]) == False\nassert solution.isGood([89, 129, 184, 1, 183, 105, 180, 131, 68, 51, 197, 127, 44, 31, 83, 99, 173]) == False\nassert solution.isGood([186, 165, 139, 10, 39, 84, 32, 167, 99, 37, 73, 22, 90, 127, 53, 66, 59, 104, 27, 125, 28, 77, 114, 72, 133, 160, 123, 12, 199, 140, 3, 51, 102, 30, 42, 6, 116, 111, 156, 175, 34, 15, 187, 17, 88, 107, 197, 29]) == False\nassert solution.isGood([96, 12, 18, 63, 43, 108, 157, 174, 28, 81, 177, 24, 154, 196, 160, 58, 161, 192, 166, 176, 182, 178, 90, 121, 74, 139, 94, 197, 146, 169, 124, 13, 158, 22, 91, 23, 128, 120, 109, 37, 80, 77, 4, 147, 67, 180, 193, 60, 61, 129, 141, 44, 15, 105, 199, 34, 145, 82, 126, 162, 107, 89, 170, 84, 132, 119, 183, 33, 188, 73, 64, 76, 189, 150, 171, 95, 151, 127, 25, 6, 59, 88, 7, 98, 26, 97, 93, 114, 106, 181, 5, 48, 79, 62, 57, 116, 135, 85, 86, 142]) == False\nassert solution.isGood([94, 135, 17, 199, 109, 127, 56, 81, 83, 48, 33, 8, 167, 29, 156, 146, 14, 66, 197, 185, 196, 161, 46, 59, 150, 34, 99, 100, 180, 60, 97, 68, 41, 130, 40, 42, 25, 31, 187, 143, 194, 16, 182, 4, 13, 73, 37, 151, 52, 18, 28, 171, 107, 200, 177, 5, 74, 113, 79, 76, 164, 36, 77, 85, 32, 111, 134, 19, 133, 126, 115, 122, 98, 158, 190, 80, 61, 92, 176, 154, 155, 179, 198]) == False\nassert solution.isGood([29, 51, 192, 112, 45, 17, 69, 118]) == False\nassert solution.isGood([143, 118, 104, 63, 87, 89, 181, 41, 70, 117, 107, 112, 9, 21, 20, 138, 79, 177, 66, 128, 65, 146, 124, 192, 110, 171, 18, 148, 175, 68, 4, 134, 56, 19, 190, 130, 154, 195, 157, 160, 99, 61, 16, 199, 198, 38, 95, 132, 12, 50, 96]) == False\nassert solution.isGood([172, 88, 160, 126, 151, 52, 3, 114, 154, 11, 79, 101, 179, 39, 91, 180, 137, 173, 29, 70, 26, 15, 92, 187, 99, 84, 117, 51, 96, 153, 171, 165, 55, 129, 6, 64, 140, 193, 25, 73, 189, 134, 184, 163, 83, 143, 2, 85, 81, 150, 49, 38, 142, 175, 138, 159, 95, 149, 45, 125, 54, 169, 164, 48, 4, 141, 43, 24, 145, 168, 194, 176, 122, 13, 9, 89, 115, 139, 158, 78, 97, 94, 41, 46, 146, 118, 183, 200, 74, 23, 12, 136, 174, 62, 106, 197, 102, 105, 8]) == False\nassert solution.isGood([169, 63, 43, 3, 17, 62, 88, 167, 79, 189, 90, 164, 195, 190, 108, 61, 20, 128, 71, 112, 123, 31, 143, 66, 58, 181, 198, 160, 68, 163]) == False\nassert solution.isGood([188, 185, 27, 194, 79, 148, 153, 62, 124, 47, 143, 154, 28, 108, 186, 29, 159, 181, 99, 39, 115, 87, 120, 31, 136, 139, 70, 25, 125, 182, 48, 20, 171, 193, 11, 60, 134, 82, 131, 6, 80, 83, 161, 64]) == False\nassert solution.isGood([45, 26, 16, 60, 84, 23, 49, 135, 125, 115, 57, 146, 138, 112, 55, 129, 70, 116, 74, 143, 47, 154, 24, 101, 128, 42, 73, 191, 15, 162, 199, 161, 111, 144, 52, 63, 14, 118, 123, 136, 113, 173, 34, 31, 40, 9, 189, 159, 141, 188, 85, 79, 196, 175, 133, 44, 99, 166, 200, 50, 121, 181, 180, 97, 182, 91, 48, 98, 21, 174, 194, 119, 107, 179, 66, 4, 140, 197, 64, 152, 176, 35, 18, 120, 12, 38, 22, 96, 88, 69, 58, 103, 160, 61]) == False\nassert solution.isGood([18, 181, 126, 19, 164, 187, 138, 100, 56, 102, 88, 28, 147, 72, 125, 150, 146]) == False\nassert solution.isGood([123, 160, 27, 113, 149, 193, 12, 155, 184, 78, 154]) == False\nassert solution.isGood([107, 22, 18, 16, 82, 110, 56, 145, 193, 109, 133, 80, 154, 171, 68, 169, 25, 196, 197, 49, 37, 26, 137, 95, 199, 194, 191, 93, 115, 99, 50, 21, 132, 180, 23, 3, 126, 176, 34, 6, 123, 177, 91, 12, 92, 46, 200, 44, 141, 105]) == False\nassert solution.isGood([42, 92, 195, 112, 171, 140, 53, 154, 8, 83, 152, 110, 25, 153, 43, 74, 48, 65, 199, 105, 69, 9, 115, 128, 169, 149, 87, 36, 18, 117, 28, 130, 198, 96, 122, 60, 102, 170, 72, 160, 175, 124, 80, 56, 31, 180, 118, 76, 62, 55, 4, 183, 15]) == False\nassert solution.isGood([1, 21, 71, 70, 191]) == False\nassert solution.isGood([151, 168, 144, 197, 124, 36, 159, 136, 89, 19, 125, 199, 79, 123, 104, 27, 186, 133, 98, 55, 16, 43, 187, 200, 56, 142, 195, 68, 121, 162, 58, 157, 15, 153, 146, 7, 20, 118, 161, 17, 135, 33, 73, 130, 198, 28, 38, 32, 86]) == False\nassert solution.isGood([96, 53, 186, 8, 86, 142, 200, 122, 190, 42, 113, 176, 139, 183, 22, 85, 70, 18, 90, 6, 34, 79, 5, 192, 35, 179, 130, 103, 166, 36, 50, 198, 99, 117, 76, 55, 140, 78, 12]) == False\nassert solution.isGood([30, 148, 100, 55, 56, 144, 118, 18, 24, 93, 75, 45]) == False\nassert solution.isGood([162, 187, 174, 145, 153, 113]) == False\nassert solution.isGood([88, 147, 191, 182, 99, 25, 55, 81, 91, 150, 61, 30, 161, 16, 162, 149, 175, 43, 70, 12, 22, 126, 172, 144]) == False\nassert solution.isGood([158, 137, 197, 185, 130, 110, 135, 64, 124, 83, 150, 24, 173, 117, 87, 70, 140, 134, 115, 125, 90, 10, 175, 15, 122, 11, 170, 85]) == False\nassert solution.isGood([40, 167, 154, 117, 4, 75, 77, 72, 144, 184, 49, 190, 101, 196, 47, 53, 17, 65, 127, 193, 182, 66, 194, 10, 64, 69, 23, 9, 41, 121, 54, 82, 129, 6, 74, 160, 59, 38, 8, 179, 169, 151, 31, 99, 153, 156, 192, 73, 3, 71, 92, 13, 126, 178, 93, 18, 180, 12, 102, 177, 2, 70, 161, 134, 171, 189, 60, 173, 61]) == False\nassert solution.isGood([53, 20, 42, 127, 184, 63, 161, 87, 185, 47, 12, 179, 137, 30, 154, 119, 188, 52, 28, 189, 67, 191, 34, 50, 183, 123, 136, 158, 98, 25, 172, 144, 180, 113, 164, 94, 1, 13, 173, 7, 2, 76, 170, 102, 150, 146, 18, 99, 153]) == False\nassert solution.isGood([105, 125, 134, 141, 144, 28, 58, 1, 152, 65, 82, 150, 41, 20, 24, 154, 162, 96, 122, 179, 170, 101, 151, 5, 78, 104, 32, 43, 74, 109, 23, 176, 147, 189, 193, 22, 128, 47, 57, 111, 123, 45, 12, 131, 14, 8, 142, 166, 81, 50, 80, 160]) == False\nassert solution.isGood([23, 24, 33, 133, 164, 28, 10, 161, 12, 37, 43, 93, 41, 117, 95, 57, 155, 83, 158, 77, 52, 42, 123, 102, 189, 3, 85, 156, 101, 56, 140, 197, 134, 153, 130, 199, 171, 7, 106, 148, 82, 65, 115, 31]) == False\nassert solution.isGood([58, 187, 113, 141, 100, 22, 151, 28, 114, 26, 112, 119, 87, 88, 70, 106, 17, 111, 104, 97, 140, 169, 146, 96, 168, 191, 61, 73, 199, 57, 45, 124, 34, 144, 6, 123, 24, 99, 135, 161, 194, 200, 172, 16, 181, 197, 38, 102, 174, 32, 33, 54, 159, 149]) == False\nassert solution.isGood([126, 30, 104, 119, 44, 147, 95, 189, 41, 74, 156, 111, 36, 182, 39, 122, 20, 19, 141, 131, 98, 82, 134, 128, 157, 118, 196, 129, 109, 35, 190, 159, 105, 152, 88, 58, 96, 91, 57, 67, 139, 99, 90, 191, 15, 64, 169, 38, 55, 123, 200, 183, 164, 192]) == False\nassert solution.isGood([154, 119, 37, 191, 40]) == False\nassert solution.isGood([164, 42, 14, 15, 50, 141, 4, 158, 117, 62, 124, 138, 10, 83, 130, 143, 97, 180, 11, 113, 40, 142, 153, 119, 115, 128, 145, 177, 196, 146, 80, 5, 69, 167, 57, 166, 184, 13, 187, 48, 163, 43, 176, 179, 116, 104, 60, 161, 198, 49, 178, 75, 123, 92, 52, 151, 93, 64, 168, 171, 194, 94, 147, 7, 112, 134, 109, 85, 91, 58, 19, 156, 193, 47, 54, 86, 122]) == False\nassert solution.isGood([50, 75, 149, 2, 143, 88, 162, 19, 191, 11, 93, 30, 58, 179, 102, 138, 165, 103, 38, 151, 10, 9, 5, 59, 62, 57, 37, 147, 125, 141, 187]) == False\nassert solution.isGood([119, 35, 168, 118, 27, 40, 100, 29, 12, 110, 145, 160, 194, 154, 182, 101, 83, 58, 176, 72, 36, 199, 79, 80, 138, 42, 129, 140, 109, 124, 3, 143, 148, 189, 153, 174, 85, 33, 78, 155, 81, 116, 13, 92, 18, 111, 187, 179, 141, 121, 130, 30, 127, 113, 63, 170, 50, 117, 115, 169, 195, 166, 49]) == False\nassert solution.isGood([47, 175, 136, 144, 41, 93, 133, 105, 55, 76, 58, 44, 51, 128, 67, 113, 139, 177, 132, 149, 112, 163, 11, 32, 160, 117, 145, 191, 108, 114, 170, 21, 180, 164, 135, 115, 65, 42, 60, 199, 172, 87, 34, 48, 186, 101, 167, 81, 173, 18, 85, 66, 95, 120, 185, 3, 74, 183, 45, 129, 1, 43, 165, 39, 46, 5, 106, 126, 152, 73, 100, 162]) == False\nassert solution.isGood([13, 199, 43, 154, 97, 136, 5, 122, 46, 77, 67, 182, 70, 195, 8, 121, 59, 165, 48, 92, 81, 176, 157, 129, 102, 62, 170, 172, 128, 74, 69, 85, 20, 159, 131, 198, 171, 83, 44, 75, 37, 51, 168, 19, 3]) == False\nassert solution.isGood([142, 85, 86, 59, 143, 91, 132, 53, 8, 122, 73, 16, 156, 20, 200, 129, 114, 128, 172, 34, 84, 176, 165, 10, 108, 99, 151, 29, 28, 66, 9, 88, 117, 36, 155, 111, 45, 198, 37, 160, 76, 14, 144, 138, 51, 133, 98, 169, 189, 50, 180, 123, 177, 194, 44, 150, 1, 154, 192, 178, 115]) == False\nassert solution.isGood([127, 62, 7, 116, 136, 129, 91, 193, 124, 140, 16, 6, 47, 21, 11, 31, 166, 139, 10, 40, 103, 33, 165, 92, 37, 173, 192, 87, 190, 117, 95, 52, 160, 114, 168, 178, 32, 159, 65, 118, 109, 135, 24, 100, 200]) == False\nassert solution.isGood([152, 110, 136, 24, 154, 29, 2, 15, 170, 67, 130, 102, 137, 148, 127, 118, 101, 163, 39, 120, 98, 200, 11, 187, 89, 65, 80, 58]) == False\nassert solution.isGood([133, 76, 193, 137, 102, 158, 51, 91, 61, 19, 78, 152, 128, 20, 98, 182, 9, 21, 26, 15, 163, 189, 42, 22, 198, 32, 132, 175, 103, 145, 82, 127, 79, 13, 170, 37, 161, 191, 14, 143, 86, 52, 60, 100, 115, 47, 7, 8, 34, 83, 72, 168, 74, 122, 57, 155, 27, 164, 46, 28, 130, 84, 58, 123, 31, 17, 183, 41, 134, 186, 88, 45, 85, 166, 40, 119, 87, 156, 129]) == False\nassert solution.isGood([71, 27, 79, 61, 158, 38, 52, 200, 196, 46, 170, 178, 123, 138, 181]) == False\nassert solution.isGood([123, 141, 12, 107, 23, 4, 62, 76, 197, 133, 172, 177, 83, 41, 71, 160, 44, 40, 16, 146, 136, 90, 24, 189, 140, 51, 25, 151, 22, 131, 149, 27, 60, 91, 29, 56, 102, 134, 88, 110, 184, 78, 45, 137, 176, 5, 2, 156, 9, 125, 73, 129, 120, 195, 81, 75, 155, 144, 154, 95, 113, 46, 80, 135, 57, 99, 130, 35, 132, 15, 1, 61, 63, 171, 50, 181, 150, 17, 162, 159, 104, 82, 143]) == False\nassert solution.isGood([194, 129]) == False\nassert solution.isGood([70, 176, 191, 192, 189, 48, 94, 134, 172, 153, 37, 114, 169, 82, 99, 199, 105, 152, 124, 100, 71, 140, 8, 92, 173, 143, 200, 147, 89, 24, 50, 15, 34, 158, 126, 109, 60, 52, 196, 74, 156, 59, 167, 150, 72, 79, 160, 106, 88, 51, 113, 35, 65, 62, 77, 54, 97, 86, 76, 28, 17, 38, 187, 23, 179, 41, 61, 40, 165, 42, 33, 36, 133, 101, 84, 193, 5, 145, 49, 22, 129, 182, 111, 135, 128, 136, 93, 85, 157, 58, 43, 87, 27, 138, 188, 44, 120, 163, 139]) == False\nassert solution.isGood([120, 167, 155, 123, 22, 181, 113, 67, 78, 147, 43, 169, 82, 125, 133, 17, 145, 163, 19, 46, 129, 161, 59, 71, 199, 171, 173, 76, 152, 151, 138, 157, 164, 108, 153, 15, 177, 47, 154, 41, 100, 195, 188, 24, 8, 146, 11, 165, 18, 187, 159, 27, 99, 98, 34, 91, 156, 178, 183, 127, 189, 141, 106, 26, 180, 70, 1, 72, 140, 132]) == False\nassert solution.isGood([121, 25, 90, 157, 23, 187, 106, 46, 181, 83, 72, 7, 113, 112, 127, 150, 62, 74, 188, 93, 96, 19, 59, 60, 137, 179, 145, 142, 85, 69, 65, 102, 9, 195, 100, 55, 148, 34, 86, 47, 162, 126, 168, 18, 104, 194, 130, 94, 45, 103, 54, 12, 1, 61, 8, 151, 40, 177, 200, 105, 41, 118, 144, 56, 35, 81, 123, 67]) == False\nassert solution.isGood([39, 87, 183, 178, 37, 188, 3, 193, 2, 194, 55, 67, 36, 175, 90, 125, 104, 58, 93, 136, 161, 130, 143, 111, 145, 189, 128, 8, 51, 131, 46, 166, 97, 169, 70, 117, 71, 30, 156, 86, 13, 41, 1, 25, 76, 172, 164, 185, 120, 151, 141, 15, 113, 159, 152, 52, 47, 77, 79, 18, 53, 170, 129, 180, 38, 142, 198, 34, 158, 162, 147, 88, 124]) == False\nassert solution.isGood([43, 125, 40, 34, 77, 45, 18, 189, 163, 1, 106, 145, 55, 71, 29, 198, 113, 90, 109, 167, 170, 76, 176, 19, 199, 62, 104, 24, 48, 120, 127, 54, 178, 108, 53, 97, 144, 42, 38, 6, 117, 4, 156, 101, 12, 92, 37, 11, 150, 137, 100, 59, 153, 177, 13, 91, 182, 192, 160, 123, 25, 9, 134, 66, 85, 158, 169, 20, 194, 157, 65, 195, 30, 121, 10, 32, 103, 88, 162]) == False\nassert solution.isGood([17, 19, 185, 200, 116, 147, 159, 94, 18, 153, 55, 190, 87, 74, 127, 76, 39, 119, 169, 123, 132, 110, 163, 133, 51, 95, 41]) == False\nassert solution.isGood([138, 20, 74, 174, 51]) == False\nassert solution.isGood([152, 15, 107, 155, 134, 33, 189, 61, 43, 106, 48, 91, 115, 68, 141, 81, 196, 93, 70, 100, 118, 89, 87, 90, 133, 2, 125, 158, 60, 99, 136, 63, 119, 53, 156, 117, 146, 25, 131, 169, 40, 62, 194, 102, 38, 165, 108, 192, 22, 49, 58, 178, 185, 57, 47, 28, 71, 74, 147, 199, 56, 188, 88, 120, 65, 6, 3, 145, 32, 92, 41, 82, 121]) == False\nassert solution.isGood([31, 89, 178, 69, 149, 198, 114, 30, 3, 130, 87, 66, 134, 64, 16, 185, 132, 6, 112, 179, 161, 14, 47, 33, 9, 62, 72, 169, 181, 17, 46, 199, 98, 52, 106, 76, 145, 170, 138, 139, 184, 183, 131]) == False\nassert solution.isGood([39, 43, 145, 72, 48, 180, 184, 176, 157, 127, 140, 172, 80, 178, 197, 35, 113, 3, 126, 155, 94, 38, 62, 36, 144, 154, 149, 169, 30, 151, 121, 88, 17, 47, 109, 170, 165, 123, 64, 90, 115, 95, 195, 37, 12]) == False\nassert solution.isGood([124, 1, 24, 52, 62, 13, 72, 15, 171, 63, 195, 106, 141, 88, 157, 71, 82, 22, 36, 81, 103, 41, 172, 93, 108, 91, 46, 101, 132, 12, 119, 58, 138, 79, 163, 51, 147, 155, 92, 123, 32, 44, 170, 156, 192, 160, 117, 150]) == False\nassert solution.isGood([114, 124, 110, 50, 197, 84, 46, 128, 148, 199, 97, 151, 11, 80, 104, 12, 125, 36, 117, 51, 109, 37, 70, 42, 99, 161, 6, 33, 120, 145, 35, 103, 105, 194, 122, 137, 163, 173, 176, 140, 155, 68, 190, 159, 43, 165, 98, 134, 139, 79, 166, 83, 53, 95, 60, 175, 164, 160, 27, 143, 115, 81, 179, 13, 38, 8, 73, 91, 94, 184, 57, 158, 180, 187, 93, 7, 66, 28, 144, 52, 19, 40, 183, 48, 45, 32, 31]) == False\nassert solution.isGood([66, 186, 185, 133, 9, 4, 177, 81, 67, 53, 123, 145, 140, 105, 137, 156, 25, 34, 12, 56, 6, 184, 152, 72, 109, 7, 51, 86, 99, 68, 46, 198, 17, 36, 196, 117]) == False\nassert solution.isGood([174, 145, 183, 77, 177, 44, 158, 26, 56, 94, 137, 121, 27, 88, 191, 107, 117, 184, 156, 179, 175, 144, 104, 51, 136, 105, 187, 112, 153, 130, 49, 98, 138, 8, 139, 160, 60, 50, 162, 168, 159, 21, 120, 19, 91, 29, 114, 12, 185, 170, 14, 111, 127, 181]) == False\nassert solution.isGood([126, 78, 50, 14, 181, 179, 11, 48, 190, 94, 131, 140, 150, 107, 141, 149, 182, 193, 74, 106, 72, 12, 6, 7, 129, 192, 16, 54, 132, 43, 84, 67, 122, 26, 167, 177, 75, 93, 124, 186, 134, 143, 123, 85, 36, 100, 110, 116, 29, 18, 138, 175, 92, 195]) == False\nassert solution.isGood([120, 79, 196, 20, 121, 107, 134, 132, 32, 74, 169, 118, 125, 38, 157, 22, 189, 127, 69, 101, 85, 140, 139, 119, 65, 191, 6, 50, 142, 154, 199, 2, 87, 95, 155, 136, 195, 13, 173, 75, 149, 30, 10, 34, 89, 193, 56, 129, 128, 145, 11, 192, 156, 130, 198, 28, 108, 148, 51, 42, 24, 70, 71, 117, 124, 131, 66, 159, 52, 172, 21, 171]) == False\nassert solution.isGood([192, 88, 128, 78, 100, 101, 89, 83, 22, 200, 70, 56, 24, 20, 114, 30, 45, 19, 51, 94, 166, 38, 53, 77, 152, 72, 177, 33, 13, 58, 98, 188, 95, 80, 55, 186, 183, 163, 27, 145, 154, 194, 11, 42, 138, 91, 5, 69, 106, 122, 130, 197, 60, 92, 32, 189, 191, 1, 52, 90, 26, 144, 198, 109, 54, 195, 118, 23, 182, 158, 156, 102, 125, 31]) == False\nassert solution.isGood([95, 15, 154, 111, 1, 19, 84, 48, 100, 172, 101, 122, 50, 117, 55, 144, 186, 130, 32, 79, 57, 159, 167, 90, 8, 20, 115, 54, 64, 92, 29, 76, 22, 87, 49]) == False\nassert solution.isGood([7, 196, 120, 17, 23, 116, 118, 199, 11, 102, 6, 80, 106, 54, 194, 189, 191, 56, 15, 53, 168, 142, 182, 47, 173, 12, 155, 115, 167, 75, 67, 97, 195, 16, 38, 30, 179, 160, 139, 98, 41, 192, 129, 136, 137, 44, 89, 33, 50, 73, 27, 158, 198, 186, 193, 161, 64]) == False\nassert solution.isGood([22, 96, 14, 28, 198, 122, 44, 81, 200, 158, 106, 170, 154, 53, 64, 41, 194, 168, 150, 5, 7, 141, 164, 121, 74, 86, 176, 35, 192, 130, 143, 102, 58, 148, 60, 108, 190, 13, 120, 123, 157, 57, 62, 137, 136, 97, 47, 184, 18, 189, 119, 147, 103, 50, 68, 113, 31, 85, 135, 185, 100, 91, 134, 172, 116, 2, 196, 9, 33, 161, 25, 30, 39, 160, 118, 34, 186, 46, 155, 65, 181, 112, 78, 59, 138, 174, 73, 37]) == False\nassert solution.isGood([19, 24, 10, 59, 86, 185, 95, 186, 123, 44, 63, 177, 103, 7, 2, 79, 41, 84, 194, 129, 12, 64, 110, 105, 43, 107, 94, 20, 60, 162, 77, 68, 5, 13, 163, 133, 76, 96, 151, 183, 57, 189, 181, 29, 166, 130, 52, 152, 147, 156, 87, 106, 67, 56, 4, 16, 62, 51, 26, 126, 61, 75, 104, 89, 97, 178, 74, 78, 14, 176, 33, 85, 8, 182, 54, 116, 172]) == False\nassert solution.isGood([121, 81, 48, 28, 46, 153, 11, 138, 196, 99, 188, 139, 115, 57, 83, 113, 44, 55, 61, 5, 16, 64, 110, 106, 150, 97, 105, 68, 94, 194, 15, 36, 22, 65, 170, 187, 33, 125, 159, 4, 20, 129]) == False\nassert solution.isGood([68, 4, 83, 91, 35, 169, 65, 124, 114, 74, 161, 109, 16, 129, 145, 136, 166, 46, 80, 85, 181, 116, 54, 45, 60]) == False\nassert solution.isGood([66, 68, 45, 116]) == False\nassert solution.isGood([113, 170, 53, 174, 46, 156, 66, 162]) == False\nassert solution.isGood([138, 104, 12, 103, 131, 1, 71, 39, 171, 10, 25, 33, 49, 109, 64, 97, 173, 129, 42, 11, 176, 48, 134, 185]) == False\nassert solution.isGood([104, 53, 60, 98, 192, 2, 196, 88, 93, 170, 52, 142, 34, 144, 22, 56, 106, 172, 72, 147, 92, 75, 151, 10, 200, 140, 15, 20, 135, 54, 122, 12, 198, 97, 67, 177, 4, 62, 9, 161, 124, 149, 146, 50, 25, 160, 48, 150, 68, 64, 132, 165, 112, 1, 182, 179, 126, 58, 133, 29, 176, 49, 175, 131, 26, 110, 158, 186, 181, 27, 57, 137, 154, 168, 145, 99, 71, 95, 31, 174, 193, 30, 153, 109, 24, 74, 59, 138, 155, 101]) == False\nassert solution.isGood([130, 175, 63, 131, 122, 189, 31, 114, 101, 134, 163, 55, 57, 44, 88, 161, 35, 66, 145, 80, 193, 123, 29, 86, 146, 181, 194, 34, 20, 115, 7, 170, 159, 119, 41, 180, 53, 195, 127, 141, 147, 90, 184, 12, 49, 23, 42, 1, 58, 132, 126, 33, 197, 54, 97, 4, 78, 46, 191, 27, 99, 32, 149, 9, 166, 198, 167, 61, 190, 21, 192, 144]) == False\nassert solution.isGood([170, 181, 185, 90, 160, 191, 37, 169, 30, 55, 100, 112, 32, 21, 15, 88, 183, 177, 79, 137, 99, 108, 153, 24, 22, 173, 49, 19, 172, 82, 156, 200, 11, 17, 182, 98, 46, 50, 89]) == False\nassert solution.isGood([197, 28, 143, 10, 52, 118, 47, 194, 108, 62, 128, 42, 13, 80, 7, 32, 29, 141, 39, 151, 15, 103, 83, 16, 6, 191, 2, 67, 12, 113, 93, 14, 119, 139, 104, 117, 98, 145, 115, 195, 65, 66, 122, 56, 170, 105, 186, 71, 73, 77, 114, 193, 165, 126]) == False\nassert solution.isGood([65, 148, 75, 127, 95, 55, 34, 192, 82, 67, 115, 24, 116, 173, 200, 72, 8, 52, 14, 136, 170, 142, 144, 96, 92, 89, 190, 147, 120, 77, 171, 184, 198, 131, 49, 64, 122, 78, 99, 83, 160, 4, 104, 71, 152, 50, 174, 189, 112, 156, 146, 103, 19, 179, 22, 114, 61, 31, 182, 5, 126, 63, 88, 178, 18, 90, 62, 15, 66, 167, 84, 25]) == False\nassert solution.isGood([117, 145, 43, 92, 188, 192, 190, 101, 58, 125, 147, 122, 124, 154, 12, 60, 65, 170, 23, 85, 63, 197, 175, 177, 51, 88, 54, 142, 49, 112, 127, 150, 26, 186, 194, 182, 59, 24, 126, 80, 96]) == False\nassert solution.isGood([186, 195, 21]) == False\nassert solution.isGood([103, 62, 7, 36]) == False\nassert solution.isGood([55, 117, 111, 183, 104, 94, 97, 193, 107, 4, 170, 85, 52, 98, 95, 96, 77, 165, 152, 67, 121, 66, 173, 137, 149, 192, 154, 99, 28, 60, 164, 41, 93, 64, 150, 114, 100, 33, 88, 42, 127, 13, 45, 194, 125, 122, 133, 171, 124, 118, 46, 21, 6, 83, 65, 43, 59, 132, 138]) == False\nassert solution.isGood([88, 155, 191, 78, 36, 195, 56, 32, 58, 79, 163, 41, 17, 33, 168, 6, 105, 16, 115, 73, 183, 10, 67, 145, 63, 147, 52, 57, 55, 177, 13, 19, 77, 180, 166, 165, 123, 102, 59, 12, 72, 111, 20, 101, 9, 172, 43, 90, 196, 107, 50, 114, 174, 4, 98, 179, 46, 18, 149, 76, 162, 99, 132, 161, 152, 93, 64, 14, 126, 133, 151, 81, 110, 3, 164, 97, 61, 22, 144, 15, 157, 5, 143, 156]) == False\nassert solution.isGood([84, 191, 104, 69, 82, 167, 70, 110, 194, 176, 134, 96, 53, 34, 168, 28, 10, 79, 25, 177, 123, 107, 17, 186, 58, 43, 64, 115, 5, 166, 100, 74, 38, 85, 140, 61, 91, 126, 4, 173, 131, 16, 172, 42]) == False\nassert solution.isGood([149, 95, 50, 44, 90, 55, 58, 186]) == False\nassert solution.isGood([171, 151, 158, 27, 41, 134, 177, 115, 34, 112, 59, 122, 91, 140, 172, 160, 38, 111, 184, 123, 106, 133, 47, 52, 119, 31, 169, 45, 14, 188, 143, 101, 58, 189, 165, 198, 175, 107, 99, 53, 57, 130, 48, 136, 126, 88, 132, 128, 157, 127, 182]) == False\nassert solution.isGood([153, 116, 41, 111, 85, 114, 124, 19, 135, 161, 91, 200, 22, 138, 66, 75, 59, 87, 115, 154, 151, 184, 1, 31, 24, 40, 174, 172, 67, 36, 5, 141, 82, 72, 136, 164, 163, 112, 140, 156, 43, 34, 190, 69, 28, 10, 119, 42, 37, 198, 74, 122, 120, 197, 102, 18, 182, 21, 76, 137, 99, 6, 191, 189, 46, 113, 118, 29, 123, 159, 134, 188, 53, 94, 117, 199, 78, 105, 12, 93, 38, 176, 77, 183, 162]) == False",
  "inefficient_solution": "class Solution:\n    def isGood(self, nums: List[int]) -> bool:\n        n = len(nums) - 1\n        n *= 10\n        nums2 = [num + n for num in nums]\n        nums3 = [num * num for num in nums2]\n        nums4 = [num for num in nums3]\n        nums5 = [num for num in nums4]\n        nums6 = [num for num in nums5]\n        nums7 = [num for num in nums6]\n        nums8 = [num for num in nums7]\n        nums9 = [num for num in nums8]\n        nums10 = [num for num in nums9]\n        cnt = {}\n        for num in nums10:\n            if num in cnt:\n                cnt[num] += 1\n            else:\n                cnt[num] = 1\n        for i in range(1, n):\n            if i not in cnt:\n                return False\n            if cnt[i] != 1:\n                return False\n        if n not in cnt:\n            return False\n        if cnt[n] != 2:\n            return False\n        return True",
  "is_python": true
}