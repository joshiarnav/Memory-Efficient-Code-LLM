{
  "problem_idx": 2410,
  "task_name": "Maximum Matching of Players With Trainers",
  "markdown_description": "\nYou are given a **0-indexed** integer array `players`, where `players[i]` represents the **ability** of the `ith` player. You are also given a **0-indexed** integer array `trainers`, where `trainers[j]` represents the **training capacity** of the `jth` trainer.\n\n\nThe `ith` player can **match** with the `jth` trainer if the player's ability is **less than or equal to** the trainer's training capacity. Additionally, the `ith` player can be matched with at most one trainer, and the `jth` trainer can be matched with at most one player.\n\n\nReturn *the **maximum** number of matchings between* `players` *and* `trainers` *that satisfy these conditions.*\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** players = [4,7,9], trainers = [8,2,5,8]\n**Output:** 2\n**Explanation:**\nOne of the ways we can form two matchings is as follows:\n- players[0] can be matched with trainers[0] since 4 <= 8.\n- players[1] can be matched with trainers[3] since 7 <= 8.\nIt can be proven that 2 is the maximum number of matchings that can be formed.\n\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** players = [1,1,1], trainers = [10]\n**Output:** 1\n**Explanation:**\nThe trainer can be matched with any of the 3 players.\nEach player can only be matched with one trainer, so the maximum answer is 1.\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `1 <= players.length, trainers.length <= 105`\n* `1 <= players[i], trainers[j] <= 109`\n\n\n",
  "canonical_solution": "class Solution:\n    def matchPlayersAndTrainers(self, players: List[int], trainers: List[int]) -> int:\n        players.sort()\n        trainers.sort()\n        ans = j = 0\n        for p in players:\n            while j < len(trainers) and trainers[j] < p:\n                j += 1\n            if j < len(trainers):\n                ans += 1\n                j += 1\n        return ans\n",
  "test_case_generator": "\n\nimport random\nfrom typing import List\n\nclass Solution:\n    def matchPlayersAndTrainers(self, players: List[int], trainers: List[int]) -> int:\n        players.sort()\n        trainers.sort()\n        ans = j = 0\n        for p in players:\n            while j < len(trainers) and trainers[j] < p:\n                j += 1\n            if j < len(trainers):\n                ans += 1\n                j += 1\n        return ans\n\ndef generate_test_case():\n    solution = Solution()\n    \n    # Generate random players list\n    players = random.sample(range(1, 101), random.randint(2, 10))\n    \n    # Generate random trainers list\n    trainers = random.sample(range(1, 101), random.randint(2, 10))\n\n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.matchPlayersAndTrainers(players, trainers)\n\n    return players, trainers, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        players, trainers, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.matchPlayersAndTrainers(players, trainers) == expected_result\n        print(f\"assert solution.matchPlayersAndTrainers({players}, {trainers}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.matchPlayersAndTrainers({players}, {trainers}) == {expected_result}\") # You can find that we construct the test case in the same format as the example\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n\n",
  "test_case": "assert solution.matchPlayersAndTrainers([15, 30, 97], [2, 20, 71]) == 2\nassert solution.matchPlayersAndTrainers([2, 8, 24, 30, 38, 39, 44, 55, 60, 90], [14, 43, 47, 64, 70, 71]) == 6\nassert solution.matchPlayersAndTrainers([54, 61, 63, 67, 74, 91, 99], [3, 4, 21, 46]) == 0\nassert solution.matchPlayersAndTrainers([3, 5, 28, 47, 77, 89], [27, 29, 65, 66, 99]) == 5\nassert solution.matchPlayersAndTrainers([8, 14, 33, 34, 35, 37, 74], [6, 8, 21, 23, 44, 66]) == 4\nassert solution.matchPlayersAndTrainers([6, 90], [5, 76]) == 1\nassert solution.matchPlayersAndTrainers([1, 14, 21, 22, 26, 31, 39, 50, 65, 84], [10, 11, 33, 35, 53, 61, 63, 64, 77, 84]) == 9\nassert solution.matchPlayersAndTrainers([35, 51, 53, 63, 92, 96], [4, 30, 43, 50, 74, 80]) == 3\nassert solution.matchPlayersAndTrainers([6, 10, 29, 33, 40, 42, 53, 58, 66, 99], [3, 20, 21, 25, 95]) == 3\nassert solution.matchPlayersAndTrainers([10, 24, 56, 71], [2, 3, 6, 9, 12, 34, 38, 56, 78, 93]) == 4\nassert solution.matchPlayersAndTrainers([50, 60, 62, 100], [11, 18, 23, 30, 36, 43, 58, 82, 90]) == 3\nassert solution.matchPlayersAndTrainers([21, 27, 29, 47, 53, 81, 82], [30, 35, 36, 41, 50, 57, 80, 92]) == 6\nassert solution.matchPlayersAndTrainers([33, 42, 43, 48, 67, 79, 80, 86, 87, 89], [29, 81]) == 1\nassert solution.matchPlayersAndTrainers([6, 9, 28, 84, 96], [8, 10, 13, 24, 41, 60, 78, 84]) == 4\nassert solution.matchPlayersAndTrainers([10, 35], [15, 16, 30, 49, 59, 66, 76, 97]) == 2\nassert solution.matchPlayersAndTrainers([1, 14, 20, 25, 27, 33, 80, 86, 92], [44, 48]) == 2\nassert solution.matchPlayersAndTrainers([18, 23, 34, 60, 64, 68], [34, 53, 92]) == 3\nassert solution.matchPlayersAndTrainers([3, 5, 15, 37, 49, 65, 77, 80, 94], [3, 21, 34, 44, 63, 72, 77]) == 7\nassert solution.matchPlayersAndTrainers([28, 38, 39], [12, 97]) == 1\nassert solution.matchPlayersAndTrainers([12, 24, 53, 66, 68, 98], [12, 15, 16, 37, 43, 44, 66]) == 3\nassert solution.matchPlayersAndTrainers([2, 23, 35, 41, 44, 66, 100], [3, 8, 15, 19, 25, 45, 50, 65, 71, 79]) == 6\nassert solution.matchPlayersAndTrainers([6, 7, 8, 22, 37, 57, 61], [7, 26, 31, 44, 45, 65, 70, 71, 75]) == 7\nassert solution.matchPlayersAndTrainers([24, 41, 53, 60, 71, 75, 82, 91], [24, 38, 44]) == 2\nassert solution.matchPlayersAndTrainers([35, 50, 96], [7, 8, 12, 60, 70, 75, 84, 89]) == 2\nassert solution.matchPlayersAndTrainers([26, 67], [7, 14, 24, 36, 40, 50, 72, 88, 93]) == 2\nassert solution.matchPlayersAndTrainers([12, 28, 45, 49, 73, 76, 89], [2, 7, 10, 23, 32, 36, 66, 85, 89, 92]) == 6\nassert solution.matchPlayersAndTrainers([12, 28, 47, 49, 55, 60, 89, 98], [1, 9, 13, 47, 59, 80, 86]) == 5\nassert solution.matchPlayersAndTrainers([33, 78], [2, 17, 18, 43, 53, 56, 68]) == 1\nassert solution.matchPlayersAndTrainers([22, 37, 54, 60, 79, 83, 84, 90], [55, 58, 75]) == 3\nassert solution.matchPlayersAndTrainers([23, 28, 50, 57, 78, 85, 90, 91, 97, 99], [2, 6, 8, 44, 82, 84, 100]) == 4\nassert solution.matchPlayersAndTrainers([5, 22, 31, 40, 41, 49, 71, 76, 81, 83], [4, 24, 29, 55, 56, 62, 63, 77, 87]) == 8\nassert solution.matchPlayersAndTrainers([4, 44, 48, 69], [3, 8, 12, 28, 35, 61, 74, 90]) == 4\nassert solution.matchPlayersAndTrainers([37, 62, 68, 81, 84, 98], [8, 26, 30, 50, 82, 88, 91, 93]) == 5\nassert solution.matchPlayersAndTrainers([18, 22, 26, 28, 43, 54, 67, 85, 93], [27, 54, 61, 65, 86, 87, 93, 100]) == 8\nassert solution.matchPlayersAndTrainers([5, 6, 23, 28, 62, 87, 91], [12, 26, 37, 42, 57, 58, 85]) == 5\nassert solution.matchPlayersAndTrainers([26, 35, 59, 89], [42, 58, 74, 79]) == 3\nassert solution.matchPlayersAndTrainers([6, 33, 46, 60, 77], [1, 10, 17, 34, 35, 45, 62]) == 3\nassert solution.matchPlayersAndTrainers([21, 79], [1, 14, 37, 51, 54, 55, 60, 74, 78]) == 1\nassert solution.matchPlayersAndTrainers([7, 21, 40, 41, 49, 57], [1, 2, 35, 39]) == 2\nassert solution.matchPlayersAndTrainers([7, 10, 25, 47, 56, 61, 74, 79, 98], [10, 50, 68, 71, 83]) == 5\nassert solution.matchPlayersAndTrainers([10, 13], [8, 28, 33, 42, 49, 62, 71, 72, 86, 95]) == 2\nassert solution.matchPlayersAndTrainers([20, 23, 43, 71, 98], [28, 30, 34, 64, 80, 83]) == 4\nassert solution.matchPlayersAndTrainers([1, 46, 49, 55, 63, 65, 69, 90, 95], [8, 9, 48, 49, 55, 72, 89]) == 6\nassert solution.matchPlayersAndTrainers([6, 25, 30, 34, 55, 56, 70, 82, 95], [2, 8, 14, 15, 42, 56, 63, 75]) == 5\nassert solution.matchPlayersAndTrainers([9, 10, 18, 21, 22, 33, 68], [3, 81, 96]) == 2\nassert solution.matchPlayersAndTrainers([6, 28, 32, 36, 51, 65, 74, 77, 94], [17, 34, 51, 56, 80, 82, 89, 91, 97]) == 9\nassert solution.matchPlayersAndTrainers([7, 31, 34, 36, 39, 40, 52, 59, 66], [32, 69, 87]) == 3\nassert solution.matchPlayersAndTrainers([15, 54], [11, 41, 43, 57]) == 2\nassert solution.matchPlayersAndTrainers([6, 42, 86, 96], [3, 16, 21, 32, 79, 90, 97]) == 4\nassert solution.matchPlayersAndTrainers([4, 37], [2, 3, 7, 25, 54, 58, 59, 74]) == 2\nassert solution.matchPlayersAndTrainers([12, 47, 61], [4, 21, 55, 83]) == 3\nassert solution.matchPlayersAndTrainers([56, 68], [3, 39, 62]) == 1\nassert solution.matchPlayersAndTrainers([2, 30, 60, 66, 84], [47, 55]) == 2\nassert solution.matchPlayersAndTrainers([22, 24, 70, 77], [13, 16, 20, 25, 37, 40, 68, 72, 93, 99]) == 4\nassert solution.matchPlayersAndTrainers([16, 23, 24, 55, 63, 65, 67, 69, 78], [6, 69]) == 1\nassert solution.matchPlayersAndTrainers([9, 12, 15, 21, 35, 41, 56, 63, 88], [6, 23, 90, 96]) == 3\nassert solution.matchPlayersAndTrainers([4, 44, 54, 62, 70, 80, 86, 87, 96], [5, 65, 80, 82, 96]) == 5\nassert solution.matchPlayersAndTrainers([3, 76, 85, 91], [6, 11, 16, 27, 28, 34, 45, 83, 95]) == 3\nassert solution.matchPlayersAndTrainers([5, 10, 45, 83, 100], [40, 73]) == 2\nassert solution.matchPlayersAndTrainers([12, 21, 34, 35, 43, 44, 81, 95, 96], [14, 55, 63]) == 3\nassert solution.matchPlayersAndTrainers([27, 36, 38, 64, 70, 71, 85], [52, 62, 63, 69, 74, 89, 99]) == 7\nassert solution.matchPlayersAndTrainers([8, 21, 91, 95, 97], [10, 24, 34, 40, 45, 67, 94]) == 3\nassert solution.matchPlayersAndTrainers([1, 2, 6, 16, 76, 92, 94], [25, 50, 65, 88]) == 4\nassert solution.matchPlayersAndTrainers([14, 25, 26, 33, 51, 53, 73, 96], [30, 37, 46, 77]) == 4\nassert solution.matchPlayersAndTrainers([24, 29, 56, 65, 96], [5, 9, 13, 16, 28, 44, 45, 65, 84]) == 4\nassert solution.matchPlayersAndTrainers([23, 40, 67, 82], [1, 31, 41, 76]) == 3\nassert solution.matchPlayersAndTrainers([15, 23, 38, 52, 65, 69, 70, 76, 88, 95], [5, 20, 28, 30, 50, 56, 89]) == 5\nassert solution.matchPlayersAndTrainers([47, 84], [3, 24, 26, 27, 40, 62, 74]) == 1\nassert solution.matchPlayersAndTrainers([12, 33, 46, 87, 95], [14, 18, 32, 52, 62, 63, 64, 79, 92, 94]) == 4\nassert solution.matchPlayersAndTrainers([22, 71], [23, 37, 47, 58]) == 1\nassert solution.matchPlayersAndTrainers([5, 23, 46, 54, 82], [12, 29, 50, 52, 82, 88, 97]) == 5\nassert solution.matchPlayersAndTrainers([6, 16, 39, 54, 59, 76, 92, 95], [18, 20, 29, 46, 87, 93, 94, 98, 100]) == 8\nassert solution.matchPlayersAndTrainers([1, 20, 30, 31, 42, 51, 62, 72, 89], [6, 10, 27, 30, 63, 83]) == 5\nassert solution.matchPlayersAndTrainers([5, 76, 81, 85, 93], [11, 78]) == 2\nassert solution.matchPlayersAndTrainers([24, 47, 60, 64, 66, 68, 82, 94, 95, 99], [9, 25, 37, 38, 47, 50, 53, 83, 93, 95]) == 5\nassert solution.matchPlayersAndTrainers([33, 78], [34, 43, 51]) == 1\nassert solution.matchPlayersAndTrainers([36, 46, 74, 80], [26, 41, 54, 63]) == 2\nassert solution.matchPlayersAndTrainers([4, 6, 7, 8, 9, 27, 28, 55, 60, 81], [64, 78, 90, 98, 100]) == 5\nassert solution.matchPlayersAndTrainers([36, 38, 69], [11, 13, 24, 28, 64, 95]) == 2\nassert solution.matchPlayersAndTrainers([4, 12, 16, 59, 75, 80, 83, 87], [1, 6, 10, 15, 25, 32, 48, 63, 69, 82]) == 5\nassert solution.matchPlayersAndTrainers([45, 59, 65, 66], [33, 49, 54, 64, 67, 73, 92]) == 4\nassert solution.matchPlayersAndTrainers([32, 56, 71], [31, 40, 42, 72, 92]) == 3\nassert solution.matchPlayersAndTrainers([1, 29, 35, 36, 65, 81, 98, 99], [3, 7, 15, 25, 68]) == 2\nassert solution.matchPlayersAndTrainers([12, 28, 31, 49, 51, 69, 76, 95], [29, 78]) == 2\nassert solution.matchPlayersAndTrainers([3, 6, 30, 40, 41, 44, 62, 89], [13, 16, 23, 32, 50, 75, 78, 83, 87, 99]) == 8\nassert solution.matchPlayersAndTrainers([17, 49, 63, 64, 75, 92], [8, 24, 38, 49, 74]) == 3\nassert solution.matchPlayersAndTrainers([59, 70], [4, 22, 30, 37, 43, 45, 66, 74, 95]) == 2\nassert solution.matchPlayersAndTrainers([4, 8, 29, 35, 36, 43, 53, 81, 88, 91], [25, 27, 35, 60, 72, 86, 100]) == 7\nassert solution.matchPlayersAndTrainers([42, 55, 72, 78, 88], [5, 15, 27, 44, 74, 91]) == 3\nassert solution.matchPlayersAndTrainers([28, 69, 82, 94], [19, 22, 77]) == 1\nassert solution.matchPlayersAndTrainers([40, 56, 57, 67, 83], [24, 32, 88]) == 1\nassert solution.matchPlayersAndTrainers([34, 63, 66], [60, 61]) == 1\nassert solution.matchPlayersAndTrainers([1, 4, 15, 18, 52, 69, 95], [11, 28, 51, 61, 65, 77, 94, 97]) == 7\nassert solution.matchPlayersAndTrainers([4, 10, 33], [12, 34, 36, 42, 52, 72, 73, 75, 91, 98]) == 3\nassert solution.matchPlayersAndTrainers([13, 20, 21, 55, 67, 76, 83, 85], [18, 24, 47]) == 3\nassert solution.matchPlayersAndTrainers([7, 45, 64, 66], [22, 24, 34, 43, 69, 70, 75, 85, 90, 95]) == 4\nassert solution.matchPlayersAndTrainers([18, 41, 46, 62, 80], [46, 62]) == 2\nassert solution.matchPlayersAndTrainers([20, 22, 61, 73, 79, 82], [3, 6, 10, 21, 26, 44, 65, 85, 92]) == 5\nassert solution.matchPlayersAndTrainers([45, 50, 58, 67, 72, 95], [20, 55, 57, 85, 86]) == 4\nassert solution.matchPlayersAndTrainers([40, 43, 44, 47, 56, 79, 90, 93, 94, 96], [46, 93]) == 2",
  "inefficient_solution": "class Solution:\n    def matchPlayersAndTrainers(self, players: List[int], trainers: List[int]) -> int:\n        players = [i * 1000 for i in players]\n        trainers = [i * 1000 for i in trainers]\n        players.sort()\n        trainers.sort()\n        ans = j = 0\n        while j < len(trainers):\n            for p in players:\n                if p <= trainers[j]:\n                    ans += 1\n                    break\n            j += 1\n        return ans",
  "is_python": true
}