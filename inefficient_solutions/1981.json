{
  "problem_idx": 1981,
  "task_name": "Minimize the Difference Between Target and Chosen Elements",
  "markdown_description": "\nYou are given an `m x n` integer matrix `mat` and an integer `target`.\n\n\nChoose one integer from **each row** in the matrix such that the **absolute difference** between `target` and the **sum** of the chosen elements is **minimized**.\n\n\nReturn *the **minimum absolute difference***.\n\n\nThe **absolute difference** between two numbers `a` and `b` is the absolute value of `a - b`.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n![](https://fastly.jsdelivr.net/gh/doocs/leetcode@main/solution/1900-1999/1981.Minimize%20the%20Difference%20Between%20Target%20and%20Chosen%20Elements/images/matrix1.png)\n\n```\n\n**Input:** mat = [[1,2,3],[4,5,6],[7,8,9]], target = 13\n**Output:** 0\n**Explanation:** One possible choice is to:\n- Choose 1 from the first row.\n- Choose 5 from the second row.\n- Choose 7 from the third row.\nThe sum of the chosen elements is 13, which equals the target, so the absolute difference is 0.\n\n```\n\n**Example 2:**\n\n\n![](https://fastly.jsdelivr.net/gh/doocs/leetcode@main/solution/1900-1999/1981.Minimize%20the%20Difference%20Between%20Target%20and%20Chosen%20Elements/images/matrix1-1.png)\n\n```\n\n**Input:** mat = [[1],[2],[3]], target = 100\n**Output:** 94\n**Explanation:** The best possible choice is to:\n- Choose 1 from the first row.\n- Choose 2 from the second row.\n- Choose 3 from the third row.\nThe sum of the chosen elements is 6, and the absolute difference is 94.\n\n```\n\n**Example 3:**\n\n\n![](https://fastly.jsdelivr.net/gh/doocs/leetcode@main/solution/1900-1999/1981.Minimize%20the%20Difference%20Between%20Target%20and%20Chosen%20Elements/images/matrix1-3.png)\n\n```\n\n**Input:** mat = [[1,2,9,8,7]], target = 6\n**Output:** 1\n**Explanation:** The best choice is to choose 7 from the first row.\nThe absolute difference is 1.\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `m == mat.length`\n* `n == mat[i].length`\n* `1 <= m, n <= 70`\n* `1 <= mat[i][j] <= 70`\n* `1 <= target <= 800`\n\n\n",
  "canonical_solution": "class Solution:\n    def minimizeTheDifference(self, mat: List[List[int]], target: int) -> int:\n        f = {0}\n        for row in mat:\n            f = set(a + b for a in f for b in row)\n        return min(abs(v - target) for v in f)\n",
  "test_case_generator": "\nfrom typing import List\nimport random\n\nclass Solution:\n    def minimizeTheDifference(self, mat: List[List[int]], target: int) -> int:\n        f = {0}\n        for row in mat:\n            f = set(a + b for a in f for b in row)\n        return min(abs(v - target) for v in f)\n\ndef generate_test_case():\n    solution = Solution()\n    \n    # Generate random matrix\n    m = random.randint(1, 6)\n    n = random.randint(1, 6)\n    mat = [[random.randint(1, 71) for _ in range(n)] for _ in range(m)]\n    \n    # Generate a random target sum\n    target = random.randint(1, 801)\n\n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.minimizeTheDifference(mat, target)\n\n    return mat, target, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        mat, target, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.minimizeTheDifference(mat, target) == expected_result\n        print(f\"assert solution.minimizeTheDifference({mat}, {target}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.minimizeTheDifference({mat}, {target}) == {expected_result}\") # You can find that we construct the test case in the same format as the example\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.minimizeTheDifference([[49, 27, 8, 29, 55, 3], [50, 9, 34, 23, 66, 50], [10, 21, 41, 31, 47, 62], [26, 52, 54, 3, 65, 24]], 327) == 79\nassert solution.minimizeTheDifference([[21, 49, 16, 58, 21], [1, 57, 34, 39, 54], [22, 23, 24, 28, 12], [35, 65, 39, 22, 39]], 306) == 98\nassert solution.minimizeTheDifference([[6], [54], [57]], 17) == 100\nassert solution.minimizeTheDifference([[44, 24, 19, 59, 4, 37], [5, 28, 50, 6, 50, 7], [13, 50, 59, 50, 31, 44], [67, 41, 53, 24, 36, 35], [45, 64, 16, 43, 16, 44]], 61) == 1\nassert solution.minimizeTheDifference([[33, 28, 42, 69], [45, 40, 27, 3], [33, 62, 58, 54]], 589) == 413\nassert solution.minimizeTheDifference([[14, 25, 28, 64, 20], [33, 56, 27, 50, 2], [25, 18, 17, 23, 27], [55, 55, 55, 56, 12], [14, 64, 57, 67, 71], [55, 66, 33, 65, 16]], 800) == 460\nassert solution.minimizeTheDifference([[61], [59]], 799) == 679\nassert solution.minimizeTheDifference([[27], [54], [39]], 652) == 532\nassert solution.minimizeTheDifference([[54, 36, 67], [40, 3, 39], [41, 43, 31], [70, 69, 34]], 27) == 77\nassert solution.minimizeTheDifference([[61, 53, 14, 25, 27], [57, 21, 10, 5, 58], [14, 34, 27, 28, 70], [31, 7, 37, 28, 59], [61, 63, 18, 34, 67]], 68) == 1\nassert solution.minimizeTheDifference([[38, 45, 32, 35]], 538) == 493\nassert solution.minimizeTheDifference([[10, 59, 65, 53, 34], [19, 24, 23, 30, 42], [47, 49, 69, 44, 50], [2, 65, 16, 1, 56], [42, 58, 59, 66, 25], [46, 22, 37, 53, 22]], 408) == 48\nassert solution.minimizeTheDifference([[5, 12], [1, 16], [4, 12], [17, 4]], 765) == 708\nassert solution.minimizeTheDifference([[63, 31, 67, 16, 53], [33, 42, 71, 47, 41], [37, 39, 67, 35, 5], [30, 68, 5, 62, 18], [44, 38, 29, 60, 30], [48, 26, 41, 6, 5]], 209) == 0\nassert solution.minimizeTheDifference([[23], [7], [2], [19], [27]], 388) == 310\nassert solution.minimizeTheDifference([[25, 13, 54, 39, 36, 2]], 444) == 390\nassert solution.minimizeTheDifference([[27, 32], [52, 54], [22, 5], [11, 34], [11, 1]], 72) == 24\nassert solution.minimizeTheDifference([[53], [8]], 350) == 289\nassert solution.minimizeTheDifference([[67, 46], [37, 62], [28, 63], [54, 60]], 692) == 440\nassert solution.minimizeTheDifference([[27, 32, 56], [55, 23, 22]], 638) == 527\nassert solution.minimizeTheDifference([[16, 36, 4, 51], [17, 29, 9, 17], [70, 11, 20, 62], [46, 59, 32, 61], [1, 68, 64, 49]], 466) == 187\nassert solution.minimizeTheDifference([[46, 37, 34, 68]], 505) == 437\nassert solution.minimizeTheDifference([[51, 62, 67, 19, 14, 42], [29, 69, 3, 42, 19, 15], [13, 48, 49, 12, 10, 31], [59, 65, 44, 53, 22, 32], [71, 27, 28, 62, 58, 33], [3, 17, 71, 70, 59, 38]], 235) == 0\nassert solution.minimizeTheDifference([[10], [59]], 350) == 281\nassert solution.minimizeTheDifference([[52, 66, 28, 1, 51], [63, 3, 33, 48, 40], [46, 30, 11, 51, 4], [40, 33, 8, 59, 14], [59, 23, 29, 14, 47], [16, 61, 55, 64, 53]], 538) == 176\nassert solution.minimizeTheDifference([[66, 31, 35, 15], [1, 32, 48, 40]], 724) == 610\nassert solution.minimizeTheDifference([[18, 71, 9, 51, 43]], 258) == 187\nassert solution.minimizeTheDifference([[63, 37, 66, 60, 71], [48, 5, 43, 66, 36], [24, 20, 7, 13, 50]], 95) == 0\nassert solution.minimizeTheDifference([[33, 34], [16, 65], [2, 26], [56, 71]], 782) == 586\nassert solution.minimizeTheDifference([[31, 59, 4, 61, 7], [21, 36, 56, 35, 59], [27, 44, 44, 34, 13], [17, 37, 39, 31, 39], [14, 36, 40, 64, 10]], 207) == 0\nassert solution.minimizeTheDifference([[29], [18], [67], [60], [22]], 238) == 42\nassert solution.minimizeTheDifference([[67]], 436) == 369\nassert solution.minimizeTheDifference([[15, 3, 68, 31], [55, 45, 10, 27]], 295) == 172\nassert solution.minimizeTheDifference([[2, 65, 63, 57, 30, 35], [42, 32, 63, 35, 65, 18], [29, 55, 67, 63, 10, 7], [34, 67, 32, 70, 36, 65], [45, 30, 26, 14, 56, 41]], 95) == 0\nassert solution.minimizeTheDifference([[51, 25, 33, 61, 29, 51]], 722) == 661\nassert solution.minimizeTheDifference([[8, 39, 71], [7, 9, 17], [26, 39, 67], [63, 71, 1]], 101) == 3\nassert solution.minimizeTheDifference([[56, 70, 35], [36, 33, 71], [39, 10, 15], [3, 21, 5]], 156) == 0\nassert solution.minimizeTheDifference([[67, 33, 3], [61, 4, 18], [55, 40, 56], [7, 15, 49], [17, 2, 51], [45, 22, 45]], 38) == 40\nassert solution.minimizeTheDifference([[31, 17, 71, 32, 14]], 228) == 157\nassert solution.minimizeTheDifference([[47]], 701) == 654\nassert solution.minimizeTheDifference([[67, 41], [41, 19], [59, 32], [34, 3], [8, 56]], 642) == 385\nassert solution.minimizeTheDifference([[66, 15, 46, 28, 30, 9], [51, 71, 46, 38, 3, 32], [56, 42, 26, 40, 54, 24], [26, 66, 36, 47, 22, 8], [51, 58, 37, 4, 41, 55], [14, 52, 51, 56, 9, 62]], 291) == 0\nassert solution.minimizeTheDifference([[47, 17, 25, 37, 28]], 334) == 287\nassert solution.minimizeTheDifference([[37, 16, 68], [38, 11, 48]], 713) == 597\nassert solution.minimizeTheDifference([[66, 7, 7, 49], [49, 10, 70, 68], [17, 20, 42, 64], [56, 63, 25, 12]], 178) == 0\nassert solution.minimizeTheDifference([[16, 46, 3, 8, 43, 7], [45, 43, 69, 16, 1, 63], [53, 17, 27, 21, 5, 57], [44, 62, 18, 39, 15, 46], [56, 20, 50, 32, 13, 14]], 698) == 408\nassert solution.minimizeTheDifference([[11, 46, 60], [65, 27, 12]], 559) == 434\nassert solution.minimizeTheDifference([[63], [35], [6]], 573) == 469\nassert solution.minimizeTheDifference([[70, 57, 36, 26, 16], [22, 14, 22, 3, 20], [33, 35, 41, 50, 20]], 179) == 37\nassert solution.minimizeTheDifference([[17, 7, 48, 9]], 55) == 7\nassert solution.minimizeTheDifference([[54, 58, 69, 13, 64, 43], [59, 40, 60, 70, 35, 17], [49, 43, 36, 5, 12, 51], [32, 31, 29, 42, 8, 21], [64, 38, 70, 51, 14, 32], [19, 20, 57, 17, 51, 46]], 318) == 0\nassert solution.minimizeTheDifference([[23, 54, 62], [67, 24, 7], [62, 6, 11], [2, 65, 47], [35, 27, 67], [44, 66, 14]], 150) == 0\nassert solution.minimizeTheDifference([[55, 44, 4, 34], [26, 68, 26, 38], [8, 39, 18, 15], [65, 45, 55, 49], [22, 14, 24, 36]], 413) == 150\nassert solution.minimizeTheDifference([[60, 46, 58, 35, 13, 22], [69, 33, 64, 38, 66, 29]], 86) == 0\nassert solution.minimizeTheDifference([[1, 58, 36, 11], [3, 24, 60, 54], [9, 3, 43, 60], [41, 17, 10, 56], [29, 22, 12, 14], [50, 34, 41, 70]], 754) == 421\nassert solution.minimizeTheDifference([[36, 61, 25, 16, 27, 64], [65, 11, 67, 4, 47, 56], [12, 26, 52, 3, 12, 53]], 470) == 286\nassert solution.minimizeTheDifference([[18, 37, 71, 60]], 644) == 573\nassert solution.minimizeTheDifference([[5, 58, 13]], 332) == 274\nassert solution.minimizeTheDifference([[4], [24], [26]], 397) == 343\nassert solution.minimizeTheDifference([[61], [39]], 706) == 606\nassert solution.minimizeTheDifference([[36, 65], [67, 35], [62, 45]], 415) == 221\nassert solution.minimizeTheDifference([[2, 70, 46, 53, 27]], 170) == 100\nassert solution.minimizeTheDifference([[69, 8, 27, 61, 70, 67], [25, 68, 14, 43, 4, 21], [61, 24, 13, 68, 43, 67], [69, 52, 49, 39, 16, 28], [41, 50, 57, 58, 12, 42], [14, 3, 21, 63, 5, 64]], 501) == 104\nassert solution.minimizeTheDifference([[7]], 665) == 658\nassert solution.minimizeTheDifference([[58, 61, 70, 8, 69], [14, 39, 35, 42, 19], [39, 19, 55, 45, 52], [55, 57, 60, 69, 50]], 440) == 204\nassert solution.minimizeTheDifference([[3, 18, 25, 23, 59, 24]], 526) == 467\nassert solution.minimizeTheDifference([[70, 47, 28], [43, 29, 30], [11, 48, 16], [35, 49, 54], [2, 18, 22], [61, 48, 32]], 780) == 482\nassert solution.minimizeTheDifference([[26, 59, 41], [23, 36, 58]], 721) == 604\nassert solution.minimizeTheDifference([[27, 47]], 248) == 201\nassert solution.minimizeTheDifference([[65], [43], [64], [68], [39]], 373) == 94\nassert solution.minimizeTheDifference([[8, 29, 50, 41, 40, 68], [13, 61, 46, 70, 57, 19], [43, 25, 13, 26, 36, 63], [11, 63, 24, 6, 55, 8], [26, 16, 8, 48, 43, 8], [17, 16, 65, 2, 32, 39]], 145) == 0\nassert solution.minimizeTheDifference([[61, 11], [63, 19]], 186) == 62\nassert solution.minimizeTheDifference([[71, 26], [33, 23], [42, 21], [60, 49], [33, 57]], 134) == 18\nassert solution.minimizeTheDifference([[58, 30, 3, 12, 20], [6, 6, 57, 44, 37], [31, 11, 41, 19, 50], [19, 63, 3, 2, 1], [41, 16, 13, 6, 28]], 349) == 80\nassert solution.minimizeTheDifference([[57, 46], [43, 65], [4, 61]], 146) == 4\nassert solution.minimizeTheDifference([[3], [21], [65]], 307) == 218\nassert solution.minimizeTheDifference([[47, 30, 19], [23, 52, 31], [16, 7, 28]], 282) == 155\nassert solution.minimizeTheDifference([[40, 13, 29], [2, 14, 68], [28, 54, 28]], 48) == 5\nassert solution.minimizeTheDifference([[51, 69], [62, 68], [67, 58], [29, 14], [20, 25], [54, 54]], 411) == 99\nassert solution.minimizeTheDifference([[57], [52]], 525) == 416\nassert solution.minimizeTheDifference([[16, 6, 8], [20, 21, 7], [49, 27, 14]], 273) == 187\nassert solution.minimizeTheDifference([[8], [67], [30], [44], [22], [23]], 464) == 270\nassert solution.minimizeTheDifference([[40, 65, 62, 23, 60], [22, 56, 27, 61, 58], [24, 22, 43, 47, 2], [34, 62, 12, 22, 71]], 189) == 0\nassert solution.minimizeTheDifference([[33, 14, 36, 69, 32], [44, 51, 9, 32, 53], [33, 1, 57, 49, 12], [14, 4, 64, 35, 21]], 364) == 121\nassert solution.minimizeTheDifference([[14, 20, 39, 52], [43, 4, 12, 51], [2, 52, 4, 10], [55, 16, 49, 65], [47, 32, 57, 16]], 533) == 256\nassert solution.minimizeTheDifference([[48]], 789) == 741\nassert solution.minimizeTheDifference([[21, 63, 44, 4], [69, 61, 9, 33], [11, 6, 5, 68], [32, 71, 45, 21], [13, 41, 17, 18], [53, 32, 62, 57]], 157) == 0\nassert solution.minimizeTheDifference([[53, 21, 2]], 101) == 48\nassert solution.minimizeTheDifference([[19], [26], [12], [18], [31]], 756) == 650\nassert solution.minimizeTheDifference([[32, 59], [24, 24], [44, 53], [33, 62], [39, 11], [39, 18]], 788) == 512\nassert solution.minimizeTheDifference([[69, 12, 40, 23, 30], [40, 28, 11, 46, 64]], 459) == 326\nassert solution.minimizeTheDifference([[24, 36, 31], [68, 5, 37], [5, 68, 14], [58, 28, 15]], 16) == 33\nassert solution.minimizeTheDifference([[44, 29, 59], [44, 70, 70], [13, 7, 58], [43, 24, 41], [71, 17, 34]], 760) == 459\nassert solution.minimizeTheDifference([[17, 12, 11, 39, 49, 25]], 666) == 617\nassert solution.minimizeTheDifference([[55], [43], [20]], 377) == 259\nassert solution.minimizeTheDifference([[68, 55, 28, 51], [61, 13, 66, 64]], 682) == 548\nassert solution.minimizeTheDifference([[23], [33], [52], [54], [71]], 720) == 487\nassert solution.minimizeTheDifference([[65, 5, 20, 20, 49], [32, 11, 69, 48, 64], [46, 25, 55, 56, 31], [26, 8, 1, 36, 27], [65, 47, 56, 29, 25]], 361) == 70\nassert solution.minimizeTheDifference([[10, 16, 71, 3], [59, 47, 10, 15], [22, 50, 63, 11], [14, 33, 68, 10], [31, 32, 38, 45], [47, 39, 66, 37]], 777) == 405\nassert solution.minimizeTheDifference([[46]], 774) == 728",
  "inefficient_solution": "class Solution:\n    def minimizeTheDifference(self, mat: List[List[int]], target: int) -> int:\n        m, n = len(mat), len(mat[0])\n        f = set([0] * (m * n))\n        for i in range(m):\n            g = set()\n            for j in f:\n                for k in range(n):\n                    g.add(j + mat[i][k])\n            f = g\n        return min(abs(v - target) for v in f)",
  "is_python": true
}