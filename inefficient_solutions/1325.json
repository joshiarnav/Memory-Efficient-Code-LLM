{
  "problem_idx": 1325,
  "task_name": "Delete Leaves With a Given Value",
  "markdown_description": "\nGiven a binary tree `root` and an integer `target`, delete all the **leaf nodes** with value `target`.\n\n\nNote that once you delete a leaf node with value `target`**,** if its parent node becomes a leaf node and has the value `target`, it should also be deleted (you need to continue doing that until you cannot).\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n**![](https://fastly.jsdelivr.net/gh/doocs/leetcode@main/solution/1300-1399/1325.Delete%20Leaves%20With%20a%20Given%20Value/images/sample_1_1684.png)**\n\n\n\n```\n\n**Input:** root = [1,2,3,2,null,2,4], target = 2\n**Output:** [1,null,3,null,4]\n**Explanation:** Leaf nodes in green with value (target = 2) are removed (Picture in left). \nAfter removing, new nodes become leaf nodes with value (target = 2) (Picture in center).\n\n```\n\n**Example 2:**\n\n\n**![](https://fastly.jsdelivr.net/gh/doocs/leetcode@main/solution/1300-1399/1325.Delete%20Leaves%20With%20a%20Given%20Value/images/sample_2_1684.png)**\n\n\n\n```\n\n**Input:** root = [1,3,3,3,2], target = 3\n**Output:** [1,3,null,null,2]\n\n```\n\n**Example 3:**\n\n\n**![](https://fastly.jsdelivr.net/gh/doocs/leetcode@main/solution/1300-1399/1325.Delete%20Leaves%20With%20a%20Given%20Value/images/sample_3_1684.png)**\n\n\n\n```\n\n**Input:** root = [1,2,null,2,null,2], target = 2\n**Output:** [1]\n**Explanation:** Leaf nodes in green with value (target = 2) are removed at each step.\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* The number of nodes in the tree is in the range `[1, 3000]`.\n* `1 <= Node.val, target <= 1000`\n\n\n",
  "canonical_solution": "# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def removeLeafNodes(\n        self, root: Optional[TreeNode], target: int\n    ) -> Optional[TreeNode]:\n        if root is None:\n            return None\n        root.left = self.removeLeafNodes(root.left, target)\n        root.right = self.removeLeafNodes(root.right, target)\n        if root.left is None and root.right is None and root.val == target:\n            return None\n        return root\n",
  "test_case_generator": "\nimport random\n\nclass Solution:\n    def removeLeafNodes(\n        self, root: Optional[TreeNode], target: int\n    ) -> Optional[TreeNode]:\n        if root is None:\n            return None\n        root.left = self.removeLeafNodes(root.left, target)\n        root.right = self.removeLeafNodes(root.right, target)\n        if root.left is None and root.right is None and root.val == target:\n            return None\n        return root\n\n\ndef generate_test_case():\n    solution = Solution()\n    \n    # Generate random binary tree\n    root = generate_tree()\n    \n    # Generate a random target value\n    target = random.randint(1, 1000)\n\n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.removeLeafNodes(root, target)\n\n    return root, target, expected_result\n\n\ndef generate_tree(n=0):\n    if random.random() < 0.7 or n == 0:\n        return TreeNode(random.randint(1, 1000))\n    root = TreeNode(random.randint(1, 1000))\n    root.left = generate_tree(n-1)\n    root.right = generate_tree(n-1)\n    return root\n\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        root, target, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.removeLeafNodes(root, target) == expected_result\n        test_case = f\"assert solution.removeLeafNodes({root}, {target}) == {expected_result}\"\n        test_case_generator_results.append(test_case)\n    return test_case_generator_results\n\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b90>, 835) == <__main__.TreeNode object at 0x7fd8a7cf8b90>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c10>, 365) == <__main__.TreeNode object at 0x7fd8a7cf8c10>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8bd0>, 667) == <__main__.TreeNode object at 0x7fd8a7cf8bd0>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b50>, 234) == <__main__.TreeNode object at 0x7fd8a7cf8b50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b90>, 996) == <__main__.TreeNode object at 0x7fd8a7cf8b90>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c50>, 901) == <__main__.TreeNode object at 0x7fd8a7cf8c50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c10>, 479) == <__main__.TreeNode object at 0x7fd8a7cf8c10>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b50>, 343) == <__main__.TreeNode object at 0x7fd8a7cf8b50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b90>, 242) == <__main__.TreeNode object at 0x7fd8a7cf8b90>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c10>, 213) == <__main__.TreeNode object at 0x7fd8a7cf8c10>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8bd0>, 834) == <__main__.TreeNode object at 0x7fd8a7cf8bd0>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b50>, 906) == <__main__.TreeNode object at 0x7fd8a7cf8b50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c50>, 263) == <__main__.TreeNode object at 0x7fd8a7cf8c50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b90>, 588) == <__main__.TreeNode object at 0x7fd8a7cf8b90>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8bd0>, 659) == <__main__.TreeNode object at 0x7fd8a7cf8bd0>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b50>, 574) == <__main__.TreeNode object at 0x7fd8a7cf8b50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c50>, 466) == <__main__.TreeNode object at 0x7fd8a7cf8c50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b90>, 690) == <__main__.TreeNode object at 0x7fd8a7cf8b90>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8bd0>, 377) == <__main__.TreeNode object at 0x7fd8a7cf8bd0>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b50>, 425) == <__main__.TreeNode object at 0x7fd8a7cf8b50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c50>, 222) == <__main__.TreeNode object at 0x7fd8a7cf8c50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b90>, 160) == <__main__.TreeNode object at 0x7fd8a7cf8b90>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8bd0>, 134) == <__main__.TreeNode object at 0x7fd8a7cf8bd0>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b50>, 205) == <__main__.TreeNode object at 0x7fd8a7cf8b50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c50>, 497) == <__main__.TreeNode object at 0x7fd8a7cf8c50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c10>, 742) == <__main__.TreeNode object at 0x7fd8a7cf8c10>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8bd0>, 526) == <__main__.TreeNode object at 0x7fd8a7cf8bd0>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b50>, 580) == <__main__.TreeNode object at 0x7fd8a7cf8b50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c50>, 322) == <__main__.TreeNode object at 0x7fd8a7cf8c50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c10>, 382) == <__main__.TreeNode object at 0x7fd8a7cf8c10>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8bd0>, 912) == <__main__.TreeNode object at 0x7fd8a7cf8bd0>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b50>, 331) == <__main__.TreeNode object at 0x7fd8a7cf8b50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c50>, 794) == <__main__.TreeNode object at 0x7fd8a7cf8c50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c10>, 136) == <__main__.TreeNode object at 0x7fd8a7cf8c10>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8bd0>, 375) == <__main__.TreeNode object at 0x7fd8a7cf8bd0>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b50>, 556) == <__main__.TreeNode object at 0x7fd8a7cf8b50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c50>, 355) == <__main__.TreeNode object at 0x7fd8a7cf8c50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c10>, 328) == <__main__.TreeNode object at 0x7fd8a7cf8c10>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8bd0>, 861) == <__main__.TreeNode object at 0x7fd8a7cf8bd0>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b50>, 306) == <__main__.TreeNode object at 0x7fd8a7cf8b50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c50>, 882) == <__main__.TreeNode object at 0x7fd8a7cf8c50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c10>, 411) == <__main__.TreeNode object at 0x7fd8a7cf8c10>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8bd0>, 787) == <__main__.TreeNode object at 0x7fd8a7cf8bd0>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b50>, 200) == <__main__.TreeNode object at 0x7fd8a7cf8b50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c50>, 911) == <__main__.TreeNode object at 0x7fd8a7cf8c50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c10>, 318) == <__main__.TreeNode object at 0x7fd8a7cf8c10>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8bd0>, 428) == <__main__.TreeNode object at 0x7fd8a7cf8bd0>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b50>, 385) == <__main__.TreeNode object at 0x7fd8a7cf8b50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c50>, 898) == <__main__.TreeNode object at 0x7fd8a7cf8c50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c10>, 241) == <__main__.TreeNode object at 0x7fd8a7cf8c10>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8bd0>, 286) == <__main__.TreeNode object at 0x7fd8a7cf8bd0>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b50>, 122) == <__main__.TreeNode object at 0x7fd8a7cf8b50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c50>, 11) == <__main__.TreeNode object at 0x7fd8a7cf8c50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c10>, 869) == <__main__.TreeNode object at 0x7fd8a7cf8c10>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8bd0>, 156) == <__main__.TreeNode object at 0x7fd8a7cf8bd0>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b50>, 175) == <__main__.TreeNode object at 0x7fd8a7cf8b50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c50>, 719) == <__main__.TreeNode object at 0x7fd8a7cf8c50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c10>, 738) == <__main__.TreeNode object at 0x7fd8a7cf8c10>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8bd0>, 127) == <__main__.TreeNode object at 0x7fd8a7cf8bd0>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b50>, 823) == <__main__.TreeNode object at 0x7fd8a7cf8b50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c50>, 605) == <__main__.TreeNode object at 0x7fd8a7cf8c50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c10>, 389) == <__main__.TreeNode object at 0x7fd8a7cf8c10>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8bd0>, 416) == <__main__.TreeNode object at 0x7fd8a7cf8bd0>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b50>, 31) == <__main__.TreeNode object at 0x7fd8a7cf8b50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c50>, 824) == <__main__.TreeNode object at 0x7fd8a7cf8c50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c10>, 833) == <__main__.TreeNode object at 0x7fd8a7cf8c10>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8bd0>, 42) == <__main__.TreeNode object at 0x7fd8a7cf8bd0>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b50>, 396) == <__main__.TreeNode object at 0x7fd8a7cf8b50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c50>, 682) == <__main__.TreeNode object at 0x7fd8a7cf8c50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c10>, 841) == <__main__.TreeNode object at 0x7fd8a7cf8c10>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8bd0>, 416) == <__main__.TreeNode object at 0x7fd8a7cf8bd0>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b50>, 656) == <__main__.TreeNode object at 0x7fd8a7cf8b50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c50>, 639) == <__main__.TreeNode object at 0x7fd8a7cf8c50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c10>, 674) == <__main__.TreeNode object at 0x7fd8a7cf8c10>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8bd0>, 116) == <__main__.TreeNode object at 0x7fd8a7cf8bd0>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b50>, 630) == <__main__.TreeNode object at 0x7fd8a7cf8b50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c50>, 810) == <__main__.TreeNode object at 0x7fd8a7cf8c50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c10>, 157) == <__main__.TreeNode object at 0x7fd8a7cf8c10>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8bd0>, 530) == <__main__.TreeNode object at 0x7fd8a7cf8bd0>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b50>, 382) == <__main__.TreeNode object at 0x7fd8a7cf8b50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c50>, 71) == <__main__.TreeNode object at 0x7fd8a7cf8c50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c10>, 104) == <__main__.TreeNode object at 0x7fd8a7cf8c10>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8bd0>, 834) == <__main__.TreeNode object at 0x7fd8a7cf8bd0>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b50>, 943) == <__main__.TreeNode object at 0x7fd8a7cf8b50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c50>, 794) == <__main__.TreeNode object at 0x7fd8a7cf8c50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c10>, 349) == <__main__.TreeNode object at 0x7fd8a7cf8c10>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8bd0>, 296) == <__main__.TreeNode object at 0x7fd8a7cf8bd0>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b50>, 302) == <__main__.TreeNode object at 0x7fd8a7cf8b50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c50>, 290) == <__main__.TreeNode object at 0x7fd8a7cf8c50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c10>, 927) == <__main__.TreeNode object at 0x7fd8a7cf8c10>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8bd0>, 244) == <__main__.TreeNode object at 0x7fd8a7cf8bd0>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b50>, 267) == <__main__.TreeNode object at 0x7fd8a7cf8b50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c50>, 626) == <__main__.TreeNode object at 0x7fd8a7cf8c50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c10>, 999) == <__main__.TreeNode object at 0x7fd8a7cf8c10>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8bd0>, 783) == <__main__.TreeNode object at 0x7fd8a7cf8bd0>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b50>, 368) == <__main__.TreeNode object at 0x7fd8a7cf8b50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c50>, 686) == <__main__.TreeNode object at 0x7fd8a7cf8c50>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8c10>, 657) == <__main__.TreeNode object at 0x7fd8a7cf8c10>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8bd0>, 51) == <__main__.TreeNode object at 0x7fd8a7cf8bd0>\nassert solution.removeLeafNodes(<__main__.TreeNode object at 0x7fd8a7cf8b50>, 749) == <__main__.TreeNode object at 0x7fd8a7cf8b50>",
  "inefficient_solution": "class Solution:\n    def removeLeafNodes(self, root: Optional[TreeNode], target: int) -> Optional[TreeNode]:\n        def traverse(node):\n            if node is None:\n                return []\n            left_result = traverse(node.left)\n            right_result = traverse(node.right)\n            if node.val == target and node.left is None and node.right is None:\n                return [1]  # dummy value to indicate deletion\n            else:\n                return [node, left_result, right_result]\n\n        def rebuild_traversal(traversal_result):\n            if len(traversal_result) == 1:\n                return None\n            node = traversal_result[0]\n            node.left = rebuild_traversal(traversal_result[1])\n            node.right = rebuild_traversal(traversal_result[2])\n            return node\n\n        result = traverse(root)\n        if len(result) == 1:\n            return None\n        return rebuild_traversal(result)",
  "is_python": true
}