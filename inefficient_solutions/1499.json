{
  "problem_idx": 1499,
  "task_name": "Max Value of Equation",
  "markdown_description": "\nYou are given an array `points` containing the coordinates of points on a 2D plane, sorted by the x-values, where `points[i] = [xi, yi]` such that `xi < xj` for all `1 <= i < j <= points.length`. You are also given an integer `k`.\n\n\nReturn *the maximum value of the equation* `yi + yj + |xi - xj|` where `|xi - xj| <= k` and `1 <= i < j <= points.length`.\n\n\nIt is guaranteed that there exists at least one pair of points that satisfy the constraint `|xi - xj| <= k`.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** points = [[1,3],[2,0],[5,10],[6,-10]], k = 1\n**Output:** 4\n**Explanation:** The first two points satisfy the condition |xi - xj| <= 1 and if we calculate the equation we get 3 + 0 + |1 - 2| = 4. Third and fourth points also satisfy the condition and give a value of 10 + -10 + |5 - 6| = 1.\nNo other pairs satisfy the condition, so we return the max of 4 and 1.\n\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** points = [[0,0],[3,0],[9,2]], k = 3\n**Output:** 3\n**Explanation:** Only the first two points have an absolute difference of 3 or less in the x-values, and give the value of 0 + 0 + |0 - 3| = 3.\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `2 <= points.length <= 105`\n* `points[i].length == 2`\n* `-108 <= xi, yi <= 108`\n* `0 <= k <= 2 * 108`\n* `xi < xj` for all `1 <= i < j <= points.length`\n* `xi` form a strictly increasing sequence.\n\n\n",
  "canonical_solution": "class Solution:\n    def findMaxValueOfEquation(self, points: List[List[int]], k: int) -> int:\n        ans = -inf\n        q = deque()\n        for x, y in points:\n            while q and x - q[0][0] > k:\n                q.popleft()\n            if q:\n                ans = max(ans, x + y + q[0][1] - q[0][0])\n            while q and y - x >= q[-1][1] - q[-1][0]:\n                q.pop()\n            q.append((x, y))\n        return ans\n",
  "test_case_generator": "\nimport random\nfrom collections import deque\nfrom typing import List\n\nclass Solution:\n    def findMaxValueOfEquation(self, points: List[List[int]], k: int) -> int:\n        ans = -float('inf')\n        q = deque()\n        for x, y in points:\n            while q and x - q[0][0] > k:\n                q.popleft()\n            if q:\n                ans = max(ans, x + y + q[0][1] - q[0][0])\n            while q and y - x >= q[-1][1] - q[-1][0]:\n                q.pop()\n            q.append((x, y))\n        return ans\n        \n    \ndef generate_test_case():\n    solution = Solution()\n    \n    # Generate random points list\n    points_length = random.randint(2, 100)\n    points = []\n    x = 0\n    for _ in range(points_length):\n        x += random.randint(1, 5)\n        y = random.randint(-100000000, 100000000)\n        points.append([x, y])\n    \n    # Generate a random k value\n    k = random.randint(0, 200000000)\n\n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.findMaxValueOfEquation(points, k)\n\n    return points, k, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        points, k, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.findMaxValueOfEquation(points, k) == expected_result\n        print(f\"assert solution.findMaxValueOfEquation({points}, {k}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.findMaxValueOfEquation({points}, {k}) == {expected_result}\")\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.findMaxValueOfEquation([[3, -10395303], [5, -26116459], [10, 87517106], [15, 29729497], [20, 7497849], [23, -34655448], [27, 69513501], [32, 10651256], [34, 27529462], [39, -59219807], [40, -84690214], [44, -30948444], [46, -17199109], [47, 90615107], [48, -24397843], [50, -48695863], [52, 58153800], [53, -90627619], [58, -86980470], [62, -10328758], [64, -80139967], [68, 94803305], [70, 79921254], [71, -45637972], [75, 34599552], [76, 99794920], [78, 61402118], [79, 66607211], [81, 2613360], [82, -69131447], [85, -11566708], [90, 2865605], [95, -44248005], [99, 28177804], [101, -88504843], [104, -92654814], [109, 50409718], [110, 83235587], [112, -75279746], [117, 2502715], [119, -25357886], [122, 44056388], [126, -90651163], [131, -38145861], [133, 26369553], [137, 28441082], [141, -15716920], [142, 18365848], [145, -58271099], [148, 55821410], [151, 58516203], [155, 57876013], [157, 55331298], [158, 16267659], [163, 17053271], [164, -47687741], [165, -6409662]], 16468534) == 194598233\nassert solution.findMaxValueOfEquation([[5, 19025018], [8, -72480067], [11, 62196420], [16, 94130607], [17, 41610710], [22, 90232309], [24, -95238603], [26, 46592113], [28, -92489757], [32, 173172], [36, 92939833], [38, 52355920], [42, -97330046], [46, 27231825], [48, 54246635], [52, 24282819], [56, -88339082], [60, 17345634], [65, -69672808], [69, 32429143], [71, 27999209], [76, 26027025], [77, 17696031], [81, 61865912], [86, 68785188], [87, 83368370], [88, -13316519], [93, 47211037], [95, -74290961], [97, 13170656], [98, -57584856], [102, -84437446], [103, 14377726], [107, -19518716], [110, 77388824], [113, -30403134], [117, -40219222]], 91395242) == 187070460\nassert solution.findMaxValueOfEquation([[2, -48642314], [4, 78409835], [5, 96837232], [9, -95630160], [12, 27821182], [13, -92928162], [14, -42272576], [16, -91465374], [17, -53259006], [20, -88955232], [23, 64146738], [24, -18033468], [28, 15699277], [30, 262256], [31, 77859444], [35, 76642420], [40, 81417675], [44, -88819021], [49, -68148469], [52, -3324008], [54, -14890748], [57, 44519282], [60, 77132014], [62, -12027592], [67, -28103746], [72, -58559607], [73, -82208899], [78, -62225359], [82, -40398012], [85, 69944085], [86, 74408148], [91, -47882035], [95, -47515829], [98, -18738391], [100, -24879891], [103, -65074140], [108, 14711614], [113, -82705189], [117, -40651816], [122, 52495135], [127, -61134217], [132, 77892340], [135, 3403844], [140, 78595113], [145, -56239988], [149, -27107296], [151, 53167203], [153, -53047386], [156, 13669631], [159, -83490908], [163, 5817547], [167, 95942822], [172, -49623916], [175, -27350143], [179, 2174810], [180, -70823520], [181, 25193275], [184, 76691108], [189, -35904664], [190, -70256261]], 90109058) == 192780216\nassert solution.findMaxValueOfEquation([[2, -49798], [4, 53458770], [7, 61400453], [11, -54740091], [13, 64446284], [18, 42544437], [20, -81259116], [25, -96117103], [27, -12675403], [28, 7754630], [30, 76003911], [31, -46946909], [32, 86748669], [34, 88888273], [37, 97155331], [40, 78234307], [41, -63740984], [44, -74315568], [49, 9543089], [54, -90208828], [59, -97573253], [64, -36344068], [68, -97739600], [71, 22102015], [76, -4909661], [81, 58272126], [83, -46808409], [88, -17577145], [92, 74819561], [96, 72974367], [99, -82210501], [102, 64393710], [106, -94081236], [110, -68401483], [112, 66513225], [117, 12443845], [118, 79185420], [120, -50161545], [125, -49268284], [130, 15745783], [132, 59944646], [134, -89523709], [139, 27995817], [141, 9764387], [146, 9044637], [149, -31115238], [152, 90199124], [157, 26818522], [158, 90635410], [159, 99748997]], 126820928) == 196904450\nassert solution.findMaxValueOfEquation([[1, 54248738], [5, 48280496], [7, 10847623], [8, 31127501], [10, 27811061], [12, 73184153], [13, 68514485], [16, -22308082], [21, -38988905], [23, 79931708], [26, 89544406], [30, 99643297], [33, -63023080], [36, 87360901], [41, -91661633], [45, 63107474], [48, -33660603], [52, -21661213], [53, -70084357], [54, -13576399], [55, -71977911], [56, 22675451], [58, -77792445], [63, -76711453], [67, -87995032], [68, 65963768], [71, -7692034], [72, 50208743], [74, 44105817], [76, 38394774], [81, 27239710], [83, 12699675], [88, -52282906], [93, 87592024], [96, -1041057], [100, 90787735], [104, 53709306], [109, 26708868], [114, -6037630], [119, -41763540], [121, -60061259], [122, 84311756], [126, -27799893], [129, 77000922], [132, 86555099], [135, 89603845], [137, -30665157], [140, -35068162], [142, 18908070], [145, 44002953], [149, -58471869], [153, 69532279], [155, 25342909], [158, 45362453], [162, -38790282], [166, -81979207], [169, 37269316], [174, 40827257], [179, 40186526], [184, 96578451], [185, -33448864], [188, 62321395], [191, 25379690], [196, -10699352], [201, 39079018], [204, 63038291], [207, -86360276], [211, -79606540], [214, -897914], [218, -37412773], [219, -37426130], [222, 18188556], [225, 65024672], [226, -17707864], [230, -4815705], [234, 35551944], [238, -16578057], [241, -87844733], [242, 63969922], [247, -85504068], [250, 33548789], [252, -96892391], [253, 47387792], [255, -79739850], [259, -17707688], [263, 28619479]], 174087453) == 196221902\nassert solution.findMaxValueOfEquation([[5, 10449657], [10, -10605203], [13, -78301302], [14, -5595108], [18, -24317318], [23, -54236250], [24, 32730971], [26, 30695374], [29, -21330998], [33, 64115262], [36, -11855314], [40, 23459270], [44, 89295871], [47, 59742639], [51, -32294006], [52, -38840036], [57, 28110661], [62, 89838801], [65, 68077118], [67, -24920451], [71, -14224333], [75, 50653105], [76, 65305940], [80, -10856731], [83, 68609274], [86, 13771678], [89, -56746698], [94, 44364092], [95, -96226017], [97, 9961586], [100, -81230303], [101, 91455704], [103, 39962528], [104, -23174550], [106, -31060379], [111, 84959208], [115, 1963490], [117, -33501515], [119, -97530432], [124, -64240410], [125, 49457715], [127, 52123594], [132, 39823259]], 136509847) == 181294544\nassert solution.findMaxValueOfEquation([[4, -29688886], [8, 925818], [10, 3463481], [15, 67314017], [16, 49810957], [20, 81500184], [23, 87312395], [27, -64183106], [28, -55705733], [30, -67713244], [32, 22018559], [34, -76492982], [37, 61200262], [42, -48160970], [47, 19107421], [48, 21001342], [50, -8638954], [51, 65406163], [55, -81201652], [60, 93442148], [62, 25092841], [67, 12693036], [68, 58589552], [71, 49917962], [74, -9083830], [76, -82083659], [77, 59295851], [79, -66255177], [84, -88999281], [86, 36970644], [89, 83204562], [90, -83303173], [92, 18358815], [97, 98578456], [99, -81850350], [100, -3424881], [104, -80365294], [105, 49806339], [109, -42373184], [111, 22687656], [113, 87880008], [116, 6728199], [118, 67139751], [122, -11490503], [127, 41741462], [132, -75408789], [135, 45326290], [139, 76225165], [143, -2071570], [148, 33335005], [149, 28366269], [152, -84110878], [157, -83073668], [162, 90585674], [167, 93124783], [170, -35504538], [172, 44763626], [176, 17562367], [181, 42541592], [184, -13822426], [188, -79511046], [193, -4616135], [195, -88534997], [197, 25998840], [198, -73525016], [203, 53144050], [207, -24691750], [212, -41653003], [216, -94427648], [219, 30274440], [224, 9956263], [228, -28154749], [230, 63848348], [235, 64520162], [239, 46378729], [244, -43247368], [249, 68498157], [252, 61037741], [253, 2093349], [256, -52040440], [261, -1227891], [266, -14141577], [270, 89971277], [275, -51296879], [280, 54592027], [285, 69217919], [290, -80887269], [291, 48133030], [295, -48131479], [297, 49400780]], 145840636) == 192020641\nassert solution.findMaxValueOfEquation([[5, -8374096], [10, -49092739], [11, 58675747], [14, 25926150], [15, 23422008], [19, -12746260], [23, 94738836], [26, 13674852], [31, 74240301], [33, -75708367], [36, -26517570], [41, -86212392], [43, -95424159], [45, -22674747], [49, 60416103], [52, 2031729], [54, -28098783], [57, 76223517], [60, 65805620], [62, 58296151], [63, 40944942]], 75861433) == 170962387\nassert solution.findMaxValueOfEquation([[4, -77090562], [5, 75675054], [7, -52301953], [8, -15802742], [9, 5736418], [10, 9821162], [14, -93065782], [18, 86661321], [19, 19569187], [22, 23174001], [23, 92310518], [26, 14348400], [28, 77217098], [31, -1440654], [34, 34162748], [38, 27428579], [42, -60786009], [46, 33775690], [51, -41144314], [52, 52212741], [56, 90987949], [60, -15751244], [64, 30008751], [69, 87522679], [72, -21357601], [77, 51013090], [81, -16254214], [86, 14224818], [88, -12167306], [90, -58654419], [92, 92246614], [95, -36426960], [100, -61799672], [103, -47796133], [107, 34034900], [108, 77278749], [109, -76951133], [113, -2968336], [116, 87112454], [118, -50502766], [123, -32241188], [127, -37040787], [132, 83225390], [133, 96963396], [136, -51502246], [140, 26641725], [141, 69394515], [142, 81385326], [146, 57694774], [147, 40130893], [149, -58456310], [151, 94435599], [156, -66696852], [160, 62435744], [164, -48572364], [167, -5836178], [168, 36787980], [171, -15167324], [175, 54285608], [180, -83162998], [182, -76254710], [184, -41623149], [189, 51997693], [191, 84582102], [192, 9418114], [195, 34842548], [200, -2235169], [202, -27426853], [204, -41420525], [205, 6738975], [206, -48374699], [210, -596951], [212, 57340077], [215, 91658991], [217, 51040018], [221, -4982349], [225, -75314498], [226, -80319739], [231, -73568633], [236, 39670106], [240, 26060931], [243, -42976250], [246, -74739721], [248, 61468212]], 81936393) == 191399013\nassert solution.findMaxValueOfEquation([[3, 89343034], [6, 62791864], [10, -81819920], [15, 55105995], [19, 60673356], [20, 40231966], [21, 55305988], [22, -23460061], [26, 60624622], [31, 81899960], [35, -35574045], [36, 41077152], [41, -3564114], [45, -93427394], [49, 66505197], [54, -95657561], [56, -95032045], [59, 68356931], [62, 19822469], [64, 16826815], [69, 64364310], [73, 33406165], [75, -69613567], [78, 23328702], [79, -81892832], [82, -76105491], [86, -68884915], [90, 89536471], [93, 18080226], [97, 64418977], [100, -35329343], [104, -15404567], [107, 63488093], [111, -69448910], [114, -88467324], [117, 1739424], [120, -61796651], [121, 83251598], [126, 16268543], [127, 49615428], [129, -77600224], [132, 78817131], [136, 35029712], [138, 59237150], [140, 62065855], [144, -83801508], [147, 53361127], [148, 10898759], [153, -30224081], [158, -40238169], [162, 15997952], [166, -56892310], [170, -15996572], [171, 62632916], [173, 49619540], [174, 32743357], [178, -41925668]], 88469818) == 178879592\nassert solution.findMaxValueOfEquation([[5, -68291926], [10, -11199424], [11, 46283521], [15, -30150783], [17, -99341891], [22, -88311687]], 32711268) == 35084098\nassert solution.findMaxValueOfEquation([[3, -62226242], [8, -70370717], [13, -31135837], [14, -26343195], [16, 43929444], [17, -23695353], [19, -94074202], [24, -15577783], [28, 65092607], [33, -67096198], [34, 64543902], [36, -93925825], [37, -99342291], [41, -76014338], [44, 93323272], [49, 78917820], [52, 36018435], [56, 40118161], [61, 80725036], [63, 96607229], [66, -56181454], [68, 41551253], [69, -26463067], [72, 25604805], [73, -85562889], [78, -74211769], [83, 62149954], [87, -12755795], [92, -42636628], [96, 97786429], [99, -41823205], [101, 27669321], [105, -11058969], [106, -96782471], [109, -3229424], [110, 6260263], [114, -72598436], [117, -17851377], [122, -7151335], [125, -78879543], [128, -18682334], [129, -99628584], [133, 55576575], [135, -60963678], [136, -91607168], [139, -62365084], [142, 90982562], [145, -84712651], [148, -53188110], [153, 18142620], [154, 91984702], [159, -29395274], [161, -36238776], [166, 62893797], [167, 8423775], [172, -38710353], [174, -80489807], [175, -53645010], [180, -30272177], [184, 77919867], [188, -13230559], [191, -16151199], [193, 67539527], [195, 93573874], [197, 48135435], [201, -33512079], [203, 12144804], [204, -13094407], [206, -6446371], [210, -74483696], [215, -16320472], [217, 11559924], [221, -26835714], [222, -99762037], [226, -41568286]], 65014801) == 194393691\nassert solution.findMaxValueOfEquation([[2, -56274261], [4, -74488864], [9, 55230324], [10, 53384445], [14, -35455837], [16, -81496706], [18, 517259], [21, 26783073], [24, 66042341], [28, -36418969], [29, -37933610], [30, -99322029], [33, 35662432], [36, 19144801], [37, -77372021], [38, -44110239], [43, 40576789], [47, -16769581], [49, -82948862], [50, 13432862], [53, 22173398], [54, -8263515], [58, -12110372], [62, 8642735], [64, 58623518], [68, -80971275], [69, -98857713], [71, -54700521], [72, 82903658], [76, 17203916], [81, -15662229], [84, -92585754], [87, 7933514], [91, -38596590], [94, 30850136], [95, -52910812], [98, -58040531], [103, -94358309], [104, -83038878], [107, 20358241], [111, -82078643], [113, 22887621], [118, 13290456], [119, -23961074], [123, -53047037], [126, 99326071]], 188566976) == 182229783\nassert solution.findMaxValueOfEquation([[3, 2969866], [7, -85851492], [8, 91023648], [11, -63425608], [16, 65604091], [20, 35144231], [21, -87708160], [23, -13875874], [25, -1766383], [26, -33119239], [31, -46806431], [36, 9119259], [37, 87231189], [41, 90799947], [45, 73941577], [50, 12943230], [55, -42285308], [56, 40689619], [61, -93289717], [65, -49091919], [68, -57344067]], 188422730) == 181823628\nassert solution.findMaxValueOfEquation([[3, 69800291], [7, -3553174], [8, 54735086], [10, -6244235], [13, 1816085], [17, -84766886], [18, -84077060], [23, -65815144], [28, -84574099], [33, -22155180], [35, 22073191], [38, 60629664], [41, 30687282], [43, 28356758], [46, 89345302], [47, 17024786], [49, 36673548], [53, 74327884], [55, -36931911], [57, 30772728], [62, 97288304], [63, -69180029], [68, 59250874], [70, -25936550], [73, -76361957], [76, 64602193], [79, 83496420], [80, -73675512], [83, -54272613], [85, 30241009], [89, -81911104], [93, 56593417], [98, -98562242], [101, -77936033], [103, -18884698], [107, 7935042], [111, -75848331], [114, -19492520], [116, 60995948], [120, 19438976], [121, -35746974], [123, -27195374], [126, 51863506], [129, 23659820], [133, 8262058], [136, -28980305], [137, 85266759], [140, -33387617], [144, 84442826], [149, -5861905], [154, 98804264], [156, -90291387], [160, -85759928], [163, 77854886], [166, 78036934], [167, -40338569], [168, -477138], [169, 54015912], [173, 49547826], [178, -17827682], [182, -13363095], [183, 53012038], [185, -19380988], [186, 49002431], [190, 73147919], [193, 86530845], [197, 53235937], [200, 94168047], [202, 21793663], [206, 45959724], [208, 58211074], [209, -90634379], [213, -67228266], [218, 71586088], [223, 78718826], [228, -73379283], [233, 89238460], [234, -34136950], [236, -77953862], [239, 26146549], [240, 92055772], [245, 66183013], [248, -72496270], [253, -30981816], [255, -80322123]], 63752687) == 196092660\nassert solution.findMaxValueOfEquation([[2, -81513453], [6, 37107979], [10, 57771629], [14, 63104943], [15, -46124615], [18, -81911201], [23, -27951620], [24, -98836301], [28, 88300964], [31, 2838625], [35, -31967987], [37, 43497405], [41, 64948401], [44, -9248842], [46, -67586401], [48, -57949774], [51, 38120594], [56, 13867116], [57, -54178276], [60, -90874190], [61, -60778011], [66, 94909958], [68, 39727576], [72, -23395604], [77, 72333929], [82, -76850321], [83, 53123128], [84, -7731729], [85, 61959771], [86, -98434508], [88, 69434933], [90, 5776819], [91, -15564473], [92, -68572028], [94, 39998363], [99, -17499664], [101, -32361025]], 178036017) == 183210960\nassert solution.findMaxValueOfEquation([[1, -99086738], [2, -78160659], [5, -57527982], [6, -11392060], [10, -5850825], [15, 44692958], [20, -50315749], [21, 93144926], [22, 40589230], [23, 75925550], [28, -46331187], [31, -42631660], [35, 18470841], [40, 68427175], [44, -2103664], [45, 59097307], [47, 92474891], [52, 305219], [53, 93229080], [54, -40494406], [57, -33125489], [62, 27011763], [67, -278780], [68, -88876763], [70, 4896973], [75, -89074751], [76, -30439189], [79, -20002647], [80, 87320201], [85, -60949395], [87, 49025673], [90, 37062420], [92, 20903034]], 64522297) == 186374038\nassert solution.findMaxValueOfEquation([[5, 83345057], [8, -43328688], [11, 4420576], [12, -67988083], [13, -35932031], [14, 60013004], [19, -68391383], [22, -46856799], [26, -1017201], [27, -63685271], [30, -59453015], [31, -80473464], [35, 52280657], [37, -81101426], [42, 95934323], [44, 20089766], [47, 41686194], [50, -31363063], [52, 43015507], [53, 43685260], [57, -2511730], [62, 56611705], [64, 39508481], [67, -6308040], [71, -37848975], [74, -58629311], [77, 11964890], [78, 83599284], [83, 77108905], [87, -21554596], [91, -15254357], [94, 24407602], [96, -85158037], [100, -29954276], [104, 26308757], [106, -25900203], [110, 68188387], [114, -77332160], [115, 91058011], [118, 93880584], [120, -94541424], [124, -48887975], [127, -71620346], [131, -5965275], [135, -2004148], [139, 21183192], [142, -33092666], [144, -17232147], [148, -40577268], [149, -52825859], [151, 53122127], [156, 53819068], [160, 24877427], [162, 62251113], [165, -67234176], [168, 61118750], [170, -79200565], [174, -19821643], [176, -31222762], [178, 66598690], [183, 65359688], [186, 56408349], [187, 14969543], [189, 14388395], [190, -2102735], [191, 17872530], [194, -87753483], [195, -51323823], [198, 7498900], [199, -37645182], [203, 42426631], [207, -19333225], [211, 48279164], [214, 59398999], [216, 33669484], [217, 88050332], [221, 71326892], [222, -93785180], [224, -10692493], [225, 47508283], [229, -39357139], [234, -43046753], [239, 36044601], [242, -36123840], [244, 86191688], [247, -6214043], [249, 43171740], [250, -45577735], [255, 83320018], [256, 53304356], [259, 23703206], [263, 72855861], [266, 74387632], [271, 26654527], [273, 94264895], [278, 25861724], [281, -40622095]], 38096388) == 190199449\nassert solution.findMaxValueOfEquation([[4, -30346206], [8, -51177194], [11, -25464183], [13, 11529667], [16, 20884272], [17, -24141736], [21, -29135027], [22, 40238419], [26, -21211467], [28, -68050119], [31, 47168169], [36, 18391718], [40, 33162114], [44, -44628807], [45, -98957635], [46, 88739476], [49, 36932851], [50, -8522176], [55, -33073746], [60, 98118137]], 66368521) == 186857627\nassert solution.findMaxValueOfEquation([[1, -63816037], [5, 55530063], [10, -38248479], [13, -3877657], [17, -43803381], [22, 23737736], [25, 29560243], [30, -54681711]], 143155786) == 85090326\nassert solution.findMaxValueOfEquation([[5, 84350518], [6, -12336076], [11, 1531916], [12, -72622105], [13, -95508117], [14, 19868260], [18, -5551789], [19, 98635810], [20, -1308520], [23, 62507769], [24, 25568959], [25, 82333970], [30, 43354077], [31, 37642453], [32, 44521947], [36, 75339257], [37, 18069511], [41, -26744466], [43, -3441130], [48, 66011438], [51, -7967157], [54, -19482689], [55, 52358321], [58, 10957674], [61, 98954001], [62, -9007353], [66, -12162725], [69, 32576270], [72, -57801154], [74, 30900475], [77, 18694897], [78, -93966328], [80, -38791670], [81, -33518708], [86, 97721389], [91, 10817508], [92, 30944381], [93, 96112025], [98, 3255566], [99, 86828723], [102, -70412846], [103, -3953729], [104, -60817567], [107, 75102375], [112, 4611709], [116, 76088758], [117, -36184122], [121, 84794644], [125, 14524984], [126, -31388921], [127, -96446773], [129, 9644022], [131, 23146261], [134, 91082454], [138, -45165834], [142, -43128789], [145, -39871808], [147, 3020256], [148, -85058967], [152, -63158303], [153, 37329799], [154, 18901542], [159, 82060702], [163, -81560415], [168, 47455227], [172, -20108541], [173, 79515381], [174, -14859724], [177, -2601105], [179, 7509773], [181, 67655492], [185, -46872696], [189, -37132048], [193, -45680653], [195, 32531093], [196, -63250589], [197, 42085301], [201, -12903043], [206, -65999921], [211, -39994221], [214, -31494633], [215, -57161075], [219, -53752455], [220, 74518354], [224, -29012010], [227, -74207671], [230, 40431047]], 126223951) == 197589853\nassert solution.findMaxValueOfEquation([[1, -31229973], [3, 66534549], [8, 22405825], [11, -81350083], [16, 31533031], [19, 75675968], [23, 62994552], [24, 39071948], [28, -47869708], [31, 51981757], [35, 62732634], [37, 26342958], [40, -22022821], [44, 16276673], [47, 94175296], [50, 31684165], [54, 5306470], [55, -17391319], [57, 28402956], [62, -23087749], [64, -7390419], [65, 27703964], [67, 40905973], [68, 3020298], [72, -33587529], [73, -64951901], [75, -66327117], [76, -99779309], [80, -44875526], [85, -47892599], [87, 50017070], [88, 91223138], [91, 12146945], [94, -31219963], [99, 19867467], [102, 40431009], [104, 86968153], [105, 47663918], [107, 82766146], [109, 94601661], [113, 56778850], [115, -77214420], [117, 54540302], [121, -33119162], [125, 67319806], [128, 71792491], [129, 93819021], [134, 87010119], [139, -93468433], [140, -1632129], [142, -36285432], [147, 63666915], [150, 11568163], [152, 87643450], [157, -6488739], [160, -64492655], [165, 99839202], [168, -37902565], [170, 98573763], [171, 82047039], [176, -84947661], [178, -74946366], [183, -1764921], [185, 36811710], [186, 7302190], [190, 69483285], [195, 43573884], [196, 13322376], [197, 66580586], [199, 64960264], [200, 88173240], [202, 70420693], [206, 38148881], [211, -54788087], [214, 6710160]], 16231218) == 198412970\nassert solution.findMaxValueOfEquation([[5, -79302366], [6, -6062762], [10, 48942723], [13, 88464170], [15, -31349935], [19, -24319920], [24, 73918170], [25, 53185066], [29, 11350617], [31, -5266398], [34, -45827513], [36, 79604944], [37, -49305683], [39, -54145664], [40, -6083708], [42, -65454324], [45, 94598801], [47, -64678373], [50, -42092146]], 106684846) == 183063003\nassert solution.findMaxValueOfEquation([[2, 96472747], [3, 113626], [8, 37714298], [11, -80249936], [12, -95446244], [14, -58898931], [17, -67732675], [19, -33184828], [21, 78865870], [24, 31050053], [25, -433178], [29, 41002723], [33, 6459937], [38, 41506878], [39, -92861286], [42, -93349120], [47, 51424870], [49, 89707458], [51, 16694481], [53, 85357752], [58, -98822036], [63, 51936998], [67, -4754265], [72, -83259363], [75, -21362252], [79, 70739138], [81, -18741127], [83, -17429893], [87, 24237031], [88, 30809689], [91, -93557631], [96, 17445048], [99, 27349045], [103, -83034000], [104, -78143133], [108, 97615308], [112, -11380461], [115, -1296053], [116, 7591632], [119, -95544778], [123, 58256589], [124, 63593826], [125, -12868172], [130, 96926922], [135, 3547885], [136, -56493102], [138, -44668407], [140, -95882051], [144, -45178493], [146, -26182382], [149, -16429173], [154, 93005272], [155, 88524083], [158, 69916874], [162, -83044257], [164, 97418483]], 189806704) == 195033847\nassert solution.findMaxValueOfEquation([[3, 57163885], [4, -49384338], [9, 99747344], [10, -12924783], [14, -82617878], [19, -48876922], [20, -21360387], [23, -30480346], [27, 42821770], [32, 98590499], [34, -43034303], [39, 81567672], [44, 6081848], [47, 10161335], [51, 7990210], [53, -63329780], [56, 62997887], [57, -4807645], [61, -1367124], [66, -24425934], [68, -72804508], [69, -28811771], [73, 89448070], [74, 25354150], [76, -31126679], [80, -69026890], [84, -59483614], [85, 881960], [89, 20423521], [92, 30244533], [96, 47035301], [100, 1577361], [104, 67290233], [107, 42508743], [110, 38218065], [114, -32433869], [117, 97428880], [119, 53489000], [120, 99087301], [125, 84655914], [127, 16261611], [128, 45158920], [130, 28919619], [131, -24139241], [134, 47319242], [138, -79377434], [142, -26614661], [144, -3701142], [146, -41733655], [148, 97031847], [152, -32597188], [153, -73717129], [154, 49442286], [157, 4989454], [159, -54248468], [161, 292109], [166, -28498992], [168, -95598937], [169, 53175411], [172, -23491055], [173, -65299203], [177, 81400737], [182, -90935401], [185, -74419035], [187, 5583100], [192, -73478072], [194, 46554818], [199, -35829828], [202, -28938335], [205, 1419622], [208, 66081292], [213, 19569094], [215, -64654454], [220, -89787515], [221, 25576269], [222, 46403275], [225, 57296099], [229, -97712928], [234, -44587129], [238, 73285409], [240, -39962017], [245, -62765930], [249, 49087860], [251, 29311972], [255, 71693585], [257, 77155831], [259, 89754162], [261, 76016803], [262, -20715809]], 52740781) == 198834756\nassert solution.findMaxValueOfEquation([[1, -4067183], [2, 50120997], [4, 71691568], [5, -48250192], [10, -16823502], [11, 8100248], [14, 7980813], [16, -17519757], [19, 49190204], [22, -43536731], [27, 4190012], [29, -59937294], [33, 44911285], [37, -99436350], [42, -32429012], [44, -65776880], [49, 60785537], [53, -20862873], [56, 17223926], [60, -99176322], [63, -27677988], [65, 77922703], [67, -77855765], [72, -2339128], [76, -96980126], [80, -61443641], [85, -66949113], [89, 56308800], [90, -70402042], [92, 37009540], [95, -53021006], [98, 68144848], [103, 1532786], [108, -50797997], [110, 92355377], [114, 30805665], [118, 78785638], [123, -23550410], [127, -63942830], [130, 61952521], [134, -5008615], [139, 44074910], [142, 10854035], [147, -25816382], [150, -8530471], [153, 29149119], [155, 79985149], [160, -3070283], [162, -43478010], [163, -21462687], [166, -7636508], [168, -62957755], [171, 1972700], [173, -89830133], [175, 33087249], [177, 88221272], [178, -48170457], [181, -20467034], [184, -71921638], [185, -92435949], [188, 52833708], [190, -58331900], [192, -73033666], [195, 33823882], [198, 54306207], [202, 80399248]], 100108771) == 180576716\nassert solution.findMaxValueOfEquation([[1, 66578291], [3, 95787044], [8, 95489721], [10, 92545974], [13, 61045335], [16, 14093896], [21, -19146352], [24, -60521164], [27, -57327494], [29, -13318074], [34, -77027803], [39, 50679677], [42, 26306291], [43, -14265694], [48, 87904050], [49, 65299773], [51, -20170288], [52, 29113668], [54, 82955419], [57, 48624390], [58, -84194681], [63, -15456917], [65, -70628473], [68, 90253870], [69, -97478223], [71, 72956555], [74, -71998791], [78, -21619822], [79, -30877998], [83, 52557734], [86, -29587507], [87, -67205194], [90, 70358687], [94, -76674705], [99, 84435712], [104, -87515143], [108, 78360201], [109, 625339], [110, 83066426], [114, -69871848], [119, 24071886], [122, 11273553], [124, -52592578], [129, 43840169], [132, -61750466], [137, 80051891], [139, -71270058], [141, 52521907], [145, 77426662], [149, -45049884], [150, 2911253], [155, 50358739], [158, 8036760], [163, -300217], [165, 26461040], [170, -10333539], [173, 72704869], [177, -11454048], [179, -13508367], [180, 76424216], [183, 25096367], [184, 61123923], [187, -71570267], [192, -53492679]], 136262711) == 191276770\nassert solution.findMaxValueOfEquation([[1, 83694420], [3, -1996225], [7, -34013717], [8, 55372748], [9, 46494946], [12, -13939667], [14, 52153238], [19, 98863579], [22, 8104027], [23, 14784705], [28, 44654994], [30, -1834537], [33, -37050876], [36, 62618039], [40, 39557878], [42, 70963677], [46, 90613144], [49, 45436227], [52, 76973216], [54, -3375921], [56, 88836674], [61, 65769721], [66, 49842613], [71, 74144084], [76, -55540559], [77, 76065707], [79, -21822210], [81, 83653109], [83, -76934771], [88, 72895100], [89, 93945003], [93, 56353197], [94, 64875973], [95, 52562855], [96, 70457032], [101, -27381495], [103, -16547950], [104, -33914422], [107, 84174933], [109, 39094781], [113, 32575947], [115, -94410350], [119, -67962574], [123, -39330434], [126, 69588527], [129, -6122530], [134, 60543212], [138, 93365507], [140, 92482791], [143, -22486619], [146, -74435036], [151, -15083671], [152, -69177374], [154, 13205477], [156, -23366119], [159, 24308081], [162, 94072911], [165, -27884342], [166, -25261263], [171, -74827340], [172, 48440898], [173, -59162705], [174, -69130021], [179, 32398351], [183, -42018847], [185, 73459340], [190, 78847345], [192, 98811365], [197, -61069390], [201, 37616582], [203, 56218270], [204, -9924657], [207, -88134030], [208, -34498664], [211, -19941411], [212, -42866970], [215, 9303967], [219, 29858233], [220, -68814943], [224, 88697382], [228, -7120914], [233, 78180512], [238, -84971076], [240, -69911761], [242, 43346726], [245, -36010198], [248, 6218690], [249, 86900669], [254, -40696836], [258, 60183501]], 145093807) == 197675117\nassert solution.findMaxValueOfEquation([[1, 62689758], [6, 70754340], [8, -36240473], [12, 5938093], [16, 95117320], [21, 58368496], [24, 47731128], [25, 78876996], [28, 61738611], [32, 71711330], [37, 46283825], [41, 87716115], [45, 95657597], [47, -65282900], [51, 87434629], [52, 43236176], [54, -65423419], [56, -4121754], [58, 16691183], [61, 88155074], [63, -53753963], [67, 20527270], [71, 31168957], [74, 39015182], [76, -230386], [80, 48446831], [81, -95162667], [83, 45263808], [84, 65316773], [89, 74920752], [93, 69549193], [96, 35746067], [98, -90965484], [99, 76025837], [102, 67934907], [105, 50689472], [107, 901767], [112, -95909131], [113, -32929320], [117, -5958901], [119, -92699546], [121, 54209083], [125, -678668], [127, -89732386], [131, 64236030], [135, -1618286], [139, -51947808], [141, -53411090], [145, -80985780], [148, -23457867], [153, -66900220], [157, -85885404], [161, 7570722], [165, -94436509], [166, 72813267], [169, 76040535], [174, 68030470], [178, 25204593], [181, 38253495], [184, 7521113], [189, -91903400], [190, 75718568], [192, 30332896]], 62738125) == 190774946\nassert solution.findMaxValueOfEquation([[5, -52576988], [7, -59299996], [11, 43208652], [15, 19194967], [16, -79372376], [17, 93196132], [22, -38860945], [27, -36507331], [29, 14215771], [33, -91479948], [35, 95066876], [38, 5758086], [40, -74252711], [45, 89514723], [46, 43489300], [48, 94795291], [51, -57026073], [56, -72295466], [58, 60057409], [63, 97271975], [65, 55406515], [66, 208803], [68, -75978405], [72, -76268268], [75, -32311201], [76, -61456390], [78, -26611615], [82, -68059958], [87, 24706042], [90, -92229699], [91, -28699036], [94, 34643393], [98, 97194133], [102, 25860373], [107, -59281840], [111, 90224790], [115, 54019809], [117, -77469682], [122, -27193677], [123, -56892453], [127, 43915198], [132, -28788476], [136, 7916515], [140, -16918551], [145, -31626281], [146, -56321089], [149, 71958150], [150, 33564981], [155, 37178805], [160, -64892853], [161, 12122612], [166, -38469871], [168, -5879405], [173, 31348730], [178, -76250876], [179, 58873425], [182, 2741291], [187, -98883553], [192, -67728355], [195, 66568689], [199, -93301683], [203, 2994718], [205, 37385460], [206, 53557422], [208, -96221527], [211, -7722452], [215, -33220641], [217, -87249909], [218, -38391275], [219, 52639660], [223, 41013025], [226, 27512373]], 126238213) == 194466143\nassert solution.findMaxValueOfEquation([[3, -39046996], [4, -14326859], [9, -16073973], [14, -88787238], [18, -88347520], [19, 9452131], [24, 10564103], [25, -48673971], [29, 27823106], [33, -14575725], [34, 29633636], [37, 14046474], [40, 59594947], [44, 43072195], [49, 71189989], [50, 63965227], [52, -83179121], [55, 40943289], [56, 26799090], [57, 26837085], [60, 66112864]], 191418862) == 137302864\nassert solution.findMaxValueOfEquation([[5, 94158079], [8, -87936673], [9, 75713588], [12, -82198407], [17, 65503165], [20, 636304], [21, 76636059], [26, 21068275], [27, 5843472], [30, -97491529], [35, 55302128], [40, 12602364], [43, 58835021], [46, 38505037], [49, -9371798], [50, -88128595], [51, 16489805], [56, 2437899], [59, -47318225], [64, 44996159], [67, -75551358], [72, -87768481], [76, -92617537], [79, 35273761], [82, 80457526], [84, -62477147], [85, -64359395], [87, -7156276], [91, -66107557], [92, 51594072], [95, 609659], [100, 26466991], [104, -13337832], [106, -76227116], [111, 36840751], [112, 13931004], [117, 81278370], [119, -73228167], [122, 41344077], [126, 11938503], [127, 94969019], [131, -95064792], [133, 82285177], [136, 54635777], [137, 84559110], [139, -6481961], [142, 12946136], [144, -93317878], [146, 22362704], [151, 85321455], [155, 20518166], [159, 53757194], [163, 8887362], [165, 51856567], [169, -81718632], [171, -20113558], [175, -14338608], [176, -22950197], [181, 43229561]], 31265172) == 189127220\nassert solution.findMaxValueOfEquation([[3, 52200004], [8, 72817847], [10, 56988072], [15, -49720588], [19, 49981988], [24, 31886014], [26, -76551871], [28, 68863354], [33, 51819718], [38, 38713073], [39, -34912079], [40, -45594863], [43, 85598096], [46, -76620883], [50, -32377023], [52, 26601989], [57, 2089059], [62, 27267060], [65, 92137797], [69, 67524763], [74, 63910501], [78, -30566717], [80, -41403627], [83, 57056410], [84, -73048879], [88, -46812330], [91, -19376175], [96, -25056934], [100, 37166447], [104, -34685744], [109, -10252100], [113, -60284699], [114, -42227084], [117, 73820756], [121, 44743398], [126, 87100393], [130, 93472756], [133, -57654181], [134, -64197563], [136, 27506719], [140, 10588042], [145, -45372750], [147, 54727777], [150, -67300901], [152, -89243485], [153, 65351437], [156, 95067996], [161, 29789619], [163, 5803578], [164, -25778462], [169, 60678956], [170, -40508004], [172, -3844411], [173, 29278363], [176, -26524765], [177, -69063221], [180, 9063164], [181, -81794969], [186, -69685615], [189, 47060570], [194, 42200395]], 106972072) == 188540778\nassert solution.findMaxValueOfEquation([[5, -91462661], [10, 82555988], [14, 14927664], [19, 16836579], [20, 89714421], [21, 65561971], [25, 24984409], [28, 54471240], [33, -22707571], [35, -85160053], [37, -79841611], [39, -71041990], [43, -83803912], [46, -65686565], [49, 41272602], [54, 32089476], [57, -78657044], [58, 10776117], [63, 84181377], [67, -32468627], [71, -57539178], [75, -68509808], [77, -84109959], [81, 13408076], [86, 77160870], [91, -78704777], [93, 48443710], [94, -28695240], [96, 5936262], [101, 69444012], [105, 97678018], [107, 4781174], [112, -97502423], [116, -20987266], [120, 25860879], [125, -59486790], [126, -47419107], [131, -86341933], [134, 74969213], [138, 98129331]], 11415838) == 195807382\nassert solution.findMaxValueOfEquation([[5, 15863463], [8, -39899253], [13, -99366817], [16, 38848188], [17, -88430861], [20, 31568549], [21, 19525248], [25, -24854212], [29, -30924464], [30, 3234812], [34, -56438424], [35, 6863952], [38, 79830768], [40, -8535870], [42, -84652476], [45, -19216019], [48, -55824102], [49, -20515449], [54, -69687897], [55, 38152951], [56, -87188161], [60, -37214413], [64, 12884237], [65, -52156837], [70, -696378], [72, -10913506], [76, -67965502], [77, 91810622], [81, -19197375], [82, 57592443], [86, -51357954], [88, -27132636], [93, 32735792], [95, -18948688], [97, 5049928], [99, 16066554], [100, 55362768], [102, -88266412], [107, -97639564], [112, -21061036], [115, 63883727], [120, 64897492], [122, -44622956], [125, -4615357], [127, -47475823], [132, -15216746], [134, -4536265], [139, -78014842], [144, -55249128], [149, -1396123], [154, 3708941], [159, -48252260], [160, 95331555], [164, -83417242], [169, -87455689], [174, -19342272], [176, -63108711], [181, 10909051], [184, -85879317], [188, 33822914], [193, -296338], [197, 21191906], [198, -53578810], [199, -87322693], [204, 10692836], [208, 98865059], [211, 16596527], [216, 1439476], [217, -37949338], [222, 5535524], [223, -54648862], [227, -21642203], [230, 65523049], [234, 51097607], [237, 99182283], [240, -54357977], [244, 66444035], [248, 36341913], [251, -1144854], [255, -75261532], [258, 68011991], [259, -78208618], [260, 35504899], [265, 61791731], [266, 76374046], [270, 8805925], [274, -63770521], [275, 25432653], [279, -59977358], [281, -365696], [283, 12784784], [285, -99860396], [287, -6208643], [290, 42498752], [292, 53637260], [296, -10876414], [300, -51553377], [301, 64475780], [303, 28827015]], 138638739) == 198047371\nassert solution.findMaxValueOfEquation([[4, 19849564], [9, -4360708], [10, 17379904], [14, -99897620], [17, 64978167], [19, -29026209], [23, 27457139], [26, -34901527], [28, -84881508], [30, 84027422], [33, 10252196], [38, -99504517], [40, -1785951], [44, 30516219], [46, -59968827], [47, -47724552], [52, 9072933], [56, -95766262], [60, 38548612], [62, 15546349], [65, 13927553], [70, -58587916], [71, 87662267], [75, 38496825], [76, -61476433], [81, 74060465], [86, 86308535], [91, 82165056], [94, 28464408], [98, 91034667], [101, 40055638], [105, -94954348], [106, 26691666], [111, 18597964], [115, 15949158], [117, -59015191], [122, -21992138], [123, -77832068], [125, -3785783], [129, 79551745], [130, -42749759], [133, -26073844], [134, -55421288], [139, -37854754], [144, 88506179], [148, -18192766], [153, 97695955], [155, 67605496], [156, 82759260], [158, 86139954], [160, -28286920], [164, -38871624], [166, 28581989], [170, 72657285], [175, -56459306], [176, 64008321], [181, -69867759], [185, -98791569], [190, -61760704], [191, -57837026], [194, -91263377], [198, 12791352], [203, 69075186], [208, 11108056], [210, 98329007], [211, 35411438], [214, 8409191]], 134890281) == 196025019\nassert solution.findMaxValueOfEquation([[4, -87728753], [8, -72938042], [12, -57605145], [17, -78250566], [21, 9592133], [23, 83287742], [28, -10106459], [29, 44648560], [34, 9652760], [39, 98268828], [42, 63178602], [47, -92301840], [51, 94230655], [54, -82615406], [55, 96956142], [57, -29794092], [62, 79159369], [66, -35302636], [71, 9080488]], 78229387) == 195224986\nassert solution.findMaxValueOfEquation([[4, -6952822], [9, 14181919], [11, -57526506], [15, -18438409], [16, -42972416], [19, 48210125], [24, -72800747], [26, -16435973], [28, 631859], [29, 65331060], [33, -98411525], [36, -61453342], [38, -10912807], [40, -31660677], [43, 40603227], [46, 21741150], [48, -15600233], [50, 21849421], [53, -4312641], [58, 7670903], [60, -92778292], [65, -81498360], [68, 48171313], [72, -99359502], [77, 37301994], [79, -97379872], [80, -80760238], [81, 5370840], [83, 25910228], [85, -16013172], [86, -24598197], [91, 32429502], [93, -52694357], [98, -97029644], [99, -56164446], [104, -22816351], [106, 91684263], [108, 50079346], [112, -97762624], [115, 43224144], [117, -69732486], [121, 79280534], [123, 90721469], [125, -63591046], [126, 31744281], [130, 89293843], [135, 34315050], [139, 68004311], [140, 7399422], [142, 51971676], [147, 59381623], [148, -53692269], [151, 93097482], [154, 71060059], [157, 76010731], [162, 90042884], [167, 87953839], [172, -42737922], [175, 27590890], [180, 68063299], [185, 68650833], [189, -43070622], [191, -69798285], [195, 54848617], [196, -60532137], [198, -21972391], [201, -88865219], [206, 77410851], [210, 85047575], [212, 83665760], [215, -78580354], [219, -83770777], [222, 44168599], [223, 84552457], [228, 47763866], [232, -72519245], [237, -900423], [242, 40055379], [243, 19031601], [247, -97126243], [252, 6772507], [257, -82972129], [260, -8292886], [263, 26353345], [264, 26708692], [265, -41133969], [268, 23614089], [270, 45965083], [271, 97135756], [273, -70187552], [276, 75015325]], 47186521) == 190233358\nassert solution.findMaxValueOfEquation([[4, 69858812], [8, 51440389]], 171494777) == 121299205\nassert solution.findMaxValueOfEquation([[4, 75435421], [8, -63958187]], 33966157) == 11477238\nassert solution.findMaxValueOfEquation([[5, 14558972], [9, -59862709], [12, 73312905], [15, 47905112], [19, 77350443], [22, -89133362], [23, 29673946], [24, -36590621], [25, -90980458], [27, -79383082], [32, -37691948], [33, 21743386], [38, -48680408], [40, 63939030], [41, 8955761], [46, -15582852], [50, 50936098], [51, 4363929], [54, 28139212], [59, -59456894], [60, 67859828], [63, -60444295], [64, 53702203], [65, 13226677], [69, -18369411], [74, -85412643], [79, 77090830], [83, -55573096], [87, 26195759], [90, 16900533], [93, 33784517], [96, 73735854], [98, -19176464], [101, -15628409], [103, 78410633], [107, 93246399], [108, 92710859], [110, -85357892], [114, -41311328], [116, -18204260], [121, 63330232], [125, 56415229], [129, -99326977], [134, 86089443], [139, 94490235], [143, -16111004], [148, 77978629], [150, -22925083], [152, -48000325], [155, 47380837], [158, -43899123], [162, 11342013], [164, 19864858], [168, 69633188], [169, -45450620], [171, 35851618], [176, 15697541], [181, 43385079], [184, 59431180], [189, 72904926], [193, -62909058], [196, -54229551], [199, 75091751], [203, -85753731], [208, -57729538], [212, 46773307], [216, 90548583], [219, 66989062], [223, 79885215], [228, -67310864], [229, -31511620], [232, -55193757], [233, 88872907], [236, -21206909], [241, -64619679], [246, 50760300], [251, 29479287], [252, 68854451], [254, 23409387], [257, -64318154], [260, 28564555], [261, 19378912], [263, -41777959], [264, -63129237], [269, 56551074], [270, -61173867], [271, 52997960], [275, 646928], [278, 87661791], [283, 97397638], [284, -51840343], [286, 78438395], [288, -39241812], [293, 30683100], [296, 40306186], [300, 89848678], [304, -82073799], [305, 26392376], [310, 93861461], [313, 72975051]], 58419984) == 191888017\nassert solution.findMaxValueOfEquation([[3, -15487536], [8, -69461366], [11, 55012243], [13, 8488173], [17, 70979199], [19, -48191322], [24, -47777116]], 136933010) == 125991448\nassert solution.findMaxValueOfEquation([[5, 26806596], [6, -71836193], [7, 40699361], [9, -61649550], [11, -55384871], [16, -66585703], [20, -49332878], [25, -99541929], [27, -61363689], [28, 59425886], [31, 33512998], [35, -13724515], [37, -70547596], [40, -56998559], [42, -69392734], [44, 92605387], [46, 68557015], [50, -32813476], [54, 28830890], [55, -19118214], [59, 49865427], [62, 36797487], [65, -84587206], [67, -4976740], [68, -76323248], [70, 96582677], [75, 71787335], [80, -35784404], [81, -70554732], [86, 17409945], [87, 36219310], [90, -88856075], [92, 4061835], [94, -17040], [99, -37222316], [101, 95066381], [105, 56866217], [110, 4166058], [114, -75521164], [117, -54526367], [121, 95205069], [123, -17315575]], 82964070) == 191787797\nassert solution.findMaxValueOfEquation([[5, -23357184], [8, 48104611], [10, -13277667], [13, -24931611], [17, -59302288], [21, 29262817], [24, -63595030], [25, 17021527], [30, 54322797], [33, 17934610], [38, 95935979], [43, 48204925], [47, 27063080], [49, -10563807], [54, -16129438], [58, -48500732], [62, 78213447], [66, -6967426], [71, 14614647], [72, 27741037], [74, -57405868], [78, 99159777], [83, -4352868], [88, 93056184], [89, -61614774], [93, 34023556], [94, 29717891], [98, 62503589], [100, 47158648], [105, 58397154], [106, 7724837], [110, 53625759], [111, 23628658], [115, 62090882], [119, 97397506], [120, -29264441], [122, -73029977], [124, 20449718], [127, 88001858], [128, -16849065], [130, 16756624], [132, -45512499], [137, -54010484], [139, -75061907], [144, -65802714], [149, 58162656], [150, 63779497], [155, 25765530], [159, -43140796], [162, -15635084], [165, -83607138], [169, 48644091], [170, 43117786], [174, 61985627], [175, -85609863], [180, -74946646], [181, 92216468], [184, 64573960], [186, 34603985], [191, 69435441], [194, 6205866], [198, -34700131], [203, -63172525], [205, 46973053], [210, 68056469], [212, 65301411], [216, -13207591], [218, -48513900], [222, -8301904], [227, 29892195], [230, 57129456], [232, 12654164], [234, -31383012], [237, -13646233], [241, 90873987], [244, -18338613]], 69519836) == 196557324\nassert solution.findMaxValueOfEquation([[1, 57915778], [6, 20152704], [11, -69142721], [12, 69865825], [16, -69556135], [19, 43822910], [20, 56936253], [23, 16163562], [26, -35889800], [27, -68361046], [31, -34840536], [32, -64554329], [36, -95345040], [38, -83719581], [39, -43649861], [44, 22791361], [46, 23694728], [48, 20995809], [51, -46096893], [55, -24711271], [60, 16074346], [61, -17652891], [66, -76410923], [71, -8240356], [76, 1917952], [77, -1613225], [81, -25763350], [82, 99689225], [83, 22255710], [87, 83163674], [90, -97488288], [93, -63777764], [96, 78004212], [100, 279949], [104, -9293625], [105, -16827145], [106, -9642521], [108, 64980582], [109, -97276189], [111, 72184055], [115, 50137695], [116, 62904405], [120, -26304914], [125, -44984974], [130, 31582492], [135, 92223392], [138, -92860418], [140, -68645178], [144, -8587333], [145, -44391266], [147, 58820343], [150, -55012356], [154, -69266696], [155, 64699152], [156, -8803994], [159, -96520610], [163, -91363737], [168, 78894540], [171, 69358184], [174, -52957591], [176, -80848867], [178, 13557044], [181, 2988137], [182, -16474792], [187, 95339996], [190, -70268617], [191, -75529216], [195, -91132332], [196, 20998948], [199, 93164081], [200, 23418352], [205, -18619924], [207, -73101147], [211, 24526641], [212, 19098320], [216, 33400369], [221, -45451867], [225, -1092847], [229, -90518858], [232, -24836514], [237, 26502607], [238, -73451709]], 189973268) == 195029326\nassert solution.findMaxValueOfEquation([[4, 72609777], [9, 47405258], [10, -32977476], [14, 92237182], [19, 65989026], [24, 58090625], [27, -47152762], [31, 37999492], [32, -98824576], [36, -32700436], [40, 35405760], [42, -42742504], [47, 94230905], [50, -94765066], [54, 25959284], [55, -10382751], [58, -58105456], [62, -97492964], [63, -42841000], [67, -82527958], [70, -84813483], [71, -30030266], [74, 22707820], [79, 39355519], [83, 24040077], [85, 51996291], [89, 17716613], [92, -73685270], [93, -50107512], [96, 43419763], [101, 31411712], [103, 85468757], [107, 52054372], [112, 91064560], [116, 18332166], [119, 12744283], [124, -68659323], [127, 97142847], [131, -51405737], [136, 51076508], [137, -33803785]], 182881019) == 191373832\nassert solution.findMaxValueOfEquation([[2, -76273087], [3, -68699385], [8, 78704554], [9, 67788673], [13, -84347870], [15, 49759059], [16, -73650722], [17, -35908682], [19, 20673289], [22, 46905631], [23, -51505799], [27, 45471995], [30, 4417134], [32, -87698674], [33, 14247102], [36, -52650362], [37, -16500100], [42, 74977747], [45, -21685], [50, 43285971], [54, 55877923], [59, 58293472], [64, -43631520], [69, 39546057], [71, 63819430], [75, 95578778], [77, -83801375], [82, 32135484], [84, -25964650], [88, 38455113], [92, -67644204], [94, -76013620], [98, -7485207], [99, -87804239], [103, 49900043], [106, 23163393], [110, -97005809], [113, -82048833], [116, -54438247], [119, 33065616], [124, -67231280], [128, 40459473], [131, 19445646], [133, 44602900], [135, -34598207], [137, 89880669], [140, 4421654], [141, 4696713], [146, 76248206], [149, 8253655], [153, -14324435], [154, -99611334], [159, -22108994], [160, -20156806], [163, -4973560], [166, -3535470], [169, 57911040], [174, 25905220], [179, -57802913], [182, 13935935], [186, 79392043], [190, -81611500], [195, 39837442], [200, 84473283], [201, 94977634], [202, -31123997], [204, 72103855], [209, -28911620], [213, -64023132], [218, 35934653], [220, -36123168], [224, -35793601], [227, -83071088], [230, 17748941], [233, -82751709], [234, -74405672], [239, 38566811], [240, -43099828], [244, -52693074], [245, -68180169], [247, -7234517], [251, -70150882], [253, -82454930], [255, -63750489], [257, -26495551], [262, 98321355], [264, 34587185], [265, -69883748], [266, -39872739], [270, 67083490], [273, -65531526], [278, -57849099], [282, -6564800], [285, 58026228], [287, 12083229], [292, -59351803]], 124941623) == 193900320\nassert solution.findMaxValueOfEquation([[4, -10902670], [6, -13956914], [10, -82714035], [11, -24997181], [16, -45641400], [18, 46564737], [20, 86124641], [21, 54808209], [26, 17128588], [27, -31853681], [28, -97234620], [29, -93464632], [32, 67313314], [33, -94994155], [34, -95708436], [35, -72004431], [37, 47249519], [40, 31534772], [42, -67425518], [44, -64058645], [48, 22680631], [52, -26763398], [57, -65398844], [58, -97340450], [63, -50905582], [68, -54763026], [71, -89157895], [76, -90115386], [81, -28480212], [84, 60768837], [86, 15038116], [89, 41086325], [93, 17329242]], 105110885) == 153437967\nassert solution.findMaxValueOfEquation([[4, -15717470], [7, 66859785], [8, -65940457], [13, -30053276], [17, 14693194], [18, 7326710], [23, -55490689], [27, -67200127], [28, -20832263], [29, -20855951], [33, -79227183], [38, 52475164], [43, -20308468], [45, 5008509], [48, 84851009], [53, -57046834], [57, -94437634], [60, 36096099], [62, 63451183], [67, -10991221], [68, -13363143], [71, -67705973], [74, -4939287], [77, -54321267], [81, -91967091], [82, 71867393]], 88014261) == 156718436\nassert solution.findMaxValueOfEquation([[5, 71852216], [10, 72167356], [12, -28120798], [16, -77481525], [19, 62325912], [20, -71838614], [25, -78384360], [29, 9270131], [32, 2830636], [36, 64484295], [39, -50387918], [42, -2471521], [46, -52055537], [48, -57677808], [49, 79074877], [51, 35839232], [54, 64369384], [59, 4341496], [61, -64191010], [63, -69931006], [65, -11023862], [68, -72900988], [73, -1696422], [78, -78097304], [82, -89073596], [86, 32991586], [89, -70492802], [92, -10974311], [95, 7601378], [97, 25518510], [98, 44931644], [100, -97535877], [101, 20554146], [102, 72065956], [105, -19418203], [106, -64236026], [108, 33554813], [111, -71272855], [115, 29614471], [118, 94032001], [121, 92855394], [124, 51212820], [125, -48961955], [128, 27826090], [133, 98708620], [134, 47062108], [136, 42942889], [140, 40068707], [142, -5362258], [145, 51334818], [150, -44473306], [151, -4361909], [155, -75910181], [158, -89057015], [159, -1115103], [162, -49467912], [163, -5435053], [167, 34273753], [168, -22292599], [171, 70136122], [176, -6415064], [180, 49527186], [182, -87507776], [187, -35895210], [190, 24637177], [193, -76477768], [196, 75220370], [200, 25079582], [204, -39138004], [205, 11282155], [207, 77507654], [211, 17953432], [212, 79868192], [215, -69140092], [219, 82342458], [223, -68406173], [224, -57747391], [228, 16520185], [231, 34749953], [235, -97851297], [239, -39937741], [240, 4467616], [243, -67410331], [246, 9867064], [249, 25952592], [254, -13414228], [255, -69508670], [260, 20779014], [261, -14776266], [262, -44522785], [264, -17815207], [267, 43871189], [271, -47484350], [275, -44530161], [279, -40796576]], 59434603) == 192740636\nassert solution.findMaxValueOfEquation([[5, 97873060], [8, 99301738], [11, -19125363], [12, -718427], [17, 95228112], [21, -26698616], [22, -49091275], [23, -12245483], [28, -31651034], [31, 89331469], [34, -28899149], [37, 96562671], [39, 80513953], [41, 37650926], [46, 72608339], [47, 86500692], [49, 15804559], [52, 29960634], [55, -37299224], [60, 16894162], [64, -92213883], [69, -30980615], [72, -71938751], [73, 25472103], [78, -54562825], [83, -42071690], [88, -94465556], [92, 84416676], [94, 86844974], [99, -42506256], [100, 31631760], [101, 59345365], [103, -88416409], [104, -74766290], [107, 11074569], [111, -83692794], [113, -93971626], [118, 55053784], [120, -24468229], [123, -39487660], [127, 31952864], [129, -76307400], [131, -75004427], [132, -86126307], [137, -40601992], [140, 15304111], [145, 81154124], [146, -1471656], [147, 73493930], [148, -45737412], [150, -24290514], [151, 34865174], [155, -67433644], [160, -20677936], [165, -29260467], [166, 21577002], [169, -26667783], [170, -36443094], [172, 45268338], [175, -27021551], [179, -52267137], [183, -32017837]], 97063411) == 197174801\nassert solution.findMaxValueOfEquation([[1, 36339506], [5, 55131243], [6, -32963862], [9, -59856555], [10, 26501690], [11, 91399886], [16, 51183715], [21, 15631499], [22, -63872888], [23, 18244328], [25, -98475848], [28, 87898401], [31, -47066131], [35, -65712658], [39, -35110233], [43, -50133966], [45, 26628740], [46, -98117781], [49, -10481141], [53, -40153439], [56, -83581848], [60, 45960909], [63, -67594846], [65, -32266769], [68, 69319449], [72, 5987666], [75, -50463], [79, 77446595], [82, 23699612], [87, 73148594], [88, 6956739], [90, 89914364], [92, 57683689], [93, -2969353], [97, -79841509], [101, -7661624], [104, -95867259], [108, -50478614], [111, -53477792], [113, 11026577], [115, 96717442], [119, -49637733], [120, -59242930], [125, -1804335], [129, 83036028], [134, -88927142], [139, -87609025], [140, 11480267], [141, -48560694], [144, -41783002], [149, -92870367], [152, -42481663], [156, -81345721], [158, 99882690], [159, -53639085], [163, 8519236], [166, 19276629], [170, -67774797], [174, -69776042], [177, -86118491], [180, -29662046], [183, 20308834], [185, -3637494]], 25360327) == 196600175\nassert solution.findMaxValueOfEquation([[4, -86650361], [5, -26204221], [10, -74541939], [13, -96314106], [18, -20810101], [20, -91377057], [21, -73032676], [26, -41502798], [30, -6074903], [34, -30704905], [39, 62178705], [41, 70895119], [42, -24392309], [43, 2501871], [47, 90339395], [52, -13180695], [54, -25178412], [58, 50896859], [59, 7121157], [63, 13889301], [67, -74595522], [72, 8806663], [77, -21693583], [82, -64705543], [85, -24217423], [86, 13892263], [91, 55293249], [96, -29245407], [97, 82530578], [100, -86675501], [104, -75310702], [109, 35473388], [110, 96860396], [114, 59063507], [116, -45620518], [119, -13235819], [122, 5404494], [123, 14228771], [125, -97968714], [126, 74409470], [128, -6371683], [131, 14343260], [132, -44648888], [135, -78570494], [139, 16863806], [143, -80766235], [146, 73950092], [151, 80898496], [152, -37403713], [156, 62393957], [158, -91349204], [160, -77162032], [164, -53953850], [167, 80614811], [170, -32539076], [175, 54671971], [176, 13563329], [179, -70686902], [184, 82896832], [186, 47873107], [190, -47213219], [193, 3075261], [195, 31382600], [197, 96604990], [200, -33567170], [203, -32254934], [204, -74948528], [207, 62525524], [210, 59830696], [214, 5111455], [218, 10041323], [222, 19901996], [227, -47930941], [230, 61564547], [235, 39957522], [237, -75359003], [239, 17527117], [244, -26408243], [248, -61358025], [250, 33724086], [251, 94021489], [252, 52720437], [256, -28263835], [259, -30526989], [261, 54217407], [262, 82450503], [266, 87295528], [267, 12291783], [272, -76063124]], 19364642) == 193465473\nassert solution.findMaxValueOfEquation([[3, 20419582], [8, -79127692], [10, 17758421], [12, -77017775], [17, -93674446], [20, -99585964], [22, -19813663], [25, 77163552], [29, 16570854], [32, 16347293], [34, 50384117], [37, 96353168], [41, 84465761], [45, -31615499], [46, -68469998], [51, -74189933], [56, 11046821], [58, -36466805], [62, -26974043], [65, -13077312], [67, -14090889], [71, -23919113], [73, 38119936], [75, 97872609], [76, 99630729], [77, 45679977], [80, 1774137], [85, -1347758], [90, 9978662], [95, 35034921], [100, -6217896], [101, -33499457], [103, -98835876], [105, 6843628], [106, 97237971], [110, -43748531], [111, -59226955], [112, 46723735], [113, -68410655], [114, -58768137], [116, -86629932], [121, -10701041], [126, 23543027], [129, -60728929], [133, 13052495], [138, -17328186], [140, 74337214], [144, -15407140], [148, -65144350], [152, 64654203], [157, -78625911], [162, 16921199], [163, 83130447], [164, 51975685], [166, -83527334], [167, 79526337], [170, -28902432], [173, -33062153], [174, 39558877], [179, -78870277], [182, -95376090], [183, -87351218], [185, -75773644], [187, -45697570], [188, -86594088], [193, -48132213], [197, 71481042], [202, 56450455], [207, 35288217], [208, 45738770], [210, -64961674], [213, -10489760], [214, 64840218], [215, -14587997], [220, 10015647], [225, 51445948], [230, 11693033], [232, -69079336], [234, 26649394], [238, 53297087], [243, -17598981], [245, 93916449], [249, 61028855], [252, -9081622], [254, -92951515], [257, -90278458], [259, 71621110], [262, -45042124], [266, 88131716], [269, 52673765], [271, -65679282], [273, -99885713], [275, -98924810], [280, -87932107], [282, -44369322], [284, 87368391], [287, -96362372], [290, -48997973], [291, 64152815], [294, -79762995]], 120265830) == 197503339\nassert solution.findMaxValueOfEquation([[5, 41270061], [10, 56480468], [14, 74911944], [16, -74986915], [18, -31568250], [19, -938885], [21, 99822385], [25, -81432007], [30, -90951025], [31, -46678308], [32, 48410846], [35, -41283414], [40, -82935194], [44, -55987063], [49, -23403567], [53, -5478528], [58, -3890272], [59, -85496017], [64, 89680595], [68, -92892122], [70, -60063175], [75, -69269069], [79, 66427500], [82, -74455296], [83, 799106]], 36260812) == 189503023\nassert solution.findMaxValueOfEquation([[4, -66855656], [8, -15046891], [9, 61044845], [10, 7051222], [13, 64226713], [18, 63699795], [23, -28398758], [24, 17213337]], 116826945) == 127926513\nassert solution.findMaxValueOfEquation([[5, -67234560], [8, 55666363], [13, -128736], [18, 44052454], [19, -98699096], [24, 5293440], [28, 2534433], [33, 68727280], [34, -74724146], [35, -60048721], [39, -45587775], [43, -48698957], [44, 62000902], [45, -27658147], [48, -76165315], [49, 91703537], [52, -26204815], [57, 81671442], [59, -94058156], [61, 23016748], [66, 42244535], [71, 74359008], [72, 90385385], [73, 70219356], [74, 57928304], [75, -74910413], [78, 98962632], [81, -27933721], [82, -24408610], [87, 76334818], [92, -46267401], [94, -26061278], [95, -52300509], [98, -93492679], [103, -87763221], [106, -4362178], [107, 46639116], [109, 34824492], [113, -54799076], [114, -18408580], [119, 23040771], [120, -74213590], [121, -43610627], [123, -52756658], [126, 74905053], [131, -38381179], [135, -48395767], [140, -3449796], [141, -14826531], [144, 58986745], [145, 72651109]], 165727189) == 190666198\nassert solution.findMaxValueOfEquation([[1, 82475677], [2, 73222318], [7, -20015292], [12, 20983979], [15, -49996175], [18, -21056177], [21, -84707569], [23, 4503091], [27, 46625585], [30, -21465508], [31, -19369385], [36, -63124459], [38, -84674977], [40, -87952639], [43, 52225315], [47, 23100524], [49, 2341561], [53, 12485883], [56, 52693842], [58, -79077757], [62, 67456244], [63, -50236978], [67, -92755018], [70, -77378159], [71, 9421500], [72, -37374802], [73, -13675305], [76, -91176681], [79, 32671588], [80, -91283083], [85, 56475446], [89, 16967618], [90, 20143440], [94, 37772459], [99, -36471196], [102, -33618265], [104, -61471306], [109, -59311056], [112, -20531994], [113, 59031396], [117, 90570040], [121, -75529652], [123, 45339692], [127, 70180588], [129, -95119395], [133, 84768804], [135, 21328810], [138, -26864205], [141, -440803], [143, -89550588], [144, -47166592], [145, 66898291], [147, -70279096], [150, 95319370], [155, -9729081], [156, 61009611], [161, 29537168], [164, -97645196], [167, -83946579]], 173343549) == 185889443\nassert solution.findMaxValueOfEquation([[3, -53609461], [6, 45844852], [8, 1307644], [11, -25761317], [15, -25916051], [17, -36203301], [18, 67143561], [21, 74059096], [22, -91302319], [25, 72897512], [30, -29777627], [33, -73500745], [36, 15442968], [37, 68779787], [38, -22568925], [43, -79426666], [47, -80731922], [51, 16923572], [56, 81978214], [58, 52424985], [62, 32566536]], 173426533) == 156037345\nassert solution.findMaxValueOfEquation([[5, -38407257], [6, 26854678], [10, 44213308], [11, -86840105], [12, -55450078], [16, 74672928], [19, -6579410], [23, 63257706], [25, 42547955], [27, 84102856], [28, 92412088], [30, 53944732], [33, -77798018], [38, -3518598], [41, -5163827], [42, 67357624], [47, -73863045], [50, 59475690], [55, 39608974], [58, 61733470], [59, -5925604], [63, -54216213], [67, -61423997], [69, 86270968], [73, 47726635], [74, -48304773], [75, -90922877], [80, 30076539], [85, 78090917], [88, 73575019], [89, -28854944], [93, -87301856], [98, -69301338], [100, -54298780], [105, -97754165], [110, -98419827], [111, 559716], [114, -86314886], [118, -86357132], [123, 72743747], [127, -5461203], [131, 21013062], [135, -7580252], [140, -42709186], [141, 93211379], [143, 4577753], [147, -38165058], [152, 27078284], [157, 87682749], [162, 30557674], [163, -38282734], [168, 37098215], [169, 29037308], [171, -92069063], [174, -57122208], [175, -67800486], [176, -65645645], [177, -74960645], [179, 95443994], [183, 91333351], [187, -78287350], [190, -87914950], [193, -12590306]], 156788952) == 188655411\nassert solution.findMaxValueOfEquation([[3, -76855467], [8, -75832051], [11, -28803739], [15, -40677577], [20, -87682466], [23, -1130131], [28, -26543048], [31, -86592539]], 126207494) == -27673174\nassert solution.findMaxValueOfEquation([[5, -44495372], [6, -56408820], [9, 70981252], [10, -11261934], [12, 9771635], [17, -81181631], [18, 86638286], [19, -76523585], [20, -96135633], [21, -90874234], [24, -16811782], [27, 10613100], [31, -38929661], [36, -11824168], [38, 43194630]], 40135699) == 157619547\nassert solution.findMaxValueOfEquation([[1, -74939611], [5, -77950521], [6, -72312636], [11, -38252934], [13, 40218740], [18, 58511743], [19, 38394677], [24, 60821496], [25, 29792863], [30, 17941476], [32, 40991293], [33, -46014375], [34, 24031159], [36, 53833178], [38, -97024949], [41, -12864500], [42, -99015737], [44, -43817802], [49, 62603164], [51, 22564655], [52, -56714670]], 44249646) == 123424685\nassert solution.findMaxValueOfEquation([[1, 76489137], [5, -66477592], [10, 88578225], [13, 56151229], [14, 61807647], [19, -22512609], [23, -5493008], [25, 3831707], [30, 38645526], [33, -13319253], [38, -26331624], [41, -58807486], [42, -89674650], [47, -33411957], [51, 55703577], [52, 68721208], [56, 11565250], [58, 25195467], [60, -1142405], [61, -2832871], [64, 77285569], [68, -14669581], [71, -18800985], [73, -76317298], [77, 94066643]], 176552269) == 182644935\nassert solution.findMaxValueOfEquation([[5, -3385370], [6, 58871624], [8, -32976933], [9, -23447175], [11, 61918167], [16, -49271516], [17, -32162674], [19, 90076200], [24, 12397067], [29, 63999096], [34, 6537065], [37, 66746367], [40, 87668837], [42, -47356872], [45, -55572674], [48, 7993529], [50, 28788787], [53, -81527239], [58, -37564200], [59, -4988893], [64, -98539211], [66, -48980501], [71, 38152223], [72, -68186033], [73, -37538868], [78, 37063015], [79, 3415839], [83, -30438210], [88, 95434597], [93, 14263986], [94, 80853015], [96, 57306384], [97, -28003507], [100, 80401447], [101, 37598134], [106, 76330180], [110, 39930512], [112, 75139120], [116, 68155462], [118, -25550224], [120, 43005978], [123, -71196853], [126, 41961045], [131, 38399804]], 193889168) == 185510866\nassert solution.findMaxValueOfEquation([[3, -22978640], [4, 34448801], [5, 30445119], [8, -5568673], [11, 6657170], [14, -38651736], [16, 16540524], [17, -53078817], [20, 47735093], [24, 43241044], [25, -53569319], [30, 47979214], [31, 98954764], [35, 68509351], [38, 86843141], [40, 17622309], [45, 19640249], [47, 97509763], [52, -40040127], [56, 20781467], [61, 95399852], [64, -1858], [66, -36559685], [67, -96869493], [71, 65273791], [72, 26015017], [75, 34037632], [77, 23731015]], 156954161) == 196464543\nassert solution.findMaxValueOfEquation([[2, -44605457], [3, -6170692], [5, -59794482], [8, -33677858], [11, -12252312], [12, 52376563], [17, -61744249], [18, 10579247], [23, 73422197], [24, -47150204], [25, 61900033], [28, -32467847], [29, -19448363], [34, 99574817], [36, 50035213], [37, -66976777], [42, 78019832], [44, 5989427], [48, 45668433], [53, -53914713], [56, -40967378], [60, -83541627], [62, 38186070], [63, -71468813], [68, 34267754], [72, -38620489], [73, -5009206], [78, 77587856], [83, 46486720], [87, -98849941], [91, 61322232], [93, -43763423], [97, -3408868], [100, -79415318], [104, -48976104], [105, -98679491], [107, 35486688], [110, 25536123], [115, -39099719], [118, 64168470], [123, 33346371], [125, -25795494], [129, 51132763], [133, -83572413], [134, 10305180], [139, -47381341], [144, 1196823], [149, 74465779], [152, 25533192], [157, -46452065], [159, 88981975], [161, -25402010], [163, 27542406], [168, -94836049], [169, -64820859], [170, -63125784], [175, -19798633], [180, 81218169], [181, 27903008], [185, 18251398], [187, -27422885], [192, 28830451], [195, -58862114], [199, 11202071], [204, -20564600], [208, -53164523], [212, 21133649], [216, -95725865], [218, -59973516], [222, -76432635], [224, 41017013], [228, 924083], [231, 1516803], [234, -98035205], [238, 39831391], [239, 82066032], [242, -67667409], [243, -71819225], [247, -23048009]], 100683781) == 188556917\nassert solution.findMaxValueOfEquation([[3, 13823136], [7, 25635672], [9, -68069175], [14, 276799], [17, 8467932], [21, 63488544], [25, -91829874], [30, -44088061], [31, 93380441], [32, -22280077], [36, -45425318], [39, 17972648], [40, -11196461], [41, 93927866]], 9494680) == 187308317\nassert solution.findMaxValueOfEquation([[4, 28837668], [8, 42078685], [9, 87591260], [10, 32510119], [12, -17857393], [13, -68896451], [17, 65599392], [19, 15654679], [24, -38822022], [26, -41167993], [29, 88717677], [33, 47449208], [35, 45858382], [36, 21123672], [39, -78840320], [41, 7364523], [43, 15541581], [45, -67880992], [46, 53316259], [47, -7990163], [52, -39321906], [55, 74975207], [56, -67341457], [61, -23246996], [63, -14674933], [66, -56996926], [69, 47855828], [71, 52062783], [75, 41682507], [77, -67364544], [79, 75747712], [81, 72652167], [85, 63050610], [89, 59425408], [91, -57584784], [96, -33072766], [97, 11051075], [102, -64851043], [104, -76446646], [107, -95440984], [110, -1865087], [113, -74728405], [117, 14777560], [119, -88642319], [124, 77160144], [129, 8116020], [132, -12876517], [133, -24735855], [136, 83526509], [141, 951915], [142, -39309750], [146, 82739045], [150, -54208003], [154, 33091321], [159, -78272142], [160, 27488795], [164, 18514648], [169, 74754835], [174, 86241797], [176, 60596905], [180, 1729924], [183, -81966438], [185, -78327532], [187, -46016652], [189, -27479133], [194, 71549915], [199, 45034608], [202, -46904404], [204, -67734048], [206, 20988971], [207, 21445874], [211, -80685217], [214, 62925753], [216, -4781674], [221, -3400934], [222, -1169479], [224, 54454757], [226, -91452454], [231, -6574918], [233, -24872173], [237, -44413631], [240, -3488250]], 117060077) == 176308957\nassert solution.findMaxValueOfEquation([[5, -67449830], [9, -58218731], [14, -37121316], [15, -97912887], [18, -56584812], [21, 43772986], [24, 17397210], [26, 83848198], [30, -67377067], [33, -94728074], [37, -55689229], [40, -89411989], [45, -54520025], [47, -47950859], [49, 71265158], [52, -84059498], [54, 19222522], [59, -6031468], [60, 25653417], [62, -1918824]], 157576476) == 155113379\nassert solution.findMaxValueOfEquation([[2, 25894524], [5, -2216514], [9, 83476597], [11, -1404808], [16, -53655127]], 72372224) == 109371128\nassert solution.findMaxValueOfEquation([[1, 62611646], [5, -4684533], [6, -47857639], [11, 75437622], [16, 89713997], [21, -90353981], [26, -31157727]], 157097841) == 165151624\nassert solution.findMaxValueOfEquation([[4, -78446332], [6, -75280625], [9, -99341885], [11, 66013595], [15, 79861572], [20, -74905813]], 15914316) == 145875171\nassert solution.findMaxValueOfEquation([[1, 96092827], [3, 43495059], [4, 40170498], [9, -88519084], [12, -35177423], [14, -97361574], [19, -37064742], [21, -47841901], [26, 37031915], [30, 58833525], [35, 2724701], [36, 41904378], [40, -77097679], [41, -92707255], [44, -67140419], [49, -99944489], [54, -29307747], [55, 19930741], [60, -87971453], [65, 93088594], [68, 61446387], [71, 11465203], [76, -18295449], [77, -68191223], [79, -25026484], [83, -65008707]], 17549138) == 189181485\nassert solution.findMaxValueOfEquation([[3, -6567633], [8, -15227064], [10, -99378273], [12, -34870883], [13, 38572241], [18, 84158625], [23, -19143413], [25, 81642182], [27, 5861865], [28, 55232907], [31, -83462421], [35, -66929665], [37, 44069379], [38, 66492251], [41, 51238510], [46, -66815623], [51, -67603931], [54, 44158152], [55, 90528701], [60, 42471532], [65, 94140178], [66, 63073380], [67, -56784692], [70, 84200655], [71, -96960122], [76, 73254691], [78, -35645631], [82, -55097478], [84, -89749816], [85, 86619284], [88, 26594743], [93, 9522437], [96, -77179595], [97, -64985190], [100, -8787407], [105, -72794309], [108, 6818253], [110, -65862993], [112, 43484543], [114, 78519324], [116, 87780729], [121, -74146902], [126, 17500109], [131, 4560309], [133, 89713714], [134, -73155052], [139, 57084496], [141, 43427791], [146, -73384493], [151, 79946515], [152, -96295753], [154, 47814617], [155, 42128973], [160, -85186441], [161, -78306639], [166, 42690601], [168, -31809399], [171, -58246987], [175, -95165410], [178, -26003531], [182, 69552870], [187, -17085009], [189, 15282423], [190, -66981245], [192, 49287627], [196, 7607091], [200, -2647202], [202, -36928995], [203, -2673746], [206, -75103331], [210, 74340927], [213, -44635775], [218, -39497119], [221, 23527171], [223, -56310860], [225, -7691237], [228, 94176915], [230, 88185121], [235, -85996941], [236, 72411400], [241, -54035091], [244, 77642789]], 130333019) == 188317256\nassert solution.findMaxValueOfEquation([[1, 70735024], [6, -27502908], [9, -1319741], [11, -55192575], [12, -48242968], [16, 52086567], [19, -98559619], [20, 15879898], [21, 50468422], [23, -24582493], [25, -54376398], [28, 9284798], [32, -46373546], [33, 79327843], [34, -68810685], [36, 41591248], [41, -65086746], [43, 43533031], [44, 59283580], [48, 62177895], [52, 66423727], [56, 69840334], [59, 52356100], [64, 62334222], [68, -21257088], [69, 60447837], [74, -64549218], [76, -29151585], [81, -54786044], [83, 9856950], [87, 41685334], [92, 84043104], [94, -13771838], [96, 46416806], [101, -68746189], [102, -77268638], [107, -18785428], [108, -4193203], [113, -29424643], [116, -46542498]], 155945088) == 163371006\nassert solution.findMaxValueOfEquation([[3, -38809571], [7, 43327140], [8, 75897600], [11, 45404910], [13, 71322304], [15, -46078343], [20, 32250823], [23, -61076742], [28, 60578566], [30, 94800688], [32, -23022619], [35, 64356737], [40, -39279662], [43, -57539455], [47, 33826564], [51, -32682325], [54, 88121705], [57, 12907191], [62, -18963776], [63, 51725818], [65, -13714154], [66, -82773649], [71, 12536740], [76, 98528606], [79, -58338104], [81, -79028031], [85, 24669322], [89, -28492698], [90, -25857667], [95, 7481004], [96, 69521621], [97, 18851458], [100, 18860303], [105, 33280301], [109, -45518062], [110, -78724921], [115, -37742668]], 73551675) == 193329340\nassert solution.findMaxValueOfEquation([[3, -33454139], [4, 16353548], [8, -92306999], [12, -78350863], [14, -53332503], [16, 98568033], [17, -16611856], [22, 83749786], [24, 61249603], [27, -22657263], [29, 23152340], [33, -30255059], [34, -19356571], [38, 62651801], [40, 44165367], [45, -55759183], [50, 55633828], [54, -1965775], [58, 17910404], [60, 87939639], [65, -12522895], [67, -20435159], [72, 73446157], [74, -8745438], [75, -85078076], [76, 62641932], [80, -82401102], [84, -47242563], [89, 79048400], [91, -17575583], [95, -72796023], [98, -12880468], [99, -7977497], [100, -93138124], [103, -11472114], [107, 29912445], [108, -57218351], [111, 44072645], [115, 52872069], [120, -78653400], [121, 6530151], [126, -83581247], [131, -74744989], [136, -585638], [141, 23381427], [143, 15952657], [146, 60451044], [150, 92496975], [153, -35582093], [157, -79484730], [158, -72422801], [160, -54770071], [164, 68460434], [165, -84230120], [166, 9453345], [168, 44323745], [171, -80236095], [175, 20607494], [176, -66349047], [178, 7026376], [179, -83096526], [181, 8350477], [184, 84490127], [186, -40302581], [188, -80601699], [189, -83287277], [193, 72421521], [195, 77992630], [199, -17514055], [200, 3659536], [205, 14070615], [206, -31891168], [209, 42943885], [210, -34478705], [213, 35748959], [215, 21713032], [218, -71944047], [221, -84093774], [226, -47725520], [229, -31006341]], 132357550) == 191065142\nassert solution.findMaxValueOfEquation([[5, 97321352], [8, 49009065], [10, 36413484], [12, 67441885], [14, 80018237], [19, -24214292], [20, -74354027], [23, 93976080], [24, 57773399], [25, -48086828], [27, -26928781], [30, -10250814], [31, -89625674], [36, 40174359], [39, 36648143], [42, -63622345], [45, -50530060], [48, 31700483], [53, 69498438], [55, 55483884], [60, 57778277], [61, -17149636], [65, -39207653], [66, -93657132], [68, 53513558], [70, 27117256], [72, 57289753], [75, 82899941], [76, 19673237], [78, 19122813], [83, -91192170], [85, 6686734], [88, -57580118], [89, -40992163], [92, -43897681], [96, 91372023], [99, -36175942], [100, 36157082], [103, -47973800], [104, -74488457], [105, 18321379], [106, -91542118], [111, -18169463], [113, 64477958], [115, -41153894], [116, 76795436], [121, 98723092], [122, -84182671], [126, -59732048], [128, 54377135], [130, -43424776], [132, 38402939], [137, -75939413], [140, -7730470], [144, 76130084], [148, -53276584], [150, -43528774]], 130892524) == 196044560\nassert solution.findMaxValueOfEquation([[4, 53923230], [5, 1392488], [6, 63082609], [8, -60139920], [12, -35428299], [14, 5400249], [17, -21366680], [19, 72529568], [22, 20309569], [27, 65455804], [30, 40601510], [34, 98917506], [36, 21940937], [38, 1345519], [39, -10005742], [40, -73885707], [44, 46037827], [45, 65406383], [47, 2096660], [52, -18245260], [56, -88977037], [61, -11007157], [63, 79174131], [65, 70328973], [69, 78023186], [72, 53186470], [75, 14400420], [79, 5833539], [83, -84569204], [84, -5155702], [85, -59717446], [86, -26347992], [90, 25179071], [92, -11307880], [96, 49362538], [101, -15928100]], 38084223) == 178091666\nassert solution.findMaxValueOfEquation([[2, -71829404], [6, 93238143], [11, -38270160], [13, 11686373], [18, 57992135], [19, 63469922], [24, 64788151], [28, 54522818], [33, -42016093], [34, -63631095], [39, 46077965], [43, 99865386], [44, -27785835], [48, 75802103], [49, -78660884], [51, -29762225], [52, -58959665], [54, 89141115], [58, -8070149], [59, 66856232], [61, 65022515], [65, 34493806], [69, -6962342], [70, -23434064], [73, 53414409], [75, 30278536], [78, 38827192], [83, 21082148], [84, -28618139], [85, -22150660], [89, 41777729], [92, -84817294], [94, -18657552], [97, -43771194], [102, 41186875], [104, -86580967], [107, 97080713], [110, 57203045], [113, -6095243], [116, 57742032], [120, 35690279], [123, -72548930], [128, 40379054], [129, 65456182], [131, -18147958], [132, 99171495], [133, -8995124], [137, 48449039], [139, -97569981], [140, -82124467], [143, -31813067], [146, 73693823], [151, 37538514], [154, -80840106], [159, 14200499], [163, -50944779], [168, -20747314], [172, 76907859], [175, -49489136]], 55965438) == 199036970\nassert solution.findMaxValueOfEquation([[3, -14818925], [6, 2866572], [11, -76410398], [13, 80686020], [18, -50834626], [19, 56666159], [22, 20875123], [24, 5617738], [25, 46456372], [26, -97965419], [27, 89324321], [32, 26363064], [36, -35586187], [39, -99304548], [43, 74814634], [48, 58889974], [49, -8849705], [54, -93788462], [55, 58607453], [58, -2857073], [62, 58802505], [64, -29305897], [69, 29548940], [72, 66376358], [74, -96903955], [79, 53118784], [82, -1478760], [83, -38145181], [84, 33089700], [87, 86966185], [92, 95147094], [95, 69141001], [100, -27089618], [103, 81175611], [108, -6461734], [110, -66941022], [115, -87701121], [120, -15938631], [121, 35061390], [125, 27731103], [130, -36487327], [131, -71395224], [136, -15477011], [141, -22679718], [143, 24034030], [145, 45614252], [146, 32919851], [148, 30973550], [152, 50722127], [153, -19545375], [156, -16899463], [160, 54697784]], 58477658) == 184471480\nassert solution.findMaxValueOfEquation([[5, 22407498], [8, 17205799], [13, -18159748], [17, -36224907], [20, -14594722], [25, 85067974], [27, 11954046], [29, 25158024], [33, -88177561], [36, -68861271], [41, 40857707], [45, 40083513], [48, 41097863], [53, -88063696], [57, 24395076], [61, 35478298], [64, -50973821], [66, -46726328], [67, 16883463], [70, -95870], [74, -19390173], [76, -79661192], [77, 17049261], [80, -82532005], [85, 52691605], [90, 24291146], [91, -73733246], [96, -61140733], [99, 89280464], [101, 69285438], [103, 12154307], [107, 32815116], [112, 65500648], [116, -2016357], [120, -40392345], [124, 3624897], [125, -38617019], [129, 56630303], [133, 83589796], [137, -75076819]], 98850365) == 174348512\nassert solution.findMaxValueOfEquation([[1, -33158962], [4, 20730584], [6, 35621978], [8, -9992402], [10, -93597481], [15, -32583146], [16, -10507609], [18, -50335330], [23, 67069432], [25, -3935954]], 139242638) == 102691427\nassert solution.findMaxValueOfEquation([[2, -4217318], [5, 7453687], [6, -41881798], [8, -52075104], [9, -31887979], [13, 51253398], [14, 96599761], [17, 58424158], [18, 22395952], [22, 45454757], [27, 14914796], [29, -69491184], [32, -5102619], [37, -83899060], [42, -66548966], [46, 62909584], [49, -7541711], [53, 75484212], [57, -29562492], [59, 67959737], [60, -66213952], [64, -37886753], [67, -49441989], [70, -9306582], [72, -99090985], [74, -35221163], [75, -68483191], [80, -30875713], [83, -95057764], [84, -45158006], [85, -96565374], [90, -1255399], [91, -46602412], [94, -4690385], [97, 84335268], [101, 76014639], [104, -13767649], [107, -26932505], [109, 64438162], [113, -9163240], [114, -7711249], [117, -7344792], [119, 25967177], [124, -72383180], [129, -9068394], [133, -22542403], [134, -62739701], [135, 61110764], [137, 88617601], [138, 22321887], [141, -43843834], [146, -86504751], [149, -54001471], [153, 61234097], [158, -37751539], [160, -32610052], [163, -21620160], [167, 86394237], [171, -81918148], [176, -51260619], [177, 25145685], [178, -96698223], [179, 13679070], [180, -10058629], [185, 41107797]], 114777252) == 185217485\nassert solution.findMaxValueOfEquation([[2, -946209], [7, 57058625], [12, -78332621], [17, -39618174], [21, 25092984], [25, -9036955], [28, 91850951], [33, -60643151], [37, 39640623], [41, 97647704], [42, 32887972], [44, -51459838], [49, -18579924], [52, 25154501], [55, 71711141], [58, 18428476], [61, -19186260], [63, 40929687], [65, -12071838], [67, -63240353], [69, -21169964]], 96748445) == 189498668\nassert solution.findMaxValueOfEquation([[1, 47793337], [6, 35346573], [8, 29539296], [12, -3745357], [13, -85934402]], 76837701) == 83139915\nassert solution.findMaxValueOfEquation([[3, 14640791], [6, 82962799], [10, -79265486], [11, 97643534], [16, 78874757], [17, 1739251], [19, 49726497], [24, 82308548], [26, -80498017], [29, -44614647], [32, 81368761], [37, -6570559], [42, -73412364], [43, 64795211], [44, 91044572], [46, -80418721], [50, 53136099], [53, 46478840], [58, -16096419], [62, 46825812], [66, -34471911], [68, -85149279], [72, 19440072], [76, 85785780], [78, 49759597], [83, -34772527], [85, -21135747], [90, 2536950], [94, -24484607], [99, 53816373], [101, -49992924], [106, -22028403], [110, 68388437], [112, 86113974], [114, 69150217], [115, -46772618], [120, 81935233], [124, -67892033], [129, 56078503], [130, 46570824], [134, -79682303], [136, -39909876], [141, -23069589], [144, 66784227], [146, -24088576], [151, 89252428], [153, -30750728], [157, 23707265], [161, 60868284], [166, 34747174], [168, -3722530], [173, -64234814], [174, 67905166], [177, -43798604], [181, -92569312], [183, 2527219], [186, 37304433], [189, -71750766], [193, -57756056], [194, 57623290], [199, -39992773], [204, 53850891], [206, -53590443], [209, -67090649], [211, -33034163], [212, -93234116], [216, 13454217], [221, 29111782], [226, -86229111], [229, -65300470], [232, -53978892], [236, -38224745], [241, 59429319], [245, 37338174], [249, -21647466], [254, -51148028], [255, -68788908], [257, -87212520], [259, 82398568], [263, 46841051], [267, -1023707], [271, 52825341]], 13375869) == 188688139\nassert solution.findMaxValueOfEquation([[1, -75636130], [2, 67128900], [7, -48394610], [12, 17791252], [14, 94867161], [16, 90303953], [19, 83836361], [20, -20522520], [21, 45674108], [26, -97275220]], 155447608) == 185171116\nassert solution.findMaxValueOfEquation([[3, -20502261], [4, -93101065], [8, 638882], [13, 38327338], [18, 76117646], [23, 46207389], [27, 70073636], [30, -34445067], [35, 5731282], [36, -23560779], [41, -44872821], [42, -77761790], [44, 77927453], [48, -50270267], [51, -1730221], [56, 38452154], [58, 48907218], [62, 81715325], [66, 15981127], [69, 63031304], [70, 50471664]], 80716983) == 159642796\nassert solution.findMaxValueOfEquation([[4, -98526052], [5, 84213970], [10, -85427823], [15, 76753909], [20, -72985617], [22, -71922824], [26, 73762699], [30, 24567768], [35, -45164583], [39, 89720811], [40, -65874861], [45, -28068797], [47, -34684869], [49, 25524682], [52, -17045799], [53, 22058782], [54, 39219397], [56, 23997104], [59, 18243736], [63, -11653129], [68, -18840030], [72, -5535273], [76, 34016768], [80, -80821765], [81, 20639984], [85, 40555400], [90, 1819748], [94, 22141939], [97, -99843409], [100, -39178505], [105, 39968627]], 146068943) == 173934815\nassert solution.findMaxValueOfEquation([[2, 90715098], [7, 24749884], [12, 94177288], [14, 6527893], [15, -50384831], [20, 76147548], [22, -76435327], [26, 15431921], [30, -97981403], [34, 6511614], [35, 56138592], [40, -43698016], [44, -83509707], [49, 91916699], [50, 91627675], [53, -66225398], [57, 5082800], [58, 18186221], [62, 19948097], [63, -22006944], [67, -51562495], [68, 82566944], [70, -90031048], [71, -31567422], [76, 50947956], [80, 81386539], [84, -5434836], [85, 17566504], [87, -57299246], [89, -280288], [92, -22419463], [97, -45639508], [101, -14930277], [105, 36516429], [106, -23660005], [111, 94116467], [113, -41978530], [115, 36131061], [116, 64449373], [119, -68079605], [123, 24290354], [127, 83867421], [131, -46473231]], 74819737) == 188293854\nassert solution.findMaxValueOfEquation([[1, 30120079], [6, -66811848], [10, -37214745], [12, -18680544], [16, -63773969], [19, -81752805], [21, 47606768], [24, 60881118], [29, -71983967], [30, -44474470], [33, -83796273], [37, 99874718], [42, 79974151], [47, -21460609], [51, 21540672], [53, -20995733], [54, -218137], [57, -84279345], [59, -96111411], [63, -68647373], [68, 23256086], [72, 60506926], [74, 25753702], [78, 15423573], [81, 97796936], [86, 78577606], [88, -69923484], [93, 96354155], [94, 3412803], [95, 48705976], [100, -86031146], [104, 44919854], [107, 58590646], [111, -3971923], [113, -44849342], [116, -1604465], [120, 99916596], [122, 12220549], [125, -34837619], [126, -59510787], [129, 87579539], [132, -77120158], [133, -59264839], [135, 13558376], [138, 83245204], [141, -70976712], [145, 71393420], [147, 28187415], [152, 57845822], [156, 96465129], [159, -87321486], [163, -8481807], [166, -6101529], [170, 9677726], [174, -96786170], [179, -40036477], [181, 40977993], [184, -84498339], [185, 26942558], [189, 47467325], [193, -43209604], [196, 263002], [200, 82982089], [202, -57997509], [204, -64247841], [206, 31040725], [207, 37972534], [210, 2606840], [215, 81084677], [216, -92904604], [221, -64746139], [224, -97142008], [225, -86777032], [227, -33047032], [228, -93073446], [230, -19067330], [234, -15578746], [235, -68067279], [236, 38763118], [240, 80232159], [241, -14454406], [246, -43287297], [251, -8815303]], 154943748) == 199791397\nassert solution.findMaxValueOfEquation([[1, 62247141], [3, 66690429], [6, 7422374], [9, 29944335], [10, -5691256], [14, 64115485], [17, 87867150], [21, 25658620], [22, 91304728], [27, 25378589], [31, -24424418], [32, 19117022], [36, -75712283], [38, -79355525], [41, 55792235], [45, -12762161], [46, -57440629], [49, 47144368], [51, -88497399], [53, -26086544], [56, 78104792], [60, -26707423], [62, -84167689], [63, 8475805], [66, -46159764], [67, 54083365], [70, 4807554], [75, -54067995], [77, 15764298], [79, 64123424], [82, 36694953], [84, -59729172], [85, -75315754], [87, -79211280], [89, -57792932], [94, -41220663], [96, -92669401], [97, 46991823], [100, 93524523], [103, 88236365], [107, 67906187], [108, 61460081], [113, 84394685], [118, 87203203], [122, -49337629]], 58177886) == 184829329\nassert solution.findMaxValueOfEquation([[1, -30770280], [6, -90845456], [9, 96576368], [11, -52435098], [14, -60820097], [18, -76673874], [21, -40012225], [24, 3406423], [25, 28072257], [27, 50333978], [32, 92670419], [36, 11774815], [40, -3747945], [45, 70556065], [50, 89847173], [52, -65097924], [53, -24169467], [56, 27175707], [60, -63599655], [64, -80264936], [68, -99146560], [69, -20102464], [73, 90959435], [75, 69561494], [79, 70040575], [81, -75351496], [82, -34188308], [83, -39382315], [84, 52727161], [86, -65761210], [88, -11510247], [89, -96434446], [93, 65972252], [94, 63770448], [97, 32018144], [101, 48000501], [104, 28752386], [106, -44754997], [107, -79358084], [110, 77488814], [111, 77716727], [113, 99907882], [114, 50943188], [115, -77001187], [119, -40632667], [123, 68134835], [124, -54209206], [129, 40709487], [133, 74402036], [136, -39148429], [138, 15216915], [143, -92193089], [145, -24929264], [147, -85945102], [152, -8675724], [157, -27480528], [160, -95842668], [163, -45371634], [168, 7008463], [170, 44764236], [174, 39917104], [175, 97830997], [179, -59547435], [181, 74945050], [186, -24027043], [189, -33228053], [193, 10293885], [194, -70329768], [198, 4352420], [199, -7980574], [201, 66530693], [202, -87207460], [207, 71819896], [211, 3361715], [215, 49004564], [219, -4911819], [223, -4108061], [224, 63180810], [228, 77122147], [230, -87563488], [234, -45361653], [236, 99571368], [239, -96217918], [240, 47634334], [241, -54148142], [245, 76858693], [250, -37575697], [251, 86467557], [255, -13353876], [258, 87025788], [259, -77673175], [260, 28717112], [262, 17243200], [264, -49051274]], 71205848) == 199479373\nassert solution.findMaxValueOfEquation([[1, 58800893], [4, -1781533], [8, -96435016], [9, 80744850], [10, 30690033], [12, 41006231], [17, 13906291], [18, -8115739], [20, 16627547], [22, 19888749], [26, -82267114], [28, 12921625], [31, -38726816], [33, 99771748], [37, -57311729], [40, -89939918], [45, 44069580], [48, 89730674], [49, 63751648], [50, 28206373], [53, -52919739], [58, -10980548], [62, -22492852], [65, 50144816], [67, -90746143], [72, -26062332], [77, 74815730], [78, -87541587], [79, -36124713], [83, 9567384], [84, -72800674], [85, 19227637], [90, 88835744], [95, 25205733], [98, -48673031], [102, 90793114], [105, -94199827], [107, -57081443], [111, 79699502], [116, -93940027], [121, -19474540], [123, 73135838], [124, 30152777], [125, 51437555], [126, -64537520], [127, -76885221], [132, 61129121], [137, 76031873], [139, -90704302], [144, -56650964], [146, -75682360]], 107266060) == 190564931\nassert solution.findMaxValueOfEquation([[5, -99530606], [10, 68025548], [14, 10308670], [15, 10405615], [20, 95874059], [25, -89659001], [30, -78134770], [35, -3710858], [37, 54811439], [38, 54749301], [40, 48695077], [42, -91155575], [44, -87401786], [48, -69333134], [52, -29685198], [56, 36162306], [57, 49901957], [62, 81105825], [66, 39542529], [70, 49142676], [73, -75248138], [78, 17655093], [80, 34502014], [81, -67889423], [84, -82675904], [89, -93784564], [94, -8876096], [98, 94957061], [103, -58335474], [106, 79496429], [108, -69975872], [109, 19782348], [111, 14040881], [114, 24367499], [119, 60661519], [120, 8679653], [121, 40520366], [126, -26887747], [130, -15871595], [135, -72853379], [139, -70776580], [142, 3303667], [144, -39546421], [146, 1740049], [147, 66253003], [151, 93719043], [155, 28524466], [160, 46535630], [165, -9784712], [170, 13449696], [175, 87451453], [176, 21867667], [180, 82817652], [181, 21307134], [186, 32681260], [191, 46248285], [195, -19791356], [200, 16582357], [201, -7293793], [204, -55625881], [208, 20296896], [211, 26337240], [213, -86642038], [215, 63387367], [220, -70243328], [222, -35237122], [223, 45583889], [225, -84948214], [227, 37325992], [231, -37815702], [232, -24845954], [233, 51012955], [237, 19662753], [239, -29681015], [241, 75219888], [242, 78342007], [244, -37752004], [246, 90170393]], 77168323) == 190831198\nassert solution.findMaxValueOfEquation([[4, 90551877], [5, 21578059], [10, -44080886], [15, 96094686], [16, -68525670], [21, -46848616], [24, -20620370], [27, -75282167], [31, 19676516], [36, 93140736], [39, 46546793], [41, -80611229], [45, 82866236], [47, -94517557], [50, 30827834], [53, 14731181], [57, 23194454], [58, -29197207], [60, 64389149], [61, -52598011], [63, -91471960], [66, 76401990], [71, -35072582], [76, -21193483], [81, -34682012], [82, -93215388], [85, -31387877], [87, 35603679], [92, -90678944], [93, -91560659], [96, 37831649], [97, 14363237], [98, -67618428], [100, -66852776], [102, 32700039], [104, 47304765], [107, 96112123], [108, 30136208], [112, 11016123], [117, -21311695], [119, 79361340], [124, -19007879], [125, 69377156], [128, 11136269], [129, 50463812], [134, -42836435], [136, 24113105], [141, 24965131], [142, 15410130], [143, -65112776], [148, 52356411], [151, -71397170], [155, -82301482], [157, 78463512], [160, 1635931], [161, -71790195], [166, -58287165], [169, 89116321], [171, -52667071], [172, -53627258], [173, 85907958], [176, 70901213], [179, 33052621], [180, 29576585], [184, -61506708]], 50130303) == 192206901\nassert solution.findMaxValueOfEquation([[5, 39940858], [9, 59459678], [14, 13242890], [16, -42537023], [19, 27714403], [20, -54070284], [24, -47042267], [29, 19370125], [34, -43129415], [35, 59785250], [36, -30434971], [37, -58509951], [40, -13614269], [44, 39584971], [47, 43429491], [48, 50189100], [50, 76695008], [55, 3802803], [59, -30600144], [64, 60769970], [67, 60120878], [71, -40226084], [72, -51144282], [73, 76187822], [78, -60060169], [79, -29549731], [83, 6310789], [88, -66419926], [89, -52973420], [92, -14944349], [93, 23388824], [98, 76815862], [100, 62661874], [103, 8845029], [104, -91351123], [105, 29380018], [107, 83107614], [110, 25469883], [112, -42793107], [115, 8684262], [119, -51702182], [122, -67510388], [123, -65683210], [124, 41252308], [129, 30673156], [131, -73677117], [132, 51377063], [134, 99475097], [139, 33273775], [142, -57212451], [147, -69298407], [148, -45630666], [150, 68634031], [155, -605580], [159, 44605677], [161, 94774947], [166, -46241590], [167, -71664823], [169, 70398059], [174, 77637356], [179, -50998321], [182, -18596197], [185, -15341638], [188, 58639892], [190, 82371336], [191, -47174361], [193, -97272146], [194, 25891848], [198, 86563261], [202, 27457916], [205, 61325586], [210, -36637400], [215, 68945305], [216, -29777925], [217, 33783425]], 44101646) == 194250071\nassert solution.findMaxValueOfEquation([[1, -86522205], [2, 32162122], [3, -36024323], [4, -42093214], [7, -13004364], [11, -92223631], [12, 8118463], [17, -19137077], [18, 10880630], [22, -8045197], [23, 59989274], [27, -86391462], [31, -77165079], [32, 88979148], [33, -85646023], [37, -38111713], [38, -88110361], [39, 79945778], [40, 23433015], [41, 28072385], [46, 69035263], [47, -38139565], [52, 87629065], [53, -49506417], [55, -35222680], [56, 19681600], [61, -45354849], [62, -65556073], [67, 65661198], [71, -77857790], [75, 43613451], [79, 60745495], [83, 43701305], [85, -61029277], [87, -8462341], [92, 27508067], [95, 57011852], [98, -43149024], [102, 11214038]], 41785957) == 176608233",
  "inefficient_solution": "from collections import deque\n\nclass Solution:\n    def findMaxValueOfEquation(self, points, k):\n        ans = -float('inf')\n        q = deque()\n        for x, y in points:\n            while len(q) >= 1 and x - q[0][0] > k:\n                q.popleft()\n            if len(q) >= 1:\n                ans = max(ans, x + y + q[0][1] - q[0][0])\n            while len(q) >= 1 and y - x >= q[-1][1] - q[-1][0]:\n                q.pop()\n            q.append((x, y))\n        for _ in range(len(points)):\n            q.append((0, 0))\n        q.popleft()\n        q.append((0, 0))\n        q.popleft()\n        for _ in range(len(points)):\n            q.append((0, 0))\n        q.popleft()\n        q.append((0, 0))\n        q.popleft()\n        for _ in range(len(points)):\n            q.append((0, 0))\n        q.popleft()\n        q.append((0, 0))\n        q.popleft()\n        for _ in range(len(points)):\n            q.append((0, 0))\n        q.popleft()\n        return ans",
  "is_python": true
}