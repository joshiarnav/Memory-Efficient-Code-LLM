{
  "problem_idx": 2836,
  "task_name": "Maximize Value of Function in a Ball Passing Game",
  "markdown_description": "\nYou are given a **0-indexed** integer array `receiver` of length `n` and an integer `k`.\n\n\nThere are `n` players having a **unique id** in the range `[0, n - 1]` who will play a ball passing game, and `receiver[i]` is the id of the player who receives passes from the player with id `i`. Players can pass to themselves, **i.e.** `receiver[i]` may be equal to `i`.\n\n\nYou must choose one of the `n` players as the starting player for the game, and the ball will be passed **exactly** `k` times starting from the chosen player.\n\n\nFor a chosen starting player having id `x`, we define a function `f(x)` that denotes the **sum** of `x` and the **ids** of all players who receive the ball during the `k` passes, **including repetitions**. In other words, `f(x) = x + receiver[x] + receiver[receiver[x]] + ... + receiver(k)[x]`.\n\n\nYour task is to choose a starting player having id `x` that **maximizes** the value of `f(x)`.\n\n\nReturn *an integer denoting the **maximum** value of the function.*\n\n\n**Note:** `receiver` may contain duplicates.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n\n| Pass Number | Sender ID | Receiver ID | x + Receiver IDs |\n| --- | --- | --- | --- |\n|  |  |  | 2 |\n| 1 | 2 | 1 | 3 |\n| 2 | 1 | 0 | 3 |\n| 3 | 0 | 2 | 5 |\n| 4 | 2 | 1 | 6 |\n\n\n\n```\n\n**Input:** receiver = [2,0,1], k = 4\n**Output:** 6\n**Explanation:** The table above shows a simulation of the game starting with the player having id x = 2. \nFrom the table, f(2) is equal to 6. \nIt can be shown that 6 is the maximum achievable value of the function. \nHence, the output is 6. \n\n```\n\n**Example 2:**\n\n\n\n\n| Pass Number | Sender ID | Receiver ID | x + Receiver IDs |\n| --- | --- | --- | --- |\n|  |  |  | 4 |\n| 1 | 4 | 3 | 7 |\n| 2 | 3 | 2 | 9 |\n| 3 | 2 | 1 | 10 |\n\n\n\n```\n\n**Input:** receiver = [1,1,1,2,3], k = 3\n**Output:** 10\n**Explanation:** The table above shows a simulation of the game starting with the player having id x = 4. \nFrom the table, f(4) is equal to 10. \nIt can be shown that 10 is the maximum achievable value of the function. \nHence, the output is 10. \n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `1 <= receiver.length == n <= 105`\n* `0 <= receiver[i] <= n - 1`\n* `1 <= k <= 1010`\n\n\n",
  "canonical_solution": "class Solution:\n    def getMaxFunctionValue(self, receiver: List[int], k: int) -> int:\n        n, m = len(receiver), k.bit_length()\n        f = [[0] * m for _ in range(n)]\n        g = [[0] * m for _ in range(n)]\n        for i, x in enumerate(receiver):\n            f[i][0] = x\n            g[i][0] = i\n        for j in range(1, m):\n            for i in range(n):\n                f[i][j] = f[f[i][j - 1]][j - 1]\n                g[i][j] = g[i][j - 1] + g[f[i][j - 1]][j - 1]\n        ans = 0\n        for i in range(n):\n            p, t = i, 0\n            for j in range(m):\n                if k >> j & 1:\n                    t += g[p][j]\n                    p = f[p][j]\n            ans = max(ans, t + p)\n        return ans\n",
  "test_case_generator": "\nimport random\n\nclass Solution:\n    def getMaxFunctionValue(self, receiver: List[int], k: int) -> int:\n        n, m = len(receiver), k.bit_length()\n        f = [[0] * m for _ in range(n)]\n        g = [[0] * m for _ in range(n)]\n        for i, x in enumerate(receiver):\n            f[i][0] = x\n            g[i][0] = i\n        for j in range(1, m):\n            for i in range(n):\n                f[i][j] = f[f[i][j - 1]][j - 1]\n                g[i][j] = g[i][j - 1] + g[f[i][j - 1]][j - 1]\n        ans = 0\n        for i in range(n):\n            p, t = i, 0\n            for j in range(m):\n                if k >> j & 1:\n                    t += g[p][j]\n                    p = f[p][j]\n            ans = max(ans, t + p)\n        return ans\n        \ndef generate_test_case():\n    solution = Solution()\n    \n    # Generate receiver list\n    receiver_len = random.randint(1, 101)\n    receiver = [random.randint(0, receiver_len - 1) for _ in range(receiver_len)]\n    \n    # Generate a random value for k\n    k = random.randint(1, 10**10)\n\n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.getMaxFunctionValue(receiver, k)\n\n    return receiver, k, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        receiver, k, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.getMaxFunctionValue(receiver, k) == expected_result\n        print(f\"assert solution.getMaxFunctionValue({receiver}, {k}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.getMaxFunctionValue({receiver}, {k}) == {expected_result}\") # You can iterate through the receiver list to construct the test case in the same format as the example\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.getMaxFunctionValue([61, 21, 18, 17, 4, 61, 68, 30, 72, 77, 58, 2, 46, 76, 11, 4, 49, 70, 78, 72, 71, 71, 24, 44, 58, 58, 33, 64, 75, 36, 80, 67, 18, 70, 38, 36, 10, 78, 51, 44, 49, 40, 25, 62, 47, 54, 4, 7, 42, 80, 48, 28, 52, 53, 0, 61, 37, 36, 47, 5, 52, 43, 35, 61, 31, 16, 64, 2, 51, 3, 30, 16, 33, 26, 63, 3, 79, 75, 36, 52, 34], 9959130464) == 527833914645\nassert solution.getMaxFunctionValue([69, 56, 66, 21, 71, 74, 42, 1, 69, 55, 75, 18, 28, 17, 39, 18, 16, 0, 9, 43, 70, 53, 58, 40, 2, 5, 43, 18, 15, 22, 51, 40, 39, 17, 65, 33, 4, 40, 28, 79, 38, 17, 0, 42, 55, 9, 81, 58, 78, 68, 1, 73, 59, 48, 69, 20, 34, 75, 13, 74, 56, 29, 25, 48, 1, 46, 27, 60, 47, 24, 24, 57, 6, 62, 40, 13, 45, 1, 42, 14, 21, 26, 38, 8], 6562871963) == 288766366434\nassert solution.getMaxFunctionValue([13, 0, 3, 24, 7, 18, 12, 4, 23, 5, 13, 31, 12, 26, 20, 2, 19, 22, 28, 29, 25, 16, 18, 21, 7, 25, 9, 11, 10, 28, 29, 24], 1697634878) == 42440871975\nassert solution.getMaxFunctionValue([51, 86, 57, 26, 1, 88, 29, 49, 34, 85, 53, 25, 55, 82, 17, 75, 72, 40, 55, 69, 20, 57, 51, 73, 61, 51, 1, 26, 31, 52, 80, 89, 38, 56, 69, 43, 62, 14, 29, 84, 24, 78, 53, 56, 76, 28, 67, 77, 45, 90, 52, 38, 13, 57, 65, 50, 30, 51, 89, 13, 17, 87, 4, 80, 55, 73, 32, 62, 43, 10, 75, 80, 78, 87, 53, 22, 76, 22, 45, 42, 26, 59, 87, 57, 74, 49, 7, 83, 68, 0, 27], 3728225535) == 283345140736\nassert solution.getMaxFunctionValue([53, 32, 67, 68, 66, 13, 4, 5, 64, 71, 15, 14, 29, 60, 67, 7, 41, 6, 7, 58, 64, 1, 26, 16, 1, 24, 69, 13, 54, 41, 45, 41, 42, 15, 25, 63, 73, 7, 72, 18, 42, 33, 21, 67, 25, 71, 0, 11, 32, 11, 19, 2, 6, 54, 45, 3, 60, 34, 51, 38, 39, 20, 53, 62, 38, 56, 25, 55, 25, 73, 49, 51, 22, 69, 36], 1675680848) == 118973340281\nassert solution.getMaxFunctionValue([45, 4, 7, 42, 46, 37, 4, 5, 20, 50, 39, 3, 30, 25, 21, 33, 35, 25, 0, 34, 25, 46, 11, 3, 25, 41, 21, 27, 7, 14, 0, 49, 45, 22, 32, 43, 19, 6, 23, 3, 9, 20, 27, 26, 34, 29, 8, 28, 7, 12, 43, 11], 5428094639) == 155605379702\nassert solution.getMaxFunctionValue([1, 7, 9, 1, 10, 4, 1, 7, 0, 4, 10, 16, 8, 12, 20, 17, 7, 15, 17, 10, 13, 3], 6922315475) == 110757047619\nassert solution.getMaxFunctionValue([13, 5, 2, 2, 13, 5, 1, 5, 12, 6, 17, 8, 7, 17, 12, 5, 16, 9, 4, 8], 6272870032) == 100365920528\nassert solution.getMaxFunctionValue([13, 6, 11, 19, 16, 22, 17, 12, 21, 11, 8, 18, 19, 19, 13, 9, 5, 2, 4, 22, 24, 1, 22, 11, 13], 7071109879) == 155564417360\nassert solution.getMaxFunctionValue([24, 68, 23, 51, 44, 66, 45, 43, 15, 8, 32, 60, 11, 63, 6, 61, 56, 2, 29, 64, 1, 58, 60, 63, 24, 30, 19, 40, 66, 17, 61, 31, 63, 45, 43, 15, 40, 63, 11, 27, 20, 70, 12, 38, 51, 32, 7, 47, 54, 14, 39, 15, 58, 22, 42, 47, 41, 69, 31, 54, 27, 55, 16, 56, 32, 57, 42, 52, 64, 56, 2], 7729392909) == 363281466792\nassert solution.getMaxFunctionValue([36, 54, 50, 51, 12, 70, 46, 29, 40, 70, 1, 50, 18, 62, 50, 61, 45, 12, 20, 33, 54, 59, 10, 47, 57, 4, 3, 30, 4, 72, 60, 65, 59, 22, 77, 14, 59, 62, 52, 5, 61, 10, 37, 68, 4, 44, 74, 42, 73, 68, 72, 33, 37, 49, 54, 55, 70, 68, 66, 49, 24, 0, 27, 64, 41, 42, 15, 63, 53, 12, 61, 71, 40, 4, 33, 68, 53, 68], 2038107312) == 144705619223\nassert solution.getMaxFunctionValue([25, 11, 28, 15, 31, 13, 1, 12, 1, 0, 8, 27, 34, 27, 23, 19, 16, 18, 7, 33, 13, 30, 3, 11, 8, 29, 14, 15, 9, 22, 26, 15, 6, 18, 26], 6564121445) == 130735418815\nassert solution.getMaxFunctionValue([26, 86, 67, 1, 1, 73, 33, 82, 88, 33, 22, 81, 55, 46, 2, 84, 63, 60, 48, 47, 49, 46, 6, 63, 59, 1, 84, 61, 50, 68, 84, 45, 81, 49, 56, 2, 31, 81, 0, 29, 64, 54, 16, 79, 38, 25, 27, 70, 71, 16, 37, 36, 43, 36, 9, 13, 23, 88, 5, 53, 38, 85, 37, 63, 83, 77, 75, 67, 10, 22, 37, 76, 51, 80, 9, 70, 88, 39, 72, 3, 60, 70, 1, 61, 32, 44, 37, 22, 30], 2398910597) == 160727010066\nassert solution.getMaxFunctionValue([73, 23, 66, 27, 19, 62, 40, 35, 39, 32, 73, 55, 41, 75, 9, 8, 16, 33, 70, 55, 84, 62, 5, 57, 56, 60, 79, 34, 70, 65, 41, 1, 44, 45, 36, 32, 50, 30, 80, 12, 72, 17, 80, 55, 32, 70, 6, 48, 25, 9, 24, 40, 11, 45, 50, 29, 66, 7, 48, 13, 38, 24, 20, 82, 83, 84, 20, 68, 65, 57, 11, 31, 39, 62, 49, 46, 35, 66, 43, 82, 61, 16, 12, 14, 55, 53], 8081286002) == 470734909717\nassert solution.getMaxFunctionValue([23, 16, 16, 32, 6, 45, 33, 9, 48, 30, 0, 6, 2, 30, 6, 3, 1, 18, 4, 0, 41, 29, 15, 17, 40, 26, 35, 35, 6, 28, 19, 52, 47, 46, 1, 12, 17, 42, 4, 3, 15, 28, 11, 46, 43, 41, 24, 52, 3, 26, 34, 18, 28], 4997978551) == 148121909848\nassert solution.getMaxFunctionValue([19, 25, 30, 49, 3, 15, 67, 51, 62, 30, 42, 24, 3, 25, 62, 62, 36, 32, 71, 52, 73, 7, 68, 11, 64, 37, 37, 41, 22, 6, 71, 64, 57, 27, 66, 71, 25, 42, 2, 26, 27, 27, 6, 1, 36, 50, 69, 24, 73, 10, 61, 52, 45, 58, 65, 36, 4, 6, 59, 29, 1, 16, 3, 50, 45, 59, 37, 11, 63, 23, 69, 17, 28, 33], 7602814544) == 283058633901\nassert solution.getMaxFunctionValue([7, 5, 5, 2, 3, 3, 6, 7, 7, 4], 6388152700) == 44717068908\nassert solution.getMaxFunctionValue([8, 26, 25, 8, 30, 35, 0, 44, 25, 18, 20, 21, 31, 19, 26, 14, 43, 11, 3, 19, 42, 1, 42, 23, 30, 21, 11, 7, 44, 43, 26, 0, 36, 42, 37, 17, 20, 11, 15, 13, 24, 41, 6, 32, 7, 7, 17], 5156908679) == 211433255880\nassert solution.getMaxFunctionValue([24, 6, 20, 30, 21, 3, 9, 13, 4, 6, 10, 7, 13, 30, 25, 19, 15, 29, 6, 12, 5, 14, 3, 26, 30, 8, 8, 20, 29, 11, 31, 17], 4751887737) == 93680072575\nassert solution.getMaxFunctionValue([11, 17, 6, 10, 36, 41, 22, 44, 31, 1, 51, 47, 16, 17, 49, 20, 39, 38, 4, 7, 54, 21, 17, 50, 20, 35, 46, 24, 25, 40, 50, 10, 29, 28, 18, 34, 7, 47, 35, 12, 52, 24, 38, 33, 46, 31, 9, 4, 27, 53, 31, 13, 11, 32, 31], 5018132355) == 120853354332\nassert solution.getMaxFunctionValue([8, 3, 38, 14, 26, 0, 8, 40, 36, 1, 10, 2, 13, 9, 16, 3, 8, 24, 23, 19, 19, 14, 26, 12, 12, 2, 23, 19, 35, 39, 29, 11, 14, 46, 8, 38, 6, 5, 29, 40, 15, 30, 7, 22, 20, 43, 8], 6089077089) == 115692464736\nassert solution.getMaxFunctionValue([44, 70, 26, 86, 56, 51, 19, 86, 27, 42, 94, 67, 62, 48, 83, 60, 36, 1, 58, 73, 37, 49, 33, 82, 74, 76, 13, 12, 26, 51, 88, 43, 11, 4, 88, 46, 64, 62, 39, 36, 90, 78, 77, 96, 19, 20, 38, 58, 51, 36, 73, 49, 43, 40, 73, 8, 65, 12, 89, 27, 81, 22, 61, 57, 30, 89, 76, 3, 30, 24, 88, 81, 75, 23, 95, 33, 53, 2, 84, 87, 69, 54, 84, 22, 24, 72, 77, 18, 13, 18, 11, 82, 46, 55, 42, 89, 76], 2697866336) == 148382648655\nassert solution.getMaxFunctionValue([27, 27, 1, 17, 8, 16, 30, 9, 33, 23, 18, 3, 0, 3, 21, 33, 9, 5, 33, 32, 11, 33, 22, 23, 10, 19, 12, 3, 27, 22, 17, 20, 14, 6], 8114610861) == 186636049826\nassert solution.getMaxFunctionValue([17, 34, 27, 28, 55, 23, 45, 13, 44, 43, 44, 0, 10, 41, 4, 41, 21, 22, 60, 0, 0, 6, 32, 1, 7, 12, 25, 56, 7, 6, 25, 14, 25, 28, 38, 18, 13, 56, 18, 13, 20, 33, 28, 46, 16, 3, 56, 11, 3, 6, 9, 25, 35, 41, 19, 9, 1, 23, 30, 12, 56], 1373205745) == 47375598284\nassert solution.getMaxFunctionValue([5, 15, 19, 16, 16, 24, 21, 1, 0, 15, 6, 24, 21, 25, 25, 18, 13, 1, 23, 15, 10, 17, 16, 21, 8, 14, 5], 9010105937) == 175697065791\nassert solution.getMaxFunctionValue([21, 9, 52, 11, 32, 13, 40, 5, 22, 57, 9, 20, 58, 31, 55, 10, 50, 27, 28, 30, 61, 50, 35, 43, 34, 33, 18, 63, 62, 29, 45, 65, 64, 55, 54, 45, 34, 31, 41, 13, 59, 42, 5, 17, 10, 28, 29, 37, 29, 45, 22, 30, 36, 22, 47, 49, 14, 17, 24, 21, 54, 47, 41, 17, 32, 46, 15, 49], 7322255036) == 351468241792\nassert solution.getMaxFunctionValue([1, 2, 0], 5110792891) == 5110792893\nassert solution.getMaxFunctionValue([2, 2, 44, 56, 73, 73, 16, 69, 27, 5, 85, 57, 30, 60, 45, 6, 58, 5, 9, 92, 92, 59, 60, 72, 16, 74, 92, 14, 84, 37, 35, 0, 87, 89, 79, 71, 23, 41, 69, 50, 1, 78, 86, 6, 69, 20, 76, 25, 4, 29, 82, 12, 38, 89, 60, 32, 82, 82, 8, 79, 56, 36, 5, 31, 84, 11, 67, 31, 17, 76, 5, 33, 8, 30, 91, 47, 34, 7, 18, 61, 88, 0, 76, 14, 18, 14, 58, 54, 26, 54, 76, 37, 81], 1330635994) == 57882666011\nassert solution.getMaxFunctionValue([1, 2, 1, 1, 8, 7, 5, 6, 3, 9, 6], 703354903) == 6330194136\nassert solution.getMaxFunctionValue([38, 5, 17, 18, 40, 32, 15, 2, 14, 3, 10, 12, 29, 0, 22, 7, 10, 7, 9, 1, 26, 41, 1, 30, 28, 22, 8, 34, 1, 19, 42, 10, 16, 10, 10, 33, 38, 36, 1, 19, 10, 32, 27, 38], 4815551328) == 48155513396\nassert solution.getMaxFunctionValue([87, 22, 40, 25, 33, 80, 2, 66, 14, 44, 87, 19, 83, 84, 79, 58, 8, 78, 17, 26, 72, 86, 53, 81, 72, 72, 28, 29, 73, 83, 20, 64, 2, 59, 79, 18, 14, 71, 44, 27, 38, 13, 25, 60, 5, 71, 63, 4, 75, 47, 4, 85, 35, 2, 75, 30, 62, 87, 81, 77, 9, 26, 51, 36, 3, 7, 61, 4, 72, 15, 28, 66, 55, 81, 16, 13, 10, 64, 0, 64, 21, 23, 25, 55, 6, 79, 81, 67, 69], 6296459618) == 327415900239\nassert solution.getMaxFunctionValue([28, 39, 52, 45, 17, 36, 24, 55, 45, 48, 40, 26, 7, 52, 18, 4, 28, 5, 19, 40, 63, 16, 14, 33, 62, 11, 59, 59, 62, 33, 20, 61, 37, 31, 28, 19, 57, 41, 33, 49, 46, 40, 24, 9, 27, 31, 62, 15, 48, 10, 21, 8, 31, 53, 10, 22, 40, 19, 10, 24, 29, 13, 59, 29, 59, 65], 5821111701) == 378372260630\nassert solution.getMaxFunctionValue([11, 26, 7, 28, 29, 26, 1, 18, 26, 7, 3, 23, 16, 30, 19, 15, 4, 25, 20, 18, 19, 28, 3, 11, 27, 16, 16, 4, 16, 24, 12], 514203618) == 10798276016\nassert solution.getMaxFunctionValue([17, 15, 21, 2, 8, 20, 5, 8, 19, 0, 17, 1, 5, 22, 20, 1, 2, 7, 9, 16, 6, 13, 14, 18], 4081408261) == 42174552086\nassert solution.getMaxFunctionValue([15, 3, 19, 3, 45, 17, 45, 37, 8, 16, 9, 32, 4, 10, 20, 21, 17, 9, 29, 0, 49, 18, 20, 5, 9, 5, 3, 27, 8, 44, 13, 2, 48, 19, 47, 35, 21, 13, 12, 9, 5, 28, 31, 31, 22, 2, 20, 37, 18, 49], 237891075) == 11656662724\nassert solution.getMaxFunctionValue([36, 17, 32, 80, 15, 0, 40, 26, 47, 31, 69, 52, 82, 17, 7, 87, 28, 42, 47, 54, 86, 16, 2, 48, 12, 23, 52, 60, 59, 6, 21, 0, 58, 12, 51, 57, 10, 59, 57, 0, 61, 87, 2, 69, 31, 87, 97, 17, 54, 76, 19, 17, 25, 2, 32, 85, 61, 75, 56, 33, 5, 98, 46, 13, 96, 28, 77, 67, 46, 2, 14, 11, 79, 62, 31, 6, 17, 59, 58, 58, 97, 19, 57, 81, 88, 20, 48, 89, 53, 89, 38, 60, 48, 60, 30, 7, 70, 23, 86, 22], 9933813790) == 884109427399\nassert solution.getMaxFunctionValue([11, 8, 12, 32, 10, 4, 4, 0, 27, 10, 23, 9, 13, 13, 11, 8, 3, 28, 32, 11, 13, 7, 2, 5, 10, 17, 28, 30, 21, 21, 8, 26, 31], 6904857274) == 149605240972\nassert solution.getMaxFunctionValue([47, 51, 36, 0, 21, 20, 28, 8, 28, 2, 9, 39, 2, 16, 7, 2, 42, 8, 8, 18, 21, 7, 47, 1, 16, 22, 5, 13, 32, 17, 11, 0, 37, 11, 43, 50, 24, 2, 1, 2, 32, 45, 0, 7, 24, 48, 52, 23, 31, 36, 51, 25, 21, 6, 13, 18], 6756136061) == 190297832474\nassert solution.getMaxFunctionValue([10, 15, 2, 29, 17, 18, 14, 1, 14, 3, 29, 6, 27, 13, 11, 21, 23, 18, 28, 21, 14, 15, 23, 25, 16, 9, 10, 1, 17, 6], 1278457041) == 26847597889\nassert solution.getMaxFunctionValue([28, 10, 27, 20, 8, 26, 31, 3, 40, 23, 30, 12, 3, 22, 20, 17, 14, 5, 8, 14, 27, 7, 35, 2, 13, 36, 21, 21, 2, 7, 5, 29, 36, 9, 1, 5, 15, 20, 40, 0, 36], 5460127000) == 85177981272\nassert solution.getMaxFunctionValue([14, 16, 17, 27, 28, 34, 15, 10, 2, 15, 18, 19, 23, 29, 28, 13, 14, 32, 19, 30, 4, 38, 22, 29, 25, 30, 38, 28, 30, 26, 30, 23, 17, 3, 36, 11, 29, 0, 32], 6922708813) == 207681264420\nassert solution.getMaxFunctionValue([2, 3, 4, 0, 3, 1], 7452871331) == 16768960497\nassert solution.getMaxFunctionValue([46, 18, 32, 33, 30, 19, 48, 48, 26, 14, 6, 34, 34, 36, 24, 31, 10, 0, 26, 20, 44, 22, 20, 32, 5, 19, 20, 39, 6, 21, 14, 28, 45, 44, 29, 48, 47, 40, 17, 30, 39, 45, 36, 33, 34, 15, 14, 32, 30], 8901512622) == 252209524346\nassert solution.getMaxFunctionValue([89, 47, 24, 94, 30, 91, 28, 41, 59, 45, 14, 36, 85, 17, 62, 87, 87, 65, 78, 5, 90, 78, 30, 89, 70, 37, 20, 73, 24, 57, 82, 50, 89, 37, 93, 61, 64, 49, 58, 16, 11, 89, 69, 93, 35, 4, 19, 15, 6, 38, 37, 21, 8, 82, 9, 96, 73, 6, 98, 98, 28, 18, 97, 42, 4, 6, 32, 97, 24, 82, 34, 68, 34, 70, 43, 10, 84, 14, 34, 4, 0, 82, 14, 41, 82, 92, 69, 43, 7, 53, 23, 96, 84, 55, 91, 48, 89, 76, 8], 5156137437) == 356632839528\nassert solution.getMaxFunctionValue([6, 3, 45, 27, 22, 54, 55, 60, 13, 19, 37, 56, 44, 23, 9, 37, 21, 1, 53, 2, 2, 36, 21, 4, 57, 58, 60, 36, 48, 36, 29, 29, 60, 16, 47, 10, 57, 4, 28, 19, 24, 15, 23, 18, 27, 30, 19, 18, 49, 29, 28, 3, 33, 57, 2, 12, 22, 24, 54, 1, 54, 23], 2449695414) == 99212664324\nassert solution.getMaxFunctionValue([4, 4, 21, 14, 1, 1, 13, 14, 0, 12, 11, 21, 1, 13, 8, 3, 5, 19, 6, 15, 10, 15], 4043848897) == 52570035674\nassert solution.getMaxFunctionValue([7, 15, 75, 6, 41, 81, 54, 14, 10, 9, 72, 46, 70, 71, 20, 64, 14, 62, 12, 15, 33, 32, 75, 5, 21, 55, 43, 47, 28, 61, 59, 64, 39, 35, 33, 34, 70, 62, 47, 7, 6, 11, 56, 66, 32, 59, 73, 15, 71, 53, 66, 2, 56, 41, 42, 26, 66, 69, 15, 67, 80, 51, 22, 71, 21, 57, 83, 3, 53, 10, 56, 37, 78, 52, 15, 35, 42, 10, 25, 10, 26, 20, 39, 4], 2451699613) == 117681581528\nassert solution.getMaxFunctionValue([63, 79, 13, 76, 70, 8, 87, 75, 5, 55, 61, 42, 18, 26, 12, 72, 45, 13, 84, 46, 28, 62, 18, 78, 46, 50, 84, 3, 66, 74, 26, 82, 92, 72, 90, 59, 11, 52, 75, 50, 46, 28, 82, 45, 28, 10, 2, 83, 90, 2, 9, 89, 56, 25, 51, 52, 70, 60, 76, 25, 25, 1, 58, 74, 2, 60, 82, 74, 76, 19, 43, 82, 8, 58, 4, 80, 72, 9, 63, 51, 54, 31, 52, 68, 18, 90, 11, 16, 83, 28, 11, 28, 61, 30, 38, 89], 9695256917) == 507615951561\nassert solution.getMaxFunctionValue([14, 0, 6, 21, 14, 1, 12, 9, 4, 16, 2, 21, 16, 10, 9, 9, 15, 6, 22, 3, 3, 16, 10, 7, 0], 5547801533) == 73970687132\nassert solution.getMaxFunctionValue([17, 27, 13, 28, 7, 25, 19, 25, 28, 26, 26, 24, 26, 12, 15, 9, 8, 15, 30, 20, 13, 22, 11, 14, 4, 6, 21, 1, 30, 17, 14, 7], 4017050431) == 64890814694\nassert solution.getMaxFunctionValue([0, 1, 1], 1378649561) == 1378649563\nassert solution.getMaxFunctionValue([9, 0, 5, 4, 10, 4, 12, 13, 0, 13, 1, 11, 2, 9, 2], 6270845441) == 68979299862\nassert solution.getMaxFunctionValue([28, 5, 28, 17, 29, 9, 8, 40, 2, 14, 13, 14, 26, 16, 4, 34, 32, 37, 6, 14, 37, 12, 28, 26, 38, 32, 27, 21, 36, 34, 15, 25, 13, 35, 39, 12, 7, 14, 2, 37, 41, 18], 3942619501) == 103165210326\nassert solution.getMaxFunctionValue([53, 28, 0, 75, 9, 80, 25, 30, 79, 43, 84, 61, 64, 67, 46, 76, 85, 8, 68, 41, 21, 13, 59, 55, 73, 33, 4, 84, 3, 23, 46, 14, 50, 64, 55, 9, 22, 39, 52, 9, 35, 4, 79, 31, 65, 59, 51, 30, 11, 50, 65, 39, 50, 82, 11, 24, 62, 44, 25, 8, 32, 72, 23, 9, 54, 53, 62, 15, 46, 84, 33, 30, 85, 20, 58, 67, 6, 67, 46, 26, 60, 30, 49, 76, 83, 42], 7628362577) == 456176082185\nassert solution.getMaxFunctionValue([46, 24, 9, 40, 47, 46, 32, 41, 50, 54, 6, 49, 47, 53, 18, 24, 51, 52, 25, 45, 8, 19, 45, 51, 43, 37, 24, 32, 40, 31, 4, 52, 44, 23, 36, 8, 2, 46, 32, 2, 15, 15, 9, 6, 42, 46, 41, 51, 48, 42, 42, 42, 12, 37, 53, 51], 717905159) == 34459447680\nassert solution.getMaxFunctionValue([13, 11, 39, 28, 25, 28, 35, 19, 29, 17, 1, 20, 24, 13, 37, 6, 4, 3, 21, 37, 13, 35, 41, 18, 32, 28, 0, 1, 42, 42, 13, 40, 15, 9, 7, 25, 10, 21, 26, 14, 7, 35, 9, 33], 239119497) == 4734566143\nassert solution.getMaxFunctionValue([13, 17, 14, 1, 3, 16, 11, 5, 7, 12, 13, 0, 11, 14, 17, 17, 17, 14, 2, 4, 18], 2292127061) == 35527969463\nassert solution.getMaxFunctionValue([1, 18, 5, 11, 10, 7, 25, 1, 16, 2, 15, 0, 16, 0, 16, 13, 24, 24, 23, 10, 12, 7, 10, 7, 16, 18, 7, 25], 2372712673) == 47454253481\nassert solution.getMaxFunctionValue([72, 35, 23, 64, 60, 11, 46, 14, 28, 32, 21, 28, 29, 9, 50, 0, 53, 57, 36, 13, 75, 47, 15, 3, 29, 31, 36, 36, 32, 2, 74, 54, 12, 9, 7, 53, 16, 7, 42, 59, 16, 56, 6, 61, 45, 4, 57, 24, 37, 51, 62, 73, 12, 12, 19, 46, 29, 19, 42, 35, 29, 73, 23, 5, 60, 71, 70, 74, 50, 56, 64, 21, 72, 35, 42, 6], 4188139051) == 301546011744\nassert solution.getMaxFunctionValue([29, 35, 21, 33, 30, 16, 17, 4, 37, 13, 17, 15, 28, 40, 21, 18, 12, 25, 25, 17, 33, 30, 1, 3, 23, 29, 26, 12, 26, 24, 37, 13, 29, 9, 34, 42, 41, 2, 10, 11, 22, 7, 13], 9070981143) == 308413358896\nassert solution.getMaxFunctionValue([11, 14, 23, 40, 46, 21, 8, 4, 14, 4, 6, 43, 49, 2, 9, 42, 26, 37, 15, 19, 10, 3, 45, 16, 37, 1, 19, 11, 35, 40, 17, 13, 37, 38, 35, 12, 12, 46, 8, 48, 15, 38, 36, 47, 30, 14, 10, 33, 43, 13], 9926114921) == 188596183593\nassert solution.getMaxFunctionValue([33, 22, 9, 11, 32, 35, 12, 18, 29, 5, 12, 0, 4, 17, 26, 36, 11, 27, 28, 13, 22, 31, 11, 35, 10, 14, 26, 27, 10, 20, 20, 12, 32, 37, 30, 5, 12, 27], 2211513760) == 70768440352\nassert solution.getMaxFunctionValue([26, 4, 20, 14, 1, 22, 17, 18, 0, 25, 10, 2, 27, 20, 9, 2, 21, 16, 20, 5, 5, 1, 6, 0, 18, 17, 12, 26, 26], 9373744294) == 203097793069\nassert solution.getMaxFunctionValue([5, 16, 8, 7, 7, 15, 16, 11, 2, 2, 10, 2, 7, 3, 14, 13, 14], 2218756327) == 31062588594\nassert solution.getMaxFunctionValue([11, 9, 39, 6, 21, 6, 21, 4, 7, 42, 5, 22, 42, 30, 4, 42, 35, 1, 16, 5, 10, 3, 3, 10, 4, 8, 4, 37, 13, 19, 12, 26, 13, 32, 22, 32, 24, 25, 23, 21, 36, 2, 0, 38], 5331753939) == 53317539513\nassert solution.getMaxFunctionValue([65, 24, 61, 21, 70, 87, 54, 45, 61, 22, 7, 100, 79, 55, 40, 16, 13, 17, 61, 62, 73, 33, 70, 95, 21, 30, 62, 92, 13, 6, 77, 61, 64, 4, 96, 91, 39, 62, 50, 86, 41, 69, 90, 8, 25, 1, 53, 19, 18, 25, 36, 69, 34, 42, 25, 93, 93, 71, 17, 30, 57, 63, 48, 89, 5, 96, 94, 18, 0, 73, 12, 49, 65, 78, 16, 21, 15, 40, 3, 80, 62, 35, 38, 32, 36, 24, 60, 5, 68, 1, 26, 40, 64, 31, 100, 28, 15, 45, 79, 46, 95], 1333814070) == 61355447311\nassert solution.getMaxFunctionValue([47, 6, 64, 10, 29, 28, 6, 76, 10, 3, 48, 70, 48, 61, 5, 45, 32, 27, 70, 35, 55, 49, 37, 57, 54, 15, 15, 38, 42, 18, 15, 14, 28, 65, 9, 51, 5, 48, 13, 17, 10, 77, 7, 21, 34, 23, 7, 57, 45, 41, 3, 44, 36, 61, 11, 36, 1, 66, 73, 11, 44, 59, 12, 1, 63, 5, 36, 3, 8, 41, 4, 55, 14, 61, 0, 57, 50, 74, 8, 68, 72], 3558079731) == 126057682032\nassert solution.getMaxFunctionValue([9, 17, 18, 21, 23, 12, 24, 21, 5, 21, 20, 12, 11, 17, 3, 3, 8, 22, 1, 1, 6, 19, 4, 15, 6, 4], 2641216637) == 39618249570\nassert solution.getMaxFunctionValue([69, 69, 27, 67, 7, 43, 44, 45, 35, 53, 46, 13, 32, 0, 12, 23, 15, 22, 50, 53, 33, 50, 20, 1, 52, 58, 2, 3, 60, 45, 32, 40, 70, 9, 71, 48, 68, 26, 44, 56, 65, 62, 43, 68, 15, 40, 54, 47, 48, 25, 52, 6, 60, 18, 34, 48, 25, 7, 41, 65, 39, 33, 4, 35, 51, 68, 57, 1, 17, 69, 55, 57], 2884465041) == 199028087898\nassert solution.getMaxFunctionValue([11, 43, 56, 14, 4, 58, 28, 22, 6, 5, 49, 65, 52, 35, 48, 14, 14, 49, 33, 61, 25, 13, 18, 62, 56, 56, 60, 35, 8, 31, 10, 31, 27, 21, 46, 52, 51, 61, 27, 59, 65, 55, 1, 18, 44, 24, 13, 54, 51, 10, 0, 54, 30, 33, 42, 12, 65, 35, 38, 34, 8, 60, 24, 12, 10, 0], 7792737913) == 342880468216\nassert solution.getMaxFunctionValue([34, 17, 26, 84, 90, 25, 25, 83, 17, 19, 94, 22, 8, 10, 26, 20, 67, 81, 51, 21, 33, 90, 22, 20, 16, 51, 5, 88, 52, 43, 40, 77, 10, 51, 12, 41, 15, 73, 1, 87, 69, 39, 46, 47, 57, 71, 13, 62, 56, 66, 59, 37, 14, 0, 35, 33, 0, 42, 13, 37, 60, 85, 29, 88, 28, 46, 50, 85, 39, 79, 35, 22, 17, 58, 21, 53, 80, 10, 38, 45, 9, 81, 29, 82, 64, 14, 14, 29, 61, 72, 16, 56, 82, 62, 60], 1330474315) == 107768419596\nassert solution.getMaxFunctionValue([66, 33, 40, 76, 4, 41, 12, 70, 12, 63, 37, 35, 2, 5, 25, 3, 41, 66, 61, 4, 28, 12, 56, 54, 66, 15, 59, 60, 51, 56, 27, 49, 55, 10, 15, 25, 27, 36, 10, 43, 59, 39, 44, 37, 5, 18, 12, 10, 22, 15, 66, 25, 71, 68, 53, 49, 24, 16, 1, 18, 74, 74, 37, 71, 49, 15, 42, 44, 3, 49, 19, 49, 15, 11, 45, 8, 20, 43, 2, 25], 8267055389) == 409219241841\nassert solution.getMaxFunctionValue([3, 4, 2, 5, 0, 2], 8188518688) == 16377037382\nassert solution.getMaxFunctionValue([9, 2, 1, 9, 4, 5, 1, 3, 10, 8, 5], 8593408302) == 42967041527\nassert solution.getMaxFunctionValue([10, 34, 9, 37, 37, 5, 31, 28, 18, 10, 31, 10, 12, 29, 37, 2, 10, 33, 30, 0, 21, 25, 19, 27, 37, 31, 24, 25, 35, 34, 2, 29, 13, 13, 6, 13, 22, 34, 19, 18, 1], 5637331021) == 140933275571\nassert solution.getMaxFunctionValue([19, 32, 16, 14, 22, 10, 16, 1, 13, 0, 5, 33, 29, 36, 19, 1, 23, 29, 21, 18, 1, 16, 20, 21, 22, 13, 13, 24, 21, 25, 1, 21, 31, 23, 18, 10, 4], 4618836180) == 92376723640\nassert solution.getMaxFunctionValue([10, 13, 18, 26, 32, 18, 33, 31, 13, 8, 27, 23, 9, 31, 17, 27, 19, 33, 23, 2, 23, 3, 5, 18, 17, 32, 33, 10, 7, 33, 23, 8, 8, 32], 6293696968) == 129020787874\nassert solution.getMaxFunctionValue([1, 11, 14, 41, 40, 2, 22, 23, 18, 42, 28, 7, 30, 9, 5, 22, 18, 40, 37, 36, 36, 30, 19, 30, 21, 16, 31, 15, 11, 14, 3, 21, 16, 30, 20, 45, 0, 15, 11, 32, 41, 43, 46, 23, 10, 17, 11], 3185951564) == 89206643866\nassert solution.getMaxFunctionValue([48, 15, 23, 17, 37, 44, 78, 56, 70, 44, 61, 63, 37, 77, 5, 21, 65, 23, 28, 33, 14, 77, 80, 48, 22, 80, 48, 55, 16, 75, 31, 0, 64, 11, 0, 70, 1, 48, 62, 78, 2, 26, 33, 77, 39, 48, 72, 48, 33, 57, 77, 68, 11, 46, 44, 66, 42, 34, 74, 70, 25, 9, 77, 71, 1, 49, 1, 60, 12, 28, 4, 22, 47, 80, 52, 77, 55, 56, 20, 26, 71, 5, 65, 68, 49], 5327723402) == 307232049624\nassert solution.getMaxFunctionValue([1, 1], 8025502557) == 8025502558\nassert solution.getMaxFunctionValue([26, 2, 46, 27, 39, 0, 21, 23, 52, 8, 9, 12, 51, 3, 14, 17, 44, 10, 0, 38, 26, 24, 15, 1, 48, 52, 25, 6, 5, 8, 30, 52, 7, 1, 3, 27, 32, 44, 19, 33, 36, 10, 1, 48, 34, 20, 48, 34, 52, 41, 33, 3, 23], 9387472938) == 281624188170\nassert solution.getMaxFunctionValue([83, 16, 49, 52, 17, 30, 35, 77, 42, 89, 12, 84, 33, 54, 57, 48, 41, 62, 90, 41, 64, 5, 82, 27, 45, 35, 3, 13, 31, 60, 13, 9, 57, 9, 3, 31, 56, 76, 74, 43, 57, 4, 71, 88, 70, 58, 25, 7, 80, 30, 40, 86, 85, 55, 72, 12, 52, 81, 23, 19, 44, 3, 87, 10, 59, 77, 56, 49, 92, 73, 58, 28, 39, 67, 1, 9, 53, 7, 3, 63, 6, 94, 90, 74, 61, 40, 56, 23, 50, 3, 83, 31, 67, 23, 42], 8076841990) == 423723556898\nassert solution.getMaxFunctionValue([71, 52, 48, 28, 24, 45, 40, 60, 79, 17, 47, 14, 16, 51, 19, 67, 66, 19, 76, 37, 17, 33, 71, 70, 49, 11, 30, 4, 21, 66, 14, 32, 75, 16, 44, 4, 74, 37, 64, 13, 27, 48, 24, 81, 9, 24, 4, 69, 45, 72, 40, 56, 1, 37, 15, 67, 15, 70, 77, 77, 65, 67, 65, 53, 74, 23, 19, 15, 9, 23, 28, 0, 65, 78, 44, 7, 42, 9, 22, 64, 73, 10], 3562493388) == 146062228975\nassert solution.getMaxFunctionValue([60, 33, 9, 42, 30, 7, 19, 25, 56, 11, 49, 47, 68, 15, 55, 56, 30, 67, 27, 4, 8, 22, 66, 28, 71, 22, 63, 69, 6, 46, 58, 9, 6, 59, 39, 68, 68, 29, 39, 46, 52, 59, 2, 22, 62, 72, 57, 72, 22, 52, 1, 13, 13, 37, 13, 10, 22, 16, 18, 47, 37, 37, 25, 60, 11, 39, 38, 4, 55, 29, 13, 25, 21, 31], 1315222010) == 51147522710\nassert solution.getMaxFunctionValue([4, 12, 0, 34, 63, 12, 10, 23, 54, 54, 48, 4, 0, 55, 54, 9, 69, 18, 58, 61, 47, 67, 58, 61, 13, 59, 9, 60, 9, 56, 53, 38, 34, 31, 35, 63, 32, 19, 67, 71, 9, 62, 36, 11, 57, 46, 18, 13, 52, 19, 3, 61, 24, 7, 51, 35, 40, 50, 32, 22, 18, 56, 8, 40, 10, 65, 49, 8, 45, 13, 0, 16], 4966902339) == 322848652100\nassert solution.getMaxFunctionValue([28, 7, 7, 5, 10, 3, 28, 31, 8, 28, 29, 21, 16, 18, 16, 20, 8, 29, 5, 8, 16, 24, 20, 10, 23, 25, 27, 20, 5, 8, 13, 30], 586411362) == 14660284075\nassert solution.getMaxFunctionValue([12, 23, 16, 16, 13, 13, 19, 4, 8, 23, 17, 14, 11, 1, 18, 17, 19, 17, 17, 14, 4, 8, 16, 9, 22], 3704766451) == 62981029695\nassert solution.getMaxFunctionValue([29, 68, 40, 68, 59, 80, 36, 24, 53, 62, 51, 25, 83, 52, 61, 0, 79, 68, 41, 30, 77, 73, 13, 68, 78, 76, 29, 52, 66, 76, 78, 11, 43, 60, 64, 42, 17, 12, 47, 61, 60, 18, 69, 31, 44, 64, 26, 20, 82, 74, 30, 39, 74, 84, 50, 15, 26, 11, 34, 9, 66, 9, 50, 57, 59, 10, 53, 74, 81, 60, 47, 29, 1, 77, 39, 16, 1, 21, 50, 37, 49, 82, 43, 18, 15, 28], 3457297016) == 197065929969\nassert solution.getMaxFunctionValue([8, 2, 4, 38, 3, 15, 18, 18, 30, 38, 5, 22, 25, 36, 16, 26, 25, 36, 0, 9, 33, 15, 27, 19, 9, 11, 3, 8, 25, 16, 5, 26, 39, 15, 4, 13, 13, 19, 16, 29, 31, 8], 3890739880) == 95323127096\nassert solution.getMaxFunctionValue([42, 68, 68, 40, 68, 44, 63, 64, 75, 91, 38, 21, 50, 74, 74, 51, 84, 27, 76, 41, 79, 42, 7, 76, 15, 87, 91, 62, 72, 18, 56, 49, 31, 75, 50, 5, 70, 20, 87, 31, 36, 66, 31, 63, 43, 39, 20, 70, 68, 90, 0, 29, 37, 90, 69, 45, 38, 39, 26, 51, 30, 89, 35, 54, 6, 37, 14, 61, 37, 15, 18, 90, 55, 0, 15, 72, 88, 30, 65, 21, 54, 17, 8, 27, 7, 90, 8, 13, 18, 14, 38, 9], 1662885837) == 100881740866\nassert solution.getMaxFunctionValue([77, 61, 66, 54, 6, 28, 74, 67, 40, 42, 84, 61, 50, 38, 13, 87, 8, 1, 42, 31, 22, 24, 51, 32, 6, 78, 19, 62, 58, 82, 53, 73, 52, 56, 10, 26, 34, 60, 56, 60, 33, 8, 18, 35, 82, 54, 45, 77, 3, 80, 49, 79, 3, 16, 1, 11, 33, 37, 11, 31, 53, 21, 84, 2, 13, 74, 60, 1, 63, 21, 23, 16, 81, 46, 72, 44, 43, 21, 75, 6, 39, 1, 10, 45, 40, 42, 6, 33], 7264798733) == 323283543753\nassert solution.getMaxFunctionValue([4, 46, 35, 60, 57, 52, 63, 71, 71, 38, 49, 10, 91, 34, 58, 28, 71, 89, 91, 30, 9, 2, 25, 61, 92, 48, 44, 35, 35, 70, 51, 21, 36, 20, 39, 28, 45, 9, 13, 58, 42, 21, 85, 63, 77, 46, 77, 78, 2, 80, 71, 67, 9, 16, 89, 27, 60, 19, 3, 3, 91, 9, 17, 78, 24, 70, 22, 17, 9, 12, 3, 87, 44, 24, 83, 5, 87, 22, 85, 53, 85, 32, 76, 50, 48, 61, 81, 67, 92, 9, 9, 55, 1], 3529802221) == 111188770363\nassert solution.getMaxFunctionValue([22, 5, 57, 28, 40, 43, 40, 17, 54, 24, 20, 34, 50, 1, 51, 51, 2, 44, 32, 4, 44, 1, 54, 31, 22, 53, 8, 18, 5, 55, 59, 50, 38, 12, 33, 20, 14, 25, 33, 32, 44, 49, 7, 18, 46, 51, 15, 53, 2, 21, 38, 4, 12, 48, 51, 34, 46, 21, 51, 48, 28, 10], 3723189437) == 124106314643\nassert solution.getMaxFunctionValue([3, 5, 12, 9, 8, 1, 5, 9, 1, 6, 2, 12, 4, 13], 738771351) == 9604027576\nassert solution.getMaxFunctionValue([20, 10, 36, 0, 18, 52, 67, 50, 63, 39, 41, 55, 39, 13, 66, 2, 25, 5, 59, 59, 15, 68, 46, 32, 5, 12, 6, 43, 40, 42, 30, 38, 8, 15, 60, 71, 13, 44, 71, 11, 71, 63, 33, 15, 42, 6, 53, 25, 22, 29, 48, 50, 69, 51, 41, 45, 30, 22, 53, 18, 40, 1, 22, 54, 46, 18, 51, 45, 46, 30, 64, 69, 48, 51, 26], 6420267217) == 338134073493\nassert solution.getMaxFunctionValue([11, 7, 5, 1, 9, 3, 4, 7, 1, 4, 7, 0], 3431851616) == 24022961322\nassert solution.getMaxFunctionValue([7, 0, 5, 7, 13, 11, 14, 3, 13, 4, 13, 7, 9, 9, 2, 6, 16], 1978377496) == 31654039952\nassert solution.getMaxFunctionValue([0, 1, 3, 2], 7608766656) == 19021916643\nassert solution.getMaxFunctionValue([64, 2, 81, 54, 16, 55, 54, 24, 3, 65, 33, 7, 41, 49, 48, 51, 16, 20, 23, 60, 85, 65, 65, 17, 59, 59, 14, 84, 48, 52, 46, 60, 8, 81, 26, 21, 84, 20, 35, 75, 0, 71, 10, 59, 65, 55, 33, 57, 56, 47, 47, 75, 23, 77, 79, 24, 5, 56, 14, 23, 0, 79, 73, 54, 52, 84, 14, 9, 74, 49, 83, 13, 4, 3, 54, 62, 40, 81, 60, 47, 32, 80, 29, 50, 45, 13], 5085237966) == 199497797294\nassert solution.getMaxFunctionValue([3, 28, 42, 41, 18, 6, 53, 2, 37, 39, 23, 47, 7, 58, 68, 46, 65, 11, 3, 49, 42, 18, 29, 10, 56, 54, 16, 13, 36, 43, 61, 3, 57, 47, 43, 5, 23, 53, 46, 23, 29, 9, 15, 0, 40, 5, 60, 56, 19, 2, 22, 19, 51, 45, 58, 27, 71, 8, 13, 34, 53, 61, 63, 36, 12, 68, 64, 1, 29, 59, 62, 59, 13], 8147998865) == 497027930826",
  "inefficient_solution": "class Solution:\n    def getMaxFunctionValue(self, receiver: List[int], k: int) -> int:\n        n = len(receiver)\n        f = [[] for _ in range(n)]\n        g = [[] for _ in range(n)]\n        for i, x in enumerate(receiver):\n            f[i] = [x]\n            g[i] = [i]\n        for _ in range(k):\n            new_f, new_g = [], []\n            for i in range(n):\n                new_f.append([])\n                new_g.append([])\n                for j in f[i]:\n                    new_f[i].append(j)\n                    new_f[i].append(receiver[j])\n                for j in g[i]:\n                    new_g[i].append(j)\n                    new_g[i].append(receiver[j])\n            f = new_f\n            g = new_g\n        ans = 0\n        for i in range(n):\n            t = 0\n            p = i\n            for _ in range(k):\n                t += g[p][-1]\n                p = f[p][-1]\n            ans = max(ans, t + p)\n        return ans",
  "is_python": true
}