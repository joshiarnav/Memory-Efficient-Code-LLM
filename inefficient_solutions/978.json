{
  "problem_idx": 978,
  "task_name": "Longest Turbulent Subarray",
  "markdown_description": "\nGiven an integer array `arr`, return *the length of a maximum size turbulent subarray of* `arr`.\n\n\nA subarray is **turbulent** if the comparison sign flips between each adjacent pair of elements in the subarray.\n\n\nMore formally, a subarray `[arr[i], arr[i + 1], ..., arr[j]]` of `arr` is said to be turbulent if and only if:\n\n\n* For `i <= k < j`:\n\t+ `arr[k] > arr[k + 1]` when `k` is odd, and\n\t+ `arr[k] < arr[k + 1]` when `k` is even.\n* Or, for `i <= k < j`:\n\t+ `arr[k] > arr[k + 1]` when `k` is even, and\n\t+ `arr[k] < arr[k + 1]` when `k` is odd.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** arr = [9,4,2,10,7,8,8,1,9]\n**Output:** 5\n**Explanation:** arr[1] > arr[2] < arr[3] > arr[4] < arr[5]\n\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** arr = [4,8,12,16]\n**Output:** 2\n\n```\n\n**Example 3:**\n\n\n\n```\n\n**Input:** arr = [100]\n**Output:** 1\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `1 <= arr.length <= 4 * 104`\n* `0 <= arr[i] <= 109`\n\n\n",
  "canonical_solution": "class Solution:\n    def maxTurbulenceSize(self, arr: List[int]) -> int:\n        ans = f = g = 1\n        for a, b in pairwise(arr):\n            ff = g + 1 if a < b else 1\n            gg = f + 1 if a > b else 1\n            f, g = ff, gg\n            ans = max(ans, f, g)\n        return ans\n",
  "test_case_generator": "\nimport random\n\nclass Solution:\n    def maxTurbulenceSize(self, arr):\n        ans = f = g = 1\n        for a, b in pairwise(arr):\n            ff = g + 1 if a < b else 1\n            gg = f + 1 if a > b else 1\n            f, g = ff, gg\n            ans = max(ans, f, g)\n        return ans\n\ndef generate_test_case():\n    solution = Solution()\n\n    # Generate a random number list\n    arr = random.sample(range(1, 1001), random.randint(1, 100))\n\n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.maxTurbulenceSize(arr)\n\n    return arr, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        arr, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.maxTurbulenceSize(arr) == expected_result\n        print(f\"assert solution.maxTurbulenceSize({arr}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.maxTurbulenceSize({arr}) == {expected_result}\")\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.maxTurbulenceSize([487, 603, 378, 756, 407, 527, 792, 851, 980, 708, 891, 352, 641, 661, 161, 314, 677, 382, 534, 73, 129, 140, 722, 967, 92, 412, 64, 471, 947, 779, 486, 992, 718, 219, 936, 719, 336, 231, 52, 545, 415, 533, 653, 777, 524, 757, 915, 995, 874, 820, 559, 18, 724, 658, 355, 304, 353, 72, 864, 752, 157, 916, 251, 287, 870, 597, 522, 282, 460, 896, 368, 725, 984, 176, 535, 398, 695, 482, 867, 963, 775, 780, 940, 401, 863, 217, 1000, 455, 738, 13, 60]) == 10\nassert solution.maxTurbulenceSize([522, 835, 669, 30, 676, 994, 566, 365, 573, 270, 468, 606, 134, 756, 135, 181, 316, 682, 970, 940, 540, 661, 309, 307, 562, 933, 689, 336, 503, 766, 592, 684, 222, 674, 908, 193, 209, 586, 830, 965, 183, 658, 582, 255, 597, 62, 352, 555, 928, 127, 510, 37, 842, 257, 630, 706, 433, 426, 275, 883, 240, 969, 173, 728, 880, 495, 735, 548, 525, 188, 328, 79, 947, 833, 57, 633, 892, 591, 659, 799, 909, 455, 490, 216, 119, 537, 999, 371, 805, 65, 351, 301, 654, 546, 213, 81, 838]) == 9\nassert solution.maxTurbulenceSize([504, 695, 337, 440, 11, 208, 625, 940, 458, 667, 147, 78, 660, 608, 412]) == 6\nassert solution.maxTurbulenceSize([460, 10, 168, 266, 364, 853, 151, 30, 821, 360, 977, 588, 107, 14, 636, 361, 353]) == 6\nassert solution.maxTurbulenceSize([137, 953, 383, 742, 330, 593, 136, 641, 388, 731, 143, 746, 852, 826, 539, 563, 202, 720, 100, 495, 436, 747, 101, 297, 232, 938, 428, 272, 11, 359, 758, 677, 969, 961, 1000, 548, 925, 393, 788, 349, 367, 38, 353, 654, 939, 529, 801, 950, 225, 82, 316, 866, 659, 142, 222, 440, 378, 199, 317, 160, 701, 200, 130, 362, 33, 743, 752, 201, 117, 376, 447, 398, 351, 607, 241, 538, 412, 44, 818, 986, 522, 124, 333, 664, 175, 496]) == 14\nassert solution.maxTurbulenceSize([281]) == 1\nassert solution.maxTurbulenceSize([669, 974, 649, 404, 337, 558, 74, 365, 423, 22, 918, 405, 584, 514, 675, 306, 312, 690, 81, 938, 798, 578, 522, 136, 817, 170, 57, 462, 515, 921, 624, 605, 835, 162]) == 10\nassert solution.maxTurbulenceSize([845, 510, 596, 577, 412, 48, 902, 672, 557, 9, 63, 361, 278, 803, 994, 872, 641, 804, 145, 541, 979, 855, 4, 476, 347, 782, 490, 998, 967, 57, 159, 181, 172, 784, 502, 649, 267, 326, 496, 626, 358, 25, 374, 615, 598, 583, 683, 365, 299, 77, 633, 892, 780, 433]) == 8\nassert solution.maxTurbulenceSize([832, 36, 82, 639, 9, 611, 186, 183, 906, 705, 287, 100, 169, 275, 313, 513, 555, 596, 717, 559, 142, 481, 369, 303, 463, 830, 924, 74, 366, 166, 838, 85, 288]) == 8\nassert solution.maxTurbulenceSize([681, 191, 13, 222, 366, 236, 2, 311, 313, 592, 897, 827, 715, 918, 894, 380, 955, 520, 300, 968, 450, 153, 862, 513, 963, 864, 810, 930, 489, 244, 327, 428, 332, 206, 440, 342, 754, 842, 519, 654, 333, 644, 773, 57, 308, 788, 903, 957, 949, 992, 256, 742, 389, 245, 873, 946, 794, 253, 429, 591, 273, 614]) == 7\nassert solution.maxTurbulenceSize([857, 474, 691, 234, 181, 241, 73, 472, 229, 727, 1000, 622, 939, 783, 162, 69, 746, 594, 705, 864, 30, 96, 169, 251, 895, 462, 760, 302, 2]) == 7\nassert solution.maxTurbulenceSize([873, 862, 449, 212, 487, 527, 740, 331, 571, 828, 952, 513, 272, 243, 11, 518]) == 4\nassert solution.maxTurbulenceSize([704, 273, 190, 302, 18, 711, 193, 292, 933, 346, 227, 37, 569, 820, 994, 808, 35, 247, 216, 615, 76, 127, 278, 63, 840, 235, 848]) == 7\nassert solution.maxTurbulenceSize([74, 669, 427, 282, 709, 19, 623, 853, 210, 165, 522, 331, 728, 896, 584, 614, 284, 229, 99, 952, 982, 153, 880, 306, 141, 759]) == 5\nassert solution.maxTurbulenceSize([468, 903, 289, 828, 91, 416, 26, 726, 525, 981, 122, 552, 587, 700, 550, 940, 813, 847, 77, 999, 890, 674, 171, 483, 845, 267, 390, 341, 913, 503, 209]) == 12\nassert solution.maxTurbulenceSize([421, 369, 687, 630, 949, 403, 501, 674, 858, 753, 477, 624, 28, 230, 686, 395, 603, 655, 789, 792, 430, 505, 927, 619, 152, 853, 580, 123, 330, 555, 195, 402, 386, 860, 153, 818, 537, 721, 340, 702, 695, 798, 381, 398, 433, 711, 773, 304, 539, 291, 799, 261, 357, 902, 228]) == 16\nassert solution.maxTurbulenceSize([765, 475, 566, 408, 359, 109, 116, 457, 426, 343, 456, 604, 760, 710, 342, 752, 791, 193, 662, 347, 492, 623, 706, 311, 809, 859, 333, 66, 377, 442, 734, 8, 68, 367, 485, 265, 228, 85, 587, 13, 364, 149, 830, 196, 215, 731, 21, 842, 34]) == 9\nassert solution.maxTurbulenceSize([27, 154, 172, 766, 978, 463, 365, 731, 998, 663, 451, 331, 435, 855, 338, 825, 949, 300, 841, 820, 874, 475, 217, 640, 847, 336, 397, 145, 430, 159, 758, 164, 649, 962, 211, 382, 20, 613, 204, 615, 575, 445, 175, 842, 17, 775, 288, 348, 915, 293, 212, 8, 992, 30, 233, 15, 156, 442, 499, 672, 289, 223, 429, 869, 405, 208, 630, 166, 735]) == 10\nassert solution.maxTurbulenceSize([125, 240, 681, 768, 562, 401, 586, 809, 672, 19, 798, 563, 304, 253, 491, 404, 180, 922, 579, 773, 752, 925, 172, 968, 693, 978, 48, 31, 793, 614, 705, 832, 646, 931, 3, 277, 588, 543, 908, 41, 754, 315, 580, 906, 110, 987, 127, 130, 97, 875, 69, 225, 121, 641, 408, 805]) == 14\nassert solution.maxTurbulenceSize([870, 368, 750, 700, 253, 505, 795, 920, 97, 931, 909, 469, 334, 951, 320, 286, 625, 255, 277, 348, 273, 715, 844, 804, 826, 904, 356, 180, 438, 342, 207, 695, 810, 317]) == 5\nassert solution.maxTurbulenceSize([427, 880, 391, 928, 87, 895, 925, 60, 307, 235, 63, 611, 868, 527, 232, 514, 849, 219, 804, 717, 818, 161, 657, 26, 766, 508, 551, 626, 555, 364, 247, 964, 983, 288, 505, 37, 44, 643, 716, 379, 775, 196, 794, 783, 22, 401, 187, 384, 339, 402, 693, 195, 36, 393, 483, 763, 390, 148, 531, 134, 492, 642, 778, 221, 633, 957, 652, 484, 908, 574, 931, 798, 336, 159, 17, 603, 869, 309, 889, 707, 230, 260, 784, 99, 62, 952, 185, 245, 9, 340, 11, 403, 140, 701, 947, 588, 447]) == 12\nassert solution.maxTurbulenceSize([743, 414, 369, 363, 153, 372, 692, 67, 194, 130, 994, 779, 829, 112, 20, 481, 407, 274, 171, 647, 266, 226, 959, 658, 11, 657, 884, 715, 307, 257, 789, 584, 279, 436, 860, 502, 565, 122, 452, 69, 202, 354, 958, 732, 224, 765, 795, 782, 687, 844, 332, 843, 373, 781, 573, 410, 589, 927, 555, 301, 222, 179, 84, 74, 271, 253, 835, 665, 405, 517, 92, 250, 975, 836, 81, 345, 256, 394, 170, 634, 198, 820, 483, 578, 137, 688, 664, 339, 826, 404, 392]) == 14\nassert solution.maxTurbulenceSize([573, 263, 74, 901, 178, 506, 278, 410, 747, 297, 943, 753, 920, 186, 936, 977, 52, 891, 763, 714, 521, 321, 4, 804, 547, 871, 411, 379, 565, 59, 121, 440, 106, 979, 902, 104, 588]) == 8\nassert solution.maxTurbulenceSize([46, 776, 503, 235, 214, 864, 968, 372, 261, 524, 70, 123, 385, 865, 589, 423, 292, 639, 351, 682, 211, 982, 455, 690, 45]) == 10\nassert solution.maxTurbulenceSize([643, 480, 977, 758, 662, 466, 533, 370, 669, 81, 187, 975, 23, 944, 399, 995, 888, 773, 361, 258, 897, 295, 846, 668, 127, 817, 437, 741, 690, 9, 467, 135, 740, 638, 142, 586, 645, 836, 67, 241, 889, 391, 452, 1000, 451, 110, 149, 436, 615, 622, 752, 63, 292, 548, 95, 476, 347, 800, 388, 497, 705, 152, 574, 593, 815, 700, 103, 816, 318, 870, 312, 710, 220, 994, 534, 928, 747, 296, 881, 153, 571, 679, 630, 555, 602, 411, 607, 385, 366, 570, 144, 927, 594, 265, 557, 784, 774, 231, 336, 755]) == 12\nassert solution.maxTurbulenceSize([115, 221, 120, 626, 927, 270, 612, 758, 808, 61, 450, 916, 381, 128, 847, 387, 310, 129, 103, 711, 37, 163, 814, 347, 138, 291, 932, 761, 835, 370, 720, 529, 189, 646, 152, 954, 322, 536, 264, 563, 340, 737, 848, 901, 766, 614, 796, 409, 256, 953, 263, 979, 334, 460, 718, 82, 411, 638, 109, 361, 995, 861, 906, 234, 648, 38, 474, 826, 770, 424, 731, 489, 721, 50, 488, 592, 951, 430, 31, 150, 116, 354, 272, 131, 439, 750, 767, 395, 709, 672, 797, 768, 351, 349, 184]) == 11\nassert solution.maxTurbulenceSize([942, 402, 246, 899, 325, 750, 328, 964, 160, 837, 909, 918, 518, 564, 181, 790, 827, 426, 267, 543, 185, 783, 757, 326, 38, 940, 557, 694, 816]) == 9\nassert solution.maxTurbulenceSize([352, 582, 327, 405, 198, 949, 579, 746, 795, 771, 515, 511, 506, 297, 195, 765, 393, 550, 310, 895, 793, 704, 952, 858, 100, 292, 180, 875, 712, 611, 663, 653, 238, 459, 499, 417, 847, 510, 291, 488, 859, 861, 543, 947, 792, 53, 45, 271, 116, 927, 237, 656, 145, 204, 65, 321, 539, 202, 535, 761, 726, 30, 319, 881, 331, 99, 346, 254, 454, 710, 284, 911, 455, 325, 652, 75, 161, 747, 250, 18, 689, 819, 503, 394, 534, 315, 955, 370, 266, 739]) == 11\nassert solution.maxTurbulenceSize([697, 678, 708, 532, 882, 432, 89, 252, 129, 721, 842, 940, 634, 138, 388, 301, 305, 700, 673, 550, 378, 470, 150, 610, 970, 187, 248, 100, 137, 541, 31, 381, 557]) == 6\nassert solution.maxTurbulenceSize([127, 906]) == 2\nassert solution.maxTurbulenceSize([117, 720, 964, 804, 31, 170, 630, 20, 223, 526, 171, 757, 798, 843, 168, 543, 222, 354, 442, 10, 88, 444, 740, 817, 356, 640, 50, 796, 110, 107, 857, 65, 482, 672, 58, 505, 135, 553, 732, 123, 250, 775, 90, 169, 172, 394, 693, 705, 778, 492, 949, 258, 342, 767, 100, 629, 623, 186, 297, 305]) == 7\nassert solution.maxTurbulenceSize([105, 777, 23, 326, 967, 499, 322, 470, 342, 772, 829, 404, 770, 573, 28, 209, 949, 911, 592, 107, 910, 41, 993, 630, 624, 444, 288, 817, 942, 608, 890, 776, 836, 932, 80, 217, 889, 570, 347, 804, 437, 658, 887, 930, 796, 802, 938, 987, 934, 131, 946, 679, 556, 665, 521, 565, 548, 145, 339, 581, 214, 281, 848, 607, 367, 160, 418, 461, 230, 827, 142, 510, 723, 238, 749, 755, 654, 100, 52, 274, 832, 626, 450, 1000, 164, 572]) == 6\nassert solution.maxTurbulenceSize([839, 14, 359, 282, 245, 261, 637, 175, 680, 894, 144, 480, 253, 247, 417, 301, 948, 555, 350, 367, 494, 138]) == 6\nassert solution.maxTurbulenceSize([245, 405, 380, 550, 452, 353, 189, 267, 34, 56, 559, 287, 259, 422, 408, 157, 414, 325, 77, 186, 596, 160, 536, 101, 839, 776, 767, 492, 503, 52]) == 7\nassert solution.maxTurbulenceSize([211, 47, 713, 471, 247, 827, 511, 638, 588, 951, 316, 829, 305, 645, 40, 624, 191, 718, 66, 31, 562, 75, 778, 830, 290, 506, 776, 432, 225, 127, 63, 328, 812, 95, 570, 67, 799, 585, 403, 905, 784, 330, 387, 147, 385, 679, 116, 899, 396, 398, 88, 215, 459, 888, 390, 97, 926, 947, 583, 939, 843, 156, 550, 556, 239, 594, 106, 859, 229, 178, 439, 111, 764, 87, 547, 739, 618, 122, 808, 429, 281, 524, 182, 716, 159, 10, 898, 363, 107, 558, 41, 973, 346]) == 16\nassert solution.maxTurbulenceSize([583, 395, 652, 150, 151, 285, 139, 762, 99, 598, 526, 548, 618, 578, 988, 58, 530, 148, 810, 745, 801, 894, 191, 920, 903, 782, 430, 731, 96, 697, 56, 55, 847, 971, 531, 251, 350, 585, 824, 493, 572, 61, 798, 623, 673, 497, 670, 804, 484, 411, 185, 248, 5, 114, 677, 217, 257, 434, 401, 693, 799, 887, 781, 336, 949, 78, 346, 814, 882]) == 10\nassert solution.maxTurbulenceSize([116, 228, 559, 831, 97, 40, 535, 224, 614, 529, 271, 262, 118, 757, 136, 348, 267, 898, 254, 18, 377, 731, 458]) == 8\nassert solution.maxTurbulenceSize([123, 727, 641, 932, 557, 702, 719, 501, 163, 279, 786, 135, 127, 803, 133, 445, 376, 577, 766, 7, 779]) == 7\nassert solution.maxTurbulenceSize([565, 130, 187, 524, 739, 869, 921, 475, 332, 867, 895, 888, 231, 64, 843, 382, 838, 763, 70, 516, 173, 557, 906, 690, 957, 374, 810, 162, 366, 573, 931, 901, 794, 981, 769, 24, 619]) == 8\nassert solution.maxTurbulenceSize([873, 578, 348, 243, 97, 454, 201, 950, 924, 591, 287, 3, 704, 498, 177, 557, 563, 902, 189, 70, 667, 706, 533, 223, 194, 923, 803, 831, 954, 728, 239, 783, 822, 710, 79, 365, 655, 729, 142, 313, 639, 988, 224, 19, 337, 176]) == 6\nassert solution.maxTurbulenceSize([942, 508, 344, 254, 298, 505, 471, 618, 833, 443, 846, 919, 775, 986, 324, 950, 213, 592, 103, 350, 835, 163, 804, 781, 225, 431, 673, 135, 523, 398, 966, 263, 671, 74, 403, 262, 786, 611, 18, 60, 770, 162, 579, 525, 866, 889, 224, 417, 708, 35, 88, 485, 341, 46, 156, 794, 713, 533, 975, 66, 460, 407, 131, 282, 897, 316, 171, 956, 803, 234, 831, 378, 358, 893, 999, 293, 53, 190, 718, 650, 57, 132, 82, 621]) == 13\nassert solution.maxTurbulenceSize([783, 695, 900, 382, 44, 738, 879, 25, 845, 639, 261, 734, 72, 620, 661, 188, 244, 897, 487, 762, 49, 568, 910, 744, 858, 983, 976, 225, 65, 640, 720]) == 6\nassert solution.maxTurbulenceSize([739, 763, 230, 90, 215, 835, 789, 381, 352, 119, 916, 517, 448, 657, 34, 752, 98, 787, 724, 753, 623, 27, 483, 692, 511, 124, 681, 396, 600, 851, 523, 303]) == 10\nassert solution.maxTurbulenceSize([937, 769, 732, 793, 800, 275, 450, 73, 293, 596, 903, 525, 324, 736, 103, 363, 661, 993, 768, 458, 203, 225, 638, 992, 814, 473, 10, 320, 330, 977, 37, 179, 629, 934, 620, 738, 100, 770, 313, 451, 828, 598, 302, 345, 928, 796, 143, 233, 681, 711, 592, 718, 970, 336, 580, 645, 469, 855, 420, 871, 307, 522, 466, 326, 807, 931, 241, 685, 163, 764, 157, 347, 789, 236, 22, 524, 63, 119]) == 9\nassert solution.maxTurbulenceSize([116, 998, 193, 800, 813, 696, 73, 397, 479, 524, 470, 263, 153, 530, 637, 205, 915, 386, 532, 940, 466, 541, 727, 837, 982, 275, 881, 740, 204, 135, 255]) == 6\nassert solution.maxTurbulenceSize([430, 63, 443, 347, 341, 61, 321, 62, 414, 782, 553, 106, 215, 836, 711, 907, 949, 280, 801, 912, 268]) == 5\nassert solution.maxTurbulenceSize([311, 754, 102, 79, 509, 381, 164, 57, 496, 728, 441, 227, 108, 894, 976, 937, 681, 841, 436, 246, 291, 133, 483, 605, 815, 144, 965, 152, 917, 620, 231, 309, 504, 350, 808, 494, 127, 862, 721, 430, 478, 480, 637, 507, 365, 448, 364, 913, 238, 916, 398, 766, 666, 185, 78, 661, 519, 882, 708, 598, 864, 652, 649, 622, 387, 732, 621, 5, 967, 36, 777, 807, 20, 587, 115]) == 10\nassert solution.maxTurbulenceSize([830, 103, 502, 776, 622, 756, 374, 540, 166, 469, 43, 569, 583, 58, 120, 673, 246, 8, 311, 464, 216, 562, 41, 445, 365, 790, 610, 309, 737, 72, 122, 125, 851, 164, 378, 703, 751, 17, 597, 206, 680, 999, 393, 88, 542, 714, 949, 104, 862, 932, 302, 579, 966, 561, 653, 490, 328, 60, 204, 820, 441, 108, 314, 960, 188, 500, 399, 630, 772, 457, 322, 642, 19, 682, 142, 951, 744, 214, 930, 156, 472, 616, 135, 51, 740, 527, 493, 623, 193, 102, 4, 414]) == 10\nassert solution.maxTurbulenceSize([26, 309, 29, 617, 39, 335, 741, 224, 734, 359, 521, 603, 112, 620, 720, 134, 164, 717, 605, 985, 572, 536, 150, 902, 699, 486, 139, 493, 198, 2, 973, 89, 114, 564, 462, 979, 140, 330, 431, 668, 191, 870, 755, 995, 214, 575, 441, 626, 206, 689, 726, 318, 613, 523, 537, 672, 795, 40, 581, 176, 759, 826, 71, 972, 821, 949, 884, 529, 494, 252, 792, 937, 879, 499, 749, 310, 412, 901, 3, 654, 967, 143, 353, 994, 372, 721, 492, 466, 491, 371, 627, 518, 429, 427, 87, 582, 891, 463, 497, 444]) == 12\nassert solution.maxTurbulenceSize([26, 293, 442, 636, 91, 40, 131, 518, 624, 458, 868, 676, 55, 943, 598, 444, 194, 740, 817, 313, 561, 46, 574, 383, 513, 848, 569, 879, 356, 666, 70, 918, 531, 202, 148, 188, 546, 174, 13, 90, 384, 74, 134, 768, 723, 711, 395, 946, 181, 775, 758, 2, 369, 315, 178, 244, 301, 87, 319, 9, 626, 457, 545, 517, 867, 231, 988, 889, 783]) == 13\nassert solution.maxTurbulenceSize([759, 263, 786, 144, 835, 512, 97, 533, 308, 662, 817, 941, 297, 206, 275, 306, 605, 678, 403, 337, 51, 816, 875, 636, 194, 18, 617, 307, 983, 522, 519, 506, 694, 319, 437, 272, 944, 951, 974, 457, 4, 473, 730, 908, 508, 931, 150, 105, 743, 6, 71, 396, 934]) == 7\nassert solution.maxTurbulenceSize([541, 249, 713, 364, 173, 232, 479, 271, 125, 172, 441, 917, 384, 769, 14, 187, 140, 471, 69, 74, 55, 627, 860, 729, 226, 521, 160, 17, 962, 583]) == 12\nassert solution.maxTurbulenceSize([241, 637, 535, 796, 427, 501, 751, 151, 48, 485, 255, 87, 162, 2, 694, 226, 201]) == 6\nassert solution.maxTurbulenceSize([385, 791, 406, 719, 976]) == 4\nassert solution.maxTurbulenceSize([372, 382, 809, 47, 644, 901, 141, 179, 589, 453, 805, 449, 784, 264, 542, 79, 16, 437, 800, 757, 958, 626, 643, 88, 728, 485, 117, 679, 211, 950]) == 9\nassert solution.maxTurbulenceSize([539, 783, 473, 343, 774, 226, 39, 725, 95, 487, 964, 696, 718, 520, 351, 230, 375, 197, 709, 630, 843, 264, 327]) == 9\nassert solution.maxTurbulenceSize([10]) == 1\nassert solution.maxTurbulenceSize([712, 124, 279, 111, 974, 163, 492, 741, 148, 322, 603, 159, 60, 927, 207, 694, 196, 350, 104, 340, 898, 614, 216, 583, 193, 734, 711, 380, 794, 913, 382, 609, 526, 822, 864, 727, 791, 165, 295, 282, 395, 660, 36, 906, 813, 954, 435, 365, 94, 959, 136, 743, 247, 241, 626, 379, 635, 792, 728, 571, 113, 262, 231, 109, 268, 90, 366, 682, 956, 185, 638, 17, 692, 508, 895, 424, 467, 182, 284, 131, 908, 388, 631, 531, 121, 858, 180, 28, 442, 327, 129, 826, 189, 731, 416, 299, 788, 542, 362]) == 17\nassert solution.maxTurbulenceSize([189, 30, 157, 858, 540, 533, 461, 994, 878, 160, 235, 195, 403, 473, 367, 246, 424, 349, 489, 643, 36, 49, 214, 224, 67, 736, 269, 297, 406, 692, 433, 245, 689, 512, 892, 429, 651, 702, 653, 64, 947, 814, 762, 626, 639, 230, 670, 262, 645, 39, 437, 737, 146, 220, 793, 959, 501, 196, 305, 599, 482, 165, 257, 782, 254, 703, 277, 309, 359, 104, 856, 420, 796, 571, 618, 5, 283, 85, 592, 704, 152, 805, 764, 506, 167, 556, 44, 940, 107, 109, 418, 853, 948]) == 12\nassert solution.maxTurbulenceSize([826, 931, 376, 780, 177, 137, 606, 331, 238, 257, 484, 553, 821, 149, 772, 963, 406, 401, 974, 70, 425, 543, 868, 333, 583, 251, 754, 152, 298, 693, 206, 913, 701, 734, 686, 737, 287, 165, 663, 792, 394, 421, 708, 170, 381, 249, 952, 109, 532, 8, 938, 52, 459, 694]) == 12\nassert solution.maxTurbulenceSize([84, 729, 510, 524, 29, 652, 93, 789, 864, 362, 995, 842, 922, 628, 979, 367, 130, 269, 274, 228, 353, 919, 952, 662, 148, 934, 874, 755, 214, 301, 966, 209, 581, 517, 12, 783, 988, 200, 514, 179, 666, 645, 764, 872, 65, 31, 441, 822, 790, 164, 832, 802, 41, 337, 663, 717, 947, 998, 562, 150, 762, 170, 72, 507, 95, 697, 78, 117, 632, 229, 515, 781, 237, 969, 907, 543, 675, 277, 918, 3, 236, 553, 329, 750, 230, 181]) == 9\nassert solution.maxTurbulenceSize([998, 42, 661]) == 3\nassert solution.maxTurbulenceSize([899, 908, 545, 202, 503, 566, 475, 671, 319, 403, 852, 369, 328, 417, 808, 706, 723, 954, 8, 823, 305, 334, 221, 868, 790, 538, 592, 180, 379, 639, 293, 799, 802, 76, 90]) == 9\nassert solution.maxTurbulenceSize([254, 406, 188, 27, 368, 38, 396, 268, 767, 440, 702, 165, 486, 936, 110, 942, 619, 943, 999, 826, 183, 37, 970, 53, 174, 617, 725, 506, 415, 87, 512, 446, 888, 9, 484, 984, 577, 280, 150, 388, 633, 249, 995, 238, 6, 879, 220, 558, 971, 46, 775]) == 11\nassert solution.maxTurbulenceSize([109, 545, 84, 914, 73, 724, 9, 381, 917, 178, 469, 419, 85, 849, 37, 550, 556, 516, 104, 54, 417, 832, 130, 822, 360, 221, 779, 647, 444, 782, 115, 40, 123, 173, 281, 264, 514, 749, 949, 471, 687, 527, 236, 954, 910, 230, 760, 218, 395, 867, 352, 301, 875, 302, 927, 43, 766, 733, 382, 686, 794, 995, 225, 629, 517, 763, 79, 431, 554, 547, 337, 948, 729, 714, 551, 340, 69, 553, 497, 929, 468, 583, 406, 154, 219, 751, 726, 398, 770, 695, 159, 411, 459, 500, 748, 585, 438, 379]) == 8\nassert solution.maxTurbulenceSize([727, 653, 508, 794, 765, 732, 467, 232, 198, 160, 810, 390, 90, 549, 204, 924, 378, 567, 847, 230, 686, 203, 761, 615, 510, 659, 503, 131, 672, 483, 804, 724, 175, 940, 864, 985, 603, 396, 462, 290, 24, 150, 417, 775, 975, 917, 48, 153, 280, 392, 351, 571, 595, 789, 989, 67, 763]) == 7\nassert solution.maxTurbulenceSize([720, 901, 237, 869, 854, 51, 626, 582, 548, 553, 421, 666, 358, 200, 680, 920, 43, 799, 860, 189, 767, 123, 852, 949, 116, 284, 126, 206, 917, 357, 32, 63, 511, 197, 112, 725, 233, 894, 532, 323, 778, 227, 141, 577, 176, 606, 475, 173, 613, 103, 881, 683, 393, 764, 706, 751, 110, 311, 127, 135, 830, 523, 775, 118, 309, 632, 698, 989, 438, 540, 991, 169, 77, 942, 202, 142]) == 9\nassert solution.maxTurbulenceSize([748, 884, 687, 407, 895, 401, 581, 51, 379, 973, 636, 87, 475, 758, 682, 69, 374, 197, 326, 93, 230, 626, 325, 591, 74, 395, 725, 109, 849, 557, 116, 423, 255, 307, 664, 981, 865, 182, 859, 443, 196, 922, 352, 703, 20, 886, 735, 439, 127, 159, 243, 954, 752, 461, 603, 563, 286, 305, 38, 745, 49, 564, 62, 766, 613, 103, 447, 35, 48, 173, 924, 412, 621, 933, 660, 842, 276, 771, 487, 680, 382, 527, 337, 72, 494, 943, 149, 253, 810, 199, 281, 2, 476, 195, 986, 768, 498, 643]) == 11\nassert solution.maxTurbulenceSize([341, 853, 235, 99, 684, 201, 679, 278, 314, 990, 512, 967, 969, 772, 504, 279, 492, 816, 354, 482, 300, 174, 444, 793, 831, 896, 156, 467, 920, 983, 470, 405, 259, 635, 220, 251, 937, 824, 732, 710, 125, 346, 855, 951, 17, 968, 393, 564, 767, 587]) == 7\nassert solution.maxTurbulenceSize([566, 269, 511, 138, 741, 915, 140, 43, 829, 86, 832, 246, 975, 257, 333, 53, 919, 739, 337, 353, 46, 815, 827, 857, 262, 601, 489, 129, 414, 540, 578, 518, 891, 254, 375, 356, 366, 327, 912, 942, 800, 373, 544, 367, 944, 932, 905, 183, 192, 992, 364, 194, 660, 182, 794, 198, 136, 476, 126, 419, 228, 579, 423, 499, 362, 240, 984, 581, 3, 786, 226, 598, 727, 752, 160, 153, 317, 971, 639, 705, 300, 960, 480, 163, 873, 934, 244, 264, 710, 640, 498, 755, 477, 845, 7, 209]) == 12\nassert solution.maxTurbulenceSize([254, 846, 80, 720, 803, 447, 745, 753, 365, 205, 794, 359, 20, 513, 333, 836, 680, 334, 673, 923, 481, 465, 301, 959, 132, 689]) == 6\nassert solution.maxTurbulenceSize([493, 264, 795, 41, 176]) == 5\nassert solution.maxTurbulenceSize([248, 873, 821, 814, 209, 126, 742, 498, 610, 317, 897, 832, 203, 527, 604, 417, 493, 724, 111, 556, 552, 549, 104, 180, 48, 280, 681, 456, 399, 253, 420, 188, 812, 245, 794, 441, 795, 89, 132, 793, 867, 531, 807, 276, 269, 784, 532, 927, 255, 640, 796, 871, 251, 35, 617, 789, 589, 903, 564, 520, 15, 312, 906, 921, 936, 346, 414, 575, 649, 800, 704, 185, 780, 384, 49, 450, 845, 286, 815, 422, 38, 64, 726, 127, 560, 329, 866, 725, 828, 418, 716, 341, 430, 491, 744, 946]) == 12\nassert solution.maxTurbulenceSize([793, 899, 762, 231, 788, 948, 589, 505, 883, 272, 768, 931, 655, 406, 912, 701, 807, 667, 670, 964, 160, 284, 195, 959, 71, 778, 648, 35, 626, 996, 627, 448]) == 9\nassert solution.maxTurbulenceSize([628, 492, 157, 51, 134, 555, 771, 897, 233, 765, 248, 739, 811, 976, 365, 741, 678, 288, 464, 483, 227, 30, 614, 545, 238, 697, 166, 257, 792, 474, 286, 95, 515, 187, 205, 758, 524, 903, 369, 266, 102, 961, 668, 430, 887, 637, 517, 22]) == 6\nassert solution.maxTurbulenceSize([497, 901, 806, 232, 124, 19, 391, 338, 465, 584, 777, 68, 141, 121, 354, 410, 790]) == 6\nassert solution.maxTurbulenceSize([430, 960, 786, 356, 162, 389, 227, 907, 860, 130, 375, 361, 45, 793, 917, 261, 403, 458, 115, 81, 728, 913, 461, 874, 813, 942, 198, 839, 792, 7, 328, 800, 768]) == 9\nassert solution.maxTurbulenceSize([322, 268, 445, 643, 474, 680, 449, 899, 137, 540, 419, 892, 784, 451, 209, 325, 496, 124, 519, 258, 822, 251, 59, 521, 52, 10, 461, 364, 370, 438, 253, 769, 70, 259, 833, 713, 329, 369, 985, 321, 20, 17, 526, 774, 426, 394, 665, 562, 191, 569, 132, 737, 135, 657, 256, 88, 271, 77, 417, 885, 803, 355, 31, 16, 291, 469, 590, 401, 670, 506, 889, 371, 829, 785, 295, 604, 669, 497, 490, 676, 852, 947, 40, 740, 38, 615, 605]) == 11\nassert solution.maxTurbulenceSize([783, 743, 124, 464, 224, 992, 674, 810, 589, 331, 727, 22, 533, 42, 514, 567, 79, 901, 58, 196, 651, 872, 823, 696, 114, 292, 763, 916, 62, 28, 519, 546, 773, 919, 209, 107, 482, 372, 425, 722, 102, 480, 140, 838, 258, 513, 617, 887, 41, 304, 208, 657, 309, 95, 168, 814, 443, 952, 685, 725, 512, 188, 796, 954, 143, 775, 214, 72, 840, 644, 359, 928, 528, 870, 818, 568, 76]) == 8\nassert solution.maxTurbulenceSize([526, 930, 203, 916, 974, 495, 804, 977, 389, 254, 151, 330, 777, 559, 183, 59, 482, 2, 499, 142, 106, 876, 391, 607, 608, 468, 266, 215, 58, 598, 37, 729, 687, 856, 110, 792, 237, 547, 50, 950, 62, 67, 7, 75, 86, 771, 533, 673, 374, 412, 273, 595, 276, 11, 181, 543, 733]) == 17\nassert solution.maxTurbulenceSize([744, 974, 925, 63, 695, 155, 867, 340, 557, 596, 774, 886, 652, 248, 896, 218, 937, 759, 364, 29, 128, 678, 782, 509, 117, 471, 385, 681, 398, 845, 592, 928, 414, 71, 316, 879, 982, 549, 81, 945, 216, 544, 631, 682, 990, 31, 98, 370, 185, 951, 147, 143, 161, 396, 947, 173, 308, 475, 622, 355, 574, 673, 376, 552, 333, 532, 635, 330, 132, 279, 384, 319, 382, 428, 675, 882, 170, 437, 935, 207, 320, 208, 254, 412, 7, 220]) == 10\nassert solution.maxTurbulenceSize([536, 233, 844, 273, 982, 619, 190, 667, 8, 830, 340, 480, 754, 415, 407, 764, 325, 278, 374, 706, 593, 529, 184, 285, 953, 72, 523, 208, 30, 859, 610, 319, 45, 220, 545, 307, 762, 238, 205, 431, 406, 42, 925, 132, 912, 288, 726, 161, 491, 879, 112, 359, 350, 717, 743]) == 9\nassert solution.maxTurbulenceSize([196, 681, 547, 976, 191, 959, 195, 291, 155, 957, 112, 621, 172, 276, 162, 366, 448, 526, 614, 968, 641, 839, 569, 607, 343, 680, 14, 487, 757, 105, 886, 618, 434, 107, 925, 1000, 289, 863, 46, 192, 744, 509, 958, 371, 583, 932, 49, 481, 784, 296, 800, 331, 9, 217, 293, 113, 494, 617, 961, 986, 411, 135, 780, 493, 222, 849, 176, 687, 960, 209, 796, 715, 697, 788, 827, 315, 152, 752, 686, 691, 28, 847, 86, 904, 776, 782, 791, 850, 41]) == 16\nassert solution.maxTurbulenceSize([962, 346, 678, 625, 61, 945, 531, 102, 113, 782, 639, 90, 445, 340, 448, 953, 487, 638, 679, 19, 966, 303, 506, 725, 106, 612, 344, 749, 554, 146]) == 7\nassert solution.maxTurbulenceSize([614, 160, 385, 260, 822, 198, 309, 990, 909, 841]) == 7\nassert solution.maxTurbulenceSize([765, 797, 195, 543, 333, 365, 616, 517, 184, 959, 21, 895, 862, 868, 869, 250, 249, 595, 701, 706, 625, 504, 712, 852, 934, 119, 894, 802, 85, 241, 293, 226, 653, 675, 27, 853, 758, 472, 526]) == 7\nassert solution.maxTurbulenceSize([749, 480, 334, 383, 420, 613, 759, 652, 484, 276, 872, 418, 410, 341, 11, 235, 76, 891, 519, 938, 73, 966, 615, 1, 353, 865, 796, 683, 715, 651, 384, 610, 413, 797, 236, 35, 18, 140, 885, 920, 339, 989, 261, 329, 835, 641, 494, 914, 295, 436, 562, 288, 199, 408, 705, 284, 940, 805, 699, 386, 974, 394, 275, 931, 397, 558, 6, 495, 297, 204, 340, 121, 78, 765, 405, 351, 507, 816, 627, 505, 47, 814, 813, 417, 456, 782, 879, 606, 930, 333, 285, 146, 8, 380, 407]) == 10\nassert solution.maxTurbulenceSize([958]) == 1\nassert solution.maxTurbulenceSize([649, 696, 449, 479]) == 4\nassert solution.maxTurbulenceSize([789, 744, 585, 198, 507, 429, 623, 413, 534, 928, 666, 334, 228, 589, 436, 288, 906, 406, 825, 933, 649, 793, 707, 31, 953, 70, 669, 383, 687, 425, 678, 808, 661, 153, 980, 536, 74, 871, 581, 544, 453, 765, 263, 924, 644]) == 9\nassert solution.maxTurbulenceSize([818, 66, 991, 402, 782, 587, 227, 165, 312, 736, 636, 436, 783, 437, 50, 621, 337, 431, 738, 839, 590, 487, 45, 130, 412, 660, 153, 486, 240, 595, 591, 222, 534, 390, 140, 683, 835, 194, 969, 400, 870, 270, 495, 544, 841, 481, 190, 686, 808, 157, 994, 267, 162, 625, 923, 645, 433, 120, 76, 458, 158, 897, 556, 975, 99, 887, 488, 639, 531, 933, 170, 358, 804, 938, 538, 630, 751, 940, 452, 915, 976, 760, 593]) == 15\nassert solution.maxTurbulenceSize([124, 635, 671, 438, 736, 749, 957, 676, 208, 956, 143, 311, 113, 832, 465, 320, 624, 234, 1, 18, 242, 607, 926, 155, 733, 493, 835, 145, 48, 648, 177, 381, 518, 520, 247, 776, 126, 355, 724, 337, 57, 710, 218, 211, 713, 727, 683, 505, 858, 911, 61, 883, 598, 75, 697, 711, 273, 315, 183, 899, 666, 943, 758, 809]) == 10\nassert solution.maxTurbulenceSize([69, 949, 415, 106, 290, 961, 352, 992, 321, 768, 953, 946, 444, 248, 507, 779, 339, 28, 249, 772, 481, 436, 88, 131, 125, 857, 270, 980, 330, 868, 95, 569, 400, 669, 13, 521, 769, 958, 374, 658, 861, 408, 423, 773, 318, 234, 890, 475, 874, 945, 836, 150, 666, 370, 852, 965]) == 15\nassert solution.maxTurbulenceSize([83, 946, 217, 381, 245, 903, 165, 401, 379, 112, 743, 999, 24, 405, 115, 179, 233, 712, 151, 409, 57, 782, 447, 155, 214, 438, 854, 839, 199, 434, 631, 545, 49, 71, 923, 825, 39, 897, 313, 254, 117, 937, 595, 880, 852, 342, 726, 274, 593, 193, 396, 872, 420, 184, 270, 986, 708, 988, 46, 100, 836, 562, 608, 559, 568, 337, 11, 181, 977, 583, 935, 941, 865, 899, 399, 861, 618, 883, 311, 832, 322, 652, 484, 148, 150, 116, 754, 648, 985, 168, 483]) == 13\nassert solution.maxTurbulenceSize([607, 534, 622, 840, 846, 965, 972, 26, 390, 90, 994, 583, 499, 420, 952, 773, 889, 397, 880, 489, 459, 340, 448, 98, 187, 671, 354, 298, 460, 703, 718, 102, 869, 978, 684]) == 8\nassert solution.maxTurbulenceSize([701, 242, 337, 946, 780, 544, 278, 772, 157, 85, 791, 816, 608, 900, 57, 548, 642, 54, 572, 78, 841, 751, 230, 671, 646, 214, 567, 737, 462, 520, 658, 444, 428, 873, 948, 963, 601, 972, 292, 145, 237, 985, 71, 405, 622, 262, 798, 699, 833, 999, 648, 755, 974, 470, 14, 303, 597, 34, 770, 183, 942, 295, 334, 984, 501, 327, 566, 505, 739, 904, 978, 385, 137, 174, 868, 954, 756, 392, 118, 803, 669, 926]) == 8\nassert solution.maxTurbulenceSize([166, 839, 382, 433, 562, 616, 475, 112, 239, 520, 165, 759, 118, 87, 682, 528, 817, 807, 266, 479, 954, 946, 63, 235, 92, 36, 515, 94, 658, 910, 263, 390, 913, 499, 952, 833, 145, 38, 178, 153, 608, 962, 752, 264, 871, 944, 198, 921, 675, 65, 947, 388, 976, 393]) == 6\nassert solution.maxTurbulenceSize([410, 13, 55, 892, 191, 183, 693, 187, 154, 380, 64, 91, 492, 556, 69, 402, 653, 322, 372, 347, 122, 290, 947, 137, 640, 673, 607, 761, 75, 845, 896, 973, 540, 38, 872, 544, 985, 772, 804, 915, 362, 225, 78, 957, 59, 172, 874, 858, 585, 521, 643, 950, 240, 103, 600, 60, 501, 400, 898, 332, 358, 224, 951, 216, 920, 654, 439, 278, 420, 820, 799, 752, 983, 425, 885, 226, 215, 647, 766, 825, 266, 181, 222, 590, 901, 684, 280, 25, 20, 14, 403, 433, 416]) == 14\nassert solution.maxTurbulenceSize([541, 641, 667]) == 2\nassert solution.maxTurbulenceSize([958, 636, 205, 549, 217, 236, 243, 745, 780, 695, 310, 27, 676, 145, 178, 767, 530, 343, 582, 688, 486, 352, 157, 493, 709]) == 5",
  "inefficient_solution": "class Solution:\n    def maxTurbulenceSize(self, arr: List[int]) -> int:\n        ans = []\n        for i in range(len(arr)):\n            for j in range(i + 1, len(arr) + 1):\n                subarray = arr[i:j]\n                turbulent = True\n                for k in range(len(subarray) - 1):\n                    if subarray[k] > subarray[k + 1]:\n                        if k % 2 == 0:\n                            turbulent = False\n                            break\n                    elif subarray[k] < subarray[k + 1]:\n                        if k % 2 == 1:\n                            turbulent = False\n                            break\n                if turbulent:\n                    ans.append(len(subarray))\n        return max(ans)",
  "is_python": true
}