{
  "problem_idx": 252,
  "task_name": "Meeting Rooms",
  "markdown_description": "\nGiven an array of meeting time `intervals`\u00a0where `intervals[i] = [starti, endi]`, determine if a person could attend all meetings.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n**Input:** intervals = [[0,30],[5,10],[15,20]]\n**Output:** false\n\n```\n**Example 2:**\n\n\n\n```\n**Input:** intervals = [[7,10],[2,4]]\n**Output:** true\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `0 <= intervals.length <= 104`\n* `intervals[i].length == 2`\n* `0 <= starti <\u00a0endi <= 106`\n\n\n",
  "canonical_solution": "class Solution:\n    def canAttendMeetings(self, intervals: List[List[int]]) -> bool:\n        intervals.sort()\n        return all(a[1] <= b[0] for a, b in pairwise(intervals))\n",
  "test_case_generator": "\nimport random\n\nclass Solution:\n    def canAttendMeetings(self, intervals):\n        intervals.sort()\n        return all(a[1] <= b[0] for a, b in self.pairwise(intervals))\n    \n    def pairwise(self, lst):\n        for i in range(len(lst) - 1):\n            yield lst[i], lst[i + 1]\n    \ndef generate_test_case():\n    solution = Solution()\n    \n    # Generate intervals list\n    num_intervals = random.randint(0, 10)\n    intervals = []\n    for _ in range(num_intervals):\n        start = random.randint(0, 10**6)\n        end = random.randint(start, 10**6)\n        intervals.append([start, end])\n    \n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.canAttendMeetings(intervals)\n\n    return intervals, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        intervals, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.canAttendMeetings(intervals) == expected_result\n        print(f\"assert solution.canAttendMeetings({intervals}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.canAttendMeetings({intervals}) == {expected_result}\") # You can find that we construct the test case in the same format as the example\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n\n",
  "test_case": "assert solution.canAttendMeetings([[64471, 306620], [214873, 915009], [263989, 574890], [317248, 360652], [557030, 741742], [718069, 777589], [784018, 907226], [879538, 943894], [887171, 892272]]) == False\nassert solution.canAttendMeetings([]) == True\nassert solution.canAttendMeetings([[604432, 704612], [616674, 996346], [717398, 965847], [729266, 835997], [790263, 896913], [800501, 847269], [843701, 886959], [894579, 950994]]) == False\nassert solution.canAttendMeetings([[737507, 823168], [817469, 981591], [974501, 979787]]) == False\nassert solution.canAttendMeetings([[835623, 957266], [928638, 977483]]) == False\nassert solution.canAttendMeetings([[64312, 870616], [70898, 259734], [140581, 751326], [276047, 878629], [442753, 800549], [479020, 577715], [643297, 968583], [693538, 770338], [795193, 963145], [858330, 893118]]) == False\nassert solution.canAttendMeetings([[309193, 933527], [515431, 981894], [587045, 612874], [756252, 886525], [877625, 951546], [903693, 988981], [964907, 981992], [968055, 970218]]) == False\nassert solution.canAttendMeetings([[40027, 127703], [268019, 566611], [306304, 597887], [350770, 918022], [555377, 923226], [712541, 946833], [805273, 899756], [814661, 998666]]) == False\nassert solution.canAttendMeetings([[36326, 47990], [86290, 561363], [127876, 551665], [137379, 660611], [166337, 326439], [414695, 862180], [434627, 573319], [467747, 737159], [847626, 878254], [925263, 964293]]) == False\nassert solution.canAttendMeetings([[123422, 526984], [147569, 487135], [839532, 867415]]) == False\nassert solution.canAttendMeetings([[254550, 741573], [364779, 701229], [567059, 897928], [797423, 930946]]) == False\nassert solution.canAttendMeetings([[168466, 921304], [221252, 522860], [240716, 695154], [863356, 890211]]) == False\nassert solution.canAttendMeetings([[99236, 803003], [593739, 765668], [609275, 812248], [760993, 932337], [927524, 964099]]) == False\nassert solution.canAttendMeetings([[43324, 441334], [131977, 350482], [232287, 603053], [420757, 831278], [464139, 477428], [519776, 541154], [595028, 691478], [744379, 957332], [921317, 986527], [945052, 973256]]) == False\nassert solution.canAttendMeetings([[34921, 304974], [113478, 454842], [504873, 671135], [509842, 711495], [759585, 995247]]) == False\nassert solution.canAttendMeetings([[39570, 793777], [124286, 412989]]) == False\nassert solution.canAttendMeetings([[116399, 518638], [288273, 635185], [374387, 938808], [387147, 971002], [487019, 629383], [825108, 890779], [841125, 975477], [845682, 970649], [959243, 980093]]) == False\nassert solution.canAttendMeetings([]) == True\nassert solution.canAttendMeetings([[149318, 831397], [332051, 387928], [338712, 986479], [531168, 536070], [574510, 904154], [783271, 934376], [847680, 879552], [892801, 957970], [904918, 981531], [954195, 975213]]) == False\nassert solution.canAttendMeetings([[155461, 736936], [373620, 561737], [720265, 944307], [817979, 904259]]) == False\nassert solution.canAttendMeetings([[152538, 913275], [467601, 576713], [765912, 927657], [803406, 994326]]) == False\nassert solution.canAttendMeetings([[149556, 361171], [156942, 269434], [231977, 798595], [254569, 274877], [414627, 886710], [757885, 824084], [951930, 964853]]) == False\nassert solution.canAttendMeetings([[98838, 779819], [436080, 602430], [437973, 506682], [443623, 451181], [613984, 728895], [744504, 935536], [746005, 848284], [895137, 931741], [982789, 995935]]) == False\nassert solution.canAttendMeetings([[682554, 879678], [911517, 912480]]) == True\nassert solution.canAttendMeetings([[41570, 979960], [108852, 794457], [215503, 217765], [264431, 397618], [280010, 796093], [401909, 792728], [412475, 818304], [559656, 626656], [643737, 871445], [888542, 994841]]) == False\nassert solution.canAttendMeetings([[105424, 632530], [163135, 404177], [163552, 726285], [655825, 994619], [682181, 816561]]) == False\nassert solution.canAttendMeetings([[796910, 910798], [810714, 869771]]) == False\nassert solution.canAttendMeetings([[199663, 665159], [226965, 957921], [530080, 763296], [637114, 691647], [715559, 784630], [755200, 769690]]) == False\nassert solution.canAttendMeetings([[141657, 925229], [170826, 624712], [364733, 500877], [430541, 817335], [482244, 779258], [614315, 794796], [668485, 771626], [787252, 870103], [991205, 992272]]) == False\nassert solution.canAttendMeetings([[186943, 334159], [340390, 694356], [414098, 985973], [425478, 603472], [463130, 479786], [581575, 661304], [687284, 815072], [837527, 996990], [940593, 980064], [942909, 955819]]) == False\nassert solution.canAttendMeetings([[394041, 781657], [477310, 647584], [832189, 957109], [986027, 997896]]) == False\nassert solution.canAttendMeetings([[41845, 858988]]) == True\nassert solution.canAttendMeetings([[331344, 472914], [450203, 800660], [683582, 891370], [691184, 779064], [712116, 895908], [839043, 935208], [892661, 919329]]) == False\nassert solution.canAttendMeetings([[146408, 560087], [457727, 685065], [467405, 506990], [480048, 623008], [500439, 822079], [641872, 956452], [732225, 824492]]) == False\nassert solution.canAttendMeetings([[78879, 641944], [172580, 762957], [422442, 553921], [557680, 776516], [604954, 772780], [740697, 880215], [837132, 999937]]) == False\nassert solution.canAttendMeetings([]) == True\nassert solution.canAttendMeetings([[171756, 810236], [265944, 379979], [274406, 501279], [315639, 489008], [455695, 928245], [582338, 850925], [635693, 888791], [658498, 741014], [752952, 801574]]) == False\nassert solution.canAttendMeetings([[19673, 588873], [39123, 441986], [52404, 151448], [273950, 999470], [299843, 542481], [498375, 575384], [555812, 769363], [644539, 686757], [895034, 959063]]) == False\nassert solution.canAttendMeetings([[112798, 770788], [638242, 889982], [669288, 802691], [880202, 937469]]) == False\nassert solution.canAttendMeetings([[232109, 845089], [651960, 657398]]) == False\nassert solution.canAttendMeetings([[81076, 366638], [216498, 383766], [313671, 602865], [397902, 751581], [425538, 685562], [442659, 704563], [591668, 872341], [656075, 938663], [734762, 828702]]) == False\nassert solution.canAttendMeetings([[6594, 63600], [95385, 912380], [207922, 825131], [450021, 796858], [482145, 677786], [606364, 753762], [692798, 996928], [829067, 993142], [867861, 879144]]) == False\nassert solution.canAttendMeetings([[38223, 402706], [88719, 818848], [100744, 261821], [307568, 508962], [314351, 619044], [428530, 768840], [514565, 583013], [707807, 752957], [778087, 891356], [807825, 888526]]) == False\nassert solution.canAttendMeetings([[165368, 339688], [276806, 525324], [777149, 858288]]) == False\nassert solution.canAttendMeetings([]) == True\nassert solution.canAttendMeetings([[65925, 449455], [231644, 316735], [399821, 530747], [857953, 978623]]) == False\nassert solution.canAttendMeetings([[132904, 433471], [156501, 473164], [208919, 275879], [226552, 866585], [307307, 684766], [329612, 600603], [708566, 759250]]) == False\nassert solution.canAttendMeetings([]) == True\nassert solution.canAttendMeetings([[177862, 539748], [923844, 984776]]) == True\nassert solution.canAttendMeetings([[396, 393961], [419036, 837767], [627466, 900059], [632091, 740711]]) == False\nassert solution.canAttendMeetings([[45580, 885380], [128035, 953529], [182597, 889556], [329574, 536827], [543374, 877415], [562465, 682886], [659832, 745012], [746560, 889557], [831820, 916752]]) == False\nassert solution.canAttendMeetings([]) == True\nassert solution.canAttendMeetings([[64326, 959893], [127511, 655375], [136155, 926343], [382479, 580402], [765323, 862318], [847604, 912164], [994556, 998220]]) == False\nassert solution.canAttendMeetings([[230834, 309120], [240672, 347462], [327985, 583511], [482820, 721734], [837978, 949208], [921629, 928679]]) == False\nassert solution.canAttendMeetings([[107518, 285687], [148080, 619266], [357090, 454095], [426729, 918538], [511837, 555266], [724766, 865360], [791910, 821309], [885108, 930044]]) == False\nassert solution.canAttendMeetings([[1810, 871026], [546567, 714879]]) == False\nassert solution.canAttendMeetings([[125654, 254194], [440258, 517972], [782906, 820899], [854652, 931160]]) == True\nassert solution.canAttendMeetings([[236229, 771066], [349976, 512156], [472414, 746559], [510306, 528203], [538127, 749879], [550184, 714894], [705677, 975951]]) == False\nassert solution.canAttendMeetings([[254533, 828899], [394341, 691217], [436719, 670355]]) == False\nassert solution.canAttendMeetings([[333342, 517856], [342203, 803952], [553441, 999707], [609969, 662828], [721421, 937304], [871836, 923721], [901143, 918504]]) == False\nassert solution.canAttendMeetings([[133061, 530922], [301933, 473157], [315491, 344545], [519257, 695537]]) == False\nassert solution.canAttendMeetings([[90259, 973656], [104670, 857337], [138716, 146385], [274949, 865935], [319077, 438156], [354968, 399072], [566355, 868168], [657378, 991779], [816650, 959610], [830089, 996470]]) == False\nassert solution.canAttendMeetings([[61136, 561637], [106604, 897202], [399946, 475857], [536233, 921643], [709958, 932725], [748671, 820537], [782098, 797879], [867876, 957854]]) == False\nassert solution.canAttendMeetings([[81601, 599141], [174170, 570855], [200169, 772119], [265448, 557255], [285720, 832559], [296189, 564938], [527884, 630804], [637751, 709907]]) == False\nassert solution.canAttendMeetings([[62026, 888347], [77194, 615749], [86727, 651552], [261915, 883179], [286956, 522476], [312957, 538749], [535040, 956718], [814402, 996189]]) == False\nassert solution.canAttendMeetings([[288060, 661996], [314599, 575405], [330767, 727428], [361767, 442065], [373847, 696445], [384550, 517623], [464448, 975890], [707895, 753887]]) == False\nassert solution.canAttendMeetings([]) == True\nassert solution.canAttendMeetings([[139098, 156375], [247921, 962562], [259328, 385690], [478288, 820868], [639685, 906417], [722795, 916762], [804090, 861214], [946195, 973186]]) == False\nassert solution.canAttendMeetings([[165451, 185523], [180477, 284600], [389529, 770422], [440438, 797421], [460934, 924164], [470125, 486735], [530890, 955718], [667515, 719474]]) == False\nassert solution.canAttendMeetings([[174974, 756452], [200788, 638670], [500201, 959957], [635984, 795649], [670956, 982655], [858088, 910933], [942301, 996206]]) == False\nassert solution.canAttendMeetings([]) == True\nassert solution.canAttendMeetings([[146787, 384555], [208806, 775444], [214107, 572547], [246780, 562846], [418217, 664668], [456666, 487466], [546526, 772951], [603454, 755132], [615128, 698987], [977487, 993495]]) == False\nassert solution.canAttendMeetings([[248750, 469089], [350687, 599562], [436717, 681885], [558765, 617979], [757692, 821952], [984033, 993356], [984778, 990488]]) == False\nassert solution.canAttendMeetings([[644406, 850308], [713164, 805036]]) == False\nassert solution.canAttendMeetings([[309024, 509250], [397804, 951461], [444468, 626168], [635714, 919571], [670107, 678580], [687644, 800469], [855212, 916261]]) == False\nassert solution.canAttendMeetings([[158344, 422014], [799219, 808011]]) == True\nassert solution.canAttendMeetings([[269391, 467085], [614727, 776365]]) == True\nassert solution.canAttendMeetings([]) == True\nassert solution.canAttendMeetings([[210540, 911133], [224256, 755956], [356250, 968312], [435189, 628844], [507957, 714823], [527972, 575666], [547919, 944269], [661112, 903033], [868768, 954415], [896035, 978585]]) == False\nassert solution.canAttendMeetings([[69089, 863354], [80967, 392636], [398787, 751261], [776118, 830964], [990529, 992148]]) == False\nassert solution.canAttendMeetings([[293668, 751838], [347921, 361474], [572987, 832616]]) == False\nassert solution.canAttendMeetings([[91946, 192093], [266315, 528867], [351465, 923402], [446401, 730754], [450431, 706552], [660571, 814402], [738487, 941464], [778414, 989216], [933378, 953355]]) == False\nassert solution.canAttendMeetings([[53444, 940453], [111972, 446166], [825611, 908542], [980289, 985030]]) == False\nassert solution.canAttendMeetings([]) == True\nassert solution.canAttendMeetings([]) == True\nassert solution.canAttendMeetings([[525846, 817657], [744174, 952776]]) == False\nassert solution.canAttendMeetings([[299745, 438801], [299945, 540702], [900611, 975733], [964324, 988365]]) == False\nassert solution.canAttendMeetings([[137489, 149311], [575757, 971735], [663385, 881879], [688447, 818583], [771276, 822829]]) == False\nassert solution.canAttendMeetings([[157444, 242399], [391983, 714653], [543527, 923478], [770940, 974098], [798147, 959011]]) == False\nassert solution.canAttendMeetings([[73416, 675413], [105797, 145092], [121851, 794102], [305202, 954817], [687254, 888275], [831484, 893256], [934320, 971512], [939407, 989761], [939826, 940128]]) == False\nassert solution.canAttendMeetings([[34378, 452007], [84295, 488344], [387894, 451422], [467917, 492961], [641682, 796988], [690596, 734991], [874141, 879251], [960656, 990303], [963816, 970720]]) == False\nassert solution.canAttendMeetings([[38090, 911092], [814961, 894065], [824684, 863407], [829969, 942024], [978281, 991528], [987771, 992659]]) == False\nassert solution.canAttendMeetings([[34582, 157209], [438556, 592517], [452587, 719593], [452852, 914934], [467369, 498269], [640385, 731147], [702768, 955921], [993702, 995943]]) == False\nassert solution.canAttendMeetings([[466571, 777262]]) == True\nassert solution.canAttendMeetings([[101985, 477080], [441874, 809244], [494948, 732694], [509480, 726670], [535211, 996635], [978031, 988016]]) == False\nassert solution.canAttendMeetings([[13740, 105808], [294980, 321805], [309647, 488203], [706248, 775743], [730083, 762578], [795331, 852819], [810439, 940295], [920997, 982429], [956071, 967460]]) == False\nassert solution.canAttendMeetings([[163937, 864022], [487775, 532035], [607316, 887611], [632576, 790706]]) == False\nassert solution.canAttendMeetings([[185751, 676187], [189762, 384192], [889657, 927159], [891912, 942945]]) == False\nassert solution.canAttendMeetings([[16365, 238794], [28897, 226795], [105265, 156699], [144298, 518100], [270619, 601034], [298640, 933800], [376067, 832066], [494695, 867286], [759578, 897222]]) == False\nassert solution.canAttendMeetings([[267676, 708723], [325828, 740530], [338106, 623001], [612017, 994181], [731077, 778268], [860602, 863307], [910560, 939878]]) == False",
  "inefficient_solution": "class Solution:\n    def canAttendMeetings(self, intervals: List[List[int]]) -> bool:\n        intervals_dict = {}\n        for i, interval in enumerate(intervals):\n            intervals_dict[i] = interval\n\n        all_intervals = list(intervals_dict.values())\n        intervals_sorted = []\n\n        for i in range(len(all_intervals)):\n            for j in range(i + 1, len(all_intervals)):\n                if all_intervals[j][0] >= all_intervals[i][1]:\n                    intervals_sorted.append([all_intervals[i], all_intervals[j]])\n\n        for i in range(0, len(intervals_sorted), 2):\n            if intervals_sorted[i][1][1] > intervals_sorted[i + 1][0][0]:\n                return False\n\n        return True",
  "is_python": true
}