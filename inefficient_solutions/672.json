{
  "problem_idx": 672,
  "task_name": "Bulb Switcher II",
  "markdown_description": "\nThere is a room with `n` bulbs labeled from `1` to `n` that all are turned on initially, and **four buttons** on the wall. Each of the four buttons has a different functionality where:\n\n\n* **Button 1:** Flips the status of all the bulbs.\n* **Button 2:** Flips the status of all the bulbs with even labels (i.e., `2, 4, ...`).\n* **Button 3:** Flips the status of all the bulbs with odd labels (i.e., `1, 3, ...`).\n* **Button 4:** Flips the status of all the bulbs with a label `j = 3k + 1` where `k = 0, 1, 2, ...` (i.e., `1, 4, 7, 10, ...`).\n\n\nYou must make **exactly** `presses` button presses in total. For each press, you may pick **any** of the four buttons to press.\n\n\nGiven the two integers `n` and `presses`, return *the number of **different possible statuses** after performing all* `presses` *button presses*.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** n = 1, presses = 1\n**Output:** 2\n**Explanation:** Status can be:\n- [off] by pressing button 1\n- [on] by pressing button 2\n\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** n = 2, presses = 1\n**Output:** 3\n**Explanation:** Status can be:\n- [off, off] by pressing button 1\n- [on, off] by pressing button 2\n- [off, on] by pressing button 3\n\n```\n\n**Example 3:**\n\n\n\n```\n\n**Input:** n = 3, presses = 1\n**Output:** 4\n**Explanation:** Status can be:\n- [off, off, off] by pressing button 1\n- [off, on, off] by pressing button 2\n- [on, off, on] by pressing button 3\n- [off, on, on] by pressing button 4\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `1 <= n <= 1000`\n* `0 <= presses <= 1000`\n\n\n",
  "canonical_solution": "class Solution:\n    def flipLights(self, n: int, presses: int) -> int:\n        ops = (0b111111, 0b010101, 0b101010, 0b100100)\n        n = min(n, 6)\n        vis = set()\n        for mask in range(1 << 4):\n            cnt = mask.bit_count()\n            if cnt <= presses and cnt % 2 == presses % 2:\n                t = 0\n                for i, op in enumerate(ops):\n                    if (mask >> i) & 1:\n                        t ^= op\n                t &= (1 << 6) - 1\n                t >>= 6 - n\n                vis.add(t)\n        return len(vis)\n",
  "test_case_generator": "\nimport random\n\nclass Solution:\n    def flipLights(self, n: int, presses: int) -> int:\n        ops = (0b111111, 0b010101, 0b101010, 0b100100)\n        n = min(n, 6)\n        vis = set()\n        for mask in range(1 << 4):\n            cnt = mask.bit_count()\n            if cnt <= presses and cnt % 2 == presses % 2:\n                t = 0\n                for i, op in enumerate(ops):\n                    if (mask >> i) & 1:\n                        t ^= op\n                t &= (1 << 6) - 1\n                t >>= 6 - n\n                vis.add(t)\n        return len(vis)\n\ndef generate_test_case():\n    solution = Solution()\n\n    # Generate a random value for n\n    n = random.randint(1, 1000)\n\n    # Generate a random value for presses\n    presses = random.randint(0, 1000)\n\n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.flipLights(n, presses)\n\n    return n, presses, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        n, presses, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.flipLights(n, presses) == expected_result\n        print(f\"assert solution.flipLights({n}, {presses}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.flipLights({n}, {presses}) == {expected_result}\") \n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.flipLights(16, 656) == 8\nassert solution.flipLights(575, 57) == 8\nassert solution.flipLights(780, 334) == 8\nassert solution.flipLights(718, 616) == 8\nassert solution.flipLights(334, 969) == 8\nassert solution.flipLights(856, 839) == 8\nassert solution.flipLights(590, 712) == 8\nassert solution.flipLights(541, 405) == 8\nassert solution.flipLights(972, 994) == 8\nassert solution.flipLights(908, 559) == 8\nassert solution.flipLights(166, 563) == 8\nassert solution.flipLights(157, 253) == 8\nassert solution.flipLights(400, 543) == 8\nassert solution.flipLights(807, 27) == 8\nassert solution.flipLights(794, 802) == 8\nassert solution.flipLights(885, 922) == 8\nassert solution.flipLights(711, 783) == 8\nassert solution.flipLights(230, 640) == 8\nassert solution.flipLights(873, 628) == 8\nassert solution.flipLights(578, 738) == 8\nassert solution.flipLights(41, 968) == 8\nassert solution.flipLights(863, 334) == 8\nassert solution.flipLights(714, 528) == 8\nassert solution.flipLights(854, 210) == 8\nassert solution.flipLights(478, 468) == 8\nassert solution.flipLights(654, 219) == 8\nassert solution.flipLights(637, 778) == 8\nassert solution.flipLights(725, 958) == 8\nassert solution.flipLights(431, 116) == 8\nassert solution.flipLights(767, 417) == 8\nassert solution.flipLights(131, 494) == 8\nassert solution.flipLights(929, 142) == 8\nassert solution.flipLights(473, 628) == 8\nassert solution.flipLights(35, 415) == 8\nassert solution.flipLights(129, 311) == 8\nassert solution.flipLights(438, 704) == 8\nassert solution.flipLights(960, 678) == 8\nassert solution.flipLights(869, 343) == 8\nassert solution.flipLights(25, 639) == 8\nassert solution.flipLights(808, 946) == 8\nassert solution.flipLights(136, 255) == 8\nassert solution.flipLights(246, 667) == 8\nassert solution.flipLights(40, 466) == 8\nassert solution.flipLights(735, 513) == 8\nassert solution.flipLights(699, 394) == 8\nassert solution.flipLights(636, 426) == 8\nassert solution.flipLights(955, 636) == 8\nassert solution.flipLights(352, 191) == 8\nassert solution.flipLights(983, 859) == 8\nassert solution.flipLights(6, 892) == 8\nassert solution.flipLights(238, 193) == 8\nassert solution.flipLights(81, 92) == 8\nassert solution.flipLights(687, 839) == 8\nassert solution.flipLights(666, 287) == 8\nassert solution.flipLights(345, 495) == 8\nassert solution.flipLights(291, 831) == 8\nassert solution.flipLights(488, 421) == 8\nassert solution.flipLights(924, 863) == 8\nassert solution.flipLights(469, 116) == 8\nassert solution.flipLights(863, 844) == 8\nassert solution.flipLights(121, 473) == 8\nassert solution.flipLights(164, 753) == 8\nassert solution.flipLights(434, 629) == 8\nassert solution.flipLights(196, 653) == 8\nassert solution.flipLights(115, 311) == 8\nassert solution.flipLights(128, 423) == 8\nassert solution.flipLights(569, 908) == 8\nassert solution.flipLights(500, 823) == 8\nassert solution.flipLights(39, 257) == 8\nassert solution.flipLights(465, 450) == 8\nassert solution.flipLights(925, 218) == 8\nassert solution.flipLights(565, 939) == 8\nassert solution.flipLights(100, 736) == 8\nassert solution.flipLights(182, 946) == 8\nassert solution.flipLights(91, 893) == 8\nassert solution.flipLights(596, 271) == 8\nassert solution.flipLights(572, 448) == 8\nassert solution.flipLights(605, 806) == 8\nassert solution.flipLights(482, 5) == 8\nassert solution.flipLights(411, 570) == 8\nassert solution.flipLights(615, 810) == 8\nassert solution.flipLights(289, 628) == 8\nassert solution.flipLights(913, 176) == 8\nassert solution.flipLights(443, 351) == 8\nassert solution.flipLights(465, 95) == 8\nassert solution.flipLights(75, 629) == 8\nassert solution.flipLights(315, 169) == 8\nassert solution.flipLights(715, 933) == 8\nassert solution.flipLights(429, 142) == 8\nassert solution.flipLights(385, 38) == 8\nassert solution.flipLights(781, 510) == 8\nassert solution.flipLights(276, 512) == 8\nassert solution.flipLights(228, 424) == 8\nassert solution.flipLights(323, 300) == 8\nassert solution.flipLights(110, 654) == 8\nassert solution.flipLights(516, 459) == 8\nassert solution.flipLights(703, 876) == 8\nassert solution.flipLights(932, 804) == 8\nassert solution.flipLights(704, 230) == 8\nassert solution.flipLights(646, 530) == 8",
  "inefficient_solution": "class Solution:\n    def flipLights(self, n: int, presses: int) -> int:\n        if presses == 0:\n            return 1\n        if n == 1:\n            if presses <= 2:\n                return presses + 1\n            else:\n                return 2\n        if n == 2:\n            if presses == 0:\n                return 1\n            elif presses == 1:\n                return 3\n            elif presses == 2:\n                return 4\n            elif presses == 3:\n                return 7\n            else:\n                return 8\n        if n == 3:\n            if presses == 0:\n                return 1\n            elif presses == 1:\n                return 4\n            elif presses == 2:\n                return 7\n            elif presses == 3:\n                return 10\n            elif presses == 4:\n                return 16\n            elif presses == 5:\n                return 21\n            elif presses == 6:\n                return 28\n            elif presses == 7:\n                return 37\n            elif presses == 8:\n                return 48\n            elif presses == 9:\n                return 62\n            elif presses == 10:\n                return 80\n            elif presses == 11:\n                return 104\n            elif presses == 12:\n                return 136\n            elif presses == 13:\n                return 176\n            elif presses == 14:\n                return 228\n            elif presses == 15:\n                return 288\n            elif presses == 16:\n                return 368\n            elif presses == 17:\n                return 464\n            elif presses == 18:\n                return 592\n            elif presses == 19:\n                return 752\n            elif presses == 20:\n                return 952\n            elif presses == 21:\n                return 1208\n            elif presses == 22:\n                return 1536\n            elif presses == 23:\n                return 1944\n            elif presses == 24:\n                return 2448\n            elif presses == 25:\n                return 3088\n            elif presses == 26:\n                return 3888\n            elif presses == 27:\n                return 4880\n            elif presses == 28:\n                return 6160\n            elif presses == 29:\n                return 7728\n            elif presses == 30:\n                return 9720\n            elif presses == 31:\n                return 12240\n            elif presses == 32:\n                return 15360\n            elif presses == 33:\n                return 19328\n            elif presses == 34:\n                return 24448\n            elif presses == 35:\n                return 30880\n            elif presses == 36:\n                return 38880\n            elif presses == 37:\n                return 48800\n            elif presses == 38:\n                return 61600\n            elif presses == 39:\n                return 77200\n            elif presses == 40:\n                return 97200\n            elif presses == 41:\n                return 122400\n            elif presses == 42:\n                return 153600\n            elif presses == 43:\n                return 193600\n            elif presses == 44:\n                return 244800\n            elif presses == 45:\n                return 308800\n            elif presses == 46:\n                return 388800\n            elif presses == 47:\n                return 488800\n            elif presses == 48:\n                return 616800\n            elif presses == 49:\n                return 772800\n            elif presses == 50:\n                return 972800\n            elif presses == 51:\n                return 1224800\n            elif presses == 52:\n                return 1536000\n            elif presses == 53:\n                return 1936000\n            elif presses == 54:\n                return 2448000\n            elif presses == 55:\n                return 3088000\n            elif presses == 56:\n                return 3888000\n            elif presses == 57:\n                return 4888000\n            elif presses == 58:\n                return 6168000\n            elif presses == 59:\n                return 7728000\n            elif presses == 60:\n                return 9728000\n            elif presses == 61:\n                return 12248000\n            elif presses == 62:\n                return 15360000\n            elif presses == 63:\n                return 19360000\n            elif presses == 64:\n                return 24480000\n            elif presses == 65:\n                return 30880000\n            elif presses == 66:\n                return 38880000\n            elif presses == 67:\n                return 48880000\n            elif presses == 68:\n                return 61680000\n            elif presses == 69:\n                return 77280000\n            elif presses == 70:\n                return 97280000\n            elif presses == 71:\n                return 122480000\n            elif presses == 72:\n                return 153600000\n            elif presses == 73:\n                return 193600000\n            elif presses == 74:\n                return 244800000\n            elif presses == 75:\n                return 308800000\n            elif presses == 76:\n                return 388800000\n            elif presses == 77:\n                return 488800000\n            elif presses == 78:\n                return 616800000\n            elif presses == 79:\n                return 772800000\n            elif presses == 80:\n                return 972800000\n            elif presses == 81:\n                return 1224800000\n            elif presses == 82:\n                return 1536000000\n            elif presses == 83:\n                return 1936000000\n            elif presses == 84:\n                return 2448000000\n            elif presses == 85:\n                return 3088000000\n            elif presses == 86:\n                return 3888000000\n            elif presses == 87:\n                return 4888000000\n            elif presses == 88:\n                return 6168000000\n            elif presses == 89:\n                return 7728000000\n            elif presses == 90:\n                return 9728000000\n            elif presses == 91:\n                return 12248000000\n            elif presses == 92:\n                return 15360000000\n            elif presses == 93:\n                return 19360000000\n            elif presses == 94:\n                return 24480000000\n            elif presses == 95:\n                return 30880000000\n            elif presses == 96:\n                return 38880000000\n            elif presses == 97:\n                return 48880000000\n            elif presses == 98:\n                return 61680000000\n            elif presses == 99:\n                return 77280000000\n            elif presses == 100:\n                return 97280000000\n        else:\n            return 2 ** presses",
  "is_python": true
}