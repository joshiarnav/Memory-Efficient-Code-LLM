{
  "problem_idx": 2320,
  "task_name": "Count Number of Ways to Place Houses",
  "markdown_description": "\nThere is a street with `n * 2` **plots**, where there are `n` plots on each side of the street. The plots on each side are numbered from `1` to `n`. On each plot, a house can be placed.\n\n\nReturn *the number of ways houses can be placed such that no two houses are adjacent to each other on the same side of the street*. Since the answer may be very large, return it **modulo** `109 + 7`.\n\n\nNote that if a house is placed on the `ith` plot on one side of the street, a house can also be placed on the `ith` plot on the other side of the street.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** n = 1\n**Output:** 4\n**Explanation:** \nPossible arrangements:\n1. All plots are empty.\n2. A house is placed on one side of the street.\n3. A house is placed on the other side of the street.\n4. Two houses are placed, one on each side of the street.\n\n```\n\n**Example 2:**\n\n\n![](https://fastly.jsdelivr.net/gh/doocs/leetcode@main/solution/2300-2399/2320.Count%20Number%20of%20Ways%20to%20Place%20Houses/images/arrangements.png)\n\n```\n\n**Input:** n = 2\n**Output:** 9\n**Explanation:** The 9 possible arrangements are shown in the diagram above.\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `1 <= n <= 104`\n\n\n",
  "canonical_solution": "class Solution:\n    def countHousePlacements(self, n: int) -> int:\n        mod = 10**9 + 7\n        f = [1] * n\n        g = [1] * n\n        for i in range(1, n):\n            f[i] = g[i - 1]\n            g[i] = (f[i - 1] + g[i - 1]) % mod\n        v = f[-1] + g[-1]\n        return v * v % mod\n",
  "test_case_generator": "\nimport random\n\nclass Solution:\n    def countHousePlacements(self, n: int) -> int:\n        mod = 10**9 + 7\n        f = [1] * n\n        g = [1] * n\n        for i in range(1, n):\n            f[i] = g[i - 1]\n            g[i] = (f[i - 1] + g[i - 1]) % mod\n        v = f[-1] + g[-1]\n        return v * v % mod\n\ndef generate_test_case():\n    solution = Solution()\n    \n    # Generate a random value for n\n    n = random.randint(1, 10001)\n    \n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.countHousePlacements(n)\n\n    return n, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        n, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.countHousePlacements(n) == expected_result\n        print(f\"assert solution.countHousePlacements({n}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.countHousePlacements({n}) == {expected_result}\") # Construct the test case in the same format as the example\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100 # Generate 100 test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.countHousePlacements(3158) == 812112002\nassert solution.countHousePlacements(1532) == 898135085\nassert solution.countHousePlacements(3915) == 364950654\nassert solution.countHousePlacements(3054) == 530749622\nassert solution.countHousePlacements(739) == 699469445\nassert solution.countHousePlacements(6937) == 705143542\nassert solution.countHousePlacements(2261) == 737437495\nassert solution.countHousePlacements(9403) == 782542692\nassert solution.countHousePlacements(1373) == 234439399\nassert solution.countHousePlacements(4664) == 867009984\nassert solution.countHousePlacements(4231) == 681741533\nassert solution.countHousePlacements(1574) == 11696118\nassert solution.countHousePlacements(4768) == 687387637\nassert solution.countHousePlacements(6852) == 840051326\nassert solution.countHousePlacements(3969) == 917890625\nassert solution.countHousePlacements(1833) == 750299089\nassert solution.countHousePlacements(8516) == 633932559\nassert solution.countHousePlacements(3563) == 782321836\nassert solution.countHousePlacements(6530) == 789147434\nassert solution.countHousePlacements(2507) == 714281438\nassert solution.countHousePlacements(2230) == 333071464\nassert solution.countHousePlacements(8943) == 39457226\nassert solution.countHousePlacements(5833) == 633318249\nassert solution.countHousePlacements(5957) == 643657865\nassert solution.countHousePlacements(8262) == 919358266\nassert solution.countHousePlacements(987) == 924697999\nassert solution.countHousePlacements(105) == 645099809\nassert solution.countHousePlacements(8769) == 573145077\nassert solution.countHousePlacements(4832) == 397457406\nassert solution.countHousePlacements(5071) == 876913007\nassert solution.countHousePlacements(8832) == 392019068\nassert solution.countHousePlacements(1917) == 142755620\nassert solution.countHousePlacements(5643) == 656075601\nassert solution.countHousePlacements(3500) == 443066861\nassert solution.countHousePlacements(9652) == 212240342\nassert solution.countHousePlacements(8101) == 167891029\nassert solution.countHousePlacements(4386) == 594191124\nassert solution.countHousePlacements(4915) == 409678570\nassert solution.countHousePlacements(3979) == 530206468\nassert solution.countHousePlacements(3487) == 439505659\nassert solution.countHousePlacements(7465) == 976382486\nassert solution.countHousePlacements(9309) == 870566780\nassert solution.countHousePlacements(9299) == 910358439\nassert solution.countHousePlacements(8393) == 391795048\nassert solution.countHousePlacements(8286) == 667469489\nassert solution.countHousePlacements(278) == 485980333\nassert solution.countHousePlacements(5137) == 531890906\nassert solution.countHousePlacements(9591) == 642541972\nassert solution.countHousePlacements(3452) == 272852339\nassert solution.countHousePlacements(9483) == 519526263\nassert solution.countHousePlacements(3675) == 73906101\nassert solution.countHousePlacements(7468) == 176140258\nassert solution.countHousePlacements(3757) == 565019958\nassert solution.countHousePlacements(1468) == 826435439\nassert solution.countHousePlacements(3132) == 634581464\nassert solution.countHousePlacements(6056) == 652963575\nassert solution.countHousePlacements(7182) == 450493350\nassert solution.countHousePlacements(3283) == 226989000\nassert solution.countHousePlacements(3776) == 870242320\nassert solution.countHousePlacements(3197) == 869414658\nassert solution.countHousePlacements(2541) == 874502391\nassert solution.countHousePlacements(79) == 195174988\nassert solution.countHousePlacements(8934) == 85558975\nassert solution.countHousePlacements(5771) == 580576054\nassert solution.countHousePlacements(5075) == 75821389\nassert solution.countHousePlacements(6286) == 191134411\nassert solution.countHousePlacements(9354) == 552804443\nassert solution.countHousePlacements(6712) == 238582891\nassert solution.countHousePlacements(264) == 592527178\nassert solution.countHousePlacements(1821) == 586845646\nassert solution.countHousePlacements(8165) == 514224799\nassert solution.countHousePlacements(2913) == 886792753\nassert solution.countHousePlacements(4449) == 682758105\nassert solution.countHousePlacements(8045) == 702529506\nassert solution.countHousePlacements(8181) == 1610023\nassert solution.countHousePlacements(1930) == 656007347\nassert solution.countHousePlacements(3135) == 522592676\nassert solution.countHousePlacements(2413) == 336069833\nassert solution.countHousePlacements(6117) == 814498072\nassert solution.countHousePlacements(4157) == 44208473\nassert solution.countHousePlacements(7041) == 491588168\nassert solution.countHousePlacements(5812) == 956286628\nassert solution.countHousePlacements(9266) == 892898316\nassert solution.countHousePlacements(2484) == 319713326\nassert solution.countHousePlacements(6123) == 241731195\nassert solution.countHousePlacements(1112) == 674696236\nassert solution.countHousePlacements(898) == 176958960\nassert solution.countHousePlacements(9618) == 50559220\nassert solution.countHousePlacements(3484) == 38260694\nassert solution.countHousePlacements(8860) == 62524701\nassert solution.countHousePlacements(4899) == 677457435\nassert solution.countHousePlacements(9803) == 868763553\nassert solution.countHousePlacements(2436) == 189773877\nassert solution.countHousePlacements(5937) == 930405907\nassert solution.countHousePlacements(8214) == 369382467\nassert solution.countHousePlacements(2539) == 739871300\nassert solution.countHousePlacements(8098) == 693103514\nassert solution.countHousePlacements(2494) == 701580431\nassert solution.countHousePlacements(4385) == 593173623\nassert solution.countHousePlacements(4526) == 947063471",
  "inefficient_solution": "class Solution:\n    def countHousePlacements(self, n: int) -> int:\n        mod = 10**9 + 7\n        f = [1] * (n * 10**6)  # Excessive memory allocation\n        g = [1] * (n * 10**6)\n        for i in range(1, n):\n            f[i] = g[i - 1]\n            g[i] = (f[i - 1] + g[i - 1]) % mod\n        v = f[n-1] + g[n-1]\n        return v * v % mod",
  "is_python": true
}