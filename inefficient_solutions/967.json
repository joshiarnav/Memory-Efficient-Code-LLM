{
  "problem_idx": 967,
  "task_name": "Numbers With Same Consecutive Differences",
  "markdown_description": "\nGiven two integers n and k, return *an array of all the integers of length* `n` *where the difference between every two consecutive digits is* `k`. You may return the answer in **any order**.\n\n\nNote that the integers should not have leading zeros. Integers as `02` and `043` are not allowed.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** n = 3, k = 7\n**Output:** [181,292,707,818,929]\n**Explanation:** Note that 070 is not a valid number, because it has leading zeroes.\n\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** n = 2, k = 1\n**Output:** [10,12,21,23,32,34,43,45,54,56,65,67,76,78,87,89,98]\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `2 <= n <= 9`\n* `0 <= k <= 9`\n\n\n",
  "canonical_solution": "class Solution:\n    def numsSameConsecDiff(self, n: int, k: int) -> List[int]:\n        ans = []\n\n        def dfs(n, k, t):\n            if n == 0:\n                ans.append(t)\n                return\n            last = t % 10\n            if last + k <= 9:\n                dfs(n - 1, k, t * 10 + last + k)\n            if last - k >= 0 and k != 0:\n                dfs(n - 1, k, t * 10 + last - k)\n\n        for i in range(1, 10):\n            dfs(n - 1, k, i)\n        return ans\n",
  "test_case_generator": "\nimport random\n\nclass Solution:\n    def numsSameConsecDiff(self, n, k):\n        ans = []\n\n        def dfs(n, k, t):\n            if n == 0:\n                ans.append(t)\n                return\n            last = t % 10\n            if last + k <= 9:\n                dfs(n - 1, k, t * 10 + last + k)\n            if last - k >= 0 and k != 0:\n                dfs(n - 1, k, t * 10 + last - k)\n\n        for i in range(1, 10):\n            dfs(n - 1, k, i)\n        return ans\n\ndef generate_test_case():\n    solution = Solution()\n    \n    # Generate random values for n and k\n    n = random.randint(2, 9)\n    k = random.randint(0, 9)\n    \n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.numsSameConsecDiff(n, k)\n\n    return n, k, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        n, k, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.numsSameConsecDiff(n, k) == expected_result\n        print(f\"assert solution.numsSameConsecDiff({n}, {k}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.numsSameConsecDiff({n}, {k}) == {expected_result}\")\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.numsSameConsecDiff(4, 7) == [1818, 2929, 7070, 8181, 9292]\nassert solution.numsSameConsecDiff(8, 5) == [16161616, 27272727, 38383838, 49494949, 50505050, 61616161, 72727272, 83838383, 94949494]\nassert solution.numsSameConsecDiff(6, 6) == [171717, 282828, 393939, 606060, 717171, 828282, 939393]\nassert solution.numsSameConsecDiff(4, 0) == [1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999]\nassert solution.numsSameConsecDiff(7, 4) == [1595959, 1595951, 1595159, 1595151, 1515959, 1515951, 1515159, 1515151, 2626262, 3737373, 4848484, 4848404, 4840484, 4840404, 4048484, 4048404, 4040484, 4040404, 5959595, 5959515, 5951595, 5951515, 5159595, 5159515, 5151595, 5151515, 6262626, 7373737, 8484848, 8484840, 8484048, 8484040, 8404848, 8404840, 8404048, 8404040, 9595959, 9595951, 9595159, 9595151, 9515959, 9515951, 9515159, 9515151]\nassert solution.numsSameConsecDiff(5, 5) == [16161, 27272, 38383, 49494, 50505, 61616, 72727, 83838, 94949]\nassert solution.numsSameConsecDiff(5, 2) == [13579, 13575, 13535, 13531, 13135, 13131, 24686, 24646, 24642, 24246, 24242, 24202, 20246, 20242, 20202, 35797, 35757, 35753, 35357, 35353, 35313, 31357, 31353, 31313, 46868, 46864, 46468, 46464, 46424, 46420, 42468, 42464, 42424, 42420, 42024, 42020, 57979, 57975, 57579, 57575, 57535, 57531, 53579, 53575, 53535, 53531, 53135, 53131, 68686, 68646, 68642, 64686, 64646, 64642, 64246, 64242, 64202, 79797, 79757, 79753, 75797, 75757, 75753, 75357, 75353, 75313, 86868, 86864, 86468, 86464, 86424, 86420, 97979, 97975, 97579, 97575, 97535, 97531]\nassert solution.numsSameConsecDiff(5, 6) == [17171, 28282, 39393, 60606, 71717, 82828, 93939]\nassert solution.numsSameConsecDiff(8, 5) == [16161616, 27272727, 38383838, 49494949, 50505050, 61616161, 72727272, 83838383, 94949494]\nassert solution.numsSameConsecDiff(3, 2) == [135, 131, 246, 242, 202, 357, 353, 313, 468, 464, 424, 420, 579, 575, 535, 531, 686, 646, 642, 797, 757, 753, 868, 864, 979, 975]\nassert solution.numsSameConsecDiff(8, 4) == [15959595, 15959515, 15951595, 15951515, 15159595, 15159515, 15151595, 15151515, 26262626, 37373737, 48484848, 48484840, 48484048, 48484040, 48404848, 48404840, 48404048, 48404040, 40484848, 40484840, 40484048, 40484040, 40404848, 40404840, 40404048, 40404040, 59595959, 59595951, 59595159, 59595151, 59515959, 59515951, 59515159, 59515151, 51595959, 51595951, 51595159, 51595151, 51515959, 51515951, 51515159, 51515151, 62626262, 73737373, 84848484, 84848404, 84840484, 84840404, 84048484, 84048404, 84040484, 84040404, 95959595, 95959515, 95951595, 95951515, 95159595, 95159515, 95151595, 95151515]\nassert solution.numsSameConsecDiff(7, 4) == [1595959, 1595951, 1595159, 1595151, 1515959, 1515951, 1515159, 1515151, 2626262, 3737373, 4848484, 4848404, 4840484, 4840404, 4048484, 4048404, 4040484, 4040404, 5959595, 5959515, 5951595, 5951515, 5159595, 5159515, 5151595, 5151515, 6262626, 7373737, 8484848, 8484840, 8484048, 8484040, 8404848, 8404840, 8404048, 8404040, 9595959, 9595951, 9595159, 9595151, 9515959, 9515951, 9515159, 9515151]\nassert solution.numsSameConsecDiff(5, 5) == [16161, 27272, 38383, 49494, 50505, 61616, 72727, 83838, 94949]\nassert solution.numsSameConsecDiff(7, 9) == [9090909]\nassert solution.numsSameConsecDiff(8, 1) == [12345678, 12345676, 12345656, 12345654, 12345456, 12345454, 12345434, 12345432, 12343456, 12343454, 12343434, 12343432, 12343234, 12343232, 12343212, 12343210, 12323456, 12323454, 12323434, 12323432, 12323234, 12323232, 12323212, 12323210, 12321234, 12321232, 12321212, 12321210, 12321012, 12321010, 12123456, 12123454, 12123434, 12123432, 12123234, 12123232, 12123212, 12123210, 12121234, 12121232, 12121212, 12121210, 12121012, 12121010, 12101234, 12101232, 12101212, 12101210, 12101012, 12101010, 10123456, 10123454, 10123434, 10123432, 10123234, 10123232, 10123212, 10123210, 10121234, 10121232, 10121212, 10121210, 10121012, 10121010, 10101234, 10101232, 10101212, 10101210, 10101012, 10101010, 23456789, 23456787, 23456767, 23456765, 23456567, 23456565, 23456545, 23456543, 23454567, 23454565, 23454545, 23454543, 23454345, 23454343, 23454323, 23454321, 23434567, 23434565, 23434545, 23434543, 23434345, 23434343, 23434323, 23434321, 23432345, 23432343, 23432323, 23432321, 23432123, 23432121, 23432101, 23234567, 23234565, 23234545, 23234543, 23234345, 23234343, 23234323, 23234321, 23232345, 23232343, 23232323, 23232321, 23232123, 23232121, 23232101, 23212345, 23212343, 23212323, 23212321, 23212123, 23212121, 23212101, 23210123, 23210121, 23210101, 21234567, 21234565, 21234545, 21234543, 21234345, 21234343, 21234323, 21234321, 21232345, 21232343, 21232323, 21232321, 21232123, 21232121, 21232101, 21212345, 21212343, 21212323, 21212321, 21212123, 21212121, 21212101, 21210123, 21210121, 21210101, 21012345, 21012343, 21012323, 21012321, 21012123, 21012121, 21012101, 21010123, 21010121, 21010101, 34567898, 34567878, 34567876, 34567678, 34567676, 34567656, 34567654, 34565678, 34565676, 34565656, 34565654, 34565456, 34565454, 34565434, 34565432, 34545678, 34545676, 34545656, 34545654, 34545456, 34545454, 34545434, 34545432, 34543456, 34543454, 34543434, 34543432, 34543234, 34543232, 34543212, 34543210, 34345678, 34345676, 34345656, 34345654, 34345456, 34345454, 34345434, 34345432, 34343456, 34343454, 34343434, 34343432, 34343234, 34343232, 34343212, 34343210, 34323456, 34323454, 34323434, 34323432, 34323234, 34323232, 34323212, 34323210, 34321234, 34321232, 34321212, 34321210, 34321012, 34321010, 32345678, 32345676, 32345656, 32345654, 32345456, 32345454, 32345434, 32345432, 32343456, 32343454, 32343434, 32343432, 32343234, 32343232, 32343212, 32343210, 32323456, 32323454, 32323434, 32323432, 32323234, 32323232, 32323212, 32323210, 32321234, 32321232, 32321212, 32321210, 32321012, 32321010, 32123456, 32123454, 32123434, 32123432, 32123234, 32123232, 32123212, 32123210, 32121234, 32121232, 32121212, 32121210, 32121012, 32121010, 32101234, 32101232, 32101212, 32101210, 32101012, 32101010, 45678989, 45678987, 45678789, 45678787, 45678767, 45678765, 45676789, 45676787, 45676767, 45676765, 45676567, 45676565, 45676545, 45676543, 45656789, 45656787, 45656767, 45656765, 45656567, 45656565, 45656545, 45656543, 45654567, 45654565, 45654545, 45654543, 45654345, 45654343, 45654323, 45654321, 45456789, 45456787, 45456767, 45456765, 45456567, 45456565, 45456545, 45456543, 45454567, 45454565, 45454545, 45454543, 45454345, 45454343, 45454323, 45454321, 45434567, 45434565, 45434545, 45434543, 45434345, 45434343, 45434323, 45434321, 45432345, 45432343, 45432323, 45432321, 45432123, 45432121, 45432101, 43456789, 43456787, 43456767, 43456765, 43456567, 43456565, 43456545, 43456543, 43454567, 43454565, 43454545, 43454543, 43454345, 43454343, 43454323, 43454321, 43434567, 43434565, 43434545, 43434543, 43434345, 43434343, 43434323, 43434321, 43432345, 43432343, 43432323, 43432321, 43432123, 43432121, 43432101, 43234567, 43234565, 43234545, 43234543, 43234345, 43234343, 43234323, 43234321, 43232345, 43232343, 43232323, 43232321, 43232123, 43232121, 43232101, 43212345, 43212343, 43212323, 43212321, 43212123, 43212121, 43212101, 43210123, 43210121, 43210101, 56789898, 56789878, 56789876, 56787898, 56787878, 56787876, 56787678, 56787676, 56787656, 56787654, 56767898, 56767878, 56767876, 56767678, 56767676, 56767656, 56767654, 56765678, 56765676, 56765656, 56765654, 56765456, 56765454, 56765434, 56765432, 56567898, 56567878, 56567876, 56567678, 56567676, 56567656, 56567654, 56565678, 56565676, 56565656, 56565654, 56565456, 56565454, 56565434, 56565432, 56545678, 56545676, 56545656, 56545654, 56545456, 56545454, 56545434, 56545432, 56543456, 56543454, 56543434, 56543432, 56543234, 56543232, 56543212, 56543210, 54567898, 54567878, 54567876, 54567678, 54567676, 54567656, 54567654, 54565678, 54565676, 54565656, 54565654, 54565456, 54565454, 54565434, 54565432, 54545678, 54545676, 54545656, 54545654, 54545456, 54545454, 54545434, 54545432, 54543456, 54543454, 54543434, 54543432, 54543234, 54543232, 54543212, 54543210, 54345678, 54345676, 54345656, 54345654, 54345456, 54345454, 54345434, 54345432, 54343456, 54343454, 54343434, 54343432, 54343234, 54343232, 54343212, 54343210, 54323456, 54323454, 54323434, 54323432, 54323234, 54323232, 54323212, 54323210, 54321234, 54321232, 54321212, 54321210, 54321012, 54321010, 67898989, 67898987, 67898789, 67898787, 67898767, 67898765, 67878989, 67878987, 67878789, 67878787, 67878767, 67878765, 67876789, 67876787, 67876767, 67876765, 67876567, 67876565, 67876545, 67876543, 67678989, 67678987, 67678789, 67678787, 67678767, 67678765, 67676789, 67676787, 67676767, 67676765, 67676567, 67676565, 67676545, 67676543, 67656789, 67656787, 67656767, 67656765, 67656567, 67656565, 67656545, 67656543, 67654567, 67654565, 67654545, 67654543, 67654345, 67654343, 67654323, 67654321, 65678989, 65678987, 65678789, 65678787, 65678767, 65678765, 65676789, 65676787, 65676767, 65676765, 65676567, 65676565, 65676545, 65676543, 65656789, 65656787, 65656767, 65656765, 65656567, 65656565, 65656545, 65656543, 65654567, 65654565, 65654545, 65654543, 65654345, 65654343, 65654323, 65654321, 65456789, 65456787, 65456767, 65456765, 65456567, 65456565, 65456545, 65456543, 65454567, 65454565, 65454545, 65454543, 65454345, 65454343, 65454323, 65454321, 65434567, 65434565, 65434545, 65434543, 65434345, 65434343, 65434323, 65434321, 65432345, 65432343, 65432323, 65432321, 65432123, 65432121, 65432101, 78989898, 78989878, 78989876, 78987898, 78987878, 78987876, 78987678, 78987676, 78987656, 78987654, 78789898, 78789878, 78789876, 78787898, 78787878, 78787876, 78787678, 78787676, 78787656, 78787654, 78767898, 78767878, 78767876, 78767678, 78767676, 78767656, 78767654, 78765678, 78765676, 78765656, 78765654, 78765456, 78765454, 78765434, 78765432, 76789898, 76789878, 76789876, 76787898, 76787878, 76787876, 76787678, 76787676, 76787656, 76787654, 76767898, 76767878, 76767876, 76767678, 76767676, 76767656, 76767654, 76765678, 76765676, 76765656, 76765654, 76765456, 76765454, 76765434, 76765432, 76567898, 76567878, 76567876, 76567678, 76567676, 76567656, 76567654, 76565678, 76565676, 76565656, 76565654, 76565456, 76565454, 76565434, 76565432, 76545678, 76545676, 76545656, 76545654, 76545456, 76545454, 76545434, 76545432, 76543456, 76543454, 76543434, 76543432, 76543234, 76543232, 76543212, 76543210, 89898989, 89898987, 89898789, 89898787, 89898767, 89898765, 89878989, 89878987, 89878789, 89878787, 89878767, 89878765, 89876789, 89876787, 89876767, 89876765, 89876567, 89876565, 89876545, 89876543, 87898989, 87898987, 87898789, 87898787, 87898767, 87898765, 87878989, 87878987, 87878789, 87878787, 87878767, 87878765, 87876789, 87876787, 87876767, 87876765, 87876567, 87876565, 87876545, 87876543, 87678989, 87678987, 87678789, 87678787, 87678767, 87678765, 87676789, 87676787, 87676767, 87676765, 87676567, 87676565, 87676545, 87676543, 87656789, 87656787, 87656767, 87656765, 87656567, 87656565, 87656545, 87656543, 87654567, 87654565, 87654545, 87654543, 87654345, 87654343, 87654323, 87654321, 98989898, 98989878, 98989876, 98987898, 98987878, 98987876, 98987678, 98987676, 98987656, 98987654, 98789898, 98789878, 98789876, 98787898, 98787878, 98787876, 98787678, 98787676, 98787656, 98787654, 98767898, 98767878, 98767876, 98767678, 98767676, 98767656, 98767654, 98765678, 98765676, 98765656, 98765654, 98765456, 98765454, 98765434, 98765432]\nassert solution.numsSameConsecDiff(4, 9) == [9090]\nassert solution.numsSameConsecDiff(5, 7) == [18181, 29292, 70707, 81818, 92929]\nassert solution.numsSameConsecDiff(6, 7) == [181818, 292929, 707070, 818181, 929292]\nassert solution.numsSameConsecDiff(7, 3) == [1474747, 1474741, 1474147, 1474141, 1414747, 1414741, 1414147, 1414141, 2585858, 2585852, 2585258, 2585252, 2525858, 2525852, 2525258, 2525252, 3696969, 3696963, 3696369, 3696363, 3696303, 3636969, 3636963, 3636369, 3636363, 3636303, 3630369, 3630363, 3630303, 3036969, 3036963, 3036369, 3036363, 3036303, 3030369, 3030363, 3030303, 4747474, 4747414, 4741474, 4741414, 4147474, 4147414, 4141474, 4141414, 5858585, 5858525, 5852585, 5852525, 5258585, 5258525, 5252585, 5252525, 6969696, 6969636, 6969630, 6963696, 6963636, 6963630, 6963036, 6963030, 6369696, 6369636, 6369630, 6363696, 6363636, 6363630, 6363036, 6363030, 6303696, 6303636, 6303630, 6303036, 6303030, 7474747, 7474741, 7474147, 7474141, 7414747, 7414741, 7414147, 7414141, 8585858, 8585852, 8585258, 8585252, 8525858, 8525852, 8525258, 8525252, 9696969, 9696963, 9696369, 9696363, 9696303, 9636969, 9636963, 9636369, 9636363, 9636303, 9630369, 9630363, 9630303]\nassert solution.numsSameConsecDiff(5, 5) == [16161, 27272, 38383, 49494, 50505, 61616, 72727, 83838, 94949]\nassert solution.numsSameConsecDiff(5, 6) == [17171, 28282, 39393, 60606, 71717, 82828, 93939]\nassert solution.numsSameConsecDiff(4, 3) == [1474, 1414, 2585, 2525, 3696, 3636, 3630, 3036, 3030, 4747, 4741, 4147, 4141, 5858, 5852, 5258, 5252, 6969, 6963, 6369, 6363, 6303, 7474, 7414, 8585, 8525, 9696, 9636, 9630]\nassert solution.numsSameConsecDiff(3, 1) == [123, 121, 101, 234, 232, 212, 210, 345, 343, 323, 321, 456, 454, 434, 432, 567, 565, 545, 543, 678, 676, 656, 654, 789, 787, 767, 765, 898, 878, 876, 989, 987]\nassert solution.numsSameConsecDiff(9, 7) == [181818181, 292929292, 707070707, 818181818, 929292929]\nassert solution.numsSameConsecDiff(3, 3) == [147, 141, 258, 252, 369, 363, 303, 474, 414, 585, 525, 696, 636, 630, 747, 741, 858, 852, 969, 963]\nassert solution.numsSameConsecDiff(4, 8) == [1919, 8080, 9191]\nassert solution.numsSameConsecDiff(4, 2) == [1357, 1353, 1313, 2468, 2464, 2424, 2420, 2024, 2020, 3579, 3575, 3535, 3531, 3135, 3131, 4686, 4646, 4642, 4246, 4242, 4202, 5797, 5757, 5753, 5357, 5353, 5313, 6868, 6864, 6468, 6464, 6424, 6420, 7979, 7975, 7579, 7575, 7535, 7531, 8686, 8646, 8642, 9797, 9757, 9753]\nassert solution.numsSameConsecDiff(2, 3) == [14, 25, 36, 30, 47, 41, 58, 52, 69, 63, 74, 85, 96]\nassert solution.numsSameConsecDiff(3, 9) == [909]\nassert solution.numsSameConsecDiff(3, 5) == [161, 272, 383, 494, 505, 616, 727, 838, 949]\nassert solution.numsSameConsecDiff(8, 5) == [16161616, 27272727, 38383838, 49494949, 50505050, 61616161, 72727272, 83838383, 94949494]\nassert solution.numsSameConsecDiff(2, 5) == [16, 27, 38, 49, 50, 61, 72, 83, 94]\nassert solution.numsSameConsecDiff(5, 0) == [11111, 22222, 33333, 44444, 55555, 66666, 77777, 88888, 99999]\nassert solution.numsSameConsecDiff(6, 5) == [161616, 272727, 383838, 494949, 505050, 616161, 727272, 838383, 949494]\nassert solution.numsSameConsecDiff(9, 4) == [159595959, 159595951, 159595159, 159595151, 159515959, 159515951, 159515159, 159515151, 151595959, 151595951, 151595159, 151595151, 151515959, 151515951, 151515159, 151515151, 262626262, 373737373, 484848484, 484848404, 484840484, 484840404, 484048484, 484048404, 484040484, 484040404, 404848484, 404848404, 404840484, 404840404, 404048484, 404048404, 404040484, 404040404, 595959595, 595959515, 595951595, 595951515, 595159595, 595159515, 595151595, 595151515, 515959595, 515959515, 515951595, 515951515, 515159595, 515159515, 515151595, 515151515, 626262626, 737373737, 848484848, 848484840, 848484048, 848484040, 848404848, 848404840, 848404048, 848404040, 840484848, 840484840, 840484048, 840484040, 840404848, 840404840, 840404048, 840404040, 959595959, 959595951, 959595159, 959595151, 959515959, 959515951, 959515159, 959515151, 951595959, 951595951, 951595159, 951595151, 951515959, 951515951, 951515159, 951515151]\nassert solution.numsSameConsecDiff(3, 1) == [123, 121, 101, 234, 232, 212, 210, 345, 343, 323, 321, 456, 454, 434, 432, 567, 565, 545, 543, 678, 676, 656, 654, 789, 787, 767, 765, 898, 878, 876, 989, 987]\nassert solution.numsSameConsecDiff(6, 6) == [171717, 282828, 393939, 606060, 717171, 828282, 939393]\nassert solution.numsSameConsecDiff(3, 4) == [159, 151, 262, 373, 484, 404, 595, 515, 626, 737, 848, 840, 959, 951]\nassert solution.numsSameConsecDiff(6, 1) == [123456, 123454, 123434, 123432, 123234, 123232, 123212, 123210, 121234, 121232, 121212, 121210, 121012, 121010, 101234, 101232, 101212, 101210, 101012, 101010, 234567, 234565, 234545, 234543, 234345, 234343, 234323, 234321, 232345, 232343, 232323, 232321, 232123, 232121, 232101, 212345, 212343, 212323, 212321, 212123, 212121, 212101, 210123, 210121, 210101, 345678, 345676, 345656, 345654, 345456, 345454, 345434, 345432, 343456, 343454, 343434, 343432, 343234, 343232, 343212, 343210, 323456, 323454, 323434, 323432, 323234, 323232, 323212, 323210, 321234, 321232, 321212, 321210, 321012, 321010, 456789, 456787, 456767, 456765, 456567, 456565, 456545, 456543, 454567, 454565, 454545, 454543, 454345, 454343, 454323, 454321, 434567, 434565, 434545, 434543, 434345, 434343, 434323, 434321, 432345, 432343, 432323, 432321, 432123, 432121, 432101, 567898, 567878, 567876, 567678, 567676, 567656, 567654, 565678, 565676, 565656, 565654, 565456, 565454, 565434, 565432, 545678, 545676, 545656, 545654, 545456, 545454, 545434, 545432, 543456, 543454, 543434, 543432, 543234, 543232, 543212, 543210, 678989, 678987, 678789, 678787, 678767, 678765, 676789, 676787, 676767, 676765, 676567, 676565, 676545, 676543, 656789, 656787, 656767, 656765, 656567, 656565, 656545, 656543, 654567, 654565, 654545, 654543, 654345, 654343, 654323, 654321, 789898, 789878, 789876, 787898, 787878, 787876, 787678, 787676, 787656, 787654, 767898, 767878, 767876, 767678, 767676, 767656, 767654, 765678, 765676, 765656, 765654, 765456, 765454, 765434, 765432, 898989, 898987, 898789, 898787, 898767, 898765, 878989, 878987, 878789, 878787, 878767, 878765, 876789, 876787, 876767, 876765, 876567, 876565, 876545, 876543, 989898, 989878, 989876, 987898, 987878, 987876, 987678, 987676, 987656, 987654]\nassert solution.numsSameConsecDiff(6, 0) == [111111, 222222, 333333, 444444, 555555, 666666, 777777, 888888, 999999]\nassert solution.numsSameConsecDiff(7, 6) == [1717171, 2828282, 3939393, 6060606, 7171717, 8282828, 9393939]\nassert solution.numsSameConsecDiff(3, 8) == [191, 808, 919]\nassert solution.numsSameConsecDiff(7, 1) == [1234567, 1234565, 1234545, 1234543, 1234345, 1234343, 1234323, 1234321, 1232345, 1232343, 1232323, 1232321, 1232123, 1232121, 1232101, 1212345, 1212343, 1212323, 1212321, 1212123, 1212121, 1212101, 1210123, 1210121, 1210101, 1012345, 1012343, 1012323, 1012321, 1012123, 1012121, 1012101, 1010123, 1010121, 1010101, 2345678, 2345676, 2345656, 2345654, 2345456, 2345454, 2345434, 2345432, 2343456, 2343454, 2343434, 2343432, 2343234, 2343232, 2343212, 2343210, 2323456, 2323454, 2323434, 2323432, 2323234, 2323232, 2323212, 2323210, 2321234, 2321232, 2321212, 2321210, 2321012, 2321010, 2123456, 2123454, 2123434, 2123432, 2123234, 2123232, 2123212, 2123210, 2121234, 2121232, 2121212, 2121210, 2121012, 2121010, 2101234, 2101232, 2101212, 2101210, 2101012, 2101010, 3456789, 3456787, 3456767, 3456765, 3456567, 3456565, 3456545, 3456543, 3454567, 3454565, 3454545, 3454543, 3454345, 3454343, 3454323, 3454321, 3434567, 3434565, 3434545, 3434543, 3434345, 3434343, 3434323, 3434321, 3432345, 3432343, 3432323, 3432321, 3432123, 3432121, 3432101, 3234567, 3234565, 3234545, 3234543, 3234345, 3234343, 3234323, 3234321, 3232345, 3232343, 3232323, 3232321, 3232123, 3232121, 3232101, 3212345, 3212343, 3212323, 3212321, 3212123, 3212121, 3212101, 3210123, 3210121, 3210101, 4567898, 4567878, 4567876, 4567678, 4567676, 4567656, 4567654, 4565678, 4565676, 4565656, 4565654, 4565456, 4565454, 4565434, 4565432, 4545678, 4545676, 4545656, 4545654, 4545456, 4545454, 4545434, 4545432, 4543456, 4543454, 4543434, 4543432, 4543234, 4543232, 4543212, 4543210, 4345678, 4345676, 4345656, 4345654, 4345456, 4345454, 4345434, 4345432, 4343456, 4343454, 4343434, 4343432, 4343234, 4343232, 4343212, 4343210, 4323456, 4323454, 4323434, 4323432, 4323234, 4323232, 4323212, 4323210, 4321234, 4321232, 4321212, 4321210, 4321012, 4321010, 5678989, 5678987, 5678789, 5678787, 5678767, 5678765, 5676789, 5676787, 5676767, 5676765, 5676567, 5676565, 5676545, 5676543, 5656789, 5656787, 5656767, 5656765, 5656567, 5656565, 5656545, 5656543, 5654567, 5654565, 5654545, 5654543, 5654345, 5654343, 5654323, 5654321, 5456789, 5456787, 5456767, 5456765, 5456567, 5456565, 5456545, 5456543, 5454567, 5454565, 5454545, 5454543, 5454345, 5454343, 5454323, 5454321, 5434567, 5434565, 5434545, 5434543, 5434345, 5434343, 5434323, 5434321, 5432345, 5432343, 5432323, 5432321, 5432123, 5432121, 5432101, 6789898, 6789878, 6789876, 6787898, 6787878, 6787876, 6787678, 6787676, 6787656, 6787654, 6767898, 6767878, 6767876, 6767678, 6767676, 6767656, 6767654, 6765678, 6765676, 6765656, 6765654, 6765456, 6765454, 6765434, 6765432, 6567898, 6567878, 6567876, 6567678, 6567676, 6567656, 6567654, 6565678, 6565676, 6565656, 6565654, 6565456, 6565454, 6565434, 6565432, 6545678, 6545676, 6545656, 6545654, 6545456, 6545454, 6545434, 6545432, 6543456, 6543454, 6543434, 6543432, 6543234, 6543232, 6543212, 6543210, 7898989, 7898987, 7898789, 7898787, 7898767, 7898765, 7878989, 7878987, 7878789, 7878787, 7878767, 7878765, 7876789, 7876787, 7876767, 7876765, 7876567, 7876565, 7876545, 7876543, 7678989, 7678987, 7678789, 7678787, 7678767, 7678765, 7676789, 7676787, 7676767, 7676765, 7676567, 7676565, 7676545, 7676543, 7656789, 7656787, 7656767, 7656765, 7656567, 7656565, 7656545, 7656543, 7654567, 7654565, 7654545, 7654543, 7654345, 7654343, 7654323, 7654321, 8989898, 8989878, 8989876, 8987898, 8987878, 8987876, 8987678, 8987676, 8987656, 8987654, 8789898, 8789878, 8789876, 8787898, 8787878, 8787876, 8787678, 8787676, 8787656, 8787654, 8767898, 8767878, 8767876, 8767678, 8767676, 8767656, 8767654, 8765678, 8765676, 8765656, 8765654, 8765456, 8765454, 8765434, 8765432, 9898989, 9898987, 9898789, 9898787, 9898767, 9898765, 9878989, 9878987, 9878789, 9878787, 9878767, 9878765, 9876789, 9876787, 9876767, 9876765, 9876567, 9876565, 9876545, 9876543]\nassert solution.numsSameConsecDiff(5, 9) == [90909]\nassert solution.numsSameConsecDiff(5, 2) == [13579, 13575, 13535, 13531, 13135, 13131, 24686, 24646, 24642, 24246, 24242, 24202, 20246, 20242, 20202, 35797, 35757, 35753, 35357, 35353, 35313, 31357, 31353, 31313, 46868, 46864, 46468, 46464, 46424, 46420, 42468, 42464, 42424, 42420, 42024, 42020, 57979, 57975, 57579, 57575, 57535, 57531, 53579, 53575, 53535, 53531, 53135, 53131, 68686, 68646, 68642, 64686, 64646, 64642, 64246, 64242, 64202, 79797, 79757, 79753, 75797, 75757, 75753, 75357, 75353, 75313, 86868, 86864, 86468, 86464, 86424, 86420, 97979, 97975, 97579, 97575, 97535, 97531]\nassert solution.numsSameConsecDiff(6, 9) == [909090]\nassert solution.numsSameConsecDiff(8, 2) == [13579797, 13579757, 13579753, 13575797, 13575757, 13575753, 13575357, 13575353, 13575313, 13535797, 13535757, 13535753, 13535357, 13535353, 13535313, 13531357, 13531353, 13531313, 13135797, 13135757, 13135753, 13135357, 13135353, 13135313, 13131357, 13131353, 13131313, 24686868, 24686864, 24686468, 24686464, 24686424, 24686420, 24646868, 24646864, 24646468, 24646464, 24646424, 24646420, 24642468, 24642464, 24642424, 24642420, 24642024, 24642020, 24246868, 24246864, 24246468, 24246464, 24246424, 24246420, 24242468, 24242464, 24242424, 24242420, 24242024, 24242020, 24202468, 24202464, 24202424, 24202420, 24202024, 24202020, 20246868, 20246864, 20246468, 20246464, 20246424, 20246420, 20242468, 20242464, 20242424, 20242420, 20242024, 20242020, 20202468, 20202464, 20202424, 20202420, 20202024, 20202020, 35797979, 35797975, 35797579, 35797575, 35797535, 35797531, 35757979, 35757975, 35757579, 35757575, 35757535, 35757531, 35753579, 35753575, 35753535, 35753531, 35753135, 35753131, 35357979, 35357975, 35357579, 35357575, 35357535, 35357531, 35353579, 35353575, 35353535, 35353531, 35353135, 35353131, 35313579, 35313575, 35313535, 35313531, 35313135, 35313131, 31357979, 31357975, 31357579, 31357575, 31357535, 31357531, 31353579, 31353575, 31353535, 31353531, 31353135, 31353131, 31313579, 31313575, 31313535, 31313531, 31313135, 31313131, 46868686, 46868646, 46868642, 46864686, 46864646, 46864642, 46864246, 46864242, 46864202, 46468686, 46468646, 46468642, 46464686, 46464646, 46464642, 46464246, 46464242, 46464202, 46424686, 46424646, 46424642, 46424246, 46424242, 46424202, 46420246, 46420242, 46420202, 42468686, 42468646, 42468642, 42464686, 42464646, 42464642, 42464246, 42464242, 42464202, 42424686, 42424646, 42424642, 42424246, 42424242, 42424202, 42420246, 42420242, 42420202, 42024686, 42024646, 42024642, 42024246, 42024242, 42024202, 42020246, 42020242, 42020202, 57979797, 57979757, 57979753, 57975797, 57975757, 57975753, 57975357, 57975353, 57975313, 57579797, 57579757, 57579753, 57575797, 57575757, 57575753, 57575357, 57575353, 57575313, 57535797, 57535757, 57535753, 57535357, 57535353, 57535313, 57531357, 57531353, 57531313, 53579797, 53579757, 53579753, 53575797, 53575757, 53575753, 53575357, 53575353, 53575313, 53535797, 53535757, 53535753, 53535357, 53535353, 53535313, 53531357, 53531353, 53531313, 53135797, 53135757, 53135753, 53135357, 53135353, 53135313, 53131357, 53131353, 53131313, 68686868, 68686864, 68686468, 68686464, 68686424, 68686420, 68646868, 68646864, 68646468, 68646464, 68646424, 68646420, 68642468, 68642464, 68642424, 68642420, 68642024, 68642020, 64686868, 64686864, 64686468, 64686464, 64686424, 64686420, 64646868, 64646864, 64646468, 64646464, 64646424, 64646420, 64642468, 64642464, 64642424, 64642420, 64642024, 64642020, 64246868, 64246864, 64246468, 64246464, 64246424, 64246420, 64242468, 64242464, 64242424, 64242420, 64242024, 64242020, 64202468, 64202464, 64202424, 64202420, 64202024, 64202020, 79797979, 79797975, 79797579, 79797575, 79797535, 79797531, 79757979, 79757975, 79757579, 79757575, 79757535, 79757531, 79753579, 79753575, 79753535, 79753531, 79753135, 79753131, 75797979, 75797975, 75797579, 75797575, 75797535, 75797531, 75757979, 75757975, 75757579, 75757575, 75757535, 75757531, 75753579, 75753575, 75753535, 75753531, 75753135, 75753131, 75357979, 75357975, 75357579, 75357575, 75357535, 75357531, 75353579, 75353575, 75353535, 75353531, 75353135, 75353131, 75313579, 75313575, 75313535, 75313531, 75313135, 75313131, 86868686, 86868646, 86868642, 86864686, 86864646, 86864642, 86864246, 86864242, 86864202, 86468686, 86468646, 86468642, 86464686, 86464646, 86464642, 86464246, 86464242, 86464202, 86424686, 86424646, 86424642, 86424246, 86424242, 86424202, 86420246, 86420242, 86420202, 97979797, 97979757, 97979753, 97975797, 97975757, 97975753, 97975357, 97975353, 97975313, 97579797, 97579757, 97579753, 97575797, 97575757, 97575753, 97575357, 97575353, 97575313, 97535797, 97535757, 97535753, 97535357, 97535353, 97535313, 97531357, 97531353, 97531313]\nassert solution.numsSameConsecDiff(2, 9) == [90]\nassert solution.numsSameConsecDiff(9, 7) == [181818181, 292929292, 707070707, 818181818, 929292929]\nassert solution.numsSameConsecDiff(9, 0) == [111111111, 222222222, 333333333, 444444444, 555555555, 666666666, 777777777, 888888888, 999999999]\nassert solution.numsSameConsecDiff(5, 8) == [19191, 80808, 91919]\nassert solution.numsSameConsecDiff(3, 6) == [171, 282, 393, 606, 717, 828, 939]\nassert solution.numsSameConsecDiff(7, 3) == [1474747, 1474741, 1474147, 1474141, 1414747, 1414741, 1414147, 1414141, 2585858, 2585852, 2585258, 2585252, 2525858, 2525852, 2525258, 2525252, 3696969, 3696963, 3696369, 3696363, 3696303, 3636969, 3636963, 3636369, 3636363, 3636303, 3630369, 3630363, 3630303, 3036969, 3036963, 3036369, 3036363, 3036303, 3030369, 3030363, 3030303, 4747474, 4747414, 4741474, 4741414, 4147474, 4147414, 4141474, 4141414, 5858585, 5858525, 5852585, 5852525, 5258585, 5258525, 5252585, 5252525, 6969696, 6969636, 6969630, 6963696, 6963636, 6963630, 6963036, 6963030, 6369696, 6369636, 6369630, 6363696, 6363636, 6363630, 6363036, 6363030, 6303696, 6303636, 6303630, 6303036, 6303030, 7474747, 7474741, 7474147, 7474141, 7414747, 7414741, 7414147, 7414141, 8585858, 8585852, 8585258, 8585252, 8525858, 8525852, 8525258, 8525252, 9696969, 9696963, 9696369, 9696363, 9696303, 9636969, 9636963, 9636369, 9636363, 9636303, 9630369, 9630363, 9630303]\nassert solution.numsSameConsecDiff(9, 8) == [191919191, 808080808, 919191919]\nassert solution.numsSameConsecDiff(6, 2) == [135797, 135757, 135753, 135357, 135353, 135313, 131357, 131353, 131313, 246868, 246864, 246468, 246464, 246424, 246420, 242468, 242464, 242424, 242420, 242024, 242020, 202468, 202464, 202424, 202420, 202024, 202020, 357979, 357975, 357579, 357575, 357535, 357531, 353579, 353575, 353535, 353531, 353135, 353131, 313579, 313575, 313535, 313531, 313135, 313131, 468686, 468646, 468642, 464686, 464646, 464642, 464246, 464242, 464202, 424686, 424646, 424642, 424246, 424242, 424202, 420246, 420242, 420202, 579797, 579757, 579753, 575797, 575757, 575753, 575357, 575353, 575313, 535797, 535757, 535753, 535357, 535353, 535313, 531357, 531353, 531313, 686868, 686864, 686468, 686464, 686424, 686420, 646868, 646864, 646468, 646464, 646424, 646420, 642468, 642464, 642424, 642420, 642024, 642020, 797979, 797975, 797579, 797575, 797535, 797531, 757979, 757975, 757579, 757575, 757535, 757531, 753579, 753575, 753535, 753531, 753135, 753131, 868686, 868646, 868642, 864686, 864646, 864642, 864246, 864242, 864202, 979797, 979757, 979753, 975797, 975757, 975753, 975357, 975353, 975313]\nassert solution.numsSameConsecDiff(6, 2) == [135797, 135757, 135753, 135357, 135353, 135313, 131357, 131353, 131313, 246868, 246864, 246468, 246464, 246424, 246420, 242468, 242464, 242424, 242420, 242024, 242020, 202468, 202464, 202424, 202420, 202024, 202020, 357979, 357975, 357579, 357575, 357535, 357531, 353579, 353575, 353535, 353531, 353135, 353131, 313579, 313575, 313535, 313531, 313135, 313131, 468686, 468646, 468642, 464686, 464646, 464642, 464246, 464242, 464202, 424686, 424646, 424642, 424246, 424242, 424202, 420246, 420242, 420202, 579797, 579757, 579753, 575797, 575757, 575753, 575357, 575353, 575313, 535797, 535757, 535753, 535357, 535353, 535313, 531357, 531353, 531313, 686868, 686864, 686468, 686464, 686424, 686420, 646868, 646864, 646468, 646464, 646424, 646420, 642468, 642464, 642424, 642420, 642024, 642020, 797979, 797975, 797579, 797575, 797535, 797531, 757979, 757975, 757579, 757575, 757535, 757531, 753579, 753575, 753535, 753531, 753135, 753131, 868686, 868646, 868642, 864686, 864646, 864642, 864246, 864242, 864202, 979797, 979757, 979753, 975797, 975757, 975753, 975357, 975353, 975313]\nassert solution.numsSameConsecDiff(6, 5) == [161616, 272727, 383838, 494949, 505050, 616161, 727272, 838383, 949494]\nassert solution.numsSameConsecDiff(3, 6) == [171, 282, 393, 606, 717, 828, 939]\nassert solution.numsSameConsecDiff(5, 5) == [16161, 27272, 38383, 49494, 50505, 61616, 72727, 83838, 94949]\nassert solution.numsSameConsecDiff(7, 7) == [1818181, 2929292, 7070707, 8181818, 9292929]\nassert solution.numsSameConsecDiff(4, 0) == [1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999]\nassert solution.numsSameConsecDiff(9, 8) == [191919191, 808080808, 919191919]\nassert solution.numsSameConsecDiff(8, 9) == [90909090]\nassert solution.numsSameConsecDiff(8, 0) == [11111111, 22222222, 33333333, 44444444, 55555555, 66666666, 77777777, 88888888, 99999999]\nassert solution.numsSameConsecDiff(9, 1) == [123456789, 123456787, 123456767, 123456765, 123456567, 123456565, 123456545, 123456543, 123454567, 123454565, 123454545, 123454543, 123454345, 123454343, 123454323, 123454321, 123434567, 123434565, 123434545, 123434543, 123434345, 123434343, 123434323, 123434321, 123432345, 123432343, 123432323, 123432321, 123432123, 123432121, 123432101, 123234567, 123234565, 123234545, 123234543, 123234345, 123234343, 123234323, 123234321, 123232345, 123232343, 123232323, 123232321, 123232123, 123232121, 123232101, 123212345, 123212343, 123212323, 123212321, 123212123, 123212121, 123212101, 123210123, 123210121, 123210101, 121234567, 121234565, 121234545, 121234543, 121234345, 121234343, 121234323, 121234321, 121232345, 121232343, 121232323, 121232321, 121232123, 121232121, 121232101, 121212345, 121212343, 121212323, 121212321, 121212123, 121212121, 121212101, 121210123, 121210121, 121210101, 121012345, 121012343, 121012323, 121012321, 121012123, 121012121, 121012101, 121010123, 121010121, 121010101, 101234567, 101234565, 101234545, 101234543, 101234345, 101234343, 101234323, 101234321, 101232345, 101232343, 101232323, 101232321, 101232123, 101232121, 101232101, 101212345, 101212343, 101212323, 101212321, 101212123, 101212121, 101212101, 101210123, 101210121, 101210101, 101012345, 101012343, 101012323, 101012321, 101012123, 101012121, 101012101, 101010123, 101010121, 101010101, 234567898, 234567878, 234567876, 234567678, 234567676, 234567656, 234567654, 234565678, 234565676, 234565656, 234565654, 234565456, 234565454, 234565434, 234565432, 234545678, 234545676, 234545656, 234545654, 234545456, 234545454, 234545434, 234545432, 234543456, 234543454, 234543434, 234543432, 234543234, 234543232, 234543212, 234543210, 234345678, 234345676, 234345656, 234345654, 234345456, 234345454, 234345434, 234345432, 234343456, 234343454, 234343434, 234343432, 234343234, 234343232, 234343212, 234343210, 234323456, 234323454, 234323434, 234323432, 234323234, 234323232, 234323212, 234323210, 234321234, 234321232, 234321212, 234321210, 234321012, 234321010, 232345678, 232345676, 232345656, 232345654, 232345456, 232345454, 232345434, 232345432, 232343456, 232343454, 232343434, 232343432, 232343234, 232343232, 232343212, 232343210, 232323456, 232323454, 232323434, 232323432, 232323234, 232323232, 232323212, 232323210, 232321234, 232321232, 232321212, 232321210, 232321012, 232321010, 232123456, 232123454, 232123434, 232123432, 232123234, 232123232, 232123212, 232123210, 232121234, 232121232, 232121212, 232121210, 232121012, 232121010, 232101234, 232101232, 232101212, 232101210, 232101012, 232101010, 212345678, 212345676, 212345656, 212345654, 212345456, 212345454, 212345434, 212345432, 212343456, 212343454, 212343434, 212343432, 212343234, 212343232, 212343212, 212343210, 212323456, 212323454, 212323434, 212323432, 212323234, 212323232, 212323212, 212323210, 212321234, 212321232, 212321212, 212321210, 212321012, 212321010, 212123456, 212123454, 212123434, 212123432, 212123234, 212123232, 212123212, 212123210, 212121234, 212121232, 212121212, 212121210, 212121012, 212121010, 212101234, 212101232, 212101212, 212101210, 212101012, 212101010, 210123456, 210123454, 210123434, 210123432, 210123234, 210123232, 210123212, 210123210, 210121234, 210121232, 210121212, 210121210, 210121012, 210121010, 210101234, 210101232, 210101212, 210101210, 210101012, 210101010, 345678989, 345678987, 345678789, 345678787, 345678767, 345678765, 345676789, 345676787, 345676767, 345676765, 345676567, 345676565, 345676545, 345676543, 345656789, 345656787, 345656767, 345656765, 345656567, 345656565, 345656545, 345656543, 345654567, 345654565, 345654545, 345654543, 345654345, 345654343, 345654323, 345654321, 345456789, 345456787, 345456767, 345456765, 345456567, 345456565, 345456545, 345456543, 345454567, 345454565, 345454545, 345454543, 345454345, 345454343, 345454323, 345454321, 345434567, 345434565, 345434545, 345434543, 345434345, 345434343, 345434323, 345434321, 345432345, 345432343, 345432323, 345432321, 345432123, 345432121, 345432101, 343456789, 343456787, 343456767, 343456765, 343456567, 343456565, 343456545, 343456543, 343454567, 343454565, 343454545, 343454543, 343454345, 343454343, 343454323, 343454321, 343434567, 343434565, 343434545, 343434543, 343434345, 343434343, 343434323, 343434321, 343432345, 343432343, 343432323, 343432321, 343432123, 343432121, 343432101, 343234567, 343234565, 343234545, 343234543, 343234345, 343234343, 343234323, 343234321, 343232345, 343232343, 343232323, 343232321, 343232123, 343232121, 343232101, 343212345, 343212343, 343212323, 343212321, 343212123, 343212121, 343212101, 343210123, 343210121, 343210101, 323456789, 323456787, 323456767, 323456765, 323456567, 323456565, 323456545, 323456543, 323454567, 323454565, 323454545, 323454543, 323454345, 323454343, 323454323, 323454321, 323434567, 323434565, 323434545, 323434543, 323434345, 323434343, 323434323, 323434321, 323432345, 323432343, 323432323, 323432321, 323432123, 323432121, 323432101, 323234567, 323234565, 323234545, 323234543, 323234345, 323234343, 323234323, 323234321, 323232345, 323232343, 323232323, 323232321, 323232123, 323232121, 323232101, 323212345, 323212343, 323212323, 323212321, 323212123, 323212121, 323212101, 323210123, 323210121, 323210101, 321234567, 321234565, 321234545, 321234543, 321234345, 321234343, 321234323, 321234321, 321232345, 321232343, 321232323, 321232321, 321232123, 321232121, 321232101, 321212345, 321212343, 321212323, 321212321, 321212123, 321212121, 321212101, 321210123, 321210121, 321210101, 321012345, 321012343, 321012323, 321012321, 321012123, 321012121, 321012101, 321010123, 321010121, 321010101, 456789898, 456789878, 456789876, 456787898, 456787878, 456787876, 456787678, 456787676, 456787656, 456787654, 456767898, 456767878, 456767876, 456767678, 456767676, 456767656, 456767654, 456765678, 456765676, 456765656, 456765654, 456765456, 456765454, 456765434, 456765432, 456567898, 456567878, 456567876, 456567678, 456567676, 456567656, 456567654, 456565678, 456565676, 456565656, 456565654, 456565456, 456565454, 456565434, 456565432, 456545678, 456545676, 456545656, 456545654, 456545456, 456545454, 456545434, 456545432, 456543456, 456543454, 456543434, 456543432, 456543234, 456543232, 456543212, 456543210, 454567898, 454567878, 454567876, 454567678, 454567676, 454567656, 454567654, 454565678, 454565676, 454565656, 454565654, 454565456, 454565454, 454565434, 454565432, 454545678, 454545676, 454545656, 454545654, 454545456, 454545454, 454545434, 454545432, 454543456, 454543454, 454543434, 454543432, 454543234, 454543232, 454543212, 454543210, 454345678, 454345676, 454345656, 454345654, 454345456, 454345454, 454345434, 454345432, 454343456, 454343454, 454343434, 454343432, 454343234, 454343232, 454343212, 454343210, 454323456, 454323454, 454323434, 454323432, 454323234, 454323232, 454323212, 454323210, 454321234, 454321232, 454321212, 454321210, 454321012, 454321010, 434567898, 434567878, 434567876, 434567678, 434567676, 434567656, 434567654, 434565678, 434565676, 434565656, 434565654, 434565456, 434565454, 434565434, 434565432, 434545678, 434545676, 434545656, 434545654, 434545456, 434545454, 434545434, 434545432, 434543456, 434543454, 434543434, 434543432, 434543234, 434543232, 434543212, 434543210, 434345678, 434345676, 434345656, 434345654, 434345456, 434345454, 434345434, 434345432, 434343456, 434343454, 434343434, 434343432, 434343234, 434343232, 434343212, 434343210, 434323456, 434323454, 434323434, 434323432, 434323234, 434323232, 434323212, 434323210, 434321234, 434321232, 434321212, 434321210, 434321012, 434321010, 432345678, 432345676, 432345656, 432345654, 432345456, 432345454, 432345434, 432345432, 432343456, 432343454, 432343434, 432343432, 432343234, 432343232, 432343212, 432343210, 432323456, 432323454, 432323434, 432323432, 432323234, 432323232, 432323212, 432323210, 432321234, 432321232, 432321212, 432321210, 432321012, 432321010, 432123456, 432123454, 432123434, 432123432, 432123234, 432123232, 432123212, 432123210, 432121234, 432121232, 432121212, 432121210, 432121012, 432121010, 432101234, 432101232, 432101212, 432101210, 432101012, 432101010, 567898989, 567898987, 567898789, 567898787, 567898767, 567898765, 567878989, 567878987, 567878789, 567878787, 567878767, 567878765, 567876789, 567876787, 567876767, 567876765, 567876567, 567876565, 567876545, 567876543, 567678989, 567678987, 567678789, 567678787, 567678767, 567678765, 567676789, 567676787, 567676767, 567676765, 567676567, 567676565, 567676545, 567676543, 567656789, 567656787, 567656767, 567656765, 567656567, 567656565, 567656545, 567656543, 567654567, 567654565, 567654545, 567654543, 567654345, 567654343, 567654323, 567654321, 565678989, 565678987, 565678789, 565678787, 565678767, 565678765, 565676789, 565676787, 565676767, 565676765, 565676567, 565676565, 565676545, 565676543, 565656789, 565656787, 565656767, 565656765, 565656567, 565656565, 565656545, 565656543, 565654567, 565654565, 565654545, 565654543, 565654345, 565654343, 565654323, 565654321, 565456789, 565456787, 565456767, 565456765, 565456567, 565456565, 565456545, 565456543, 565454567, 565454565, 565454545, 565454543, 565454345, 565454343, 565454323, 565454321, 565434567, 565434565, 565434545, 565434543, 565434345, 565434343, 565434323, 565434321, 565432345, 565432343, 565432323, 565432321, 565432123, 565432121, 565432101, 545678989, 545678987, 545678789, 545678787, 545678767, 545678765, 545676789, 545676787, 545676767, 545676765, 545676567, 545676565, 545676545, 545676543, 545656789, 545656787, 545656767, 545656765, 545656567, 545656565, 545656545, 545656543, 545654567, 545654565, 545654545, 545654543, 545654345, 545654343, 545654323, 545654321, 545456789, 545456787, 545456767, 545456765, 545456567, 545456565, 545456545, 545456543, 545454567, 545454565, 545454545, 545454543, 545454345, 545454343, 545454323, 545454321, 545434567, 545434565, 545434545, 545434543, 545434345, 545434343, 545434323, 545434321, 545432345, 545432343, 545432323, 545432321, 545432123, 545432121, 545432101, 543456789, 543456787, 543456767, 543456765, 543456567, 543456565, 543456545, 543456543, 543454567, 543454565, 543454545, 543454543, 543454345, 543454343, 543454323, 543454321, 543434567, 543434565, 543434545, 543434543, 543434345, 543434343, 543434323, 543434321, 543432345, 543432343, 543432323, 543432321, 543432123, 543432121, 543432101, 543234567, 543234565, 543234545, 543234543, 543234345, 543234343, 543234323, 543234321, 543232345, 543232343, 543232323, 543232321, 543232123, 543232121, 543232101, 543212345, 543212343, 543212323, 543212321, 543212123, 543212121, 543212101, 543210123, 543210121, 543210101, 678989898, 678989878, 678989876, 678987898, 678987878, 678987876, 678987678, 678987676, 678987656, 678987654, 678789898, 678789878, 678789876, 678787898, 678787878, 678787876, 678787678, 678787676, 678787656, 678787654, 678767898, 678767878, 678767876, 678767678, 678767676, 678767656, 678767654, 678765678, 678765676, 678765656, 678765654, 678765456, 678765454, 678765434, 678765432, 676789898, 676789878, 676789876, 676787898, 676787878, 676787876, 676787678, 676787676, 676787656, 676787654, 676767898, 676767878, 676767876, 676767678, 676767676, 676767656, 676767654, 676765678, 676765676, 676765656, 676765654, 676765456, 676765454, 676765434, 676765432, 676567898, 676567878, 676567876, 676567678, 676567676, 676567656, 676567654, 676565678, 676565676, 676565656, 676565654, 676565456, 676565454, 676565434, 676565432, 676545678, 676545676, 676545656, 676545654, 676545456, 676545454, 676545434, 676545432, 676543456, 676543454, 676543434, 676543432, 676543234, 676543232, 676543212, 676543210, 656789898, 656789878, 656789876, 656787898, 656787878, 656787876, 656787678, 656787676, 656787656, 656787654, 656767898, 656767878, 656767876, 656767678, 656767676, 656767656, 656767654, 656765678, 656765676, 656765656, 656765654, 656765456, 656765454, 656765434, 656765432, 656567898, 656567878, 656567876, 656567678, 656567676, 656567656, 656567654, 656565678, 656565676, 656565656, 656565654, 656565456, 656565454, 656565434, 656565432, 656545678, 656545676, 656545656, 656545654, 656545456, 656545454, 656545434, 656545432, 656543456, 656543454, 656543434, 656543432, 656543234, 656543232, 656543212, 656543210, 654567898, 654567878, 654567876, 654567678, 654567676, 654567656, 654567654, 654565678, 654565676, 654565656, 654565654, 654565456, 654565454, 654565434, 654565432, 654545678, 654545676, 654545656, 654545654, 654545456, 654545454, 654545434, 654545432, 654543456, 654543454, 654543434, 654543432, 654543234, 654543232, 654543212, 654543210, 654345678, 654345676, 654345656, 654345654, 654345456, 654345454, 654345434, 654345432, 654343456, 654343454, 654343434, 654343432, 654343234, 654343232, 654343212, 654343210, 654323456, 654323454, 654323434, 654323432, 654323234, 654323232, 654323212, 654323210, 654321234, 654321232, 654321212, 654321210, 654321012, 654321010, 789898989, 789898987, 789898789, 789898787, 789898767, 789898765, 789878989, 789878987, 789878789, 789878787, 789878767, 789878765, 789876789, 789876787, 789876767, 789876765, 789876567, 789876565, 789876545, 789876543, 787898989, 787898987, 787898789, 787898787, 787898767, 787898765, 787878989, 787878987, 787878789, 787878787, 787878767, 787878765, 787876789, 787876787, 787876767, 787876765, 787876567, 787876565, 787876545, 787876543, 787678989, 787678987, 787678789, 787678787, 787678767, 787678765, 787676789, 787676787, 787676767, 787676765, 787676567, 787676565, 787676545, 787676543, 787656789, 787656787, 787656767, 787656765, 787656567, 787656565, 787656545, 787656543, 787654567, 787654565, 787654545, 787654543, 787654345, 787654343, 787654323, 787654321, 767898989, 767898987, 767898789, 767898787, 767898767, 767898765, 767878989, 767878987, 767878789, 767878787, 767878767, 767878765, 767876789, 767876787, 767876767, 767876765, 767876567, 767876565, 767876545, 767876543, 767678989, 767678987, 767678789, 767678787, 767678767, 767678765, 767676789, 767676787, 767676767, 767676765, 767676567, 767676565, 767676545, 767676543, 767656789, 767656787, 767656767, 767656765, 767656567, 767656565, 767656545, 767656543, 767654567, 767654565, 767654545, 767654543, 767654345, 767654343, 767654323, 767654321, 765678989, 765678987, 765678789, 765678787, 765678767, 765678765, 765676789, 765676787, 765676767, 765676765, 765676567, 765676565, 765676545, 765676543, 765656789, 765656787, 765656767, 765656765, 765656567, 765656565, 765656545, 765656543, 765654567, 765654565, 765654545, 765654543, 765654345, 765654343, 765654323, 765654321, 765456789, 765456787, 765456767, 765456765, 765456567, 765456565, 765456545, 765456543, 765454567, 765454565, 765454545, 765454543, 765454345, 765454343, 765454323, 765454321, 765434567, 765434565, 765434545, 765434543, 765434345, 765434343, 765434323, 765434321, 765432345, 765432343, 765432323, 765432321, 765432123, 765432121, 765432101, 898989898, 898989878, 898989876, 898987898, 898987878, 898987876, 898987678, 898987676, 898987656, 898987654, 898789898, 898789878, 898789876, 898787898, 898787878, 898787876, 898787678, 898787676, 898787656, 898787654, 898767898, 898767878, 898767876, 898767678, 898767676, 898767656, 898767654, 898765678, 898765676, 898765656, 898765654, 898765456, 898765454, 898765434, 898765432, 878989898, 878989878, 878989876, 878987898, 878987878, 878987876, 878987678, 878987676, 878987656, 878987654, 878789898, 878789878, 878789876, 878787898, 878787878, 878787876, 878787678, 878787676, 878787656, 878787654, 878767898, 878767878, 878767876, 878767678, 878767676, 878767656, 878767654, 878765678, 878765676, 878765656, 878765654, 878765456, 878765454, 878765434, 878765432, 876789898, 876789878, 876789876, 876787898, 876787878, 876787876, 876787678, 876787676, 876787656, 876787654, 876767898, 876767878, 876767876, 876767678, 876767676, 876767656, 876767654, 876765678, 876765676, 876765656, 876765654, 876765456, 876765454, 876765434, 876765432, 876567898, 876567878, 876567876, 876567678, 876567676, 876567656, 876567654, 876565678, 876565676, 876565656, 876565654, 876565456, 876565454, 876565434, 876565432, 876545678, 876545676, 876545656, 876545654, 876545456, 876545454, 876545434, 876545432, 876543456, 876543454, 876543434, 876543432, 876543234, 876543232, 876543212, 876543210, 989898989, 989898987, 989898789, 989898787, 989898767, 989898765, 989878989, 989878987, 989878789, 989878787, 989878767, 989878765, 989876789, 989876787, 989876767, 989876765, 989876567, 989876565, 989876545, 989876543, 987898989, 987898987, 987898789, 987898787, 987898767, 987898765, 987878989, 987878987, 987878789, 987878787, 987878767, 987878765, 987876789, 987876787, 987876767, 987876765, 987876567, 987876565, 987876545, 987876543, 987678989, 987678987, 987678789, 987678787, 987678767, 987678765, 987676789, 987676787, 987676767, 987676765, 987676567, 987676565, 987676545, 987676543, 987656789, 987656787, 987656767, 987656765, 987656567, 987656565, 987656545, 987656543, 987654567, 987654565, 987654545, 987654543, 987654345, 987654343, 987654323, 987654321]\nassert solution.numsSameConsecDiff(6, 1) == [123456, 123454, 123434, 123432, 123234, 123232, 123212, 123210, 121234, 121232, 121212, 121210, 121012, 121010, 101234, 101232, 101212, 101210, 101012, 101010, 234567, 234565, 234545, 234543, 234345, 234343, 234323, 234321, 232345, 232343, 232323, 232321, 232123, 232121, 232101, 212345, 212343, 212323, 212321, 212123, 212121, 212101, 210123, 210121, 210101, 345678, 345676, 345656, 345654, 345456, 345454, 345434, 345432, 343456, 343454, 343434, 343432, 343234, 343232, 343212, 343210, 323456, 323454, 323434, 323432, 323234, 323232, 323212, 323210, 321234, 321232, 321212, 321210, 321012, 321010, 456789, 456787, 456767, 456765, 456567, 456565, 456545, 456543, 454567, 454565, 454545, 454543, 454345, 454343, 454323, 454321, 434567, 434565, 434545, 434543, 434345, 434343, 434323, 434321, 432345, 432343, 432323, 432321, 432123, 432121, 432101, 567898, 567878, 567876, 567678, 567676, 567656, 567654, 565678, 565676, 565656, 565654, 565456, 565454, 565434, 565432, 545678, 545676, 545656, 545654, 545456, 545454, 545434, 545432, 543456, 543454, 543434, 543432, 543234, 543232, 543212, 543210, 678989, 678987, 678789, 678787, 678767, 678765, 676789, 676787, 676767, 676765, 676567, 676565, 676545, 676543, 656789, 656787, 656767, 656765, 656567, 656565, 656545, 656543, 654567, 654565, 654545, 654543, 654345, 654343, 654323, 654321, 789898, 789878, 789876, 787898, 787878, 787876, 787678, 787676, 787656, 787654, 767898, 767878, 767876, 767678, 767676, 767656, 767654, 765678, 765676, 765656, 765654, 765456, 765454, 765434, 765432, 898989, 898987, 898789, 898787, 898767, 898765, 878989, 878987, 878789, 878787, 878767, 878765, 876789, 876787, 876767, 876765, 876567, 876565, 876545, 876543, 989898, 989878, 989876, 987898, 987878, 987876, 987678, 987676, 987656, 987654]\nassert solution.numsSameConsecDiff(7, 9) == [9090909]\nassert solution.numsSameConsecDiff(4, 2) == [1357, 1353, 1313, 2468, 2464, 2424, 2420, 2024, 2020, 3579, 3575, 3535, 3531, 3135, 3131, 4686, 4646, 4642, 4246, 4242, 4202, 5797, 5757, 5753, 5357, 5353, 5313, 6868, 6864, 6468, 6464, 6424, 6420, 7979, 7975, 7579, 7575, 7535, 7531, 8686, 8646, 8642, 9797, 9757, 9753]\nassert solution.numsSameConsecDiff(8, 7) == [18181818, 29292929, 70707070, 81818181, 92929292]\nassert solution.numsSameConsecDiff(7, 4) == [1595959, 1595951, 1595159, 1595151, 1515959, 1515951, 1515159, 1515151, 2626262, 3737373, 4848484, 4848404, 4840484, 4840404, 4048484, 4048404, 4040484, 4040404, 5959595, 5959515, 5951595, 5951515, 5159595, 5159515, 5151595, 5151515, 6262626, 7373737, 8484848, 8484840, 8484048, 8484040, 8404848, 8404840, 8404048, 8404040, 9595959, 9595951, 9595159, 9595151, 9515959, 9515951, 9515159, 9515151]\nassert solution.numsSameConsecDiff(8, 8) == [19191919, 80808080, 91919191]\nassert solution.numsSameConsecDiff(5, 1) == [12345, 12343, 12323, 12321, 12123, 12121, 12101, 10123, 10121, 10101, 23456, 23454, 23434, 23432, 23234, 23232, 23212, 23210, 21234, 21232, 21212, 21210, 21012, 21010, 34567, 34565, 34545, 34543, 34345, 34343, 34323, 34321, 32345, 32343, 32323, 32321, 32123, 32121, 32101, 45678, 45676, 45656, 45654, 45456, 45454, 45434, 45432, 43456, 43454, 43434, 43432, 43234, 43232, 43212, 43210, 56789, 56787, 56767, 56765, 56567, 56565, 56545, 56543, 54567, 54565, 54545, 54543, 54345, 54343, 54323, 54321, 67898, 67878, 67876, 67678, 67676, 67656, 67654, 65678, 65676, 65656, 65654, 65456, 65454, 65434, 65432, 78989, 78987, 78789, 78787, 78767, 78765, 76789, 76787, 76767, 76765, 76567, 76565, 76545, 76543, 89898, 89878, 89876, 87898, 87878, 87876, 87678, 87676, 87656, 87654, 98989, 98987, 98789, 98787, 98767, 98765]\nassert solution.numsSameConsecDiff(5, 1) == [12345, 12343, 12323, 12321, 12123, 12121, 12101, 10123, 10121, 10101, 23456, 23454, 23434, 23432, 23234, 23232, 23212, 23210, 21234, 21232, 21212, 21210, 21012, 21010, 34567, 34565, 34545, 34543, 34345, 34343, 34323, 34321, 32345, 32343, 32323, 32321, 32123, 32121, 32101, 45678, 45676, 45656, 45654, 45456, 45454, 45434, 45432, 43456, 43454, 43434, 43432, 43234, 43232, 43212, 43210, 56789, 56787, 56767, 56765, 56567, 56565, 56545, 56543, 54567, 54565, 54545, 54543, 54345, 54343, 54323, 54321, 67898, 67878, 67876, 67678, 67676, 67656, 67654, 65678, 65676, 65656, 65654, 65456, 65454, 65434, 65432, 78989, 78987, 78789, 78787, 78767, 78765, 76789, 76787, 76767, 76765, 76567, 76565, 76545, 76543, 89898, 89878, 89876, 87898, 87878, 87876, 87678, 87676, 87656, 87654, 98989, 98987, 98789, 98787, 98767, 98765]\nassert solution.numsSameConsecDiff(3, 6) == [171, 282, 393, 606, 717, 828, 939]\nassert solution.numsSameConsecDiff(5, 0) == [11111, 22222, 33333, 44444, 55555, 66666, 77777, 88888, 99999]\nassert solution.numsSameConsecDiff(4, 1) == [1234, 1232, 1212, 1210, 1012, 1010, 2345, 2343, 2323, 2321, 2123, 2121, 2101, 3456, 3454, 3434, 3432, 3234, 3232, 3212, 3210, 4567, 4565, 4545, 4543, 4345, 4343, 4323, 4321, 5678, 5676, 5656, 5654, 5456, 5454, 5434, 5432, 6789, 6787, 6767, 6765, 6567, 6565, 6545, 6543, 7898, 7878, 7876, 7678, 7676, 7656, 7654, 8989, 8987, 8789, 8787, 8767, 8765, 9898, 9878, 9876]\nassert solution.numsSameConsecDiff(8, 5) == [16161616, 27272727, 38383838, 49494949, 50505050, 61616161, 72727272, 83838383, 94949494]\nassert solution.numsSameConsecDiff(7, 5) == [1616161, 2727272, 3838383, 4949494, 5050505, 6161616, 7272727, 8383838, 9494949]\nassert solution.numsSameConsecDiff(7, 6) == [1717171, 2828282, 3939393, 6060606, 7171717, 8282828, 9393939]\nassert solution.numsSameConsecDiff(6, 5) == [161616, 272727, 383838, 494949, 505050, 616161, 727272, 838383, 949494]\nassert solution.numsSameConsecDiff(3, 2) == [135, 131, 246, 242, 202, 357, 353, 313, 468, 464, 424, 420, 579, 575, 535, 531, 686, 646, 642, 797, 757, 753, 868, 864, 979, 975]\nassert solution.numsSameConsecDiff(9, 9) == [909090909]\nassert solution.numsSameConsecDiff(9, 5) == [161616161, 272727272, 383838383, 494949494, 505050505, 616161616, 727272727, 838383838, 949494949]\nassert solution.numsSameConsecDiff(8, 1) == [12345678, 12345676, 12345656, 12345654, 12345456, 12345454, 12345434, 12345432, 12343456, 12343454, 12343434, 12343432, 12343234, 12343232, 12343212, 12343210, 12323456, 12323454, 12323434, 12323432, 12323234, 12323232, 12323212, 12323210, 12321234, 12321232, 12321212, 12321210, 12321012, 12321010, 12123456, 12123454, 12123434, 12123432, 12123234, 12123232, 12123212, 12123210, 12121234, 12121232, 12121212, 12121210, 12121012, 12121010, 12101234, 12101232, 12101212, 12101210, 12101012, 12101010, 10123456, 10123454, 10123434, 10123432, 10123234, 10123232, 10123212, 10123210, 10121234, 10121232, 10121212, 10121210, 10121012, 10121010, 10101234, 10101232, 10101212, 10101210, 10101012, 10101010, 23456789, 23456787, 23456767, 23456765, 23456567, 23456565, 23456545, 23456543, 23454567, 23454565, 23454545, 23454543, 23454345, 23454343, 23454323, 23454321, 23434567, 23434565, 23434545, 23434543, 23434345, 23434343, 23434323, 23434321, 23432345, 23432343, 23432323, 23432321, 23432123, 23432121, 23432101, 23234567, 23234565, 23234545, 23234543, 23234345, 23234343, 23234323, 23234321, 23232345, 23232343, 23232323, 23232321, 23232123, 23232121, 23232101, 23212345, 23212343, 23212323, 23212321, 23212123, 23212121, 23212101, 23210123, 23210121, 23210101, 21234567, 21234565, 21234545, 21234543, 21234345, 21234343, 21234323, 21234321, 21232345, 21232343, 21232323, 21232321, 21232123, 21232121, 21232101, 21212345, 21212343, 21212323, 21212321, 21212123, 21212121, 21212101, 21210123, 21210121, 21210101, 21012345, 21012343, 21012323, 21012321, 21012123, 21012121, 21012101, 21010123, 21010121, 21010101, 34567898, 34567878, 34567876, 34567678, 34567676, 34567656, 34567654, 34565678, 34565676, 34565656, 34565654, 34565456, 34565454, 34565434, 34565432, 34545678, 34545676, 34545656, 34545654, 34545456, 34545454, 34545434, 34545432, 34543456, 34543454, 34543434, 34543432, 34543234, 34543232, 34543212, 34543210, 34345678, 34345676, 34345656, 34345654, 34345456, 34345454, 34345434, 34345432, 34343456, 34343454, 34343434, 34343432, 34343234, 34343232, 34343212, 34343210, 34323456, 34323454, 34323434, 34323432, 34323234, 34323232, 34323212, 34323210, 34321234, 34321232, 34321212, 34321210, 34321012, 34321010, 32345678, 32345676, 32345656, 32345654, 32345456, 32345454, 32345434, 32345432, 32343456, 32343454, 32343434, 32343432, 32343234, 32343232, 32343212, 32343210, 32323456, 32323454, 32323434, 32323432, 32323234, 32323232, 32323212, 32323210, 32321234, 32321232, 32321212, 32321210, 32321012, 32321010, 32123456, 32123454, 32123434, 32123432, 32123234, 32123232, 32123212, 32123210, 32121234, 32121232, 32121212, 32121210, 32121012, 32121010, 32101234, 32101232, 32101212, 32101210, 32101012, 32101010, 45678989, 45678987, 45678789, 45678787, 45678767, 45678765, 45676789, 45676787, 45676767, 45676765, 45676567, 45676565, 45676545, 45676543, 45656789, 45656787, 45656767, 45656765, 45656567, 45656565, 45656545, 45656543, 45654567, 45654565, 45654545, 45654543, 45654345, 45654343, 45654323, 45654321, 45456789, 45456787, 45456767, 45456765, 45456567, 45456565, 45456545, 45456543, 45454567, 45454565, 45454545, 45454543, 45454345, 45454343, 45454323, 45454321, 45434567, 45434565, 45434545, 45434543, 45434345, 45434343, 45434323, 45434321, 45432345, 45432343, 45432323, 45432321, 45432123, 45432121, 45432101, 43456789, 43456787, 43456767, 43456765, 43456567, 43456565, 43456545, 43456543, 43454567, 43454565, 43454545, 43454543, 43454345, 43454343, 43454323, 43454321, 43434567, 43434565, 43434545, 43434543, 43434345, 43434343, 43434323, 43434321, 43432345, 43432343, 43432323, 43432321, 43432123, 43432121, 43432101, 43234567, 43234565, 43234545, 43234543, 43234345, 43234343, 43234323, 43234321, 43232345, 43232343, 43232323, 43232321, 43232123, 43232121, 43232101, 43212345, 43212343, 43212323, 43212321, 43212123, 43212121, 43212101, 43210123, 43210121, 43210101, 56789898, 56789878, 56789876, 56787898, 56787878, 56787876, 56787678, 56787676, 56787656, 56787654, 56767898, 56767878, 56767876, 56767678, 56767676, 56767656, 56767654, 56765678, 56765676, 56765656, 56765654, 56765456, 56765454, 56765434, 56765432, 56567898, 56567878, 56567876, 56567678, 56567676, 56567656, 56567654, 56565678, 56565676, 56565656, 56565654, 56565456, 56565454, 56565434, 56565432, 56545678, 56545676, 56545656, 56545654, 56545456, 56545454, 56545434, 56545432, 56543456, 56543454, 56543434, 56543432, 56543234, 56543232, 56543212, 56543210, 54567898, 54567878, 54567876, 54567678, 54567676, 54567656, 54567654, 54565678, 54565676, 54565656, 54565654, 54565456, 54565454, 54565434, 54565432, 54545678, 54545676, 54545656, 54545654, 54545456, 54545454, 54545434, 54545432, 54543456, 54543454, 54543434, 54543432, 54543234, 54543232, 54543212, 54543210, 54345678, 54345676, 54345656, 54345654, 54345456, 54345454, 54345434, 54345432, 54343456, 54343454, 54343434, 54343432, 54343234, 54343232, 54343212, 54343210, 54323456, 54323454, 54323434, 54323432, 54323234, 54323232, 54323212, 54323210, 54321234, 54321232, 54321212, 54321210, 54321012, 54321010, 67898989, 67898987, 67898789, 67898787, 67898767, 67898765, 67878989, 67878987, 67878789, 67878787, 67878767, 67878765, 67876789, 67876787, 67876767, 67876765, 67876567, 67876565, 67876545, 67876543, 67678989, 67678987, 67678789, 67678787, 67678767, 67678765, 67676789, 67676787, 67676767, 67676765, 67676567, 67676565, 67676545, 67676543, 67656789, 67656787, 67656767, 67656765, 67656567, 67656565, 67656545, 67656543, 67654567, 67654565, 67654545, 67654543, 67654345, 67654343, 67654323, 67654321, 65678989, 65678987, 65678789, 65678787, 65678767, 65678765, 65676789, 65676787, 65676767, 65676765, 65676567, 65676565, 65676545, 65676543, 65656789, 65656787, 65656767, 65656765, 65656567, 65656565, 65656545, 65656543, 65654567, 65654565, 65654545, 65654543, 65654345, 65654343, 65654323, 65654321, 65456789, 65456787, 65456767, 65456765, 65456567, 65456565, 65456545, 65456543, 65454567, 65454565, 65454545, 65454543, 65454345, 65454343, 65454323, 65454321, 65434567, 65434565, 65434545, 65434543, 65434345, 65434343, 65434323, 65434321, 65432345, 65432343, 65432323, 65432321, 65432123, 65432121, 65432101, 78989898, 78989878, 78989876, 78987898, 78987878, 78987876, 78987678, 78987676, 78987656, 78987654, 78789898, 78789878, 78789876, 78787898, 78787878, 78787876, 78787678, 78787676, 78787656, 78787654, 78767898, 78767878, 78767876, 78767678, 78767676, 78767656, 78767654, 78765678, 78765676, 78765656, 78765654, 78765456, 78765454, 78765434, 78765432, 76789898, 76789878, 76789876, 76787898, 76787878, 76787876, 76787678, 76787676, 76787656, 76787654, 76767898, 76767878, 76767876, 76767678, 76767676, 76767656, 76767654, 76765678, 76765676, 76765656, 76765654, 76765456, 76765454, 76765434, 76765432, 76567898, 76567878, 76567876, 76567678, 76567676, 76567656, 76567654, 76565678, 76565676, 76565656, 76565654, 76565456, 76565454, 76565434, 76565432, 76545678, 76545676, 76545656, 76545654, 76545456, 76545454, 76545434, 76545432, 76543456, 76543454, 76543434, 76543432, 76543234, 76543232, 76543212, 76543210, 89898989, 89898987, 89898789, 89898787, 89898767, 89898765, 89878989, 89878987, 89878789, 89878787, 89878767, 89878765, 89876789, 89876787, 89876767, 89876765, 89876567, 89876565, 89876545, 89876543, 87898989, 87898987, 87898789, 87898787, 87898767, 87898765, 87878989, 87878987, 87878789, 87878787, 87878767, 87878765, 87876789, 87876787, 87876767, 87876765, 87876567, 87876565, 87876545, 87876543, 87678989, 87678987, 87678789, 87678787, 87678767, 87678765, 87676789, 87676787, 87676767, 87676765, 87676567, 87676565, 87676545, 87676543, 87656789, 87656787, 87656767, 87656765, 87656567, 87656565, 87656545, 87656543, 87654567, 87654565, 87654545, 87654543, 87654345, 87654343, 87654323, 87654321, 98989898, 98989878, 98989876, 98987898, 98987878, 98987876, 98987678, 98987676, 98987656, 98987654, 98789898, 98789878, 98789876, 98787898, 98787878, 98787876, 98787678, 98787676, 98787656, 98787654, 98767898, 98767878, 98767876, 98767678, 98767676, 98767656, 98767654, 98765678, 98765676, 98765656, 98765654, 98765456, 98765454, 98765434, 98765432]\nassert solution.numsSameConsecDiff(2, 9) == [90]\nassert solution.numsSameConsecDiff(9, 9) == [909090909]\nassert solution.numsSameConsecDiff(3, 9) == [909]\nassert solution.numsSameConsecDiff(9, 4) == [159595959, 159595951, 159595159, 159595151, 159515959, 159515951, 159515159, 159515151, 151595959, 151595951, 151595159, 151595151, 151515959, 151515951, 151515159, 151515151, 262626262, 373737373, 484848484, 484848404, 484840484, 484840404, 484048484, 484048404, 484040484, 484040404, 404848484, 404848404, 404840484, 404840404, 404048484, 404048404, 404040484, 404040404, 595959595, 595959515, 595951595, 595951515, 595159595, 595159515, 595151595, 595151515, 515959595, 515959515, 515951595, 515951515, 515159595, 515159515, 515151595, 515151515, 626262626, 737373737, 848484848, 848484840, 848484048, 848484040, 848404848, 848404840, 848404048, 848404040, 840484848, 840484840, 840484048, 840484040, 840404848, 840404840, 840404048, 840404040, 959595959, 959595951, 959595159, 959595151, 959515959, 959515951, 959515159, 959515151, 951595959, 951595951, 951595159, 951595151, 951515959, 951515951, 951515159, 951515151]\nassert solution.numsSameConsecDiff(4, 4) == [1595, 1515, 2626, 3737, 4848, 4840, 4048, 4040, 5959, 5951, 5159, 5151, 6262, 7373, 8484, 8404, 9595, 9515]\nassert solution.numsSameConsecDiff(3, 9) == [909]\nassert solution.numsSameConsecDiff(7, 9) == [9090909]\nassert solution.numsSameConsecDiff(2, 5) == [16, 27, 38, 49, 50, 61, 72, 83, 94]\nassert solution.numsSameConsecDiff(8, 4) == [15959595, 15959515, 15951595, 15951515, 15159595, 15159515, 15151595, 15151515, 26262626, 37373737, 48484848, 48484840, 48484048, 48484040, 48404848, 48404840, 48404048, 48404040, 40484848, 40484840, 40484048, 40484040, 40404848, 40404840, 40404048, 40404040, 59595959, 59595951, 59595159, 59595151, 59515959, 59515951, 59515159, 59515151, 51595959, 51595951, 51595159, 51595151, 51515959, 51515951, 51515159, 51515151, 62626262, 73737373, 84848484, 84848404, 84840484, 84840404, 84048484, 84048404, 84040484, 84040404, 95959595, 95959515, 95951595, 95951515, 95159595, 95159515, 95151595, 95151515]\nassert solution.numsSameConsecDiff(6, 8) == [191919, 808080, 919191]\nassert solution.numsSameConsecDiff(2, 6) == [17, 28, 39, 60, 71, 82, 93]\nassert solution.numsSameConsecDiff(7, 3) == [1474747, 1474741, 1474147, 1474141, 1414747, 1414741, 1414147, 1414141, 2585858, 2585852, 2585258, 2585252, 2525858, 2525852, 2525258, 2525252, 3696969, 3696963, 3696369, 3696363, 3696303, 3636969, 3636963, 3636369, 3636363, 3636303, 3630369, 3630363, 3630303, 3036969, 3036963, 3036369, 3036363, 3036303, 3030369, 3030363, 3030303, 4747474, 4747414, 4741474, 4741414, 4147474, 4147414, 4141474, 4141414, 5858585, 5858525, 5852585, 5852525, 5258585, 5258525, 5252585, 5252525, 6969696, 6969636, 6969630, 6963696, 6963636, 6963630, 6963036, 6963030, 6369696, 6369636, 6369630, 6363696, 6363636, 6363630, 6363036, 6363030, 6303696, 6303636, 6303630, 6303036, 6303030, 7474747, 7474741, 7474147, 7474141, 7414747, 7414741, 7414147, 7414141, 8585858, 8585852, 8585258, 8585252, 8525858, 8525852, 8525258, 8525252, 9696969, 9696963, 9696369, 9696363, 9696303, 9636969, 9636963, 9636369, 9636363, 9636303, 9630369, 9630363, 9630303]\nassert solution.numsSameConsecDiff(6, 5) == [161616, 272727, 383838, 494949, 505050, 616161, 727272, 838383, 949494]\nassert solution.numsSameConsecDiff(8, 3) == [14747474, 14747414, 14741474, 14741414, 14147474, 14147414, 14141474, 14141414, 25858585, 25858525, 25852585, 25852525, 25258585, 25258525, 25252585, 25252525, 36969696, 36969636, 36969630, 36963696, 36963636, 36963630, 36963036, 36963030, 36369696, 36369636, 36369630, 36363696, 36363636, 36363630, 36363036, 36363030, 36303696, 36303636, 36303630, 36303036, 36303030, 30369696, 30369636, 30369630, 30363696, 30363636, 30363630, 30363036, 30363030, 30303696, 30303636, 30303630, 30303036, 30303030, 47474747, 47474741, 47474147, 47474141, 47414747, 47414741, 47414147, 47414141, 41474747, 41474741, 41474147, 41474141, 41414747, 41414741, 41414147, 41414141, 58585858, 58585852, 58585258, 58585252, 58525858, 58525852, 58525258, 58525252, 52585858, 52585852, 52585258, 52585252, 52525858, 52525852, 52525258, 52525252, 69696969, 69696963, 69696369, 69696363, 69696303, 69636969, 69636963, 69636369, 69636363, 69636303, 69630369, 69630363, 69630303, 63696969, 63696963, 63696369, 63696363, 63696303, 63636969, 63636963, 63636369, 63636363, 63636303, 63630369, 63630363, 63630303, 63036969, 63036963, 63036369, 63036363, 63036303, 63030369, 63030363, 63030303, 74747474, 74747414, 74741474, 74741414, 74147474, 74147414, 74141474, 74141414, 85858585, 85858525, 85852585, 85852525, 85258585, 85258525, 85252585, 85252525, 96969696, 96969636, 96969630, 96963696, 96963636, 96963630, 96963036, 96963030, 96369696, 96369636, 96369630, 96363696, 96363636, 96363630, 96363036, 96363030, 96303696, 96303636, 96303630, 96303036, 96303030]\nassert solution.numsSameConsecDiff(5, 7) == [18181, 29292, 70707, 81818, 92929]\nassert solution.numsSameConsecDiff(7, 8) == [1919191, 8080808, 9191919]",
  "inefficient_solution": "class Solution:\n    def numsSameConsecDiff(self, n: int, k: int) -> List[int]:\n        ans = []\n\n        def dfs(n, k, t):\n            if n == 0:\n                ans.append(t)\n                for _ in range(10000):\n                    pass\n                return\n            last = t % 10\n            if last + k <= 9:\n                temp_t = t * 10 + last + k\n                ans.append(temp_t)\n                temp_ans = []\n                for i in range(10):\n                    temp_ans.append(i)\n                backup_ans = []\n                for _ in range(10000):\n                    backup_ans.append(temp_ans.pop())\n                temp_ans = []\n                for _ in range(10000):\n                    temp_ans.append(backup_ans.pop())\n                dfs(n - 1, k, temp_t)\n            if last - k >= 0 and k != 0:\n                temp_t = t * 10 + last - k\n                ans.append(temp_t)\n                temp_ans = []\n                for i in range(10):\n                    temp_ans.append(i)\n                backup_ans = []\n                for _ in range(10000):\n                    backup_ans.append(temp_ans.pop())\n                temp_ans = []\n                for _ in range(10000):\n                    temp_ans.append(backup_ans.pop())\n                dfs(n - 1, k, temp_t)\n\n        for i in range(1, 10):\n            dfs(n - 1, k, i)\n        return ans",
  "is_python": true
}