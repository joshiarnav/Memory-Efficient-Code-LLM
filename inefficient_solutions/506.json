{
  "problem_idx": 506,
  "task_name": "Relative Ranks",
  "markdown_description": "\nYou are given an integer array `score` of size `n`, where `score[i]` is the score of the `ith` athlete in a competition. All the scores are guaranteed to be **unique**.\n\n\nThe athletes are **placed** based on their scores, where the `1st` place athlete has the highest score, the `2nd` place athlete has the `2nd` highest score, and so on. The placement of each athlete determines their rank:\n\n\n* The `1st` place athlete's rank is `\"Gold Medal\"`.\n* The `2nd` place athlete's rank is `\"Silver Medal\"`.\n* The `3rd` place athlete's rank is `\"Bronze Medal\"`.\n* For the `4th` place to the `nth` place athlete, their rank is their placement number (i.e., the `xth` place athlete's rank is `\"x\"`).\n\n\nReturn an array `answer` of size `n` where `answer[i]` is the **rank** of the `ith` athlete.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** score = [5,4,3,2,1]\n**Output:** [\"Gold Medal\",\"Silver Medal\",\"Bronze Medal\",\"4\",\"5\"]\n**Explanation:** The placements are [1st, 2nd, 3rd, 4th, 5th].\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** score = [10,3,8,9,4]\n**Output:** [\"Gold Medal\",\"5\",\"Bronze Medal\",\"Silver Medal\",\"4\"]\n**Explanation:** The placements are [1st, 5th, 3rd, 2nd, 4th].\n\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `n == score.length`\n* `1 <= n <= 104`\n* `0 <= score[i] <= 106`\n* All the values in `score` are **unique**.\n\n\n",
  "canonical_solution": "class Solution:\n    def findRelativeRanks(self, score: List[int]) -> List[str]:\n        n = len(score)\n        idx = list(range(n))\n        idx.sort(key=lambda x: -score[x])\n        top3 = ['Gold Medal', 'Silver Medal', 'Bronze Medal']\n        ans = [None] * n\n        for i in range(n):\n            ans[idx[i]] = top3[i] if i < 3 else str(i + 1)\n        return ans\n",
  "test_case_generator": "\nimport random\n\nclass Solution:\n    def findRelativeRanks(self, score):\n        n = len(score)\n        idx = list(range(n))\n        idx.sort(key=lambda x: -score[x])\n        top3 = ['Gold Medal', 'Silver Medal', 'Bronze Medal']\n        ans = [None] * n\n        for i in range(n):\n            ans[idx[i]] = top3[i] if i < 3 else str(i + 1)\n        return ans\n\n\ndef generate_test_case():\n    solution = Solution()\n\n    # Generate random scores list\n    scores = random.sample(range(1, 101), random.randint(2, 10))\n\n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.findRelativeRanks(scores)\n\n    return scores, expected_result\n\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        scores, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.findRelativeRanks(scores) == expected_result\n        print(f\"assert solution.findRelativeRanks({scores}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.findRelativeRanks({scores}) == {expected_result}\")\n    return test_case_generator_results\n\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n\n",
  "test_case": "assert solution.findRelativeRanks([84, 9, 65, 50, 88, 96, 77, 72]) == ['Bronze Medal', '8', '6', '7', 'Silver Medal', 'Gold Medal', '4', '5']\nassert solution.findRelativeRanks([45, 80, 2]) == ['Silver Medal', 'Gold Medal', 'Bronze Medal']\nassert solution.findRelativeRanks([77, 11, 14]) == ['Gold Medal', 'Bronze Medal', 'Silver Medal']\nassert solution.findRelativeRanks([50, 38, 83, 32, 54, 88, 29, 21, 77, 25]) == ['5', '6', 'Silver Medal', '7', '4', 'Gold Medal', '8', '10', 'Bronze Medal', '9']\nassert solution.findRelativeRanks([36, 76, 75, 56, 42, 55, 70, 35, 26, 82]) == ['8', 'Silver Medal', 'Bronze Medal', '5', '7', '6', '4', '9', '10', 'Gold Medal']\nassert solution.findRelativeRanks([46, 10, 3, 4]) == ['Gold Medal', 'Silver Medal', '4', 'Bronze Medal']\nassert solution.findRelativeRanks([46, 50, 7, 92, 43, 66, 6]) == ['4', 'Bronze Medal', '6', 'Gold Medal', '5', 'Silver Medal', '7']\nassert solution.findRelativeRanks([84, 70, 90, 2, 53, 32, 10, 89, 54]) == ['Bronze Medal', '4', 'Gold Medal', '9', '6', '7', '8', 'Silver Medal', '5']\nassert solution.findRelativeRanks([37, 79, 21]) == ['Silver Medal', 'Gold Medal', 'Bronze Medal']\nassert solution.findRelativeRanks([35, 14, 40, 56, 52]) == ['4', '5', 'Bronze Medal', 'Gold Medal', 'Silver Medal']\nassert solution.findRelativeRanks([81, 95, 13, 53, 1]) == ['Silver Medal', 'Gold Medal', '4', 'Bronze Medal', '5']\nassert solution.findRelativeRanks([99, 34, 2, 44, 51, 59]) == ['Gold Medal', '5', '6', '4', 'Bronze Medal', 'Silver Medal']\nassert solution.findRelativeRanks([48, 69, 99, 6]) == ['Bronze Medal', 'Silver Medal', 'Gold Medal', '4']\nassert solution.findRelativeRanks([38, 47, 30, 65, 52]) == ['4', 'Bronze Medal', '5', 'Gold Medal', 'Silver Medal']\nassert solution.findRelativeRanks([32, 25, 82, 55]) == ['Bronze Medal', '4', 'Gold Medal', 'Silver Medal']\nassert solution.findRelativeRanks([6, 85, 43, 91]) == ['4', 'Silver Medal', 'Bronze Medal', 'Gold Medal']\nassert solution.findRelativeRanks([21, 99]) == ['Silver Medal', 'Gold Medal']\nassert solution.findRelativeRanks([61, 22, 78, 26, 95]) == ['Bronze Medal', '5', 'Silver Medal', '4', 'Gold Medal']\nassert solution.findRelativeRanks([12, 71, 98, 19, 36, 9, 15, 1, 14, 85]) == ['8', 'Bronze Medal', 'Gold Medal', '5', '4', '9', '6', '10', '7', 'Silver Medal']\nassert solution.findRelativeRanks([83, 49, 94, 28, 52, 69, 97, 66]) == ['Bronze Medal', '7', 'Silver Medal', '8', '6', '4', 'Gold Medal', '5']\nassert solution.findRelativeRanks([22, 23]) == ['Silver Medal', 'Gold Medal']\nassert solution.findRelativeRanks([5, 63, 78, 2, 37, 11]) == ['5', 'Silver Medal', 'Gold Medal', '6', 'Bronze Medal', '4']\nassert solution.findRelativeRanks([16, 18, 39]) == ['Bronze Medal', 'Silver Medal', 'Gold Medal']\nassert solution.findRelativeRanks([23, 8, 97, 56]) == ['Bronze Medal', '4', 'Gold Medal', 'Silver Medal']\nassert solution.findRelativeRanks([16, 92]) == ['Silver Medal', 'Gold Medal']\nassert solution.findRelativeRanks([44, 59, 14, 93, 11, 74]) == ['4', 'Bronze Medal', '5', 'Gold Medal', '6', 'Silver Medal']\nassert solution.findRelativeRanks([26, 17, 98, 9]) == ['Silver Medal', 'Bronze Medal', 'Gold Medal', '4']\nassert solution.findRelativeRanks([73, 76, 23, 26, 97, 62]) == ['Bronze Medal', 'Silver Medal', '6', '5', 'Gold Medal', '4']\nassert solution.findRelativeRanks([43, 50, 24, 19, 89, 64]) == ['4', 'Bronze Medal', '5', '6', 'Gold Medal', 'Silver Medal']\nassert solution.findRelativeRanks([25, 67, 30, 20, 1, 62, 26]) == ['5', 'Gold Medal', 'Bronze Medal', '6', '7', 'Silver Medal', '4']\nassert solution.findRelativeRanks([26, 94, 99, 79, 54, 32, 33]) == ['7', 'Silver Medal', 'Gold Medal', 'Bronze Medal', '4', '6', '5']\nassert solution.findRelativeRanks([73, 14, 6, 86, 76, 39, 56, 8, 3]) == ['Bronze Medal', '6', '8', 'Gold Medal', 'Silver Medal', '5', '4', '7', '9']\nassert solution.findRelativeRanks([62, 46]) == ['Gold Medal', 'Silver Medal']\nassert solution.findRelativeRanks([84, 89, 20, 65, 59, 32]) == ['Silver Medal', 'Gold Medal', '6', 'Bronze Medal', '4', '5']\nassert solution.findRelativeRanks([29, 14, 41, 27, 85, 61, 26]) == ['4', '7', 'Bronze Medal', '5', 'Gold Medal', 'Silver Medal', '6']\nassert solution.findRelativeRanks([67, 88, 38, 93, 81, 1]) == ['4', 'Silver Medal', '5', 'Gold Medal', 'Bronze Medal', '6']\nassert solution.findRelativeRanks([98, 12, 24, 64, 66, 45, 23, 68, 57]) == ['Gold Medal', '9', '7', '4', 'Bronze Medal', '6', '8', 'Silver Medal', '5']\nassert solution.findRelativeRanks([53, 84, 56, 22, 9]) == ['Bronze Medal', 'Gold Medal', 'Silver Medal', '4', '5']\nassert solution.findRelativeRanks([3, 96, 6, 30, 13]) == ['5', 'Gold Medal', '4', 'Silver Medal', 'Bronze Medal']\nassert solution.findRelativeRanks([81, 10, 59, 73, 79, 12]) == ['Gold Medal', '6', '4', 'Bronze Medal', 'Silver Medal', '5']\nassert solution.findRelativeRanks([19, 68, 31, 9, 24]) == ['4', 'Gold Medal', 'Silver Medal', '5', 'Bronze Medal']\nassert solution.findRelativeRanks([85, 77, 52]) == ['Gold Medal', 'Silver Medal', 'Bronze Medal']\nassert solution.findRelativeRanks([23, 55, 72, 27, 100, 7, 33, 93, 92]) == ['8', '5', '4', '7', 'Gold Medal', '9', '6', 'Silver Medal', 'Bronze Medal']\nassert solution.findRelativeRanks([92, 60]) == ['Gold Medal', 'Silver Medal']\nassert solution.findRelativeRanks([8, 85, 37, 99, 93, 79, 43, 26, 78, 74]) == ['10', 'Bronze Medal', '8', 'Gold Medal', 'Silver Medal', '4', '7', '9', '5', '6']\nassert solution.findRelativeRanks([45, 92, 36, 7, 89, 99, 12]) == ['4', 'Silver Medal', '5', '7', 'Bronze Medal', 'Gold Medal', '6']\nassert solution.findRelativeRanks([25, 21]) == ['Gold Medal', 'Silver Medal']\nassert solution.findRelativeRanks([26, 38, 55, 10]) == ['Bronze Medal', 'Silver Medal', 'Gold Medal', '4']\nassert solution.findRelativeRanks([7, 23, 25, 21]) == ['4', 'Silver Medal', 'Gold Medal', 'Bronze Medal']\nassert solution.findRelativeRanks([100, 76]) == ['Gold Medal', 'Silver Medal']\nassert solution.findRelativeRanks([85, 74, 30, 14, 36, 5, 27, 92, 35]) == ['Silver Medal', 'Bronze Medal', '6', '8', '4', '9', '7', 'Gold Medal', '5']\nassert solution.findRelativeRanks([88, 44, 76, 2, 72, 80, 35, 84, 52, 49]) == ['Gold Medal', '8', '4', '10', '5', 'Bronze Medal', '9', 'Silver Medal', '6', '7']\nassert solution.findRelativeRanks([20, 75, 43, 84, 42, 8]) == ['5', 'Silver Medal', 'Bronze Medal', 'Gold Medal', '4', '6']\nassert solution.findRelativeRanks([76, 45, 94, 19, 33, 100, 84, 35]) == ['4', '5', 'Silver Medal', '8', '7', 'Gold Medal', 'Bronze Medal', '6']\nassert solution.findRelativeRanks([21, 74, 81, 65, 98, 96, 49, 2, 34]) == ['8', '4', 'Bronze Medal', '5', 'Gold Medal', 'Silver Medal', '6', '9', '7']\nassert solution.findRelativeRanks([45, 39, 11, 5, 90, 38, 59, 23, 95]) == ['4', '5', '8', '9', 'Silver Medal', '6', 'Bronze Medal', '7', 'Gold Medal']\nassert solution.findRelativeRanks([52, 73, 44]) == ['Silver Medal', 'Gold Medal', 'Bronze Medal']\nassert solution.findRelativeRanks([51, 73, 47, 87, 96, 68, 26, 37]) == ['5', 'Bronze Medal', '6', 'Silver Medal', 'Gold Medal', '4', '8', '7']\nassert solution.findRelativeRanks([51, 56, 97, 83]) == ['4', 'Bronze Medal', 'Gold Medal', 'Silver Medal']\nassert solution.findRelativeRanks([57, 28, 51, 65, 47, 93]) == ['Bronze Medal', '6', '4', 'Silver Medal', '5', 'Gold Medal']\nassert solution.findRelativeRanks([71, 93, 18, 12, 69, 97, 7, 23]) == ['Bronze Medal', 'Silver Medal', '6', '7', '4', 'Gold Medal', '8', '5']\nassert solution.findRelativeRanks([81, 98, 18]) == ['Silver Medal', 'Gold Medal', 'Bronze Medal']\nassert solution.findRelativeRanks([18, 91, 32, 25, 36, 43, 11]) == ['6', 'Gold Medal', '4', '5', 'Bronze Medal', 'Silver Medal', '7']\nassert solution.findRelativeRanks([53, 11, 98, 61, 69, 73, 65, 70, 39]) == ['7', '9', 'Gold Medal', '6', '4', 'Silver Medal', '5', 'Bronze Medal', '8']\nassert solution.findRelativeRanks([57, 24, 63, 42]) == ['Silver Medal', '4', 'Gold Medal', 'Bronze Medal']\nassert solution.findRelativeRanks([37, 1, 71, 62, 41, 15, 52, 50]) == ['6', '8', 'Gold Medal', 'Silver Medal', '5', '7', 'Bronze Medal', '4']\nassert solution.findRelativeRanks([74, 71]) == ['Gold Medal', 'Silver Medal']\nassert solution.findRelativeRanks([63, 21]) == ['Gold Medal', 'Silver Medal']\nassert solution.findRelativeRanks([57, 51, 100, 6, 70, 37, 53, 28]) == ['Bronze Medal', '5', 'Gold Medal', '8', 'Silver Medal', '6', '4', '7']\nassert solution.findRelativeRanks([25, 75]) == ['Silver Medal', 'Gold Medal']\nassert solution.findRelativeRanks([85, 35, 97]) == ['Silver Medal', 'Bronze Medal', 'Gold Medal']\nassert solution.findRelativeRanks([65, 27, 82, 85, 2, 74, 32, 75, 73, 12]) == ['6', '8', 'Silver Medal', 'Gold Medal', '10', '4', '7', 'Bronze Medal', '5', '9']\nassert solution.findRelativeRanks([16, 8, 21, 20, 98, 46, 67, 69]) == ['7', '8', '5', '6', 'Gold Medal', '4', 'Bronze Medal', 'Silver Medal']\nassert solution.findRelativeRanks([96, 39, 47]) == ['Gold Medal', 'Bronze Medal', 'Silver Medal']\nassert solution.findRelativeRanks([1, 29, 16]) == ['Bronze Medal', 'Gold Medal', 'Silver Medal']\nassert solution.findRelativeRanks([69, 24, 49]) == ['Gold Medal', 'Bronze Medal', 'Silver Medal']\nassert solution.findRelativeRanks([51, 87, 54, 57, 9]) == ['4', 'Gold Medal', 'Bronze Medal', 'Silver Medal', '5']\nassert solution.findRelativeRanks([18, 40, 91, 54, 71]) == ['5', '4', 'Gold Medal', 'Bronze Medal', 'Silver Medal']\nassert solution.findRelativeRanks([31, 2, 45, 84, 55, 28, 93]) == ['5', '7', '4', 'Silver Medal', 'Bronze Medal', '6', 'Gold Medal']\nassert solution.findRelativeRanks([9, 6, 90, 48, 50, 93, 1, 47]) == ['6', '7', 'Silver Medal', '4', 'Bronze Medal', 'Gold Medal', '8', '5']\nassert solution.findRelativeRanks([45, 92, 54, 51, 65, 48, 77, 16, 43, 31]) == ['7', 'Gold Medal', '4', '5', 'Bronze Medal', '6', 'Silver Medal', '10', '8', '9']\nassert solution.findRelativeRanks([55, 69, 10, 21, 52]) == ['Silver Medal', 'Gold Medal', '5', '4', 'Bronze Medal']\nassert solution.findRelativeRanks([53, 11, 42, 52, 20, 9]) == ['Gold Medal', '5', 'Bronze Medal', 'Silver Medal', '4', '6']\nassert solution.findRelativeRanks([60, 95, 39, 36, 22, 45, 9, 64, 15]) == ['Bronze Medal', 'Gold Medal', '5', '6', '7', '4', '9', 'Silver Medal', '8']\nassert solution.findRelativeRanks([47, 32]) == ['Gold Medal', 'Silver Medal']\nassert solution.findRelativeRanks([71, 87, 41, 100, 77, 66]) == ['4', 'Silver Medal', '6', 'Gold Medal', 'Bronze Medal', '5']\nassert solution.findRelativeRanks([55, 70, 93, 8, 99]) == ['4', 'Bronze Medal', 'Silver Medal', '5', 'Gold Medal']\nassert solution.findRelativeRanks([31, 67, 69, 50, 71, 78, 80, 99, 62]) == ['9', '6', '5', '8', '4', 'Bronze Medal', 'Silver Medal', 'Gold Medal', '7']\nassert solution.findRelativeRanks([6, 71, 18, 22, 24, 47, 26, 44]) == ['8', 'Gold Medal', '7', '6', '5', 'Silver Medal', '4', 'Bronze Medal']\nassert solution.findRelativeRanks([84, 3, 78, 98, 35, 44, 36]) == ['Silver Medal', '7', 'Bronze Medal', 'Gold Medal', '6', '4', '5']\nassert solution.findRelativeRanks([39, 87, 32, 68, 42, 47, 78, 79]) == ['7', 'Gold Medal', '8', '4', '6', '5', 'Bronze Medal', 'Silver Medal']\nassert solution.findRelativeRanks([48, 91, 87, 58, 83, 17, 90, 39]) == ['6', 'Gold Medal', 'Bronze Medal', '5', '4', '8', 'Silver Medal', '7']\nassert solution.findRelativeRanks([66, 29, 64, 82, 24, 75, 87, 60, 68, 31]) == ['5', '9', '6', 'Silver Medal', '10', 'Bronze Medal', 'Gold Medal', '7', '4', '8']\nassert solution.findRelativeRanks([46, 18]) == ['Gold Medal', 'Silver Medal']\nassert solution.findRelativeRanks([76, 28, 66, 44, 8, 11, 96, 52, 53]) == ['Silver Medal', '7', 'Bronze Medal', '6', '9', '8', 'Gold Medal', '5', '4']\nassert solution.findRelativeRanks([65, 84, 98, 100, 20, 24, 19, 88, 63, 94]) == ['6', '5', 'Silver Medal', 'Gold Medal', '9', '8', '10', '4', '7', 'Bronze Medal']\nassert solution.findRelativeRanks([55, 18, 88, 89, 27]) == ['Bronze Medal', '5', 'Silver Medal', 'Gold Medal', '4']\nassert solution.findRelativeRanks([53, 79, 63, 10]) == ['Bronze Medal', 'Gold Medal', 'Silver Medal', '4']\nassert solution.findRelativeRanks([28, 79, 5, 97]) == ['Bronze Medal', 'Silver Medal', '4', 'Gold Medal']\nassert solution.findRelativeRanks([76, 3, 21, 7, 69]) == ['Gold Medal', '5', 'Bronze Medal', '4', 'Silver Medal']",
  "inefficient_solution": "class Solution:\n    def findRelativeRanks(self, score: List[int]) -> List[str]:\n        n = len(score)\n        sorted_list = list(range(n))\n        score_with_index = [(score[i], i) for i in range(n)]\n        sorted_score_with_index = sorted(score_with_index, key=lambda x: -x[0])\n        top3 = ['Gold Medal', 'Silver Medal', 'Bronze Medal']\n        ans = [None] * n\n        for i in range(n):\n            ans[sorted_score_with_index[i][1]] = top3[i] if i < 3 else str(i + 1)\n        return ans",
  "is_python": true
}