{
  "problem_idx": 2110,
  "task_name": "Number of Smooth Descent Periods of a Stock",
  "markdown_description": "\nYou are given an integer array `prices` representing the daily price history of a stock, where `prices[i]` is the stock price on the `ith` day.\n\n\nA **smooth descent period** of a stock consists of **one or more contiguous** days such that the price on each day is **lower** than the price on the **preceding day** by **exactly** `1`. The first day of the period is exempted from this rule.\n\n\nReturn *the number of **smooth descent periods***.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** prices = [3,2,1,4]\n**Output:** 7\n**Explanation:** There are 7 smooth descent periods:\n[3], [2], [1], [4], [3,2], [2,1], and [3,2,1]\nNote that a period with one day is a smooth descent period by the definition.\n\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** prices = [8,6,7,7]\n**Output:** 4\n**Explanation:** There are 4 smooth descent periods: [8], [6], [7], and [7]\nNote that [8,6] is not a smooth descent period as 8 - 6 \u2260 1.\n\n```\n\n**Example 3:**\n\n\n\n```\n\n**Input:** prices = [1]\n**Output:** 1\n**Explanation:** There is 1 smooth descent period: [1]\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `1 <= prices.length <= 105`\n* `1 <= prices[i] <= 105`\n\n\n",
  "canonical_solution": "class Solution:\n    def getDescentPeriods(self, prices: List[int]) -> int:\n        ans = 0\n        i, n = 0, len(prices)\n        while i < n:\n            j = i + 1\n            while j < n and prices[j - 1] - prices[j] == 1:\n                j += 1\n            cnt = j - i\n            ans += (1 + cnt) * cnt // 2\n            i = j\n        return ans\n",
  "test_case_generator": "\nimport random\nfrom typing import List\n\nclass Solution:\n    def getDescentPeriods(self, prices: List[int]) -> int:\n        ans = 0\n        i, n = 0, len(prices)\n        while i < n:\n            j = i + 1\n            while j < n and prices[j - 1] - prices[j] == 1:\n                j += 1\n            cnt = j - i\n            ans += (1 + cnt) * cnt // 2\n            i = j\n        return ans\n\ndef generate_test_case():\n    solution = Solution()\n    \n    # Generate a random integer array\n    prices = random.choices(range(1, 101), k=random.randint(1, 11))\n    \n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.getDescentPeriods(prices)\n\n    return prices, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        prices, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.getDescentPeriods(prices) == expected_result\n        print(f\"assert solution.getDescentPeriods({prices}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.getDescentPeriods({prices}) == {expected_result}\")\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.getDescentPeriods([30, 30, 39, 79, 77, 99, 20, 78, 47]) == 9\nassert solution.getDescentPeriods([68, 15, 18, 47, 96, 87, 89]) == 7\nassert solution.getDescentPeriods([24, 63]) == 2\nassert solution.getDescentPeriods([25, 32, 85, 8, 70, 79, 40, 63]) == 8\nassert solution.getDescentPeriods([48]) == 1\nassert solution.getDescentPeriods([35, 32]) == 2\nassert solution.getDescentPeriods([80, 98, 33, 61, 34, 94, 72, 89, 44]) == 9\nassert solution.getDescentPeriods([93, 81, 15, 38, 58, 73]) == 6\nassert solution.getDescentPeriods([49, 96, 18, 49, 88, 40, 67, 17]) == 8\nassert solution.getDescentPeriods([77, 37, 61, 3, 78, 44]) == 6\nassert solution.getDescentPeriods([41, 31, 65, 94, 34, 83, 69]) == 7\nassert solution.getDescentPeriods([64, 55, 87]) == 3\nassert solution.getDescentPeriods([64, 59, 44, 50, 25]) == 5\nassert solution.getDescentPeriods([27, 33, 94, 62, 93, 66, 3, 75, 28, 76]) == 10\nassert solution.getDescentPeriods([80, 80, 58]) == 3\nassert solution.getDescentPeriods([6, 61, 26, 56, 29, 67, 52, 84, 38, 38]) == 10\nassert solution.getDescentPeriods([59, 3, 57, 16, 56, 78]) == 6\nassert solution.getDescentPeriods([98, 45, 55]) == 3\nassert solution.getDescentPeriods([78, 17, 55]) == 3\nassert solution.getDescentPeriods([2, 71, 100, 73, 18, 38, 91, 17]) == 8\nassert solution.getDescentPeriods([68, 19, 57, 46, 57]) == 5\nassert solution.getDescentPeriods([27, 76, 28, 29, 94, 38, 54, 17]) == 8\nassert solution.getDescentPeriods([45, 78]) == 2\nassert solution.getDescentPeriods([90]) == 1\nassert solution.getDescentPeriods([93, 90, 41, 9, 84, 86, 42, 20, 71, 82]) == 10\nassert solution.getDescentPeriods([86, 91, 52, 6, 83, 75, 56, 89]) == 8\nassert solution.getDescentPeriods([17, 79, 69, 82, 6, 11]) == 6\nassert solution.getDescentPeriods([13, 41, 37, 51, 77, 40]) == 6\nassert solution.getDescentPeriods([15, 88, 86, 58, 95, 34, 62, 91, 23]) == 9\nassert solution.getDescentPeriods([29, 50]) == 2\nassert solution.getDescentPeriods([69, 97]) == 2\nassert solution.getDescentPeriods([23, 24, 91, 55, 2, 10, 97, 55]) == 8\nassert solution.getDescentPeriods([16, 36, 3, 38, 37, 41, 20, 91, 85, 55]) == 11\nassert solution.getDescentPeriods([69, 11]) == 2\nassert solution.getDescentPeriods([67, 9]) == 2\nassert solution.getDescentPeriods([93, 83, 34, 89, 14, 94, 46]) == 7\nassert solution.getDescentPeriods([50, 47, 63, 79, 58, 6, 67, 39]) == 8\nassert solution.getDescentPeriods([32, 43, 35, 26, 83, 97, 100, 12, 44, 69]) == 10\nassert solution.getDescentPeriods([52, 96, 48]) == 3\nassert solution.getDescentPeriods([62]) == 1\nassert solution.getDescentPeriods([27, 49, 16, 37, 75, 91, 57, 36, 40, 32]) == 10\nassert solution.getDescentPeriods([39, 12, 37, 83, 56, 10, 15, 21]) == 8\nassert solution.getDescentPeriods([6, 42, 87, 25, 32]) == 5\nassert solution.getDescentPeriods([41, 93, 55, 43, 8, 43, 2]) == 7\nassert solution.getDescentPeriods([69, 33, 42, 67, 85, 96]) == 6\nassert solution.getDescentPeriods([88, 3, 84, 36]) == 4\nassert solution.getDescentPeriods([46, 75]) == 2\nassert solution.getDescentPeriods([87, 27, 34, 61, 24, 77]) == 6\nassert solution.getDescentPeriods([36, 32]) == 2\nassert solution.getDescentPeriods([16, 43, 69, 47, 24, 4]) == 6\nassert solution.getDescentPeriods([10, 88, 8, 19, 46]) == 5\nassert solution.getDescentPeriods([33, 11, 49, 97, 10]) == 5\nassert solution.getDescentPeriods([26, 96, 77, 53, 49, 3, 78, 90, 94]) == 9\nassert solution.getDescentPeriods([89, 22, 1, 36]) == 4\nassert solution.getDescentPeriods([94, 94, 90, 22, 69, 18, 4, 91, 53, 92]) == 10\nassert solution.getDescentPeriods([65, 82, 95]) == 3\nassert solution.getDescentPeriods([37, 83]) == 2\nassert solution.getDescentPeriods([37, 60, 79, 57, 57, 60]) == 6\nassert solution.getDescentPeriods([40, 73, 94, 55, 9, 11, 52]) == 7\nassert solution.getDescentPeriods([69]) == 1\nassert solution.getDescentPeriods([88, 79, 48, 97, 47, 5, 89, 72, 91, 9, 93]) == 11\nassert solution.getDescentPeriods([38, 7, 46, 6, 30, 69, 26, 58, 7, 71]) == 10\nassert solution.getDescentPeriods([45]) == 1\nassert solution.getDescentPeriods([14, 65, 71]) == 3\nassert solution.getDescentPeriods([53, 2, 100, 49, 80]) == 5\nassert solution.getDescentPeriods([100, 26, 17, 35, 83, 48, 29]) == 7\nassert solution.getDescentPeriods([17, 8, 19, 22, 44, 36, 32]) == 7\nassert solution.getDescentPeriods([71, 35, 58, 71]) == 4\nassert solution.getDescentPeriods([54, 34, 47, 63, 35, 26, 7, 66, 2, 51, 98]) == 11\nassert solution.getDescentPeriods([26, 33, 25, 23, 40, 98, 4, 69, 35, 68, 84]) == 11\nassert solution.getDescentPeriods([86, 78, 31, 55, 80]) == 5\nassert solution.getDescentPeriods([58, 36]) == 2\nassert solution.getDescentPeriods([32, 99, 82, 3, 91]) == 5\nassert solution.getDescentPeriods([84, 6, 68, 19]) == 4\nassert solution.getDescentPeriods([93, 94, 48, 6, 37, 58, 3, 79, 30, 77, 53]) == 11\nassert solution.getDescentPeriods([87, 77, 72]) == 3\nassert solution.getDescentPeriods([6, 14, 69, 90, 76, 80]) == 6\nassert solution.getDescentPeriods([18, 4, 87]) == 3\nassert solution.getDescentPeriods([69, 78, 62, 90, 16, 39]) == 6\nassert solution.getDescentPeriods([45]) == 1\nassert solution.getDescentPeriods([3, 40, 5, 30, 5, 76]) == 6\nassert solution.getDescentPeriods([31, 41, 45, 3, 3, 42, 79, 1]) == 8\nassert solution.getDescentPeriods([91, 69]) == 2\nassert solution.getDescentPeriods([56, 85, 61, 57, 6, 25]) == 6\nassert solution.getDescentPeriods([100, 54, 60, 71, 34, 8]) == 6\nassert solution.getDescentPeriods([39, 81, 8, 58, 31, 40, 59, 63, 74]) == 9\nassert solution.getDescentPeriods([27, 54, 70, 82, 33, 93, 63, 3, 55, 99]) == 10\nassert solution.getDescentPeriods([48, 17, 27, 87, 78, 74, 11]) == 7\nassert solution.getDescentPeriods([90, 100, 20, 6, 80, 16, 36, 82, 80, 24]) == 10\nassert solution.getDescentPeriods([6, 10]) == 2\nassert solution.getDescentPeriods([32, 13, 71, 28, 20]) == 5\nassert solution.getDescentPeriods([96, 72, 66, 75, 25, 83, 31, 94, 51, 48, 92]) == 11\nassert solution.getDescentPeriods([88, 46, 43, 8, 17, 55, 93, 54, 85]) == 9\nassert solution.getDescentPeriods([4, 95]) == 2\nassert solution.getDescentPeriods([16, 25, 6, 13, 96, 92, 15, 72, 2]) == 9\nassert solution.getDescentPeriods([92, 44, 11, 77, 27, 77, 93, 34]) == 8\nassert solution.getDescentPeriods([79, 22, 31, 67, 30, 49, 23, 2, 92]) == 9\nassert solution.getDescentPeriods([11, 39, 27, 40, 14, 52, 71, 8]) == 8\nassert solution.getDescentPeriods([57, 53, 34, 98, 41, 63, 45, 78, 97]) == 9\nassert solution.getDescentPeriods([21, 70]) == 2",
  "inefficient_solution": "class Solution:\n    def getDescentPeriods(self, prices: List[int]) -> int:\n        ans = 0\n        n = len(prices)\n        for i in range(n):\n            cnt = 1\n            j = i + 1\n            while j < n and prices[j - 1] - prices[j] == 1:\n                cnt += 1\n                j += 1\n            for k in range(cnt):\n                for l in range(k + 1):\n                    ans += 1\n            i = j\n        return ans",
  "is_python": true
}