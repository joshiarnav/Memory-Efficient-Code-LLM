{
  "problem_idx": 49,
  "task_name": "Group Anagrams",
  "markdown_description": "\nGiven an array of strings `strs`, group **the anagrams** together. You can return the answer in **any order**.\n\n\nAn **Anagram** is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n**Input:** strs = [\"eat\",\"tea\",\"tan\",\"ate\",\"nat\",\"bat\"]\n**Output:** [[\"bat\"],[\"nat\",\"tan\"],[\"ate\",\"eat\",\"tea\"]]\n\n```\n**Example 2:**\n\n\n\n```\n**Input:** strs = [\"\"]\n**Output:** [[\"\"]]\n\n```\n**Example 3:**\n\n\n\n```\n**Input:** strs = [\"a\"]\n**Output:** [[\"a\"]]\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `1 <= strs.length <= 104`\n* `0 <= strs[i].length <= 100`\n* `strs[i]` consists of lowercase English letters.\n\n\n",
  "canonical_solution": "class Solution:\n    def groupAnagrams(self, strs: List[str]) -> List[List[str]]:\n        d = defaultdict(list)\n        for s in strs:\n            k = \"\".join(sorted(s))\n            d[k].append(s)\n        return list(d.values())\n",
  "test_case_generator": "\nimport random\n\nclass Solution:\n    def groupAnagrams(self, strs):\n        d = defaultdict(list)\n        for s in strs:\n            k = \"\".join(sorted(s))\n            d[k].append(s)\n        return list(d.values())\n\ndef generate_test_case():\n    solution = Solution()\n\n    # Generate random list of strings\n    strs = [\"\".join(random.choices(string.ascii_lowercase, k=random.randint(1, 10))) for _ in range(random.randint(1, 10))]\n\n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.groupAnagrams(strs)\n\n    return strs, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        strs, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.groupAnagrams(strs) == expected_result\n        print(f\"assert solution.groupAnagrams({strs}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.groupAnagrams({strs}) == {expected_result}\")\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.groupAnagrams(['vyrxbjg', 'ybaau', 'wgrcldh', 'ozotq']) == [['vyrxbjg'], ['ybaau'], ['wgrcldh'], ['ozotq']]\nassert solution.groupAnagrams(['kkew', 'wer', 'pxjc', 'lwak', 'dbpqs', 'imiyueumrc', 'jonxzhr', 'tjnylbcbus']) == [['kkew'], ['wer'], ['pxjc'], ['lwak'], ['dbpqs'], ['imiyueumrc'], ['jonxzhr'], ['tjnylbcbus']]\nassert solution.groupAnagrams(['hfdk', 'oresuuyek', 'pnj', 'yiohwgwmp', 'nq']) == [['hfdk'], ['oresuuyek'], ['pnj'], ['yiohwgwmp'], ['nq']]\nassert solution.groupAnagrams(['fbf', 'aos', 'rtvjicn', 'uuvcyl', 'kutlfaj', 'lqsjce', 'ynzv', 'ri', 's']) == [['fbf'], ['aos'], ['rtvjicn'], ['uuvcyl'], ['kutlfaj'], ['lqsjce'], ['ynzv'], ['ri'], ['s']]\nassert solution.groupAnagrams(['qshobzma', 'cbiyle']) == [['qshobzma'], ['cbiyle']]\nassert solution.groupAnagrams(['ol', 'u', 'yautkuc', 'tiqup']) == [['ol'], ['u'], ['yautkuc'], ['tiqup']]\nassert solution.groupAnagrams(['t', 'qogvhmzmv']) == [['t'], ['qogvhmzmv']]\nassert solution.groupAnagrams(['pwsusitgg', 'g', 'wrxximnq', 'pdxlulgu', 'acir', 'muapx']) == [['pwsusitgg'], ['g'], ['wrxximnq'], ['pdxlulgu'], ['acir'], ['muapx']]\nassert solution.groupAnagrams(['hdrcdm', 'csfjxu', 'qiz', 'skirark', 'qcg', 'oiifc', 'joubeh', 'ssgvluxr', 'g', 'gbhvofkp']) == [['hdrcdm'], ['csfjxu'], ['qiz'], ['skirark'], ['qcg'], ['oiifc'], ['joubeh'], ['ssgvluxr'], ['g'], ['gbhvofkp']]\nassert solution.groupAnagrams(['hhxsn', 'vf', 'glrq', 'krhy', 'nmjt', 'isieqhvwe', 'rndgpshnmz', 'kum', 'txz']) == [['hhxsn'], ['vf'], ['glrq'], ['krhy'], ['nmjt'], ['isieqhvwe'], ['rndgpshnmz'], ['kum'], ['txz']]\nassert solution.groupAnagrams(['lcx', 'dly', 'dzrcwklzz']) == [['lcx'], ['dly'], ['dzrcwklzz']]\nassert solution.groupAnagrams(['ovbr', 'io', 'rkfd', 'r', 'bitn', 'cwkung', 'ub', 'hef', 'rgwpqlh', 'vjx']) == [['ovbr'], ['io'], ['rkfd'], ['r'], ['bitn'], ['cwkung'], ['ub'], ['hef'], ['rgwpqlh'], ['vjx']]\nassert solution.groupAnagrams(['cwg', 'di', 'u', 'jgqafezeyg', 'gkyawf', 'fgygddsj', 'ptpwijh', 'a', 'rprtz', 'rtqdyjrm']) == [['cwg'], ['di'], ['u'], ['jgqafezeyg'], ['gkyawf'], ['fgygddsj'], ['ptpwijh'], ['a'], ['rprtz'], ['rtqdyjrm']]\nassert solution.groupAnagrams(['lwnxauh', 'ctfcfyjwvh', 'yznxeedqxa']) == [['lwnxauh'], ['ctfcfyjwvh'], ['yznxeedqxa']]\nassert solution.groupAnagrams(['ymkpcdhc']) == [['ymkpcdhc']]\nassert solution.groupAnagrams(['to']) == [['to']]\nassert solution.groupAnagrams(['oang', 'xwikqegj', 'dnt']) == [['oang'], ['xwikqegj'], ['dnt']]\nassert solution.groupAnagrams(['nq', 'kkwmcf', 'dnlra']) == [['nq'], ['kkwmcf'], ['dnlra']]\nassert solution.groupAnagrams(['uc', 'hb', 'vhrk', 'hfka', 'gnmmf', 'loyt', 'nmctfgphhf', 'wkmut', 'zsihvrujl', 'ozwm']) == [['uc'], ['hb'], ['vhrk'], ['hfka'], ['gnmmf'], ['loyt'], ['nmctfgphhf'], ['wkmut'], ['zsihvrujl'], ['ozwm']]\nassert solution.groupAnagrams(['obm', 'probpocq', 'keyxcjkr']) == [['obm'], ['probpocq'], ['keyxcjkr']]\nassert solution.groupAnagrams(['bn', 'jewniyse', 'cx', 'bjvhvedfq', 'n', 'nh', 'ir', 'teqz', 'xvbsc']) == [['bn'], ['jewniyse'], ['cx'], ['bjvhvedfq'], ['n'], ['nh'], ['ir'], ['teqz'], ['xvbsc']]\nassert solution.groupAnagrams(['wfy', 'hejfakoby', 'fjijwlii', 'g']) == [['wfy'], ['hejfakoby'], ['fjijwlii'], ['g']]\nassert solution.groupAnagrams(['azbjqcjw', 'mll', 'fmkc', 'gngnnykzxx', 'ccxqecu']) == [['azbjqcjw'], ['mll'], ['fmkc'], ['gngnnykzxx'], ['ccxqecu']]\nassert solution.groupAnagrams(['pxeof', 'qfn', 'gzmvzxf', 'gp', 'n', 'jqal', 'fs']) == [['pxeof'], ['qfn'], ['gzmvzxf'], ['gp'], ['n'], ['jqal'], ['fs']]\nassert solution.groupAnagrams(['ylpmgsquhu', 'fqenmi', 'ugvfp']) == [['ylpmgsquhu'], ['fqenmi'], ['ugvfp']]\nassert solution.groupAnagrams(['bqxfjgxb', 'pytfsrvwac', 'zrqw', 'rqzbixvhci', 'ah', 'uxy', 'delkxl', 'bzcagfhyh', 'knfp']) == [['bqxfjgxb'], ['pytfsrvwac'], ['zrqw'], ['rqzbixvhci'], ['ah'], ['uxy'], ['delkxl'], ['bzcagfhyh'], ['knfp']]\nassert solution.groupAnagrams(['d', 'dech', 'xwurgmc']) == [['d'], ['dech'], ['xwurgmc']]\nassert solution.groupAnagrams(['vggrwbzk', 'fe', 'ua', 'ylunggnvnr', 'xmjnnkosuv', 'aehjy', 'y', 'qucr', 'wjcyiemuay']) == [['vggrwbzk'], ['fe'], ['ua'], ['ylunggnvnr'], ['xmjnnkosuv'], ['aehjy'], ['y'], ['qucr'], ['wjcyiemuay']]\nassert solution.groupAnagrams(['l', 'rgwcnsgbc', 'mepyaw']) == [['l'], ['rgwcnsgbc'], ['mepyaw']]\nassert solution.groupAnagrams(['gzwonods', 'vvovsfl']) == [['gzwonods'], ['vvovsfl']]\nassert solution.groupAnagrams(['xa', 'gxkqzxiv', 'ymbhjjdxpn', 'fzntlh', 'k', 'dyaemol', 'auesaida', 'fncyognz']) == [['xa'], ['gxkqzxiv'], ['ymbhjjdxpn'], ['fzntlh'], ['k'], ['dyaemol'], ['auesaida'], ['fncyognz']]\nassert solution.groupAnagrams(['t']) == [['t']]\nassert solution.groupAnagrams(['cufvzvf', 'zohdmcxgrc']) == [['cufvzvf'], ['zohdmcxgrc']]\nassert solution.groupAnagrams(['hmtaphvhki', 'xrmj', 'nfpwqnauq', 'ymywq', 'ehuvglgllz', 'uk']) == [['hmtaphvhki'], ['xrmj'], ['nfpwqnauq'], ['ymywq'], ['ehuvglgllz'], ['uk']]\nassert solution.groupAnagrams(['n', 'apaarji', 'cxwbkdy', 'kipr', 'eqdim', 'zhqxrzz', 'gfsxsmcro', 'slmt']) == [['n'], ['apaarji'], ['cxwbkdy'], ['kipr'], ['eqdim'], ['zhqxrzz'], ['gfsxsmcro'], ['slmt']]\nassert solution.groupAnagrams(['lo', 'nlyuilmt', 'xcjsbo', 'kvnh', 'jrhjaf', 'yuimcc']) == [['lo'], ['nlyuilmt'], ['xcjsbo'], ['kvnh'], ['jrhjaf'], ['yuimcc']]\nassert solution.groupAnagrams(['ytclsllouu', 'hhjm', 'vvpzifp', 'hdswrgllp', 'qbloyuljd', 'vwxocb', 'mtsrj']) == [['ytclsllouu'], ['hhjm'], ['vvpzifp'], ['hdswrgllp'], ['qbloyuljd'], ['vwxocb'], ['mtsrj']]\nassert solution.groupAnagrams(['idgs', 'cmkopf', 'tvhtnbgwi', 'zvri']) == [['idgs'], ['cmkopf'], ['tvhtnbgwi'], ['zvri']]\nassert solution.groupAnagrams(['s', 'epdwfetvw']) == [['s'], ['epdwfetvw']]\nassert solution.groupAnagrams(['smynkiedk', 'lec', 'nfbu', 'rkhxryrdu', 'ffpyq', 'tdixepdug', 'jmbcbozax', 'nry', 'rk']) == [['smynkiedk'], ['lec'], ['nfbu'], ['rkhxryrdu'], ['ffpyq'], ['tdixepdug'], ['jmbcbozax'], ['nry'], ['rk']]\nassert solution.groupAnagrams(['s', 'hoelbrpkw', 'yy', 'jempipermp', 'zbqi', 'ww', 'faohts', 'rhglnwx', 'aq']) == [['s'], ['hoelbrpkw'], ['yy'], ['jempipermp'], ['zbqi'], ['ww'], ['faohts'], ['rhglnwx'], ['aq']]\nassert solution.groupAnagrams(['jeppjie', 'vm', 'albsayts', 'lerwlqxbek', 's']) == [['jeppjie'], ['vm'], ['albsayts'], ['lerwlqxbek'], ['s']]\nassert solution.groupAnagrams(['try', 'wimrcflrh', 'nlrtozofe', 'pi', 'sloaxpw', 'vhhrje', 'zcjpys', 'wxk']) == [['try'], ['wimrcflrh'], ['nlrtozofe'], ['pi'], ['sloaxpw'], ['vhhrje'], ['zcjpys'], ['wxk']]\nassert solution.groupAnagrams(['rjgolo', 'ngdyvmf', 'pgad', 'i', 'qjf', 'icyaqfmwin']) == [['rjgolo'], ['ngdyvmf'], ['pgad'], ['i'], ['qjf'], ['icyaqfmwin']]\nassert solution.groupAnagrams(['emihnqxp', 'kciaphzj', 'mu', 'ybbtus', 'pzchvae', 'oagm', 'jfn']) == [['emihnqxp'], ['kciaphzj'], ['mu'], ['ybbtus'], ['pzchvae'], ['oagm'], ['jfn']]\nassert solution.groupAnagrams(['duaeap', 'k', 'nom', 'mofbbg']) == [['duaeap'], ['k'], ['nom'], ['mofbbg']]\nassert solution.groupAnagrams(['gypd']) == [['gypd']]\nassert solution.groupAnagrams(['ywslbv', 'qctob', 'pqhgzvdgxg', 's', 'gtktutgbel', 'slir']) == [['ywslbv'], ['qctob'], ['pqhgzvdgxg'], ['s'], ['gtktutgbel'], ['slir']]\nassert solution.groupAnagrams(['kjkvnfay', 'bw', 'v', 'frzndikfcx', 'if', 'lenfnzsgz', 'cvx', 'sqdz', 'tliduxsx', 'nxa']) == [['kjkvnfay'], ['bw'], ['v'], ['frzndikfcx'], ['if'], ['lenfnzsgz'], ['cvx'], ['sqdz'], ['tliduxsx'], ['nxa']]\nassert solution.groupAnagrams(['cwsxqceie', 'nfgvsqs']) == [['cwsxqceie'], ['nfgvsqs']]\nassert solution.groupAnagrams(['l', 'ldmiugshgt', 'sgayuuucmf', 'x']) == [['l'], ['ldmiugshgt'], ['sgayuuucmf'], ['x']]\nassert solution.groupAnagrams(['vgpacqtnpf', 'xwzdqnysy', 'y', 'guqdopy', 'imphzwhhhl', 'ol', 'xbyutpm', 'vtlncjw', 'fbxrxku']) == [['vgpacqtnpf'], ['xwzdqnysy'], ['y'], ['guqdopy'], ['imphzwhhhl'], ['ol'], ['xbyutpm'], ['vtlncjw'], ['fbxrxku']]\nassert solution.groupAnagrams(['wbq', 'irmltygmbp', 'vmddm', 'bbuzekgas', 'twx', 'r', 'wuvtu']) == [['wbq'], ['irmltygmbp'], ['vmddm'], ['bbuzekgas'], ['twx'], ['r'], ['wuvtu']]\nassert solution.groupAnagrams(['cghzx', 'bvhsue', 'bmbhkw', 'mwwerj', 'hkhv', 'hezfwqebno', 'wwoqpnwq']) == [['cghzx'], ['bvhsue'], ['bmbhkw'], ['mwwerj'], ['hkhv'], ['hezfwqebno'], ['wwoqpnwq']]\nassert solution.groupAnagrams(['zhnzjd', 'bysc', 's', 'bzzzdd', 'pmtsfhbawh', 'styrgil', 'vcyjiujs']) == [['zhnzjd'], ['bysc'], ['s'], ['bzzzdd'], ['pmtsfhbawh'], ['styrgil'], ['vcyjiujs']]\nassert solution.groupAnagrams(['gunfabsu', 'cqwsqc', 'uz', 'hwxq', 'dwh', 'qs', 'jmgkmwv']) == [['gunfabsu'], ['cqwsqc'], ['uz'], ['hwxq'], ['dwh'], ['qs'], ['jmgkmwv']]\nassert solution.groupAnagrams(['wltutvgyrv', 'bpd', 'punottudjj', 'rzfxlz', 'pqva', 'uidf', 'cpkwrdohq', 'ilpstcpf', 'eblddp', 'iiaizfopq']) == [['wltutvgyrv'], ['bpd'], ['punottudjj'], ['rzfxlz'], ['pqva'], ['uidf'], ['cpkwrdohq'], ['ilpstcpf'], ['eblddp'], ['iiaizfopq']]\nassert solution.groupAnagrams(['uttzp', 'kwpmggnxvd', 'jtudzrf', 'cfmklmpfz', 'mgik', 'ddrocmbw', 'va', 'nmj', 'hvvezbkmuc', 'kyxtimoy']) == [['uttzp'], ['kwpmggnxvd'], ['jtudzrf'], ['cfmklmpfz'], ['mgik'], ['ddrocmbw'], ['va'], ['nmj'], ['hvvezbkmuc'], ['kyxtimoy']]\nassert solution.groupAnagrams(['gybkrc', 'daz', 'lrhxcgni', 'gqedv', 'jkvngcl', 'ueeyi', 'woqvnu', 'lcoa', 'zr']) == [['gybkrc'], ['daz'], ['lrhxcgni'], ['gqedv'], ['jkvngcl'], ['ueeyi'], ['woqvnu'], ['lcoa'], ['zr']]\nassert solution.groupAnagrams(['x', 'eev', 'rwfroslp', 'errtqrumte', 'wakkt']) == [['x'], ['eev'], ['rwfroslp'], ['errtqrumte'], ['wakkt']]\nassert solution.groupAnagrams(['gxtgwtlalk', 'vqdan', 'pmlv', 'swsfuibd']) == [['gxtgwtlalk'], ['vqdan'], ['pmlv'], ['swsfuibd']]\nassert solution.groupAnagrams(['h']) == [['h']]\nassert solution.groupAnagrams(['qjbc']) == [['qjbc']]\nassert solution.groupAnagrams(['snfvcnxiy', 'lojtbt', 'he', 'kxyngw', 'tnixg', 'udp', 'er']) == [['snfvcnxiy'], ['lojtbt'], ['he'], ['kxyngw'], ['tnixg'], ['udp'], ['er']]\nassert solution.groupAnagrams(['xddcj', 'xvplz', 'vepev', 'uaelnu', 'cawgzevz', 'wjtx', 'cyxxoqmyga', 'tphxzeglq', 'krm']) == [['xddcj'], ['xvplz'], ['vepev'], ['uaelnu'], ['cawgzevz'], ['wjtx'], ['cyxxoqmyga'], ['tphxzeglq'], ['krm']]\nassert solution.groupAnagrams(['wmpgu', 'rqfz', 'sdnegr', 'tkkd', 'nzqoewhyj', 'uzz']) == [['wmpgu'], ['rqfz'], ['sdnegr'], ['tkkd'], ['nzqoewhyj'], ['uzz']]\nassert solution.groupAnagrams(['qlgpfhiakv', 'fv', 'cqcky']) == [['qlgpfhiakv'], ['fv'], ['cqcky']]\nassert solution.groupAnagrams(['browghijxi', 'qnxftt', 'rtu', 'fqcrqny']) == [['browghijxi'], ['qnxftt'], ['rtu'], ['fqcrqny']]\nassert solution.groupAnagrams(['aro', 'gzs', 'aprlrkw', 'bfkqvvkwxe', 'zuxvc', 'p', 'afc', 'cucnnla', 'eerrt']) == [['aro'], ['gzs'], ['aprlrkw'], ['bfkqvvkwxe'], ['zuxvc'], ['p'], ['afc'], ['cucnnla'], ['eerrt']]\nassert solution.groupAnagrams(['rrcpopudh', 'zbcoipr', 'xpgpvuzlr', 'dcix', 'aarxhmdzyl', 'oaopjoz', 'vblrsphxfz', 'zdoclthpcw', 'yhrjon']) == [['rrcpopudh'], ['zbcoipr'], ['xpgpvuzlr'], ['dcix'], ['aarxhmdzyl'], ['oaopjoz'], ['vblrsphxfz'], ['zdoclthpcw'], ['yhrjon']]\nassert solution.groupAnagrams(['prsdukkvk', 'sshcgcomq', 'wouq', 'rlf', 'clveitb', 'hzkunsthp', 'ajdaaldbpd', 'ldxskzk', 'pygpmz', 'ymtnzrhka']) == [['prsdukkvk'], ['sshcgcomq'], ['wouq'], ['rlf'], ['clveitb'], ['hzkunsthp'], ['ajdaaldbpd'], ['ldxskzk'], ['pygpmz'], ['ymtnzrhka']]\nassert solution.groupAnagrams(['sbj']) == [['sbj']]\nassert solution.groupAnagrams(['vsycudgs', 'lxvuhais', 'efjgscmw', 'cvccgdr', 'sjzqstmvdf', 'kzjpwjdt', 'hbole']) == [['vsycudgs'], ['lxvuhais'], ['efjgscmw'], ['cvccgdr'], ['sjzqstmvdf'], ['kzjpwjdt'], ['hbole']]\nassert solution.groupAnagrams(['zpl', 'x', 'dxxvnslc', 'e', 'unylmjqlgy', 'hmromnqq', 'qyvuvyrcgb', 'ptak', 'qjkxjl', 'duokgoud']) == [['zpl'], ['x'], ['dxxvnslc'], ['e'], ['unylmjqlgy'], ['hmromnqq'], ['qyvuvyrcgb'], ['ptak'], ['qjkxjl'], ['duokgoud']]\nassert solution.groupAnagrams(['bxer']) == [['bxer']]\nassert solution.groupAnagrams(['zgfyt', 'njrtzgtq', 'xabmgvut']) == [['zgfyt'], ['njrtzgtq'], ['xabmgvut']]\nassert solution.groupAnagrams(['mfpsiznoa', 'ayczhpi', 'rbvzfl', 'pabczelmi']) == [['mfpsiznoa'], ['ayczhpi'], ['rbvzfl'], ['pabczelmi']]\nassert solution.groupAnagrams(['fqrix', 'cizwjebdi', 'urvpx', 'glqhikkgmg', 'gzryblvz', 'tdghh']) == [['fqrix'], ['cizwjebdi'], ['urvpx'], ['glqhikkgmg'], ['gzryblvz'], ['tdghh']]\nassert solution.groupAnagrams(['lavivvdxp', 'pdyt', 'rqjxuc', 'glbsbik', 'osy']) == [['lavivvdxp'], ['pdyt'], ['rqjxuc'], ['glbsbik'], ['osy']]\nassert solution.groupAnagrams(['kmsilb']) == [['kmsilb']]\nassert solution.groupAnagrams(['gbsaucieiw']) == [['gbsaucieiw']]\nassert solution.groupAnagrams(['qaschgqkkc', 'odgc']) == [['qaschgqkkc'], ['odgc']]\nassert solution.groupAnagrams(['mmfkh', 'tiuclinp', 'kiufjvzx', 'h']) == [['mmfkh'], ['tiuclinp'], ['kiufjvzx'], ['h']]\nassert solution.groupAnagrams(['nkoff', 'mjcpa', 'kidqiw', 'vjswlpcday', 'fms', 'anfer', 'nf', 'ifnuvy', 'lkouiz']) == [['nkoff'], ['mjcpa'], ['kidqiw'], ['vjswlpcday'], ['fms'], ['anfer'], ['nf'], ['ifnuvy'], ['lkouiz']]\nassert solution.groupAnagrams(['erhrs', 'uvqcdcxg', 'mhik', 'yprogixb', 'wackw']) == [['erhrs'], ['uvqcdcxg'], ['mhik'], ['yprogixb'], ['wackw']]\nassert solution.groupAnagrams(['iuwpywcity', 's', 'zbnhbt']) == [['iuwpywcity'], ['s'], ['zbnhbt']]\nassert solution.groupAnagrams(['jtokjpfqh', 'lcy', 'oc', 'ypq', 'huqqj', 'cmeybger', 'mluprdatd']) == [['jtokjpfqh'], ['lcy'], ['oc'], ['ypq'], ['huqqj'], ['cmeybger'], ['mluprdatd']]\nassert solution.groupAnagrams(['nzyian', 'ipolsroukc', 'xrwxhn', 'limfuft', 'l', 'mdxsflf', 'gxsifsmab']) == [['nzyian'], ['ipolsroukc'], ['xrwxhn'], ['limfuft'], ['l'], ['mdxsflf'], ['gxsifsmab']]\nassert solution.groupAnagrams(['vqcnmgdts', 'xcwogd', 'na', 'ik', 'qkievyfc', 'jnuc', 'jzxqcwun', 'ohkz', 'vjsalm']) == [['vqcnmgdts'], ['xcwogd'], ['na'], ['ik'], ['qkievyfc'], ['jnuc'], ['jzxqcwun'], ['ohkz'], ['vjsalm']]\nassert solution.groupAnagrams(['kcjxmerwb', 'gt', 'zvjnhn']) == [['kcjxmerwb'], ['gt'], ['zvjnhn']]\nassert solution.groupAnagrams(['bh', 'iyyrpxtelr', 'ghnul', 'bujuwcnw', 'pshxbsy', 'bhltyhfdo', 'eoqqfe', 'bznlqif']) == [['bh'], ['iyyrpxtelr'], ['ghnul'], ['bujuwcnw'], ['pshxbsy'], ['bhltyhfdo'], ['eoqqfe'], ['bznlqif']]\nassert solution.groupAnagrams(['qym']) == [['qym']]\nassert solution.groupAnagrams(['fiwgwqbbx', 'xaxdbqjh', 'nm', 'd', 'vhe', 'ggdsqhjub', 'ofmff', 'enfimfvaz', 'sovuouwjo', 'ephpqlksr']) == [['fiwgwqbbx'], ['xaxdbqjh'], ['nm'], ['d'], ['vhe'], ['ggdsqhjub'], ['ofmff'], ['enfimfvaz'], ['sovuouwjo'], ['ephpqlksr']]\nassert solution.groupAnagrams(['lvmqsud']) == [['lvmqsud']]\nassert solution.groupAnagrams(['tu', 'yuaftummx', 'vanjx', 'z', 'tadjasqy', 'drtccg']) == [['tu'], ['yuaftummx'], ['vanjx'], ['z'], ['tadjasqy'], ['drtccg']]\nassert solution.groupAnagrams(['b', 'qpvoyrxo', 'xkfftgwe', 'yizwltgis', 't', 'eleuckiy', 'whcda', 'ux', 'fdtjxdvzj']) == [['b'], ['qpvoyrxo'], ['xkfftgwe'], ['yizwltgis'], ['t'], ['eleuckiy'], ['whcda'], ['ux'], ['fdtjxdvzj']]\nassert solution.groupAnagrams(['ykaqs', 'xhgaq']) == [['ykaqs'], ['xhgaq']]\nassert solution.groupAnagrams(['lmgimsto', 'yqexewkes', 'mekelpbix', 'rp']) == [['lmgimsto'], ['yqexewkes'], ['mekelpbix'], ['rp']]\nassert solution.groupAnagrams(['ucixhwd', 'accmka']) == [['ucixhwd'], ['accmka']]\nassert solution.groupAnagrams(['jusiogfhwb', 'kxjlhdtyk']) == [['jusiogfhwb'], ['kxjlhdtyk']]",
  "inefficient_solution": "class Solution:\n    def groupAnagrams(self, strs: List[str]) -> List[List[str]]:\n        d = {}\n        for i in range(len(strs)):\n            for j in range(i+1, len(strs)):\n                if sorted(strs[i]) == sorted(strs[j]):\n                    for k in range(len(strs[i])):\n                        strs[i] += strs[j][k]\n                    strs[j] = ''\n        for s in strs:\n            if s:\n                k = \"\".join(sorted(s))\n                if k not in d:\n                    d[k] = []\n                d[k].append(s)\n        return list(d.values())",
  "is_python": true
}