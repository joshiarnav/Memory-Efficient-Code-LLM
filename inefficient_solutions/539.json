{
  "problem_idx": 539,
  "task_name": "Minimum Time Difference",
  "markdown_description": "\n\nGiven a list of 24-hour clock time points in **\"HH:MM\"** format, return *the minimum **minutes** difference between any two time-points in the list*.\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n**Input:** timePoints = [\"23:59\",\"00:00\"]\n**Output:** 1\n\n```\n**Example 2:**\n\n\n\n```\n**Input:** timePoints = [\"00:00\",\"23:59\",\"00:00\"]\n**Output:** 0\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `2 <= timePoints.length <= 2 * 104`\n* `timePoints[i]` is in the format **\"HH:MM\"**.\n\n\n",
  "canonical_solution": "class Solution:\n    def findMinDifference(self, timePoints: List[str]) -> int:\n        if len(timePoints) > 24 * 60:\n            return 0\n        mins = sorted(int(t[:2]) * 60 + int(t[3:]) for t in timePoints)\n        mins.append(mins[0] + 24 * 60)\n        res = mins[-1]\n        for i in range(1, len(mins)):\n            res = min(res, mins[i] - mins[i - 1])\n        return res\n",
  "test_case_generator": "\nimport random\n\nclass Solution:\n    def findMinDifference(self, timePoints):\n        if len(timePoints) > 24 * 60:\n            return 0\n        mins = sorted(int(t[:2]) * 60 + int(t[3:]) for t in timePoints)\n        mins.append(mins[0] + 24 * 60)\n        res = mins[-1]\n        for i in range(1, len(mins)):\n            res = min(res, mins[i] - mins[i - 1])\n        return res\n\n\ndef generate_test_case():\n    solution = Solution()\n\n    # Generate random time points list\n    timePoints = []\n    for _ in range(random.randint(2, 10)):\n        hour = random.randint(0, 23)\n        minute = random.randint(0, 59)\n        timePoints.append(f\"{hour:02d}:{minute:02d}\")\n\n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.findMinDifference(timePoints)\n\n    return timePoints, expected_result\n\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        timePoints, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.findMinDifference(timePoints) == expected_result\n        print(f\"assert solution.findMinDifference({timePoints}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.findMinDifference({timePoints}) == {expected_result}\")\n    return test_case_generator_results\n\n\nif __name__ == \"__main__\":\n    num_tests = 100 # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.findMinDifference(['12:49', '04:09', '01:21', '09:59', '13:07', '16:10', '20:11', '21:11', '12:06']) == 18\nassert solution.findMinDifference(['02:08', '02:11', '21:04']) == 3\nassert solution.findMinDifference(['06:54', '07:18', '00:43', '09:20']) == 24\nassert solution.findMinDifference(['15:39', '04:40', '06:22', '20:45', '19:57']) == 48\nassert solution.findMinDifference(['22:25', '21:42', '05:35', '05:33']) == 2\nassert solution.findMinDifference(['02:34', '11:28', '05:51', '04:24', '09:46', '21:42', '14:13', '05:12']) == 39\nassert solution.findMinDifference(['15:35', '23:08', '03:16']) == 248\nassert solution.findMinDifference(['06:52', '12:16', '10:19', '12:29']) == 13\nassert solution.findMinDifference(['16:06', '17:16', '10:37', '09:14', '14:08', '13:45', '22:29', '23:45', '15:15']) == 23\nassert solution.findMinDifference(['04:28', '15:07', '14:31']) == 36\nassert solution.findMinDifference(['07:36', '05:14', '03:21', '04:20', '02:08', '01:52', '01:27', '14:55', '23:07', '07:48']) == 12\nassert solution.findMinDifference(['16:55', '17:12', '05:08', '17:27', '08:11']) == 15\nassert solution.findMinDifference(['21:17', '01:48', '00:23', '10:12', '20:29', '12:23']) == 48\nassert solution.findMinDifference(['22:33', '09:26', '12:06', '23:23', '05:06', '01:12', '16:23', '14:57']) == 50\nassert solution.findMinDifference(['15:23', '07:19', '09:58']) == 159\nassert solution.findMinDifference(['18:08', '01:56', '09:03', '13:48', '03:00']) == 64\nassert solution.findMinDifference(['03:50', '20:00', '04:34', '01:22', '04:20', '06:49', '04:48', '22:39', '08:09', '05:25']) == 14\nassert solution.findMinDifference(['11:26', '01:28', '18:25']) == 419\nassert solution.findMinDifference(['01:49', '20:27', '05:28', '13:56', '02:08', '10:00', '20:00', '00:58', '21:32', '08:01']) == 19\nassert solution.findMinDifference(['22:50', '17:17', '23:05', '21:25', '09:52', '08:48', '16:20', '06:35', '02:29']) == 15\nassert solution.findMinDifference(['07:31', '04:11', '19:37', '18:39', '10:42', '21:26']) == 58\nassert solution.findMinDifference(['04:42', '22:01', '12:24']) == 401\nassert solution.findMinDifference(['12:58', '19:10', '01:18', '08:51', '04:22', '22:27', '21:46', '10:22', '21:29']) == 17\nassert solution.findMinDifference(['08:00', '05:30', '22:15']) == 150\nassert solution.findMinDifference(['00:46', '11:17', '16:26']) == 309\nassert solution.findMinDifference(['14:11', '10:12']) == 239\nassert solution.findMinDifference(['00:46', '20:28', '11:19', '18:43', '09:34']) == 105\nassert solution.findMinDifference(['04:45', '07:29', '04:57']) == 12\nassert solution.findMinDifference(['05:09', '19:29']) == 580\nassert solution.findMinDifference(['02:02', '17:32', '23:43', '16:14', '07:00']) == 78\nassert solution.findMinDifference(['12:50', '16:20', '21:59', '20:12']) == 107\nassert solution.findMinDifference(['04:12', '04:03', '17:59', '11:43', '04:10', '15:10', '12:31', '08:07', '07:25']) == 2\nassert solution.findMinDifference(['19:45', '02:59', '08:58', '11:19', '14:37', '21:13', '23:30', '01:44', '02:55']) == 4\nassert solution.findMinDifference(['20:23', '07:31', '08:09']) == 38\nassert solution.findMinDifference(['05:28', '03:07', '11:33', '04:24', '23:13', '17:09']) == 64\nassert solution.findMinDifference(['09:29', '16:30', '11:49', '03:24', '07:25', '08:22', '08:06', '23:49', '12:19']) == 16\nassert solution.findMinDifference(['10:39', '01:06', '05:53', '07:03', '21:42', '20:08', '04:53']) == 60\nassert solution.findMinDifference(['18:50', '08:51', '06:42', '20:04', '16:53', '08:39', '17:44']) == 12\nassert solution.findMinDifference(['12:10', '15:56', '13:25']) == 75\nassert solution.findMinDifference(['22:31', '01:54', '19:43', '21:06', '09:37', '17:38', '20:18', '23:36', '22:19', '02:11']) == 12\nassert solution.findMinDifference(['12:32', '19:03', '01:51', '14:53', '02:26', '22:08', '21:39']) == 29\nassert solution.findMinDifference(['16:32', '01:46', '17:51', '11:26', '11:45', '04:20']) == 19\nassert solution.findMinDifference(['19:09', '21:07', '11:34', '22:22', '06:09', '09:24', '18:26']) == 43\nassert solution.findMinDifference(['14:22', '12:25', '20:02', '15:06', '10:28', '19:34', '08:23', '12:39', '03:10', '11:01']) == 14\nassert solution.findMinDifference(['09:31', '08:26']) == 65\nassert solution.findMinDifference(['14:02', '10:10', '14:24', '18:59', '04:45', '20:07', '23:30']) == 22\nassert solution.findMinDifference(['01:48', '06:15', '14:30', '10:46', '15:02', '14:56', '15:48', '10:42']) == 4\nassert solution.findMinDifference(['00:06', '19:14', '04:36', '03:33', '23:20', '21:52', '04:27']) == 9\nassert solution.findMinDifference(['20:53', '01:43', '08:40', '18:43']) == 130\nassert solution.findMinDifference(['15:24', '03:46', '05:21', '18:01', '10:43', '18:53', '06:08', '05:21']) == 0\nassert solution.findMinDifference(['16:22', '19:25', '08:14', '06:55', '08:28', '07:03', '21:45', '14:24']) == 8\nassert solution.findMinDifference(['19:50', '14:13', '02:33', '19:43', '10:56']) == 7\nassert solution.findMinDifference(['14:54', '03:07', '18:25', '17:32', '17:06', '07:30']) == 26\nassert solution.findMinDifference(['21:39', '15:27', '11:16']) == 251\nassert solution.findMinDifference(['14:09', '23:19', '21:22', '20:23']) == 59\nassert solution.findMinDifference(['14:57', '10:32']) == 265\nassert solution.findMinDifference(['20:53', '12:23', '14:11', '04:32']) == 108\nassert solution.findMinDifference(['12:57', '00:06']) == 669\nassert solution.findMinDifference(['14:21', '09:12', '18:47', '19:39', '02:05', '10:21', '21:31', '22:57', '19:49']) == 10\nassert solution.findMinDifference(['01:12', '16:29', '05:41', '05:57', '09:59']) == 16\nassert solution.findMinDifference(['08:40', '13:14', '14:49', '03:25', '11:59']) == 75\nassert solution.findMinDifference(['13:44', '20:40', '07:00', '12:07', '20:15', '14:07', '20:05', '11:17']) == 10\nassert solution.findMinDifference(['13:22', '06:42', '03:49', '03:31']) == 18\nassert solution.findMinDifference(['00:29', '00:23', '22:12', '20:57', '16:43', '06:10', '19:18', '20:08', '07:39']) == 6\nassert solution.findMinDifference(['15:50', '14:58', '08:34', '02:20', '18:36', '01:57']) == 23\nassert solution.findMinDifference(['23:23', '05:53', '06:35', '10:08', '12:00', '14:07']) == 42\nassert solution.findMinDifference(['20:32', '09:46', '06:42', '20:16', '06:43', '05:11', '22:51']) == 1\nassert solution.findMinDifference(['19:37', '19:27']) == 10\nassert solution.findMinDifference(['20:49', '23:50', '23:18', '04:02']) == 32\nassert solution.findMinDifference(['11:55', '21:54', '17:27', '18:32', '16:39', '07:02', '19:24', '22:27']) == 33\nassert solution.findMinDifference(['15:17', '14:56']) == 21\nassert solution.findMinDifference(['11:00', '08:28', '04:31', '10:01', '23:50', '17:45', '02:53', '23:25', '00:29', '11:44']) == 25\nassert solution.findMinDifference(['01:59', '03:13', '04:32']) == 74\nassert solution.findMinDifference(['03:05', '17:00', '11:14', '18:17', '03:34']) == 29\nassert solution.findMinDifference(['23:55', '10:12', '20:36', '13:36', '20:48', '02:54', '21:36', '03:51']) == 12\nassert solution.findMinDifference(['18:04', '01:32', '04:28', '03:28', '11:23', '01:39']) == 7\nassert solution.findMinDifference(['09:50', '22:29', '18:26', '14:02', '12:11']) == 111\nassert solution.findMinDifference(['16:10', '22:55', '10:03', '14:08', '04:03', '13:30', '04:22', '03:42', '11:08', '15:17']) == 19\nassert solution.findMinDifference(['07:15', '09:23']) == 128\nassert solution.findMinDifference(['07:31', '22:27']) == 544\nassert solution.findMinDifference(['06:10', '16:36', '00:25', '05:21', '21:18', '12:16']) == 49\nassert solution.findMinDifference(['13:20', '04:34', '03:49', '17:59', '16:00', '02:59', '20:35', '19:02']) == 45\nassert solution.findMinDifference(['12:05', '10:20', '08:54', '16:42', '03:09', '20:10']) == 86\nassert solution.findMinDifference(['12:52', '14:08', '02:59']) == 76\nassert solution.findMinDifference(['23:41', '04:11', '02:27']) == 104\nassert solution.findMinDifference(['00:33', '20:13', '11:41', '08:41', '02:29', '21:11', '20:18', '13:32', '17:11', '19:05']) == 5\nassert solution.findMinDifference(['02:45', '17:21', '12:28', '16:06', '23:44', '10:52']) == 75\nassert solution.findMinDifference(['06:37', '04:52', '04:17', '20:57']) == 35\nassert solution.findMinDifference(['23:39', '21:39', '10:13', '08:04', '16:13', '04:15', '20:15']) == 84\nassert solution.findMinDifference(['16:42', '01:03', '23:06', '05:40', '15:09', '13:24']) == 93\nassert solution.findMinDifference(['12:53', '17:52', '19:00', '06:51', '13:17', '03:33']) == 24\nassert solution.findMinDifference(['11:36', '21:11', '11:03', '07:07', '11:10', '04:46', '17:45', '00:17', '16:29']) == 7\nassert solution.findMinDifference(['06:50', '22:37', '18:02', '16:53']) == 69\nassert solution.findMinDifference(['09:01', '04:00', '22:53', '12:30', '16:10', '15:49', '16:50', '05:00', '00:53', '16:28']) == 18\nassert solution.findMinDifference(['19:24', '02:15', '14:09', '08:13', '10:11', '19:54', '19:43', '22:37']) == 11\nassert solution.findMinDifference(['17:02', '16:32', '14:49', '19:14', '07:31', '02:31', '23:03', '17:12', '10:32']) == 10\nassert solution.findMinDifference(['00:30', '06:18', '00:11', '13:18', '11:02', '06:30', '22:12', '18:16', '01:45', '00:53']) == 12\nassert solution.findMinDifference(['00:55', '00:59', '20:54', '15:53']) == 4\nassert solution.findMinDifference(['15:30', '17:21', '00:03', '12:19', '04:56', '23:55', '07:43', '04:14', '22:05', '21:49']) == 8\nassert solution.findMinDifference(['03:26', '12:09', '10:08']) == 121",
  "inefficient_solution": "class Solution:\n    def findMinDifference(self, timePoints: List[str]) -> int:\n        if len(timePoints) > 24 * 60:\n            return 0\n        mins = []\n        for tp in timePoints:\n            h, m = tp.split(\":\")\n            mins.append(int(h) * 60 + int(m))\n        mins.sort()\n        mins2 = mins.copy()\n        for _ in range(len(timePoints)):\n            mins2 += mins\n        mins2.sort()\n        res = 24 * 60\n        for i in range(len(mins)):\n            for j in range(i + 1, len(mins)):\n                res = min(res, abs(mins2[i] - mins2[j]))\n        return res",
  "is_python": true
}