{
  "problem_idx": 1227,
  "task_name": "Airplane Seat Assignment Probability",
  "markdown_description": "\n`n` passengers board an airplane with exactly `n` seats. The first passenger has lost the ticket and picks a seat randomly. But after that, the rest of the passengers will:\n\n\n* Take their own seat if it is still available, and\n* Pick other seats randomly when they find their seat occupied\n\n\nReturn *the probability that the* `nth` *person gets his own seat*.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** n = 1\n**Output:** 1.00000\n**Explanation:** The first person can only get the first seat.\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** n = 2\n**Output:** 0.50000\n**Explanation:** The second person has a probability of 0.5 to get the second seat (when first person gets the first seat).\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `1 <= n <= 105`\n\n\n",
  "canonical_solution": "class Solution:\n    def nthPersonGetsNthSeat(self, n: int) -> float:\n        return 1 if n == 1 else 0.5\n",
  "test_case_generator": "\nclass Solution:\n    def nthPersonGetsNthSeat(self, n: int) -> float:\n        return 1 if n == 1 else 0.5\n        \ndef generate_test_case():\n    solution = Solution()\n        \n    # Generate random values for n\n    n = random.randint(1, 100001)\n\n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.nthPersonGetsNthSeat(n)\n\n    return n, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        n, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.nthPersonGetsNthSeat(n) == expected_result\n        print(f\"assert solution.nthPersonGetsNthSeat({n}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.nthPersonGetsNthSeat({n}) == {expected_result}\")\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n\n",
  "test_case": "assert solution.nthPersonGetsNthSeat(6609) == 0.5\nassert solution.nthPersonGetsNthSeat(70758) == 0.5\nassert solution.nthPersonGetsNthSeat(65231) == 0.5\nassert solution.nthPersonGetsNthSeat(54999) == 0.5\nassert solution.nthPersonGetsNthSeat(70709) == 0.5\nassert solution.nthPersonGetsNthSeat(10968) == 0.5\nassert solution.nthPersonGetsNthSeat(57224) == 0.5\nassert solution.nthPersonGetsNthSeat(4693) == 0.5\nassert solution.nthPersonGetsNthSeat(13229) == 0.5\nassert solution.nthPersonGetsNthSeat(65489) == 0.5\nassert solution.nthPersonGetsNthSeat(3633) == 0.5\nassert solution.nthPersonGetsNthSeat(22549) == 0.5\nassert solution.nthPersonGetsNthSeat(67924) == 0.5\nassert solution.nthPersonGetsNthSeat(11108) == 0.5\nassert solution.nthPersonGetsNthSeat(1551) == 0.5\nassert solution.nthPersonGetsNthSeat(11825) == 0.5\nassert solution.nthPersonGetsNthSeat(34845) == 0.5\nassert solution.nthPersonGetsNthSeat(76075) == 0.5\nassert solution.nthPersonGetsNthSeat(87262) == 0.5\nassert solution.nthPersonGetsNthSeat(89259) == 0.5\nassert solution.nthPersonGetsNthSeat(65665) == 0.5\nassert solution.nthPersonGetsNthSeat(41649) == 0.5\nassert solution.nthPersonGetsNthSeat(58297) == 0.5\nassert solution.nthPersonGetsNthSeat(20628) == 0.5\nassert solution.nthPersonGetsNthSeat(10163) == 0.5\nassert solution.nthPersonGetsNthSeat(69874) == 0.5\nassert solution.nthPersonGetsNthSeat(42524) == 0.5\nassert solution.nthPersonGetsNthSeat(35147) == 0.5\nassert solution.nthPersonGetsNthSeat(40889) == 0.5\nassert solution.nthPersonGetsNthSeat(53179) == 0.5\nassert solution.nthPersonGetsNthSeat(82406) == 0.5\nassert solution.nthPersonGetsNthSeat(5560) == 0.5\nassert solution.nthPersonGetsNthSeat(17025) == 0.5\nassert solution.nthPersonGetsNthSeat(90165) == 0.5\nassert solution.nthPersonGetsNthSeat(10911) == 0.5\nassert solution.nthPersonGetsNthSeat(11433) == 0.5\nassert solution.nthPersonGetsNthSeat(76222) == 0.5\nassert solution.nthPersonGetsNthSeat(63388) == 0.5\nassert solution.nthPersonGetsNthSeat(65066) == 0.5\nassert solution.nthPersonGetsNthSeat(19813) == 0.5\nassert solution.nthPersonGetsNthSeat(65750) == 0.5\nassert solution.nthPersonGetsNthSeat(56796) == 0.5\nassert solution.nthPersonGetsNthSeat(65320) == 0.5\nassert solution.nthPersonGetsNthSeat(43012) == 0.5\nassert solution.nthPersonGetsNthSeat(54050) == 0.5\nassert solution.nthPersonGetsNthSeat(45730) == 0.5\nassert solution.nthPersonGetsNthSeat(82128) == 0.5\nassert solution.nthPersonGetsNthSeat(30142) == 0.5\nassert solution.nthPersonGetsNthSeat(96036) == 0.5\nassert solution.nthPersonGetsNthSeat(24670) == 0.5\nassert solution.nthPersonGetsNthSeat(29231) == 0.5\nassert solution.nthPersonGetsNthSeat(64129) == 0.5\nassert solution.nthPersonGetsNthSeat(46695) == 0.5\nassert solution.nthPersonGetsNthSeat(6256) == 0.5\nassert solution.nthPersonGetsNthSeat(78192) == 0.5\nassert solution.nthPersonGetsNthSeat(46490) == 0.5\nassert solution.nthPersonGetsNthSeat(99576) == 0.5\nassert solution.nthPersonGetsNthSeat(21105) == 0.5\nassert solution.nthPersonGetsNthSeat(14862) == 0.5\nassert solution.nthPersonGetsNthSeat(38071) == 0.5\nassert solution.nthPersonGetsNthSeat(22234) == 0.5\nassert solution.nthPersonGetsNthSeat(37272) == 0.5\nassert solution.nthPersonGetsNthSeat(23511) == 0.5\nassert solution.nthPersonGetsNthSeat(48019) == 0.5\nassert solution.nthPersonGetsNthSeat(60843) == 0.5\nassert solution.nthPersonGetsNthSeat(43701) == 0.5\nassert solution.nthPersonGetsNthSeat(87743) == 0.5\nassert solution.nthPersonGetsNthSeat(44168) == 0.5\nassert solution.nthPersonGetsNthSeat(35959) == 0.5\nassert solution.nthPersonGetsNthSeat(65939) == 0.5\nassert solution.nthPersonGetsNthSeat(80435) == 0.5\nassert solution.nthPersonGetsNthSeat(85431) == 0.5\nassert solution.nthPersonGetsNthSeat(55432) == 0.5\nassert solution.nthPersonGetsNthSeat(21165) == 0.5\nassert solution.nthPersonGetsNthSeat(26630) == 0.5\nassert solution.nthPersonGetsNthSeat(28969) == 0.5\nassert solution.nthPersonGetsNthSeat(58330) == 0.5\nassert solution.nthPersonGetsNthSeat(41441) == 0.5\nassert solution.nthPersonGetsNthSeat(67876) == 0.5\nassert solution.nthPersonGetsNthSeat(51235) == 0.5\nassert solution.nthPersonGetsNthSeat(11973) == 0.5\nassert solution.nthPersonGetsNthSeat(67650) == 0.5\nassert solution.nthPersonGetsNthSeat(65003) == 0.5\nassert solution.nthPersonGetsNthSeat(14344) == 0.5\nassert solution.nthPersonGetsNthSeat(30203) == 0.5\nassert solution.nthPersonGetsNthSeat(18367) == 0.5\nassert solution.nthPersonGetsNthSeat(91172) == 0.5\nassert solution.nthPersonGetsNthSeat(11320) == 0.5\nassert solution.nthPersonGetsNthSeat(51839) == 0.5\nassert solution.nthPersonGetsNthSeat(32517) == 0.5\nassert solution.nthPersonGetsNthSeat(96744) == 0.5\nassert solution.nthPersonGetsNthSeat(35652) == 0.5\nassert solution.nthPersonGetsNthSeat(56962) == 0.5\nassert solution.nthPersonGetsNthSeat(19205) == 0.5\nassert solution.nthPersonGetsNthSeat(32671) == 0.5\nassert solution.nthPersonGetsNthSeat(65938) == 0.5\nassert solution.nthPersonGetsNthSeat(65349) == 0.5\nassert solution.nthPersonGetsNthSeat(36777) == 0.5\nassert solution.nthPersonGetsNthSeat(12821) == 0.5\nassert solution.nthPersonGetsNthSeat(16823) == 0.5",
  "inefficient_solution": "class Solution:\n    def nthPersonGetsNthSeat(self, n: int) -> float:\n        if n == 1:\n            return 1\n\n        probability = 0.5\n        for _ in range(1000000):  # simulating 1,000,000 times\n            occupied = [False] * n\n            for i in range(n):\n                if occupied[i]:\n                    seat = random.randint(0, n-1)\n                    while seat == i or occupied[seat]:\n                        seat = random.randint(0, n-1)\n                    occupied[seat] = True\n                else:\n                    occupied[i] = True\n                if i == n-1 and occupied[i]:\n                    probability += 0.000001  # increment probability by a tiny amount\n                    break\n        return probability",
  "is_python": true
}