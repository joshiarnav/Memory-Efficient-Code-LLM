{
  "problem_idx": 937,
  "task_name": "Reorder Data in Log Files",
  "markdown_description": "\nYou are given an array of `logs`. Each log is a space-delimited string of words, where the first word is the **identifier**.\n\n\nThere are two types of logs:\n\n\n* **Letter-logs**: All words (except the identifier) consist of lowercase English letters.\n* **Digit-logs**: All words (except the identifier) consist of digits.\n\n\nReorder these logs so that:\n\n\n1. The **letter-logs** come before all **digit-logs**.\n2. The **letter-logs** are sorted lexicographically by their contents. If their contents are the same, then sort them lexicographically by their identifiers.\n3. The **digit-logs** maintain their relative ordering.\n\n\nReturn *the final order of the logs*.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** logs = [\"dig1 8 1 5 1\",\"let1 art can\",\"dig2 3 6\",\"let2 own kit dig\",\"let3 art zero\"]\n**Output:** [\"let1 art can\",\"let3 art zero\",\"let2 own kit dig\",\"dig1 8 1 5 1\",\"dig2 3 6\"]\n**Explanation:**\nThe letter-log contents are all different, so their ordering is \"art can\", \"art zero\", \"own kit dig\".\nThe digit-logs have a relative order of \"dig1 8 1 5 1\", \"dig2 3 6\".\n\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** logs = [\"a1 9 2 3 1\",\"g1 act car\",\"zo4 4 7\",\"ab1 off key dog\",\"a8 act zoo\"]\n**Output:** [\"g1 act car\",\"a8 act zoo\",\"ab1 off key dog\",\"a1 9 2 3 1\",\"zo4 4 7\"]\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `1 <= logs.length <= 100`\n* `3 <= logs[i].length <= 100`\n* All the tokens of `logs[i]` are separated by a **single** space.\n* `logs[i]` is guaranteed to have an identifier and at least one word after the identifier.\n\n\n",
  "canonical_solution": "class Solution:\n    def reorderLogFiles(self, logs: List[str]) -> List[str]:\n        def cmp(x):\n            a, b = x.split(' ', 1)\n            return (0, b, a) if b[0].isalpha() else (1,)\n\n        return sorted(logs, key=cmp)\n",
  "test_case_generator": "\nimport random\n\nclass Solution:\n    def reorderLogFiles(self, logs):\n        def cmp(x):\n            a, b = x.split(' ', 1)\n            return (0, b, a) if b[0].isalpha() else (1,)\n\n        return sorted(logs, key=cmp)\n\ndef generate_test_case():\n    solution = Solution()\n\n    # Generate random letter logs\n    num_letter_logs = random.randint(1, 10)\n    letter_logs = []\n    for _ in range(num_letter_logs):\n        identifier = \"let\" + str(random.randint(1, 100))\n        content = \" \".join(random.choices(string.ascii_lowercase, k=random.randint(1, 10)))\n        letter_logs.append(identifier + \" \" + content)\n\n    # Generate random digit logs\n    num_digit_logs = random.randint(1, 10)\n    digit_logs = []\n    for _ in range(num_digit_logs):\n        identifier = \"dig\" + str(random.randint(1, 100))\n        content = \" \".join(str(random.randint(0, 9)) for _ in range(random.randint(1, 10)))\n        digit_logs.append(identifier + \" \" + content)\n\n    # Combine letter logs and digit logs\n    logs = letter_logs + digit_logs\n\n    # Shuffle the logs\n    random.shuffle(logs)\n\n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.reorderLogFiles(logs)\n\n    return logs, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        logs, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.reorderLogFiles(logs) == expected_result\n        print(f\"assert solution.reorderLogFiles({logs}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.reorderLogFiles({logs}) == {expected_result}\")\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.reorderLogFiles(['let8 y g t z p n k k z', 'let14 n r w u f e o', 'let41 m c s k i a d u p', 'dig71 5 2 9 6 0 7 9', 'let12 e f o z y v p n', 'dig27 7 5 2 4 9 0 3', 'let67 j w v p', 'let66 v x', 'let37 z z s e p k x', 'dig23 8 9 5 7', 'let8 p z s x u q b', 'dig60 5 5 5 8 3 8 3', 'dig38 1 4 8 0 1 4 7 4', 'dig55 9 2 7 4 0 3', 'let88 t c y b x k c', 'dig19 6 1 9 0 6 9 9', 'let97 w n m z', 'dig55 1 6 1']) == ['let12 e f o z y v p n', 'let67 j w v p', 'let41 m c s k i a d u p', 'let14 n r w u f e o', 'let8 p z s x u q b', 'let88 t c y b x k c', 'let66 v x', 'let97 w n m z', 'let8 y g t z p n k k z', 'let37 z z s e p k x', 'dig71 5 2 9 6 0 7 9', 'dig27 7 5 2 4 9 0 3', 'dig23 8 9 5 7', 'dig60 5 5 5 8 3 8 3', 'dig38 1 4 8 0 1 4 7 4', 'dig55 9 2 7 4 0 3', 'dig19 6 1 9 0 6 9 9', 'dig55 1 6 1']\nassert solution.reorderLogFiles(['let56 c v', 'dig56 7', 'let52 u f i f', 'let67 a', 'let81 a i u d d j l s l s', 'let34 i k s o s d', 'dig56 6 2 1 2 5 6 1 3 0 9', 'let51 t n k g o k', 'let98 r x a n b t p', 'dig41 9 0 5 6', 'dig35 2 0 2 9 6 0 1', 'let66 d q', 'let16 d t u z w f i x b', 'let73 y g s k']) == ['let67 a', 'let81 a i u d d j l s l s', 'let56 c v', 'let66 d q', 'let16 d t u z w f i x b', 'let34 i k s o s d', 'let98 r x a n b t p', 'let51 t n k g o k', 'let52 u f i f', 'let73 y g s k', 'dig56 7', 'dig56 6 2 1 2 5 6 1 3 0 9', 'dig41 9 0 5 6', 'dig35 2 0 2 9 6 0 1']\nassert solution.reorderLogFiles(['let44 z c', 'dig89 0 2', 'dig39 1 5 0 6 8 9', 'dig1 4 6 1 8 5 4 2 7', 'let48 j c w l w x q o', 'let31 i q', 'dig77 2 6 3 2 7 8 1 0 5', 'dig26 5', 'dig47 7 6 0 6', 'dig100 8 2 7', 'dig99 5 4 3', 'let47 v g i w r', 'dig79 8 8 6', 'dig23 7 9 6', 'let41 h', 'let53 t b', 'let10 a i w b f k p o']) == ['let10 a i w b f k p o', 'let41 h', 'let31 i q', 'let48 j c w l w x q o', 'let53 t b', 'let47 v g i w r', 'let44 z c', 'dig89 0 2', 'dig39 1 5 0 6 8 9', 'dig1 4 6 1 8 5 4 2 7', 'dig77 2 6 3 2 7 8 1 0 5', 'dig26 5', 'dig47 7 6 0 6', 'dig100 8 2 7', 'dig99 5 4 3', 'dig79 8 8 6', 'dig23 7 9 6']\nassert solution.reorderLogFiles(['let96 s c z w', 'let66 c c x b h i x', 'dig61 8', 'dig88 7 6 5 5 6 8', 'dig49 1', 'dig98 5 0 8', 'let57 l l', 'dig97 5 7 4 0 7 4 1', 'dig70 8 0 2 4 8 2 1 2', 'dig29 7 9 1 0 6 0 6 3 6 3', 'dig12 0 1 8 1 3 1 3 5 6 3', 'let10 r y w', 'dig32 2 1', 'let90 f', 'dig77 5 6 9 9 2 5 3 7 8 5']) == ['let66 c c x b h i x', 'let90 f', 'let57 l l', 'let10 r y w', 'let96 s c z w', 'dig61 8', 'dig88 7 6 5 5 6 8', 'dig49 1', 'dig98 5 0 8', 'dig97 5 7 4 0 7 4 1', 'dig70 8 0 2 4 8 2 1 2', 'dig29 7 9 1 0 6 0 6 3 6 3', 'dig12 0 1 8 1 3 1 3 5 6 3', 'dig32 2 1', 'dig77 5 6 9 9 2 5 3 7 8 5']\nassert solution.reorderLogFiles(['let21 a', 'let31 l l l w d', 'let28 c n c e u g r w g w', 'let43 e l a p h s n f n', 'let33 c d t s c z s f x f', 'dig33 6 2 9 8 2 5 8 3', 'dig8 1 5 1 3 3 6 0', 'let36 u q g h a h m e f', 'dig91 9 0 1 8 0 6 8 8 8 5', 'dig79 2 6 7 9 6 2 3 4 6']) == ['let21 a', 'let33 c d t s c z s f x f', 'let28 c n c e u g r w g w', 'let43 e l a p h s n f n', 'let31 l l l w d', 'let36 u q g h a h m e f', 'dig33 6 2 9 8 2 5 8 3', 'dig8 1 5 1 3 3 6 0', 'dig91 9 0 1 8 0 6 8 8 8 5', 'dig79 2 6 7 9 6 2 3 4 6']\nassert solution.reorderLogFiles(['dig77 1 2 6 1 2 5', 'dig10 5 0 4', 'dig77 5 7 5 6 4 3', 'let70 n i n t v', 'dig38 9 7 8 5 8 6 4', 'let52 p o q j r', 'let84 o m', 'let61 o i y l', 'let92 l z y c z a l', 'dig63 0 1 1 4 3', 'dig38 3 4 7 5 7']) == ['let92 l z y c z a l', 'let70 n i n t v', 'let61 o i y l', 'let84 o m', 'let52 p o q j r', 'dig77 1 2 6 1 2 5', 'dig10 5 0 4', 'dig77 5 7 5 6 4 3', 'dig38 9 7 8 5 8 6 4', 'dig63 0 1 1 4 3', 'dig38 3 4 7 5 7']\nassert solution.reorderLogFiles(['dig9 1 9 1 4 3 6', 'dig78 8 3 2 1 4 3', 'let75 m a w y c d l k r', 'dig55 5 0 9 9 6 9 1 7', 'dig94 3 5 0 8', 'dig74 8', 'dig66 5 0 2 0 1 2 3', 'let95 a', 'let49 t u b b u']) == ['let95 a', 'let75 m a w y c d l k r', 'let49 t u b b u', 'dig9 1 9 1 4 3 6', 'dig78 8 3 2 1 4 3', 'dig55 5 0 9 9 6 9 1 7', 'dig94 3 5 0 8', 'dig74 8', 'dig66 5 0 2 0 1 2 3']\nassert solution.reorderLogFiles(['let17 o g m o z', 'dig22 4 5 6 8 6 8', 'let48 j y c d j', 'dig78 8 5 2', 'let75 a e', 'dig68 8 8 9 9 0 6 8 7', 'dig34 2 5 2 7 7 5 0 5 8', 'let14 k i c v v m d i q d', 'let35 s y r', 'let13 d w p u s z x']) == ['let75 a e', 'let13 d w p u s z x', 'let48 j y c d j', 'let14 k i c v v m d i q d', 'let17 o g m o z', 'let35 s y r', 'dig22 4 5 6 8 6 8', 'dig78 8 5 2', 'dig68 8 8 9 9 0 6 8 7', 'dig34 2 5 2 7 7 5 0 5 8']\nassert solution.reorderLogFiles(['dig70 2 1 5 0 7 6', 'dig9 0 4 4 7 8 2 8 6 0 5', 'dig47 9 6 4 0', 'dig69 2 2 9 4', 'let72 k h', 'dig98 9 7 4 6 1 8 8', 'dig11 2 9 8 1 2 0 2 3 4']) == ['let72 k h', 'dig70 2 1 5 0 7 6', 'dig9 0 4 4 7 8 2 8 6 0 5', 'dig47 9 6 4 0', 'dig69 2 2 9 4', 'dig98 9 7 4 6 1 8 8', 'dig11 2 9 8 1 2 0 2 3 4']\nassert solution.reorderLogFiles(['let84 f f', 'dig17 8 5 8 8', 'let28 x c e', 'dig96 7', 'let64 p d y y a', 'dig82 2 3 3 2 2 6', 'dig10 7 3 7 4 6 5 9', 'dig73 3 8 9', 'dig8 0 9 3 7 3 0 7 2']) == ['let84 f f', 'let64 p d y y a', 'let28 x c e', 'dig17 8 5 8 8', 'dig96 7', 'dig82 2 3 3 2 2 6', 'dig10 7 3 7 4 6 5 9', 'dig73 3 8 9', 'dig8 0 9 3 7 3 0 7 2']\nassert solution.reorderLogFiles(['let31 g', 'dig59 0', 'dig56 2', 'dig72 2 7 1 2 6 3 7 6', 'dig71 1', 'let88 j h m g g m b t j s', 'let36 v b o', 'let69 t g l w u h h k e', 'dig17 0', 'let60 h r r l h t u y v', 'let86 a f u d e d', 'let46 l d e d j z r r', 'dig91 5 6 7 4 6 7 3', 'let95 o']) == ['let86 a f u d e d', 'let31 g', 'let60 h r r l h t u y v', 'let88 j h m g g m b t j s', 'let46 l d e d j z r r', 'let95 o', 'let69 t g l w u h h k e', 'let36 v b o', 'dig59 0', 'dig56 2', 'dig72 2 7 1 2 6 3 7 6', 'dig71 1', 'dig17 0', 'dig91 5 6 7 4 6 7 3']\nassert solution.reorderLogFiles(['let92 e m y b m z d h c v', 'dig47 6', 'let73 r c z t g m', 'let79 s w v g h b']) == ['let92 e m y b m z d h c v', 'let73 r c z t g m', 'let79 s w v g h b', 'dig47 6']\nassert solution.reorderLogFiles(['let70 z v u n v c s', 'let61 u r t w', 'dig23 7 6 2', 'dig69 7', 'let67 y b a m c p t r i', 'let91 b k m m h q k']) == ['let91 b k m m h q k', 'let61 u r t w', 'let67 y b a m c p t r i', 'let70 z v u n v c s', 'dig23 7 6 2', 'dig69 7']\nassert solution.reorderLogFiles(['let72 o g j u k j', 'dig69 5 4 7', 'let70 g n v g d', 'let85 y i y g t', 'dig64 4 7', 'dig68 6', 'dig20 6 6 7 9 1 1 5 1 4 0', 'let83 u i', 'let14 x l m j g a j r b v', 'dig10 1 9 6 4 8 7 6', 'let54 r j e e', 'let29 v v z a z w p', 'let20 n k u p y', 'dig67 6 0 3', 'dig64 9 8 7 7 1 4 1 8 8 9', 'dig72 9 7 2 4 6 2']) == ['let70 g n v g d', 'let20 n k u p y', 'let72 o g j u k j', 'let54 r j e e', 'let83 u i', 'let29 v v z a z w p', 'let14 x l m j g a j r b v', 'let85 y i y g t', 'dig69 5 4 7', 'dig64 4 7', 'dig68 6', 'dig20 6 6 7 9 1 1 5 1 4 0', 'dig10 1 9 6 4 8 7 6', 'dig67 6 0 3', 'dig64 9 8 7 7 1 4 1 8 8 9', 'dig72 9 7 2 4 6 2']\nassert solution.reorderLogFiles(['dig24 4 3 3 4 1', 'let13 g r x r x y u m j r', 'let47 p d l i e i j', 'let40 y b j l n g n j e', 'let82 a a z', 'dig16 3 4 4 8', 'let20 w', 'let39 q e r', 'let52 r o x g j s', 'let82 v s i y a']) == ['let82 a a z', 'let13 g r x r x y u m j r', 'let47 p d l i e i j', 'let39 q e r', 'let52 r o x g j s', 'let82 v s i y a', 'let20 w', 'let40 y b j l n g n j e', 'dig24 4 3 3 4 1', 'dig16 3 4 4 8']\nassert solution.reorderLogFiles(['dig63 7 2 5 8 0 8 2 7 4 7', 'dig10 2 8 0', 'let45 n s l z d q s', 'dig43 1 0 4 8', 'dig19 4 3 8 6 4 5 7 0', 'let43 v c u t', 'dig84 4 9 0 5', 'dig43 6 6 7 7 5', 'let12 s p i f x', 'dig69 3 3', 'dig98 3 2 4 2 8 7 5 7', 'let10 c o l o q n h i u a']) == ['let10 c o l o q n h i u a', 'let45 n s l z d q s', 'let12 s p i f x', 'let43 v c u t', 'dig63 7 2 5 8 0 8 2 7 4 7', 'dig10 2 8 0', 'dig43 1 0 4 8', 'dig19 4 3 8 6 4 5 7 0', 'dig84 4 9 0 5', 'dig43 6 6 7 7 5', 'dig69 3 3', 'dig98 3 2 4 2 8 7 5 7']\nassert solution.reorderLogFiles(['let77 k o f n q s b y h', 'let32 x h', 'dig41 0 4', 'let89 o b d', 'let46 m', 'dig50 8 2 3 4 6 1 9 5 9', 'dig46 3 2', 'dig3 6 9 9 0 1 6 2 4 9', 'dig32 4 3 4 7 4', 'dig33 0 2 0 0', 'let72 d', 'dig99 7 2 1 0 9', 'let94 n h s y r', 'let72 j n i t z z', 'let1 z i']) == ['let72 d', 'let72 j n i t z z', 'let77 k o f n q s b y h', 'let46 m', 'let94 n h s y r', 'let89 o b d', 'let32 x h', 'let1 z i', 'dig41 0 4', 'dig50 8 2 3 4 6 1 9 5 9', 'dig46 3 2', 'dig3 6 9 9 0 1 6 2 4 9', 'dig32 4 3 4 7 4', 'dig33 0 2 0 0', 'dig99 7 2 1 0 9']\nassert solution.reorderLogFiles(['dig73 9 4 0 1 8 7 0 8 1 5', 'dig51 0 8 7', 'let94 z g u n v u o', 'let85 p h c z l m', 'let67 c e u m k z x', 'let23 o', 'let78 u h k k y v m j w', 'dig10 4 7 4 1 2', 'dig37 6 6 8 4 6 3 4 1', 'dig20 7 1 8 0 2 7 1 3', 'let12 e c x p', 'let48 d w u x l d h o', 'dig17 5 8 5']) == ['let67 c e u m k z x', 'let48 d w u x l d h o', 'let12 e c x p', 'let23 o', 'let85 p h c z l m', 'let78 u h k k y v m j w', 'let94 z g u n v u o', 'dig73 9 4 0 1 8 7 0 8 1 5', 'dig51 0 8 7', 'dig10 4 7 4 1 2', 'dig37 6 6 8 4 6 3 4 1', 'dig20 7 1 8 0 2 7 1 3', 'dig17 5 8 5']\nassert solution.reorderLogFiles(['let91 p z k c u u n e t', 'dig20 9 2 0 9 4 7 2 0', 'let1 e u x a x p', 'dig75 6 1 4 9 5', 'let83 p i f i c w z', 'let83 g d f k w r p a e', 'let82 y e a x q q s c x z', 'dig93 8 7 6', 'let12 f u p x', 'let77 k p z j f q n e', 'let55 d o z m e', 'let90 u g b i g', 'let81 g x r s', 'dig62 1 1 4 2']) == ['let55 d o z m e', 'let1 e u x a x p', 'let12 f u p x', 'let83 g d f k w r p a e', 'let81 g x r s', 'let77 k p z j f q n e', 'let83 p i f i c w z', 'let91 p z k c u u n e t', 'let90 u g b i g', 'let82 y e a x q q s c x z', 'dig20 9 2 0 9 4 7 2 0', 'dig75 6 1 4 9 5', 'dig93 8 7 6', 'dig62 1 1 4 2']\nassert solution.reorderLogFiles(['dig30 5 0 0 5', 'let16 s e n z x o r k n', 'let3 m q', 'dig44 6 6 1 0 1', 'let60 m', 'let51 i o d j b j z', 'dig80 8', 'let98 u e z', 'let3 j t u k c w y g f u', 'let63 s b w s b b b u', 'dig81 9', 'let25 t y c b z g q n', 'let13 m a k w', 'let3 s m m p g q i b v a']) == ['let51 i o d j b j z', 'let3 j t u k c w y g f u', 'let60 m', 'let13 m a k w', 'let3 m q', 'let63 s b w s b b b u', 'let16 s e n z x o r k n', 'let3 s m m p g q i b v a', 'let25 t y c b z g q n', 'let98 u e z', 'dig30 5 0 0 5', 'dig44 6 6 1 0 1', 'dig80 8', 'dig81 9']\nassert solution.reorderLogFiles(['let69 f q n m d a t i', 'let99 x h f r t c w x s s', 'let26 n a n c m d', 'dig38 9', 'dig74 0 3 8 2 5 6 7 7', 'let100 g b m z y t g', 'let44 v a l y d', 'let91 h n', 'dig63 5 3 5 5 7 3 9', 'let90 v v y a m g g d w l', 'dig90 8 4 3 0', 'dig52 6 5 4 2 2 2 1 0', 'dig68 5 0 9 5 9 8 4 7 4', 'dig34 5', 'let75 h x l h g', 'dig82 1 6 3 5 4 4 2', 'let97 m t u u l g e q m', 'let45 x f v q c v', 'dig53 1 0 2 0 1 3 7']) == ['let69 f q n m d a t i', 'let100 g b m z y t g', 'let91 h n', 'let75 h x l h g', 'let97 m t u u l g e q m', 'let26 n a n c m d', 'let44 v a l y d', 'let90 v v y a m g g d w l', 'let45 x f v q c v', 'let99 x h f r t c w x s s', 'dig38 9', 'dig74 0 3 8 2 5 6 7 7', 'dig63 5 3 5 5 7 3 9', 'dig90 8 4 3 0', 'dig52 6 5 4 2 2 2 1 0', 'dig68 5 0 9 5 9 8 4 7 4', 'dig34 5', 'dig82 1 6 3 5 4 4 2', 'dig53 1 0 2 0 1 3 7']\nassert solution.reorderLogFiles(['dig79 6', 'let63 y w a a y l q q c l', 'dig84 4 8 5 4 5 2 9', 'dig87 2 5 2 6 8 6 3 5', 'dig38 1 0 1 4']) == ['let63 y w a a y l q q c l', 'dig79 6', 'dig84 4 8 5 4 5 2 9', 'dig87 2 5 2 6 8 6 3 5', 'dig38 1 0 1 4']\nassert solution.reorderLogFiles(['dig91 2 8 3 4 2 3 2 3 4', 'let72 c s i', 'let29 g v f c q r l p x m', 'let95 t o y']) == ['let72 c s i', 'let29 g v f c q r l p x m', 'let95 t o y', 'dig91 2 8 3 4 2 3 2 3 4']\nassert solution.reorderLogFiles(['dig20 4 9 6 3', 'let17 u v']) == ['let17 u v', 'dig20 4 9 6 3']\nassert solution.reorderLogFiles(['let34 w h y a i b s', 'dig48 9 1 6 9 6 8 4', 'dig9 9 7', 'let68 t n t g', 'dig39 8 0 3 2 9 3 7 1', 'let17 a e x b n n a s v', 'dig19 2 1 2 1 8 3 0 8', 'let10 i h i r w', 'dig66 5 0 7 8', 'let97 t x e v m w', 'dig26 5 2 2 3 2 1 0 0', 'let82 e n d x m a n x y h', 'dig65 8 6 4 0 1 8 6']) == ['let17 a e x b n n a s v', 'let82 e n d x m a n x y h', 'let10 i h i r w', 'let68 t n t g', 'let97 t x e v m w', 'let34 w h y a i b s', 'dig48 9 1 6 9 6 8 4', 'dig9 9 7', 'dig39 8 0 3 2 9 3 7 1', 'dig19 2 1 2 1 8 3 0 8', 'dig66 5 0 7 8', 'dig26 5 2 2 3 2 1 0 0', 'dig65 8 6 4 0 1 8 6']\nassert solution.reorderLogFiles(['dig72 9 0 1', 'let35 q f x k h', 'let29 i s a x q', 'dig32 1 9', 'let39 o g', 'dig82 9', 'dig25 6 1 5 2 5 3 8 1', 'dig13 3 7 7 1 1 6 5', 'dig10 5', 'let38 t w f', 'dig87 5', 'dig95 3 6 5 2', 'let90 i x']) == ['let29 i s a x q', 'let90 i x', 'let39 o g', 'let35 q f x k h', 'let38 t w f', 'dig72 9 0 1', 'dig32 1 9', 'dig82 9', 'dig25 6 1 5 2 5 3 8 1', 'dig13 3 7 7 1 1 6 5', 'dig10 5', 'dig87 5', 'dig95 3 6 5 2']\nassert solution.reorderLogFiles(['dig21 2 4 7 9 5 4 6 3', 'dig41 6 4 2 9 0 4 5 4 6', 'dig24 0 9 2 6 8 4 3 1 9', 'dig85 1 2 0', 'dig36 3 5 9 7', 'dig60 6 6 4 8 1 9 3 3', 'dig37 4 4 4', 'dig26 2 6 3 3 7 5 5 0 8 7', 'dig88 5 8 7 6', 'let48 s x i o g', 'dig94 0 8 9 0', 'let8 g o v u h']) == ['let8 g o v u h', 'let48 s x i o g', 'dig21 2 4 7 9 5 4 6 3', 'dig41 6 4 2 9 0 4 5 4 6', 'dig24 0 9 2 6 8 4 3 1 9', 'dig85 1 2 0', 'dig36 3 5 9 7', 'dig60 6 6 4 8 1 9 3 3', 'dig37 4 4 4', 'dig26 2 6 3 3 7 5 5 0 8 7', 'dig88 5 8 7 6', 'dig94 0 8 9 0']\nassert solution.reorderLogFiles(['let18 w c i p', 'dig29 1 8 4 7 6']) == ['let18 w c i p', 'dig29 1 8 4 7 6']\nassert solution.reorderLogFiles(['let12 z l q r', 'dig41 2 4 6 6 3 4', 'dig78 8', 'dig10 1 5 1 6 6 6 3', 'dig34 7 1 8', 'dig66 6 7 4 3 0 0 7 4', 'let41 o h p', 'let2 n x l d w', 'dig22 8 0 4 4 1', 'let98 o q h w', 'dig40 5 5 0 6 1 4 7', 'dig17 7 0 8 7 7 3 2 9 2 1', 'dig9 3 8 7', 'dig70 5 9 5 8']) == ['let2 n x l d w', 'let41 o h p', 'let98 o q h w', 'let12 z l q r', 'dig41 2 4 6 6 3 4', 'dig78 8', 'dig10 1 5 1 6 6 6 3', 'dig34 7 1 8', 'dig66 6 7 4 3 0 0 7 4', 'dig22 8 0 4 4 1', 'dig40 5 5 0 6 1 4 7', 'dig17 7 0 8 7 7 3 2 9 2 1', 'dig9 3 8 7', 'dig70 5 9 5 8']\nassert solution.reorderLogFiles(['let64 j f d v', 'let99 p z r y i f w', 'dig83 1 2 0 7', 'dig5 3 0 8 1 9 7 6 5 1 4', 'let11 m s c x a b i', 'dig4 2', 'let42 j t y l c m o h g h', 'let29 q i d b o r v', 'let91 p x p', 'dig31 3 2', 'let29 j x u n d d y v v j', 'dig10 0', 'let44 h']) == ['let44 h', 'let64 j f d v', 'let42 j t y l c m o h g h', 'let29 j x u n d d y v v j', 'let11 m s c x a b i', 'let91 p x p', 'let99 p z r y i f w', 'let29 q i d b o r v', 'dig83 1 2 0 7', 'dig5 3 0 8 1 9 7 6 5 1 4', 'dig4 2', 'dig31 3 2', 'dig10 0']\nassert solution.reorderLogFiles(['dig53 8 6 1 2 4 4 4 0', 'let10 d u x', 'let3 s h z h d u', 'let23 h b r x', 'let97 v o x w z a i q b g', 'let19 s a l', 'let83 m i f j a o p', 'let73 w j n g z i w v', 'let12 n u i s l z c t v p', 'let96 p a w v a w h']) == ['let10 d u x', 'let23 h b r x', 'let83 m i f j a o p', 'let12 n u i s l z c t v p', 'let96 p a w v a w h', 'let19 s a l', 'let3 s h z h d u', 'let97 v o x w z a i q b g', 'let73 w j n g z i w v', 'dig53 8 6 1 2 4 4 4 0']\nassert solution.reorderLogFiles(['let5 x e u', 'dig75 3 4 4 0 0 0 4 4 5 9', 'dig80 2 7 6 5 0 8', 'let100 g w c h', 'dig32 9', 'let34 b r q i', 'dig11 2 7 7 9 3 7', 'dig35 5 3 6 5 5 1 9 9', 'dig31 4 4 6 7 0 8', 'let38 l e r i h i i c q', 'let97 o r f b m g', 'let53 t m', 'dig69 3 4 5', 'let33 z s b w r s s']) == ['let34 b r q i', 'let100 g w c h', 'let38 l e r i h i i c q', 'let97 o r f b m g', 'let53 t m', 'let5 x e u', 'let33 z s b w r s s', 'dig75 3 4 4 0 0 0 4 4 5 9', 'dig80 2 7 6 5 0 8', 'dig32 9', 'dig11 2 7 7 9 3 7', 'dig35 5 3 6 5 5 1 9 9', 'dig31 4 4 6 7 0 8', 'dig69 3 4 5']\nassert solution.reorderLogFiles(['let18 t q f d j', 'dig69 6 1 7 9', 'let69 y a q a s y t', 'let8 a c', 'let95 q z c', 'let39 w', 'dig79 8 6 2 5 5 7', 'dig75 8 4', 'dig79 5 3 2 6 4 0 9 8 0 0', 'dig94 1 0', 'let82 m m j h', 'let97 h x y d x', 'dig65 8 5 8 7 7', 'dig92 2 4 1 5 2 1 4 8 6', 'let98 e', 'let32 c t g r f', 'dig2 4 1 5 5 3 4 9 0 9']) == ['let8 a c', 'let32 c t g r f', 'let98 e', 'let97 h x y d x', 'let82 m m j h', 'let95 q z c', 'let18 t q f d j', 'let39 w', 'let69 y a q a s y t', 'dig69 6 1 7 9', 'dig79 8 6 2 5 5 7', 'dig75 8 4', 'dig79 5 3 2 6 4 0 9 8 0 0', 'dig94 1 0', 'dig65 8 5 8 7 7', 'dig92 2 4 1 5 2 1 4 8 6', 'dig2 4 1 5 5 3 4 9 0 9']\nassert solution.reorderLogFiles(['let19 j s f q', 'let82 j', 'let57 w r f x t o l w', 'dig14 8 8 7', 'let78 k y m h v u w q t w', 'dig31 3 6 1 2 7 6', 'dig94 8 0 8 5 0 5 4 1', 'dig9 7 4 8 3 4 1', 'dig13 0', 'dig76 7 4 7 5 6 0 7']) == ['let82 j', 'let19 j s f q', 'let78 k y m h v u w q t w', 'let57 w r f x t o l w', 'dig14 8 8 7', 'dig31 3 6 1 2 7 6', 'dig94 8 0 8 5 0 5 4 1', 'dig9 7 4 8 3 4 1', 'dig13 0', 'dig76 7 4 7 5 6 0 7']\nassert solution.reorderLogFiles(['let69 d s e o c e l s a s', 'dig19 9 6 6 2 7', 'let11 f a q z', 'dig53 8 5 1 3 8 0 5 7 2', 'let61 f c l z', 'let70 n f v k j e e s', 'dig29 4', 'let31 d g q', 'dig98 4 6 0 2 2', 'dig41 7 0 9', 'let100 y u m']) == ['let31 d g q', 'let69 d s e o c e l s a s', 'let11 f a q z', 'let61 f c l z', 'let70 n f v k j e e s', 'let100 y u m', 'dig19 9 6 6 2 7', 'dig53 8 5 1 3 8 0 5 7 2', 'dig29 4', 'dig98 4 6 0 2 2', 'dig41 7 0 9']\nassert solution.reorderLogFiles(['dig50 1 4', 'dig4 4 5 5 3 3 9', 'let31 i', 'dig24 9 0', 'dig8 9 2 5 4 0 9 2 9 3 7', 'let14 w u', 'let87 u p k y', 'dig98 3 3 4 1 9 9 4 9', 'let67 c l z u i s a r', 'let79 o r q p g u', 'dig92 3 6 4 9 4 2 6 3 7', 'let55 l h m h k q b f m f', 'let57 p n a l k x m']) == ['let67 c l z u i s a r', 'let31 i', 'let55 l h m h k q b f m f', 'let79 o r q p g u', 'let57 p n a l k x m', 'let87 u p k y', 'let14 w u', 'dig50 1 4', 'dig4 4 5 5 3 3 9', 'dig24 9 0', 'dig8 9 2 5 4 0 9 2 9 3 7', 'dig98 3 3 4 1 9 9 4 9', 'dig92 3 6 4 9 4 2 6 3 7']\nassert solution.reorderLogFiles(['dig69 5 0 9 8 6', 'let61 z k s m b e d h v w', 'let67 e n e j v f c s h', 'let84 q w e n k d e h r b', 'let39 v h y z x w', 'dig67 0 4 6 6']) == ['let67 e n e j v f c s h', 'let84 q w e n k d e h r b', 'let39 v h y z x w', 'let61 z k s m b e d h v w', 'dig69 5 0 9 8 6', 'dig67 0 4 6 6']\nassert solution.reorderLogFiles(['dig92 3 5 3 1 2 0 2 3', 'let49 r', 'let18 s u t', 'dig1 3 3 6', 'let39 l g u s k a t t s f', 'let70 o j t d l q p c', 'dig12 8 1 4 8 0 5 9', 'let5 i', 'let72 u u w', 'let45 g m h k s b']) == ['let45 g m h k s b', 'let5 i', 'let39 l g u s k a t t s f', 'let70 o j t d l q p c', 'let49 r', 'let18 s u t', 'let72 u u w', 'dig92 3 5 3 1 2 0 2 3', 'dig1 3 3 6', 'dig12 8 1 4 8 0 5 9']\nassert solution.reorderLogFiles(['let40 v b q x b', 'let63 y z q f o s z', 'let42 y z t h a', 'dig39 9 7 2 9 7 1 3', 'let58 o l a z d i d g', 'dig13 3 0 4', 'let6 n y e w l t g e', 'dig27 5 1 5 1 6 7 1 7 1 6', 'let7 s c r u a z s k', 'let92 t a j i y k', 'dig9 2', 'dig3 3 8 6 5 1', 'let6 q s e y u d d']) == ['let6 n y e w l t g e', 'let58 o l a z d i d g', 'let6 q s e y u d d', 'let7 s c r u a z s k', 'let92 t a j i y k', 'let40 v b q x b', 'let63 y z q f o s z', 'let42 y z t h a', 'dig39 9 7 2 9 7 1 3', 'dig13 3 0 4', 'dig27 5 1 5 1 6 7 1 7 1 6', 'dig9 2', 'dig3 3 8 6 5 1']\nassert solution.reorderLogFiles(['dig87 6 6 4', 'dig63 6 7 6', 'dig73 0', 'let81 w c', 'dig81 0 4 6 6 6', 'dig89 5 5 1 8 0 0 3 8 4 4', 'dig24 6 7 2 8 9 6 8 1 3 5', 'dig19 0 0 9 6 7', 'dig66 3 0 7 0 9 2 8', 'let14 f l v i v v h r g', 'dig70 4 4 8 6 8', 'dig45 7 4 9 7 1']) == ['let14 f l v i v v h r g', 'let81 w c', 'dig87 6 6 4', 'dig63 6 7 6', 'dig73 0', 'dig81 0 4 6 6 6', 'dig89 5 5 1 8 0 0 3 8 4 4', 'dig24 6 7 2 8 9 6 8 1 3 5', 'dig19 0 0 9 6 7', 'dig66 3 0 7 0 9 2 8', 'dig70 4 4 8 6 8', 'dig45 7 4 9 7 1']\nassert solution.reorderLogFiles(['dig25 6 1 7 8 4 4 7 4 1 7', 'let3 o w h n r a v j v x', 'let80 i m d p q', 'dig12 5', 'let21 o d y a v n x', 'let13 h a o a k', 'dig92 0 6 4 8 5 6 5 7', 'let54 j e m k m o', 'let3 g q u']) == ['let3 g q u', 'let13 h a o a k', 'let80 i m d p q', 'let54 j e m k m o', 'let21 o d y a v n x', 'let3 o w h n r a v j v x', 'dig25 6 1 7 8 4 4 7 4 1 7', 'dig12 5', 'dig92 0 6 4 8 5 6 5 7']\nassert solution.reorderLogFiles(['dig62 1 0 8 0 8 0', 'let97 c t y p a', 'let35 y s b a v x g w e']) == ['let97 c t y p a', 'let35 y s b a v x g w e', 'dig62 1 0 8 0 8 0']\nassert solution.reorderLogFiles(['dig44 7 3 4 8 1 4', 'let69 i j c q l o q c', 'let84 t x q b u v x e m o', 'let27 p m w a r m v k f j', 'let30 g v o s f r c i h e', 'let38 y f i', 'let89 i z m g', 'dig78 9 8 9 3 5 4', 'let47 r n m e j w', 'let83 v j x l', 'let5 e s b', 'let21 t l']) == ['let5 e s b', 'let30 g v o s f r c i h e', 'let69 i j c q l o q c', 'let89 i z m g', 'let27 p m w a r m v k f j', 'let47 r n m e j w', 'let21 t l', 'let84 t x q b u v x e m o', 'let83 v j x l', 'let38 y f i', 'dig44 7 3 4 8 1 4', 'dig78 9 8 9 3 5 4']\nassert solution.reorderLogFiles(['let18 v w x m e q k a z', 'let95 y p y n g k r', 'let85 r q u a', 'let60 p d e s v p b z b s', 'dig70 2', 'let31 a j t r k j', 'let25 k s l j i l n f f o', 'let18 v', 'let98 q l w r', 'let59 c a a p w x j r']) == ['let31 a j t r k j', 'let59 c a a p w x j r', 'let25 k s l j i l n f f o', 'let60 p d e s v p b z b s', 'let98 q l w r', 'let85 r q u a', 'let18 v', 'let18 v w x m e q k a z', 'let95 y p y n g k r', 'dig70 2']\nassert solution.reorderLogFiles(['let72 s c p i m l k e j', 'let24 b u l w c z e p t f', 'let100 s a r t q j k i', 'dig20 2 8', 'dig15 1 2 2 2 7', 'let19 i e g n w e q p v', 'let88 a u y h n a j a', 'let36 v m m n d', 'dig61 1 5 4 4 4 3 2 3 2', 'let46 c b', 'let3 u b y e b', 'dig95 2 1 9 9 5 0 4 0 8', 'dig35 0 9', 'let81 x v k h y v i k', 'let50 m q n m t q']) == ['let88 a u y h n a j a', 'let24 b u l w c z e p t f', 'let46 c b', 'let19 i e g n w e q p v', 'let50 m q n m t q', 'let100 s a r t q j k i', 'let72 s c p i m l k e j', 'let3 u b y e b', 'let36 v m m n d', 'let81 x v k h y v i k', 'dig20 2 8', 'dig15 1 2 2 2 7', 'dig61 1 5 4 4 4 3 2 3 2', 'dig95 2 1 9 9 5 0 4 0 8', 'dig35 0 9']\nassert solution.reorderLogFiles(['let2 b g r z f y b v i', 'dig10 3 1 5 3 5 2 0', 'let25 t z l h n z k f', 'dig54 5 1 2 5 5', 'dig85 6 6', 'let73 h r g z l', 'dig19 0 2 3', 'dig13 4 6 1 5 6 5 4 1 1', 'dig64 8 3 2', 'dig74 1 6 6 8 7', 'dig95 6 7 9 4', 'dig81 2 0', 'dig67 3 5 3 5 1 2 8', 'let11 l h g x f m']) == ['let2 b g r z f y b v i', 'let73 h r g z l', 'let11 l h g x f m', 'let25 t z l h n z k f', 'dig10 3 1 5 3 5 2 0', 'dig54 5 1 2 5 5', 'dig85 6 6', 'dig19 0 2 3', 'dig13 4 6 1 5 6 5 4 1 1', 'dig64 8 3 2', 'dig74 1 6 6 8 7', 'dig95 6 7 9 4', 'dig81 2 0', 'dig67 3 5 3 5 1 2 8']\nassert solution.reorderLogFiles(['let80 p t x t', 'let80 k j k g f g i', 'dig63 2 5 6 5', 'dig2 4', 'dig72 6 8 1 0 6 0 0 1 4 3', 'let49 r m q z r r c w', 'dig98 1 3 5 9 3', 'let96 e v a', 'let18 w z h o m b', 'let43 c b j f u u', 'let82 j h p t k q l', 'dig60 8 7 5 0 7 0 8 3 3 1', 'dig32 1 4 3 2 4 6 0', 'dig32 5 2 2 2 6 3 0 3 8', 'dig14 9 6 0 2 7 3 3']) == ['let43 c b j f u u', 'let96 e v a', 'let82 j h p t k q l', 'let80 k j k g f g i', 'let80 p t x t', 'let49 r m q z r r c w', 'let18 w z h o m b', 'dig63 2 5 6 5', 'dig2 4', 'dig72 6 8 1 0 6 0 0 1 4 3', 'dig98 1 3 5 9 3', 'dig60 8 7 5 0 7 0 8 3 3 1', 'dig32 1 4 3 2 4 6 0', 'dig32 5 2 2 2 6 3 0 3 8', 'dig14 9 6 0 2 7 3 3']\nassert solution.reorderLogFiles(['let15 u', 'dig60 4 3 5 9', 'dig30 8', 'dig84 7 6 8 3', 'let92 h', 'let12 x s q x', 'let16 y', 'let94 p b s b z e', 'dig15 8 6 9 6 1 5 1 0 7', 'let71 f v m z j', 'let52 c m m', 'dig97 0 0 1 5']) == ['let52 c m m', 'let71 f v m z j', 'let92 h', 'let94 p b s b z e', 'let15 u', 'let12 x s q x', 'let16 y', 'dig60 4 3 5 9', 'dig30 8', 'dig84 7 6 8 3', 'dig15 8 6 9 6 1 5 1 0 7', 'dig97 0 0 1 5']\nassert solution.reorderLogFiles(['dig46 5 4 8 8 0 2 2 2', 'dig31 7 6 7 9 9 9 1 3', 'dig10 3 0 4 5 8 9', 'let13 t n r c o m n', 'dig41 1 1', 'dig19 7 9 7 1 5 2 6 3 8 3', 'let69 r d', 'let15 h y f', 'dig98 3 6 4 0', 'let56 t k c c', 'dig55 8 6 1']) == ['let15 h y f', 'let69 r d', 'let56 t k c c', 'let13 t n r c o m n', 'dig46 5 4 8 8 0 2 2 2', 'dig31 7 6 7 9 9 9 1 3', 'dig10 3 0 4 5 8 9', 'dig41 1 1', 'dig19 7 9 7 1 5 2 6 3 8 3', 'dig98 3 6 4 0', 'dig55 8 6 1']\nassert solution.reorderLogFiles(['dig89 6 5 9 2 3 9 0 7 8 7', 'let75 k h y e j j', 'dig100 9 4 4 0 6 1 3', 'dig8 9 7 5 3 3 8 3', 'let40 p d j b c w m d w n', 'let94 u m r i m x', 'dig23 3', 'let66 e t c', 'let29 b v u b j r p e f']) == ['let29 b v u b j r p e f', 'let66 e t c', 'let75 k h y e j j', 'let40 p d j b c w m d w n', 'let94 u m r i m x', 'dig89 6 5 9 2 3 9 0 7 8 7', 'dig100 9 4 4 0 6 1 3', 'dig8 9 7 5 3 3 8 3', 'dig23 3']\nassert solution.reorderLogFiles(['dig28 6 6 1', 'let87 z v', 'dig25 6 6 3', 'dig71 5 9 8 1 2 0 3 2', 'let75 t d k q d k h c y m', 'let11 w j b', 'let79 o j', 'let55 g c', 'dig63 9 6 2 2 7 2 5', 'dig68 7 4 1 5 4 6 6 9', 'dig100 7 9 2']) == ['let55 g c', 'let79 o j', 'let75 t d k q d k h c y m', 'let11 w j b', 'let87 z v', 'dig28 6 6 1', 'dig25 6 6 3', 'dig71 5 9 8 1 2 0 3 2', 'dig63 9 6 2 2 7 2 5', 'dig68 7 4 1 5 4 6 6 9', 'dig100 7 9 2']\nassert solution.reorderLogFiles(['let45 b p p c a c e x', 'let97 x l p x o', 'dig50 6 7', 'dig4 0 1 2 8 2 1 9 9 8 0', 'let50 u q p p l a c', 'let38 u o', 'let54 t m g w y k l z p', 'let27 h m y s', 'dig94 3', 'let46 r w o m m r f d x', 'dig27 0']) == ['let45 b p p c a c e x', 'let27 h m y s', 'let46 r w o m m r f d x', 'let54 t m g w y k l z p', 'let38 u o', 'let50 u q p p l a c', 'let97 x l p x o', 'dig50 6 7', 'dig4 0 1 2 8 2 1 9 9 8 0', 'dig94 3', 'dig27 0']\nassert solution.reorderLogFiles(['dig9 1 2 3 6 3', 'let42 y i i w x b', 'let87 d g y x y f s s g', 'let42 s v t p s h i o', 'dig14 9 6 3 8 3 2 4 6 9', 'let13 p w z v', 'dig97 3 9 7 9 4 2 5 2', 'let39 e c f e', 'dig36 6', 'dig56 4 8 2', 'let41 h h o m p t g v v m', 'dig72 7', 'let64 d c u j o h l', 'dig88 7 7 6 2 7 3 1', 'dig96 4 2', 'dig73 9 2 5 7 3', 'dig61 9 8 9 5 6 9 2 8 1 6', 'let82 w c g m d m l k q', 'let18 d r h j t', 'let52 w']) == ['let64 d c u j o h l', 'let87 d g y x y f s s g', 'let18 d r h j t', 'let39 e c f e', 'let41 h h o m p t g v v m', 'let13 p w z v', 'let42 s v t p s h i o', 'let52 w', 'let82 w c g m d m l k q', 'let42 y i i w x b', 'dig9 1 2 3 6 3', 'dig14 9 6 3 8 3 2 4 6 9', 'dig97 3 9 7 9 4 2 5 2', 'dig36 6', 'dig56 4 8 2', 'dig72 7', 'dig88 7 7 6 2 7 3 1', 'dig96 4 2', 'dig73 9 2 5 7 3', 'dig61 9 8 9 5 6 9 2 8 1 6']\nassert solution.reorderLogFiles(['let11 h e p f x', 'let23 a x', 'let72 a w r y s y', 'let49 a i p y l r h t', 'dig17 3 1 3 2 6 4 3 4 5', 'let48 h u', 'let66 d m s', 'dig70 1 7 8 4', 'let99 n o i j z l g z x', 'let98 o d s c', 'dig61 9 7 4 6 3']) == ['let49 a i p y l r h t', 'let72 a w r y s y', 'let23 a x', 'let66 d m s', 'let11 h e p f x', 'let48 h u', 'let99 n o i j z l g z x', 'let98 o d s c', 'dig17 3 1 3 2 6 4 3 4 5', 'dig70 1 7 8 4', 'dig61 9 7 4 6 3']\nassert solution.reorderLogFiles(['let71 i d', 'let92 o m j m w p', 'let59 w b n p m q y o', 'let44 h d f u t s q v', 'let23 u l a m', 'let30 t c f n u e p s a f', 'dig48 6 1 4 6 6 9 4 3', 'dig1 2 1 7 7 8 9', 'dig95 2 1 8 7', 'let26 c b j s q f', 'dig8 3 7 5 7 7', 'dig93 8 5', 'dig61 2 4 2 9 9 4 0 2', 'dig84 4 8 8 6 7', 'dig36 1 1 9 0', 'let42 i', 'dig54 2 4 5 8 4 5', 'dig5 7 9 3 0 5']) == ['let26 c b j s q f', 'let44 h d f u t s q v', 'let42 i', 'let71 i d', 'let92 o m j m w p', 'let30 t c f n u e p s a f', 'let23 u l a m', 'let59 w b n p m q y o', 'dig48 6 1 4 6 6 9 4 3', 'dig1 2 1 7 7 8 9', 'dig95 2 1 8 7', 'dig8 3 7 5 7 7', 'dig93 8 5', 'dig61 2 4 2 9 9 4 0 2', 'dig84 4 8 8 6 7', 'dig36 1 1 9 0', 'dig54 2 4 5 8 4 5', 'dig5 7 9 3 0 5']\nassert solution.reorderLogFiles(['let52 w g p h v', 'let79 r u t m g x n', 'let94 r o v d d n h z a', 'dig28 0 7 2 0 4 5 6', 'dig42 6 1 1 6 2 4 0 5 5', 'dig84 2 9 5 5 9', 'let53 h i b g o k y', 'dig49 7 0 8 4 0 0', 'let10 g s k x d o m i']) == ['let10 g s k x d o m i', 'let53 h i b g o k y', 'let94 r o v d d n h z a', 'let79 r u t m g x n', 'let52 w g p h v', 'dig28 0 7 2 0 4 5 6', 'dig42 6 1 1 6 2 4 0 5 5', 'dig84 2 9 5 5 9', 'dig49 7 0 8 4 0 0']\nassert solution.reorderLogFiles(['let26 b b', 'dig90 5 2 3 4 3 8 1', 'let72 z j x o l y x y', 'dig28 8 5 5', 'dig42 2 7 4 9 1 8 4', 'dig70 6 0 4', 'let54 m m d n i i s', 'dig84 3 3 3 1 7', 'dig79 7 0 9 0 4 4 5', 'dig29 3 5 6 6 9', 'dig98 6 7 5 7 9 9 0 0 5 0', 'let33 v c z h y', 'let53 u', 'dig4 4 0 5', 'let39 j y a a d', 'dig5 1 7 8 8 6 5']) == ['let26 b b', 'let39 j y a a d', 'let54 m m d n i i s', 'let53 u', 'let33 v c z h y', 'let72 z j x o l y x y', 'dig90 5 2 3 4 3 8 1', 'dig28 8 5 5', 'dig42 2 7 4 9 1 8 4', 'dig70 6 0 4', 'dig84 3 3 3 1 7', 'dig79 7 0 9 0 4 4 5', 'dig29 3 5 6 6 9', 'dig98 6 7 5 7 9 9 0 0 5 0', 'dig4 4 0 5', 'dig5 1 7 8 8 6 5']\nassert solution.reorderLogFiles(['dig4 4 3 2 7 2 8 0 0', 'let58 g d v w e x l r', 'dig78 6', 'let1 i a', 'let50 a t g w z w c h g', 'let14 w', 'dig4 9 7', 'let12 z e o h o f j s n']) == ['let50 a t g w z w c h g', 'let58 g d v w e x l r', 'let1 i a', 'let14 w', 'let12 z e o h o f j s n', 'dig4 4 3 2 7 2 8 0 0', 'dig78 6', 'dig4 9 7']\nassert solution.reorderLogFiles(['dig17 4 8', 'let38 j y', 'let94 y o', 'let70 u k q m k j', 'dig53 3 4 0 2', 'let96 l l u d q m', 'let12 a p z g w s e u f i', 'dig43 6 0 0 0 1 8', 'let5 c f z r q e r j', 'dig3 2 5 0 2 4 6 0 7', 'let49 o v u', 'let38 d t b q p r', 'let59 s s z g d o q y n h']) == ['let12 a p z g w s e u f i', 'let5 c f z r q e r j', 'let38 d t b q p r', 'let38 j y', 'let96 l l u d q m', 'let49 o v u', 'let59 s s z g d o q y n h', 'let70 u k q m k j', 'let94 y o', 'dig17 4 8', 'dig53 3 4 0 2', 'dig43 6 0 0 0 1 8', 'dig3 2 5 0 2 4 6 0 7']\nassert solution.reorderLogFiles(['dig5 4 5 8 8 0 0 4', 'let96 q a n x u f', 'dig89 1 2 2', 'let58 i m k g y s b v', 'dig77 8 7 2 7 5 1 8 7 0 3', 'dig3 7', 'dig95 2 2 1 6 9 3 1 5 6 1', 'let78 j m b r q']) == ['let58 i m k g y s b v', 'let78 j m b r q', 'let96 q a n x u f', 'dig5 4 5 8 8 0 0 4', 'dig89 1 2 2', 'dig77 8 7 2 7 5 1 8 7 0 3', 'dig3 7', 'dig95 2 2 1 6 9 3 1 5 6 1']\nassert solution.reorderLogFiles(['dig11 2 1 1 2', 'dig67 6 0 8', 'dig91 2 0 5 1 0 6 0 2 0 2', 'let19 b x p v', 'let16 w n v a', 'dig100 4 4 9 0 3 4 0', 'let55 e l o', 'dig23 6 4 7', 'dig43 5 4 0', 'dig25 9 5 0 6 8']) == ['let19 b x p v', 'let55 e l o', 'let16 w n v a', 'dig11 2 1 1 2', 'dig67 6 0 8', 'dig91 2 0 5 1 0 6 0 2 0 2', 'dig100 4 4 9 0 3 4 0', 'dig23 6 4 7', 'dig43 5 4 0', 'dig25 9 5 0 6 8']\nassert solution.reorderLogFiles(['dig75 1 9 3 2 6 7 4 9 5 5', 'let72 i u j f b u e', 'dig93 4 2 3 8', 'let49 y f o e s', 'dig63 3 2 3', 'dig99 7', 'dig45 7 9 8 5 5 9 2 1', 'let90 p f i r g x m l']) == ['let72 i u j f b u e', 'let90 p f i r g x m l', 'let49 y f o e s', 'dig75 1 9 3 2 6 7 4 9 5 5', 'dig93 4 2 3 8', 'dig63 3 2 3', 'dig99 7', 'dig45 7 9 8 5 5 9 2 1']\nassert solution.reorderLogFiles(['let47 j x h q r m a d', 'let15 g i y s h a v u t s', 'let76 z r k v a s m z', 'dig4 5 4 0', 'dig68 9 2 4 3 4', 'let7 a', 'let34 z o m l r a v', 'dig66 7', 'dig93 5 9 4 0 5', 'let66 w h k c e i m z a d', 'dig96 0 9 7 3 4', 'let72 v k s o', 'dig65 0 1 0 6 0 1 0 3', 'dig69 5 0 4 4', 'dig13 5', 'let87 r s r d', 'dig55 4 6 2', 'let98 m']) == ['let7 a', 'let15 g i y s h a v u t s', 'let47 j x h q r m a d', 'let98 m', 'let87 r s r d', 'let72 v k s o', 'let66 w h k c e i m z a d', 'let34 z o m l r a v', 'let76 z r k v a s m z', 'dig4 5 4 0', 'dig68 9 2 4 3 4', 'dig66 7', 'dig93 5 9 4 0 5', 'dig96 0 9 7 3 4', 'dig65 0 1 0 6 0 1 0 3', 'dig69 5 0 4 4', 'dig13 5', 'dig55 4 6 2']\nassert solution.reorderLogFiles(['let11 y x m w k t', 'dig50 7 1 7 6', 'dig70 9 4 4', 'dig68 8 3 9 5 8', 'dig85 2 2 7 0 1 5 5 7 6', 'let53 y p r', 'let27 p s c k c', 'let77 s z w u o']) == ['let27 p s c k c', 'let77 s z w u o', 'let53 y p r', 'let11 y x m w k t', 'dig50 7 1 7 6', 'dig70 9 4 4', 'dig68 8 3 9 5 8', 'dig85 2 2 7 0 1 5 5 7 6']\nassert solution.reorderLogFiles(['let32 z', 'let81 b z o q s j y x a k', 'let18 l w', 'let98 p w e', 'let8 d f s d i f c', 'dig21 4 7 8 7 3 5 3 9 5', 'let40 a w p z o o', 'let100 k l g p t o q m d']) == ['let40 a w p z o o', 'let81 b z o q s j y x a k', 'let8 d f s d i f c', 'let100 k l g p t o q m d', 'let18 l w', 'let98 p w e', 'let32 z', 'dig21 4 7 8 7 3 5 3 9 5']\nassert solution.reorderLogFiles(['dig96 8 3 7 7 5 0', 'dig97 4 4 1 6', 'dig76 9 6', 'dig27 9 9 3', 'dig23 9 3 7 3 9', 'dig71 6 0 4 3', 'let48 w g k', 'dig8 7 4 1']) == ['let48 w g k', 'dig96 8 3 7 7 5 0', 'dig97 4 4 1 6', 'dig76 9 6', 'dig27 9 9 3', 'dig23 9 3 7 3 9', 'dig71 6 0 4 3', 'dig8 7 4 1']\nassert solution.reorderLogFiles(['let24 y d p w h l a c', 'let48 r h s c', 'let38 u r g h y', 'let87 u j', 'dig86 0', 'let98 q i x r y c p o z', 'let53 z u', 'let88 k e r t q t j j l s', 'dig80 4 5 9 1 0 6 1 8', 'let38 g z a d', 'let18 a t l', 'let12 z d r d d z m b y']) == ['let18 a t l', 'let38 g z a d', 'let88 k e r t q t j j l s', 'let98 q i x r y c p o z', 'let48 r h s c', 'let87 u j', 'let38 u r g h y', 'let24 y d p w h l a c', 'let12 z d r d d z m b y', 'let53 z u', 'dig86 0', 'dig80 4 5 9 1 0 6 1 8']\nassert solution.reorderLogFiles(['let48 k n b g', 'dig2 4 9 9 0 8 4 9', 'dig24 6 5 1 5 9 9 7 4', 'let94 y a t s', 'dig89 0 0 5 3 3 5 6 5', 'let34 t a q q m d f o v w', 'let98 y s b c e c', 'let24 m p', 'dig46 7 0 9', 'dig34 4 7 5 7 3 0 6 5 9', 'let31 s u c h s z y r k x']) == ['let48 k n b g', 'let24 m p', 'let31 s u c h s z y r k x', 'let34 t a q q m d f o v w', 'let94 y a t s', 'let98 y s b c e c', 'dig2 4 9 9 0 8 4 9', 'dig24 6 5 1 5 9 9 7 4', 'dig89 0 0 5 3 3 5 6 5', 'dig46 7 0 9', 'dig34 4 7 5 7 3 0 6 5 9']\nassert solution.reorderLogFiles(['dig50 2 7 8 8 7 1', 'dig39 6 5 8 1 9 3 6 2', 'dig49 2 0 8 2', 'let96 t n', 'dig20 9 3 3 5 5 7']) == ['let96 t n', 'dig50 2 7 8 8 7 1', 'dig39 6 5 8 1 9 3 6 2', 'dig49 2 0 8 2', 'dig20 9 3 3 5 5 7']\nassert solution.reorderLogFiles(['dig43 3 7 6 0 5 9 7 4 7 2', 'let84 u m p r e n y', 'dig88 9 8 3 1 0 4 4', 'let38 l b', 'dig74 5 0 9', 'dig65 9 1 1', 'dig81 2 0 1 9 7', 'dig5 2 1 7 2 2 4 0', 'dig58 3 6 3 0 1 5 7 2 5', 'let99 d r', 'dig25 5 6', 'dig50 0']) == ['let99 d r', 'let38 l b', 'let84 u m p r e n y', 'dig43 3 7 6 0 5 9 7 4 7 2', 'dig88 9 8 3 1 0 4 4', 'dig74 5 0 9', 'dig65 9 1 1', 'dig81 2 0 1 9 7', 'dig5 2 1 7 2 2 4 0', 'dig58 3 6 3 0 1 5 7 2 5', 'dig25 5 6', 'dig50 0']\nassert solution.reorderLogFiles(['dig94 4 2', 'dig21 0 1 7 1 9 0', 'dig58 5', 'let6 n p f l', 'dig2 1 7 2 8 2 5 3 5 9 1', 'let1 h o w f s j g', 'dig12 7 0 7 3 0 1']) == ['let1 h o w f s j g', 'let6 n p f l', 'dig94 4 2', 'dig21 0 1 7 1 9 0', 'dig58 5', 'dig2 1 7 2 8 2 5 3 5 9 1', 'dig12 7 0 7 3 0 1']\nassert solution.reorderLogFiles(['let98 n g v q c k n u i q', 'let58 c k w j g', 'dig93 9', 'dig54 7 2 3 6 1 0 5 4 2 4', 'let21 y v', 'let3 o w o j f i p o', 'dig67 1 9 6 0', 'dig52 3 7 1 5', 'let53 z z i q p o q f', 'dig93 2', 'let78 k f x t f h q k', 'let1 e o r h b w u v', 'dig24 0 3 0', 'let5 d l w n h', 'dig80 0 0 9 4 8 4 4 5']) == ['let58 c k w j g', 'let5 d l w n h', 'let1 e o r h b w u v', 'let78 k f x t f h q k', 'let98 n g v q c k n u i q', 'let3 o w o j f i p o', 'let21 y v', 'let53 z z i q p o q f', 'dig93 9', 'dig54 7 2 3 6 1 0 5 4 2 4', 'dig67 1 9 6 0', 'dig52 3 7 1 5', 'dig93 2', 'dig24 0 3 0', 'dig80 0 0 9 4 8 4 4 5']\nassert solution.reorderLogFiles(['let98 j d o w v j h t u', 'dig64 4 6 1 3 2 2 8 9', 'dig27 1 1 7 5 7 8 8 5 7', 'dig1 8 1 8 6 7 1 4 0 9 1', 'dig78 2', 'let70 q p f x', 'let85 a o l v s', 'let57 x e j z d j s f', 'dig86 4 4 1 6 3 7 9 6 9']) == ['let85 a o l v s', 'let98 j d o w v j h t u', 'let70 q p f x', 'let57 x e j z d j s f', 'dig64 4 6 1 3 2 2 8 9', 'dig27 1 1 7 5 7 8 8 5 7', 'dig1 8 1 8 6 7 1 4 0 9 1', 'dig78 2', 'dig86 4 4 1 6 3 7 9 6 9']\nassert solution.reorderLogFiles(['let97 i p p c v v p r n g', 'let76 r u c p z j l', 'dig96 5 9 5 0 0 2 2', 'let62 j c d z x u', 'let57 u i d g m']) == ['let97 i p p c v v p r n g', 'let62 j c d z x u', 'let76 r u c p z j l', 'let57 u i d g m', 'dig96 5 9 5 0 0 2 2']\nassert solution.reorderLogFiles(['dig34 7 3 9', 'dig59 1 4 4 4 6 7 0 2', 'let55 d', 'let92 d t x b g', 'let61 h p e s c r a t v', 'dig35 2 9 5 9 5 0 9 1', 'let46 u h m', 'dig26 4 8 4 6 0 8 0 8 2 7', 'dig26 8 1 4 0 7 2 7 1 0', 'dig24 8 0 5 3 3 9 7 0 0 2']) == ['let55 d', 'let92 d t x b g', 'let61 h p e s c r a t v', 'let46 u h m', 'dig34 7 3 9', 'dig59 1 4 4 4 6 7 0 2', 'dig35 2 9 5 9 5 0 9 1', 'dig26 4 8 4 6 0 8 0 8 2 7', 'dig26 8 1 4 0 7 2 7 1 0', 'dig24 8 0 5 3 3 9 7 0 0 2']\nassert solution.reorderLogFiles(['dig44 5 3', 'let47 p a e w p n b', 'dig24 2 6', 'dig72 6 3 4 1 0 6 1 7 5 6', 'dig31 0 4 4 1 6 6', 'dig12 9', 'dig86 0 3 9 9 3 6 2 4 6 2', 'dig20 6 4 5 6 4 9 9 1 7', 'dig73 4 6 9 0 3 1 0 0', 'let100 b c p s s c n', 'let26 z n m', 'dig78 8 3 8 0 7 8', 'let40 u l', 'let53 v b t', 'dig49 5 1 0 5 1 9 9 4 4']) == ['let100 b c p s s c n', 'let47 p a e w p n b', 'let40 u l', 'let53 v b t', 'let26 z n m', 'dig44 5 3', 'dig24 2 6', 'dig72 6 3 4 1 0 6 1 7 5 6', 'dig31 0 4 4 1 6 6', 'dig12 9', 'dig86 0 3 9 9 3 6 2 4 6 2', 'dig20 6 4 5 6 4 9 9 1 7', 'dig73 4 6 9 0 3 1 0 0', 'dig78 8 3 8 0 7 8', 'dig49 5 1 0 5 1 9 9 4 4']\nassert solution.reorderLogFiles(['dig89 4', 'dig86 6', 'dig38 7 5 9', 'dig6 9 1 7 4 2 3 7', 'dig81 2 4 3 5 8 7', 'let81 x v i w n', 'let45 h q']) == ['let45 h q', 'let81 x v i w n', 'dig89 4', 'dig86 6', 'dig38 7 5 9', 'dig6 9 1 7 4 2 3 7', 'dig81 2 4 3 5 8 7']\nassert solution.reorderLogFiles(['let72 l s p d m r', 'let60 y d m x k l g', 'dig57 0 2 1 4 1 9 9 5 6 4', 'dig47 7 4 1 2 6 5 3 2 7', 'dig45 0 8 1', 'dig84 5 4 7 9 4 2', 'dig64 9 9 2 8 3', 'dig26 4 9 8 1 7 6 5 9']) == ['let72 l s p d m r', 'let60 y d m x k l g', 'dig57 0 2 1 4 1 9 9 5 6 4', 'dig47 7 4 1 2 6 5 3 2 7', 'dig45 0 8 1', 'dig84 5 4 7 9 4 2', 'dig64 9 9 2 8 3', 'dig26 4 9 8 1 7 6 5 9']\nassert solution.reorderLogFiles(['let93 x l', 'let8 a j z d', 'let33 h t x', 'dig63 0 2 6 1 6 0', 'let47 n n k j k m f e k t', 'let32 e', 'let53 k d x b a v', 'dig55 2 1 1 0 6 5 5', 'dig1 0 8 4 1 5 3 2 5', 'dig70 2 4 4 4', 'dig87 4 7 8', 'dig40 8 1 6 6 0 4 3 3 9 1']) == ['let8 a j z d', 'let32 e', 'let33 h t x', 'let53 k d x b a v', 'let47 n n k j k m f e k t', 'let93 x l', 'dig63 0 2 6 1 6 0', 'dig55 2 1 1 0 6 5 5', 'dig1 0 8 4 1 5 3 2 5', 'dig70 2 4 4 4', 'dig87 4 7 8', 'dig40 8 1 6 6 0 4 3 3 9 1']\nassert solution.reorderLogFiles(['let37 e', 'let8 f a d j n d a', 'let73 r h s', 'let56 u s p l z c', 'let47 q l k e x g h c y', 'let18 d z p p r m u x', 'dig95 3 0 9 6', 'dig88 7 1 5 8 2 9 4 0 3 2', 'let50 d i', 'let85 v i q j h z k n h m', 'let63 i y i e h', 'dig96 1 6 2 2 2 3 4 7']) == ['let50 d i', 'let18 d z p p r m u x', 'let37 e', 'let8 f a d j n d a', 'let63 i y i e h', 'let47 q l k e x g h c y', 'let73 r h s', 'let56 u s p l z c', 'let85 v i q j h z k n h m', 'dig95 3 0 9 6', 'dig88 7 1 5 8 2 9 4 0 3 2', 'dig96 1 6 2 2 2 3 4 7']\nassert solution.reorderLogFiles(['let65 q k z', 'let85 w x k b c x v h s z', 'dig33 0 7 0 5 8 7 4 5 2 2', 'dig93 1 2 0 4 9 7 9 9', 'let25 i l f z p', 'let41 b f j s j p l n q', 'let52 e t k f s q', 'let48 l m c t n p y', 'let100 r n e b l', 'dig90 4 2 8 4 7 2', 'let82 b m p z q', 'let32 x z']) == ['let41 b f j s j p l n q', 'let82 b m p z q', 'let52 e t k f s q', 'let25 i l f z p', 'let48 l m c t n p y', 'let65 q k z', 'let100 r n e b l', 'let85 w x k b c x v h s z', 'let32 x z', 'dig33 0 7 0 5 8 7 4 5 2 2', 'dig93 1 2 0 4 9 7 9 9', 'dig90 4 2 8 4 7 2']\nassert solution.reorderLogFiles(['dig7 1 9', 'dig81 9 8 5', 'dig98 7 5 5 9 4 0 4 1 7', 'dig47 0 7', 'dig16 1 4 5 7', 'dig94 1 0', 'dig99 1 1 9 1 6 3', 'let76 j s m m', 'dig50 1 3 2 5 7 7 2', 'dig11 6 2 5 1 0 0 2 9 5 4', 'dig63 7', 'let77 e o i']) == ['let77 e o i', 'let76 j s m m', 'dig7 1 9', 'dig81 9 8 5', 'dig98 7 5 5 9 4 0 4 1 7', 'dig47 0 7', 'dig16 1 4 5 7', 'dig94 1 0', 'dig99 1 1 9 1 6 3', 'dig50 1 3 2 5 7 7 2', 'dig11 6 2 5 1 0 0 2 9 5 4', 'dig63 7']\nassert solution.reorderLogFiles(['let76 w r e v i p h s j o', 'let60 c f n u p b s z a', 'dig92 5 2']) == ['let60 c f n u p b s z a', 'let76 w r e v i p h s j o', 'dig92 5 2']\nassert solution.reorderLogFiles(['dig23 2 8 9 7 9 3 3 7 8 0', 'let42 h y', 'let3 h d n l o x', 'let80 a j s l w', 'let30 g w b u r a w j v', 'let88 s l u i n w y', 'dig14 5 2 0 7', 'dig7 7 2 7 0 7 8 2 4 9 3', 'dig1 8 4 7', 'let38 k i p j u l k e q e', 'let28 c e']) == ['let80 a j s l w', 'let28 c e', 'let30 g w b u r a w j v', 'let3 h d n l o x', 'let42 h y', 'let38 k i p j u l k e q e', 'let88 s l u i n w y', 'dig23 2 8 9 7 9 3 3 7 8 0', 'dig14 5 2 0 7', 'dig7 7 2 7 0 7 8 2 4 9 3', 'dig1 8 4 7']\nassert solution.reorderLogFiles(['let54 u j u c', 'dig85 7 9 6 1', 'let57 k q e', 'dig91 6 4 4 4 3', 'let53 l t u r y j d f b z', 'let63 g t f e h x q w f', 'dig7 0 0 8 5 9', 'let20 a e t', 'let78 f', 'dig25 6 4 6 5 2 7 8 1 1', 'let52 j b g a k z p j', 'let98 u c w a o', 'dig68 8 5', 'let93 x l m', 'dig64 6 3 5']) == ['let20 a e t', 'let78 f', 'let63 g t f e h x q w f', 'let52 j b g a k z p j', 'let57 k q e', 'let53 l t u r y j d f b z', 'let98 u c w a o', 'let54 u j u c', 'let93 x l m', 'dig85 7 9 6 1', 'dig91 6 4 4 4 3', 'dig7 0 0 8 5 9', 'dig25 6 4 6 5 2 7 8 1 1', 'dig68 8 5', 'dig64 6 3 5']\nassert solution.reorderLogFiles(['dig62 8 4', 'let14 o', 'let74 w p r c p k v', 'let86 b y i v n g n e', 'dig88 2 6 2 8 2', 'let96 i a g h t i k t s', 'let57 c u i h o t v m m t', 'let18 k q p d n i d', 'let16 x w p w s z l x q', 'let11 g i j u q n y', 'let49 z l l c d h x d h']) == ['let86 b y i v n g n e', 'let57 c u i h o t v m m t', 'let11 g i j u q n y', 'let96 i a g h t i k t s', 'let18 k q p d n i d', 'let14 o', 'let74 w p r c p k v', 'let16 x w p w s z l x q', 'let49 z l l c d h x d h', 'dig62 8 4', 'dig88 2 6 2 8 2']\nassert solution.reorderLogFiles(['dig79 4 1 7 7 6 2 3', 'dig8 9 8', 'dig94 1 6', 'dig89 8 0 9 0 7 8 6', 'dig5 8 9 6', 'dig66 7 9 5 3', 'dig76 7', 'let1 o n w n p i']) == ['let1 o n w n p i', 'dig79 4 1 7 7 6 2 3', 'dig8 9 8', 'dig94 1 6', 'dig89 8 0 9 0 7 8 6', 'dig5 8 9 6', 'dig66 7 9 5 3', 'dig76 7']\nassert solution.reorderLogFiles(['dig11 3 2 1 9 6', 'dig31 0', 'dig36 0 6 7 5 2 9 4 6 5', 'dig44 3 5 0 9 2 7 7 0 4 7', 'let76 k n a p']) == ['let76 k n a p', 'dig11 3 2 1 9 6', 'dig31 0', 'dig36 0 6 7 5 2 9 4 6 5', 'dig44 3 5 0 9 2 7 7 0 4 7']\nassert solution.reorderLogFiles(['let10 l c p u u', 'let18 t p q f r o p', 'let80 o q p t d', 'let55 w u k g w', 'let77 z o d', 'dig42 3', 'let60 h s i i b d c o', 'let6 f o d g', 'let100 n j i q y l w p s g']) == ['let6 f o d g', 'let60 h s i i b d c o', 'let10 l c p u u', 'let100 n j i q y l w p s g', 'let80 o q p t d', 'let18 t p q f r o p', 'let55 w u k g w', 'let77 z o d', 'dig42 3']\nassert solution.reorderLogFiles(['let25 t f v k b x', 'dig50 2', 'let16 m', 'dig73 6 3 4 9 5 9 7 7 3 3', 'dig100 2 0 8', 'let4 n d', 'let6 b m u i t x a', 'dig26 5 6 9 2 9 4 7 7', 'dig62 7 3 5 4 3 6 0 9 9', 'let69 w g x e b e l e l g', 'let97 o h j', 'let19 v t w f v y t e b', 'dig93 5 1 1', 'let3 t j t f i', 'dig76 5 9 5 9 3', 'let83 y n p f b v l m y v', 'let70 w o o g f c']) == ['let6 b m u i t x a', 'let16 m', 'let4 n d', 'let97 o h j', 'let25 t f v k b x', 'let3 t j t f i', 'let19 v t w f v y t e b', 'let69 w g x e b e l e l g', 'let70 w o o g f c', 'let83 y n p f b v l m y v', 'dig50 2', 'dig73 6 3 4 9 5 9 7 7 3 3', 'dig100 2 0 8', 'dig26 5 6 9 2 9 4 7 7', 'dig62 7 3 5 4 3 6 0 9 9', 'dig93 5 1 1', 'dig76 5 9 5 9 3']\nassert solution.reorderLogFiles(['let71 h a m g c s x i c f', 'let37 w', 'dig59 5 2 6 7 0 6 1', 'let29 h h v n g u q', 'let38 u j', 'let40 m t m y', 'let19 v n o h d', 'dig9 9 1', 'dig98 4 4 5 3 2 3 4', 'dig98 6 9 7', 'let76 y g y s x b r']) == ['let71 h a m g c s x i c f', 'let29 h h v n g u q', 'let40 m t m y', 'let38 u j', 'let19 v n o h d', 'let37 w', 'let76 y g y s x b r', 'dig59 5 2 6 7 0 6 1', 'dig9 9 1', 'dig98 4 4 5 3 2 3 4', 'dig98 6 9 7']\nassert solution.reorderLogFiles(['let94 j i j n q x x s f o', 'dig14 4 2 1 1', 'dig34 7 0 9 4 5 6 1', 'let64 z d y e', 'dig60 6 3 6 4 1 9 5', 'let48 d', 'dig58 0 5 1 3 9 2 0 0', 'let100 t d e l', 'let76 x x a y o o q', 'dig67 1 2 9 8 6 4', 'let85 m e n y', 'let12 l v a s z e k o z e', 'let3 q b x e', 'let91 s b', 'let59 t']) == ['let48 d', 'let94 j i j n q x x s f o', 'let12 l v a s z e k o z e', 'let85 m e n y', 'let3 q b x e', 'let91 s b', 'let59 t', 'let100 t d e l', 'let76 x x a y o o q', 'let64 z d y e', 'dig14 4 2 1 1', 'dig34 7 0 9 4 5 6 1', 'dig60 6 3 6 4 1 9 5', 'dig58 0 5 1 3 9 2 0 0', 'dig67 1 2 9 8 6 4']\nassert solution.reorderLogFiles(['let74 k j z j', 'let35 h e u m h w n q', 'let66 g m', 'dig25 9 7 2', 'dig73 5 6 3', 'let18 n u a w c i m', 'let75 y', 'let35 w a p t l p']) == ['let66 g m', 'let35 h e u m h w n q', 'let74 k j z j', 'let18 n u a w c i m', 'let35 w a p t l p', 'let75 y', 'dig25 9 7 2', 'dig73 5 6 3']\nassert solution.reorderLogFiles(['let95 u y v i h', 'dig23 0 5 7 1 9 7 9 0 9 1', 'dig79 9 4 9 5 5 6 4 4 7']) == ['let95 u y v i h', 'dig23 0 5 7 1 9 7 9 0 9 1', 'dig79 9 4 9 5 5 6 4 4 7']\nassert solution.reorderLogFiles(['dig53 2 2 8 8 5 9', 'let62 j z n f y', 'dig30 4 8 4 5 2 0 1', 'let52 j g y c c l j w p', 'let92 g f w d w g f a t', 'dig92 5', 'let87 e n i y']) == ['let87 e n i y', 'let92 g f w d w g f a t', 'let52 j g y c c l j w p', 'let62 j z n f y', 'dig53 2 2 8 8 5 9', 'dig30 4 8 4 5 2 0 1', 'dig92 5']\nassert solution.reorderLogFiles(['let53 m f g u g p u t f', 'dig68 9 7 1 8 4 1 8', 'let94 k k z q', 'dig51 4 9 5 1 7 1 2 7 6', 'let55 g z e m x f x i a b', 'let49 j q q w a y k g u g', 'let15 f n v h y']) == ['let15 f n v h y', 'let55 g z e m x f x i a b', 'let49 j q q w a y k g u g', 'let94 k k z q', 'let53 m f g u g p u t f', 'dig68 9 7 1 8 4 1 8', 'dig51 4 9 5 1 7 1 2 7 6']\nassert solution.reorderLogFiles(['let17 e k q m k j n n o l', 'let40 w q m a y g v a m e', 'let87 f p j d i s l a', 'let64 t v p g', 'dig44 8 7 1 8 4', 'let93 m u d', 'let49 f n a', 'let31 f a s s']) == ['let17 e k q m k j n n o l', 'let31 f a s s', 'let49 f n a', 'let87 f p j d i s l a', 'let93 m u d', 'let64 t v p g', 'let40 w q m a y g v a m e', 'dig44 8 7 1 8 4']\nassert solution.reorderLogFiles(['let84 y t t z o v y e z v', 'dig89 8 3 9 1 7 8', 'let59 y u r f d m x v m t', 'dig6 2 3 1 1 3 5 0 5 5 6', 'let57 k l r k f m g b s z', 'let73 w w i k p', 'let25 k w b o i o', 'dig75 9 2 4 8 5 3', 'let28 w t z f', 'let44 w w h a r g l a', 'let1 s s n']) == ['let57 k l r k f m g b s z', 'let25 k w b o i o', 'let1 s s n', 'let28 w t z f', 'let44 w w h a r g l a', 'let73 w w i k p', 'let84 y t t z o v y e z v', 'let59 y u r f d m x v m t', 'dig89 8 3 9 1 7 8', 'dig6 2 3 1 1 3 5 0 5 5 6', 'dig75 9 2 4 8 5 3']\nassert solution.reorderLogFiles(['let38 g p d t q z o v k', 'let100 n d s', 'let98 i', 'dig22 3 6 9 4 3', 'dig19 1 9 8 0 9 1 4', 'let38 i j i m m q', 'dig95 5 6 4 1 9 9 4 1 7 0']) == ['let38 g p d t q z o v k', 'let98 i', 'let38 i j i m m q', 'let100 n d s', 'dig22 3 6 9 4 3', 'dig19 1 9 8 0 9 1 4', 'dig95 5 6 4 1 9 9 4 1 7 0']\nassert solution.reorderLogFiles(['let54 s', 'let67 p j b p', 'let15 o c', 'dig35 7 4', 'let55 d y r u r k p w z', 'let44 x z x h l w u a n', 'dig77 2 6 1', 'dig27 4 1 6 5 3 6 0 9', 'let48 k x y q p i', 'let86 s']) == ['let55 d y r u r k p w z', 'let48 k x y q p i', 'let15 o c', 'let67 p j b p', 'let54 s', 'let86 s', 'let44 x z x h l w u a n', 'dig35 7 4', 'dig77 2 6 1', 'dig27 4 1 6 5 3 6 0 9']",
  "inefficient_solution": "class Solution:\n    def reorderLogFiles(self, logs: List[str]) -> List[str]:\n        def cmp(x):\n            a, b = x.split(' ', 1)\n            if b[0].isalpha():\n                letter_log = []\n                for i in range(len(b)):\n                    letter_log.append(b[i])\n                for i in range(len(a)):\n                    letter_log.append(a[i])\n                return letter_log\n            else:\n                digit_log = []\n                for i in range(len(b)):\n                    digit_log.append(b[i])\n                for i in range(len(a)):\n                    digit_log.append(a[i])\n                return digit_log\n\n        result = []\n        for log in logs:\n            x = cmp(log)\n            if log[0].isalpha():\n                x.sort()\n            result.append(' '.join(x))\n\n        return result",
  "is_python": true
}