{
  "problem_idx": 860,
  "task_name": "Lemonade Change",
  "markdown_description": "\nAt a lemonade stand, each lemonade costs `5`. Customers are standing in a queue to buy from you and order one at a time (in the order specified by bills). Each customer will only buy one lemonade and pay with either a `5`, `10`, or `20` bill. You must provide the correct change to each customer so that the net transaction is that the customer pays `5`.\n\n\nNote that you do not have any change in hand at first.\n\n\nGiven an integer array `bills` where `bills[i]` is the bill the `ith` customer pays, return `true` *if you can provide every customer with the correct change, or* `false` *otherwise*.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** bills = [5,5,5,10,20]\n**Output:** true\n**Explanation:** \nFrom the first 3 customers, we collect three 5 bills in order.\nFrom the fourth customer, we collect a 10 bill and give back a 5.\nFrom the fifth customer, we give a 10 bill and a 5 bill.\nSince all customers got correct change, we output true.\n\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** bills = [5,5,10,10,20]\n**Output:** false\n**Explanation:** \nFrom the first two customers in order, we collect two 5 bills.\nFor the next two customers in order, we collect a 10 bill and give back a 5 bill.\nFor the last customer, we can not give the change of 15 back because we only have two 10 bills.\nSince not every customer received the correct change, the answer is false.\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `1 <= bills.length <= 105`\n* `bills[i]` is either `5`, `10`, or `20`.\n\n\n",
  "canonical_solution": "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        five = ten = 0\n        for v in bills:\n            if v == 5:\n                five += 1\n            elif v == 10:\n                ten += 1\n                five -= 1\n            else:\n                if ten:\n                    ten -= 1\n                    five -= 1\n                else:\n                    five -= 3\n            if five < 0:\n                return False\n        return True\n",
  "test_case_generator": "\nimport random\n\nclass Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        five = ten = 0\n        for v in bills:\n            if v == 5:\n                five += 1\n            elif v == 10:\n                ten += 1\n                five -= 1\n            else:\n                if ten:\n                    ten -= 1\n                    five -= 1\n                else:\n                    five -= 3\n            if five < 0:\n                return False\n        return True\n\ndef generate_test_case():\n    solution = Solution()\n    \n    # Generate random numbers list\n    bills = random.choices([5, 10, 20], k=random.randint(1, 100))\n    \n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.lemonadeChange(bills)\n\n    return bills, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        bills, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.lemonadeChange(bills) == expected_result\n        print(f\"assert solution.lemonadeChange({bills}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.lemonadeChange({bills}) == {expected_result}\") # You can find that we construct the test case in the same format as the example\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.lemonadeChange([10, 20, 20, 10, 10, 20, 5, 20, 20, 20]) == False\nassert solution.lemonadeChange([20, 20, 20, 10, 20, 20, 5, 20, 10, 20, 20, 20]) == False\nassert solution.lemonadeChange([10, 5, 5, 20, 10, 5, 5, 10, 5, 5, 10, 20, 20, 20, 10, 20, 5, 20, 20, 20, 10, 10, 5, 20, 20, 5, 20, 5, 5, 5, 5, 20, 10, 20, 5, 20, 20, 10, 5, 5, 5, 20, 5, 5, 5, 20, 10, 5, 10, 5, 20, 10, 10, 5, 20, 5, 10, 5, 20, 5, 20, 5, 5, 20, 20, 20, 5, 10, 5, 10, 5, 10, 20, 20, 10, 5, 10, 10, 10, 10, 20, 5, 5, 5, 5, 10, 10, 5, 10, 5]) == False\nassert solution.lemonadeChange([10, 10, 5, 10, 20, 10, 10, 5, 10, 5, 20, 10, 20, 5, 20, 10, 20, 20, 5, 5, 20, 10, 10, 20, 20, 5, 20, 5, 5, 10, 20, 20, 20, 5, 10, 5, 20, 20, 20, 20, 20, 10, 5, 10, 10, 10]) == False\nassert solution.lemonadeChange([5, 20, 20, 20, 5, 5, 20, 20, 5, 20, 10, 10, 20, 5, 10, 20, 10, 20, 10, 20, 10, 20, 10, 5, 20, 10, 20, 5, 5, 20, 20, 20, 10, 20, 20, 10]) == False\nassert solution.lemonadeChange([5, 10, 20, 5, 20, 20, 20, 10, 10, 10, 20, 5, 20, 5, 20, 10, 5, 10, 20, 20, 20, 5, 5, 5, 5, 5, 20, 5, 20, 10, 10, 10, 5, 5, 20, 20, 20, 10, 10, 5, 20, 20, 10, 20, 10, 5, 20, 10, 5, 20, 20, 10, 5, 5, 20, 10, 5, 10, 10, 10, 5, 5, 20, 20, 5, 5, 5, 5, 10, 20, 10, 5, 10, 10, 5, 10, 10, 5, 20, 10, 20, 20, 5, 5, 10, 5, 20, 5, 5, 5, 5, 20, 5, 20, 5]) == False\nassert solution.lemonadeChange([20, 5, 5, 20, 10, 10, 20, 5, 10, 10, 5, 20, 5, 20, 10, 5, 5, 5, 10, 20, 20, 5]) == False\nassert solution.lemonadeChange([10, 20, 5, 20, 5, 5, 5, 10, 5, 10, 20, 10, 5, 5, 10, 10, 5, 20, 5, 20, 5, 5, 10, 5, 5, 20, 5, 5, 10, 10, 20, 20, 5, 10, 10, 10, 10, 5, 20, 5, 20, 5, 20, 5, 10, 20, 5, 5, 20, 20, 10, 20, 20, 20, 20, 20, 20, 20, 20, 10, 5, 5, 5, 20, 5, 20]) == False\nassert solution.lemonadeChange([10, 10, 10, 20, 10, 10, 10, 20, 5, 20, 10, 20, 10, 10, 5, 10, 10, 20, 10, 5, 5, 10, 20, 5, 5, 10, 20, 10, 20, 5, 10, 20, 10, 5, 20, 20, 10, 5, 20, 5, 10, 10, 5, 20, 10, 10, 20, 10, 5, 20, 10, 5, 5, 10, 5, 20, 5, 20, 5, 5, 20, 10, 20, 20, 10, 20, 10, 5, 10, 5, 10, 5, 20, 5, 10, 5, 20, 5, 5, 10, 20, 10, 5, 5, 10, 10, 10, 5, 5, 10, 20, 5, 10, 20, 5, 10, 10]) == False\nassert solution.lemonadeChange([5, 10, 20, 20, 20, 5, 10, 5, 5, 10, 10, 10, 20, 20, 10, 5, 5, 20, 20, 5, 20, 5, 20, 20, 5, 20, 20, 10, 5, 5, 10, 20, 10, 5, 5, 10, 5, 10, 10, 5, 5, 10, 5, 5, 10, 5]) == False\nassert solution.lemonadeChange([10, 5, 20, 5, 5, 5, 5, 5, 20, 5, 20, 20, 5, 5, 5, 5, 20, 20, 10, 5, 20, 10, 20, 10, 5, 20, 20, 10, 5]) == False\nassert solution.lemonadeChange([20, 10, 5, 5, 10, 20, 10, 20, 20, 10, 5, 10, 10, 5, 10, 5, 10, 5, 10, 10, 5, 5, 20, 20, 20, 10, 10, 10, 20, 10, 5, 10, 20, 10]) == False\nassert solution.lemonadeChange([20, 5, 20, 20, 5, 20, 5, 5, 10, 20, 20, 5, 10, 20, 20, 20, 20, 20, 20, 10, 10, 10, 10, 5, 5, 5, 20, 20, 20, 10, 20, 5, 5, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 5, 10, 10, 10, 5, 5, 10, 10, 20, 20, 10, 10, 10]) == False\nassert solution.lemonadeChange([20, 10, 10, 20, 10]) == False\nassert solution.lemonadeChange([20, 20, 20, 10, 10, 10, 20, 10, 5, 20, 20, 20, 20, 20, 20, 5, 20, 20, 10, 10, 20, 5, 20, 10, 5, 5, 20, 5, 5, 10, 10, 20]) == False\nassert solution.lemonadeChange([5, 10, 20, 10, 10, 10, 10, 5, 10, 20, 5, 20, 5, 20, 10, 20, 20, 20, 10, 10, 20, 20, 10, 10, 10, 10, 5, 5, 10, 5, 20, 10, 20, 10, 20, 20, 20, 5, 20, 10, 10, 10, 20, 20, 5, 5]) == False\nassert solution.lemonadeChange([10, 20, 5, 5, 10, 10, 20, 20]) == False\nassert solution.lemonadeChange([10, 10, 10, 20, 10, 5, 10, 5, 5, 20, 20, 10, 20, 20, 20, 10, 10, 5, 20, 20, 5, 20, 20, 20, 10, 5, 20, 10, 5]) == False\nassert solution.lemonadeChange([20, 5, 20, 10, 20, 5, 20, 10, 10, 5, 20, 10, 20, 10, 20, 20, 20, 20, 5, 10, 5, 5, 10, 20, 5, 20, 20, 20, 5, 10, 5, 10, 20, 5, 10, 5, 20, 10, 5, 10, 5, 10, 10, 20, 5, 10, 10, 10, 20, 20, 5, 5, 5]) == False\nassert solution.lemonadeChange([5, 20, 5, 5, 10, 20, 10, 20, 20, 20, 20, 5, 5, 20, 20, 5, 20, 20, 10, 10, 20, 20, 5, 5, 5, 5, 10, 5, 20, 5, 10, 5, 5, 10, 10, 20, 5, 5, 20, 10, 5, 20, 5, 10, 10, 10, 5, 20, 20, 20, 5, 20, 10, 5, 10, 20, 10, 5, 20, 5, 5, 5, 10, 5, 5, 20, 20, 10, 10, 20, 10, 5, 10, 10, 10, 20, 5, 20, 10, 5]) == False\nassert solution.lemonadeChange([10, 5, 5, 20, 10, 20, 20, 20, 20, 20, 5, 20, 5, 20, 10, 20, 10, 5, 5, 20, 5, 20, 20, 20, 10, 20, 20, 5, 10, 10, 20, 10, 10, 20, 5, 5, 20, 10, 5, 20, 20, 20, 10, 10, 5, 20, 10, 10, 5, 5, 5, 20, 10, 20, 20, 5, 5, 20, 5]) == False\nassert solution.lemonadeChange([20, 10, 5, 5, 5, 10, 10, 10, 10, 20, 5, 5, 10, 10, 5, 5, 20, 10, 20, 5, 10, 20, 10, 10, 20, 5, 20, 5, 20, 10, 20, 5, 5, 20, 10, 5, 5, 10, 20, 20, 5]) == False\nassert solution.lemonadeChange([20, 5, 10, 5, 5, 20, 20, 10, 10, 5, 10, 20, 20, 20, 10, 5, 5, 5, 5, 20, 5, 10, 20, 20, 5, 10, 10, 5, 20, 20, 20, 20, 5, 10, 5, 5, 20, 10, 5, 5, 10, 20, 10, 5, 10, 10, 10, 10]) == False\nassert solution.lemonadeChange([10]) == False\nassert solution.lemonadeChange([20, 20, 5, 10, 10, 20, 20, 20, 5, 20, 10, 10, 20, 5, 10, 20, 10, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 10, 20, 20, 5, 10, 20, 10, 20, 20, 20, 5, 20, 5, 20, 20, 5, 10, 20, 10, 20, 5, 5, 10, 5, 10, 10, 20, 20, 5, 10, 10, 10, 10, 20, 10, 20, 20, 5, 10, 10, 20, 10, 5, 5, 20, 10, 10, 20, 5, 20, 5, 5, 10, 20, 20, 20, 5, 10, 20, 20, 20, 10, 10, 20, 20, 10, 5, 10, 5]) == False\nassert solution.lemonadeChange([5, 10, 5, 20, 20, 5, 10, 20, 20, 5, 5, 10, 5, 5, 20, 20, 20, 10, 5, 5, 10, 5, 20, 5, 20, 10, 20, 20, 5, 5, 5, 5, 10, 20, 10, 5, 5, 5, 10, 10, 10, 20, 10, 20, 10, 20, 20, 10, 20, 5, 20, 20, 10, 20, 20, 5, 20, 5, 10, 10, 20, 5, 5, 20]) == False\nassert solution.lemonadeChange([20, 10, 10, 5, 10, 20, 5, 20, 20, 5, 5, 5, 5, 10, 20, 20, 10, 5, 5, 5, 5, 10, 5, 10, 5, 10, 20, 20, 10, 5, 20, 20, 5, 5, 10, 10, 20, 10, 10, 10, 20]) == False\nassert solution.lemonadeChange([20, 5, 20, 20, 20, 20, 10, 10, 5, 10, 5, 5, 10, 20, 5, 20, 5, 10, 20, 5, 10, 10, 10, 10, 10, 10, 5, 5, 20, 20, 20, 5, 20, 20, 5, 10, 10, 5, 20, 10, 10, 5, 10, 10, 5, 10, 20, 5, 10, 5, 10, 10, 5, 20, 20, 10, 20, 20, 5, 20, 5, 5, 20, 10, 10, 5, 5, 5, 10, 10, 5, 10, 10, 20, 20, 10, 5, 5, 5, 20, 5, 20, 10, 5, 5, 10, 10, 20, 5, 20, 20, 10, 20, 20]) == False\nassert solution.lemonadeChange([5, 20, 10, 20, 10, 5, 20, 10, 10, 5, 10, 5, 10, 20, 5, 10, 20, 10, 10, 10, 5, 20, 5, 10, 20, 10, 10, 10, 5, 10, 10, 20, 5, 20, 20, 10, 5, 10, 10, 10, 20, 10, 20, 5, 20, 10, 20, 10, 20, 20, 10, 10, 20, 10, 5, 20, 5, 10, 20]) == False\nassert solution.lemonadeChange([20, 20, 5, 20, 5, 20, 10, 10, 20, 5, 20, 5, 20, 10, 20, 20, 20, 20, 20, 10, 10, 20, 20, 5, 10, 20, 5, 10, 10, 10, 10, 5, 20, 20, 20, 20, 10, 5, 5, 5, 20, 20, 5, 10, 5, 5, 20, 10, 5, 20, 10, 10, 5, 10, 20, 5, 5, 10, 10, 5, 5, 5, 5, 5, 20, 10, 10]) == False\nassert solution.lemonadeChange([10, 5, 20, 20, 5, 5, 5, 20, 20, 10, 10, 10, 20, 10, 10, 10, 10, 5, 20]) == False\nassert solution.lemonadeChange([5, 10, 20, 10, 5, 20, 5, 20, 5, 20]) == False\nassert solution.lemonadeChange([10, 10, 20, 20, 10, 5, 20, 5, 20, 5, 5, 20, 10, 10]) == False\nassert solution.lemonadeChange([5, 10, 5, 20, 5, 20, 5, 10, 20, 20, 20, 5, 20, 5, 5, 20, 5, 20, 5, 5, 5, 10, 5, 5, 5, 20, 20, 20, 5, 10, 5, 5, 20, 20, 10, 5, 10, 10, 10, 20, 5, 10, 20, 10, 10, 5, 10, 10, 5, 10, 20, 10, 5, 10, 10, 10, 5, 10, 10]) == False\nassert solution.lemonadeChange([20, 5, 20, 20, 10, 20, 10, 20, 5, 20, 5, 10, 10, 10, 20, 10, 5, 5, 10]) == False\nassert solution.lemonadeChange([10, 20, 20, 20, 20, 10, 10, 20, 5, 10, 5, 10, 5, 5, 20, 5, 20, 10, 5, 10, 20, 10, 10, 5, 20, 20, 20, 10, 10, 20, 20, 5, 10, 10, 20, 10, 10, 20, 5, 20, 10, 10, 20, 5, 10, 20, 20, 5, 20, 10, 5, 5, 10, 10, 10, 10, 20, 10, 5, 20, 20, 5, 5, 10, 10, 10, 10, 10, 5, 5, 20, 20, 5, 10, 10, 20, 5, 5, 20, 20, 20, 5, 5, 10, 20, 10, 10, 20, 5, 10, 5, 5, 10, 10, 20, 20, 10, 10, 10, 20]) == False\nassert solution.lemonadeChange([5, 5, 10, 5, 5, 20, 5, 20, 20, 20, 20, 10, 20, 5, 5, 10, 10, 20, 10, 10, 5, 20, 5, 10, 20, 5, 10, 20, 20, 10, 10, 20, 5, 20, 5, 5, 5, 10, 20, 10, 10, 5, 10, 10, 10, 20, 10, 20, 10, 10, 20, 10, 20]) == False\nassert solution.lemonadeChange([20, 5, 5, 20, 10, 5, 20, 5, 20, 20, 20, 20, 10, 5, 20, 20, 20, 20, 5, 5, 5, 5, 20, 10, 5, 5, 5, 10, 20, 10, 20, 10, 5, 10, 20, 20, 20, 10, 5, 20, 10, 10, 10, 10, 10, 20, 20, 20, 5, 5, 5, 20, 5, 20, 10, 20, 20, 5, 20, 20, 10, 5, 10, 5, 5, 5, 10, 20, 10, 5, 10, 20, 20, 10, 5, 20, 20, 20, 20, 5, 5, 20]) == False\nassert solution.lemonadeChange([20, 5, 20, 10, 10, 10, 20, 5, 5, 10, 5, 10, 10, 20, 5, 10, 10, 20, 10, 5, 10, 10, 20, 20, 10, 10, 10, 20, 20, 20, 5, 20, 20, 10, 5, 20, 20, 10, 20, 10, 10, 10, 10, 5, 10, 5, 5, 5, 5, 20, 10, 10, 10, 5, 20, 20, 20, 20, 20]) == False\nassert solution.lemonadeChange([5, 5, 5, 10, 5, 20, 5, 10, 5, 5, 20, 20, 10, 5, 5, 10, 5, 5, 20, 5, 5, 20, 10, 20, 5, 10, 20, 20, 20, 10, 10, 20, 10, 10, 20, 10, 20, 10, 5, 20, 20, 5, 10, 5, 5, 10, 10, 20, 10, 10, 10, 10, 20, 20, 5, 10, 5, 10, 10, 10, 10, 10, 20, 20, 20, 20, 10, 5, 10, 5, 10, 20]) == False\nassert solution.lemonadeChange([20, 10, 10, 20, 10, 5, 20, 10, 10, 10, 10, 20, 20, 20, 10, 20, 10, 20, 5, 5, 10, 5, 10, 20, 10, 10, 20, 10, 10, 10, 5, 20, 20, 5, 10, 20, 5, 5, 20, 10, 5, 10, 5, 5, 20, 5, 5, 10, 20, 5, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 5, 20, 20, 5, 5, 10, 5, 20, 5, 20, 10, 20]) == False\nassert solution.lemonadeChange([5, 5, 10, 10, 10, 20, 10, 10, 10, 20, 5, 5, 20, 10, 5, 10, 5, 10, 20, 10, 5, 5, 10, 5, 20, 5, 5, 20, 5, 5, 20, 20, 20, 20, 5, 5, 20, 10, 5, 20, 20, 20, 10, 20, 20, 20, 5, 20, 10, 5, 5, 5, 10, 20, 10, 10, 10, 20, 5, 5, 5, 20, 5, 10, 20, 20, 20, 5, 10, 10, 20, 10, 20, 20, 10, 20, 20, 10, 5, 10, 5, 10, 20, 5, 10, 10, 20, 20, 10]) == False\nassert solution.lemonadeChange([5, 20, 10, 5, 20, 20, 5, 10, 5, 10, 5, 20, 5, 20, 20, 20, 5, 5, 10, 10, 5, 20, 20, 20, 5, 5]) == False\nassert solution.lemonadeChange([10, 20, 10, 10, 5, 20, 10, 10, 20, 10, 5, 20, 5, 20, 10, 10]) == False\nassert solution.lemonadeChange([20, 5, 5, 20, 20, 10, 5, 10, 10, 5, 10, 20, 10, 20, 5, 10, 10, 10, 20, 20, 5, 20, 20, 10, 10, 5, 10, 5, 5, 20, 20, 5, 10, 20, 20, 20, 20, 5, 5, 5, 5, 10, 20, 5, 20, 10, 20, 20, 5, 10, 20, 5]) == False\nassert solution.lemonadeChange([10, 10, 10, 5, 10, 5, 20, 20, 5, 20, 5, 5, 20, 5, 10, 5, 5, 20, 10, 10, 5, 20, 20, 10, 5, 20, 5, 10, 20, 5, 10, 5, 10, 10, 5, 5, 20, 10, 20, 5, 5, 20, 20, 20, 10, 20, 5, 20, 20, 10, 10, 5, 20, 10]) == False\nassert solution.lemonadeChange([20, 20, 10, 20, 10, 20, 5, 5, 10, 10, 20, 5, 5, 5, 5, 20, 20, 5, 5, 10, 5, 5, 20, 10, 10, 10, 10, 20, 10, 20, 20, 20, 20, 10, 10, 10, 5, 10, 5, 5, 10, 5, 10, 20, 5, 20, 5, 5, 5, 10, 5, 20, 5, 10, 5, 5, 5, 20, 5, 10]) == False\nassert solution.lemonadeChange([5, 20, 20, 20, 5, 5, 5, 20, 5, 5, 5, 10, 20, 20, 20, 10, 5, 10, 20, 10, 10, 20, 10, 20, 20, 20, 5, 10, 5, 20, 10, 10, 10, 20, 5, 10, 20, 10, 5, 10, 20, 20, 5, 10, 10, 20, 5, 20, 5, 20, 10, 5, 5, 10, 20, 10, 20, 20, 20, 10]) == False\nassert solution.lemonadeChange([5, 20, 5, 10, 10, 5, 20, 20, 20, 10, 20, 20, 5, 10, 10, 5, 10, 20, 20, 20, 10, 5, 10, 10, 20, 5, 10, 20, 5, 10, 5, 10, 20, 10, 5, 5]) == False\nassert solution.lemonadeChange([10, 20, 10, 5, 10, 10, 5, 20, 5, 10, 10, 10, 20, 20, 5, 5, 10, 20, 10, 5, 10, 10, 10, 20, 10, 5, 20, 10, 5, 5, 10, 5, 20, 10, 20, 20, 5, 5, 5, 20]) == False\nassert solution.lemonadeChange([20, 10, 5, 10, 10, 20, 20, 10, 10, 10, 5, 10, 5, 20, 10, 5, 10, 10, 10, 5, 20, 10, 5]) == False\nassert solution.lemonadeChange([5, 20, 5, 5, 5, 20, 10, 20, 20, 10, 10, 10, 20, 5, 5, 20, 20, 5, 5, 5, 10, 10, 20, 5, 10, 10, 20, 10, 10, 20, 20, 10, 10, 10, 5, 20, 10, 5, 10, 5, 5, 10, 20, 5, 20, 10, 10, 5, 5, 20, 5, 5, 10, 10, 10, 5, 10, 10, 20, 10, 10, 5, 5, 5, 10, 10, 20, 20, 20, 10, 10, 20, 10, 5, 20, 5, 20, 20, 20, 5, 10, 10, 5, 5, 5, 5, 10, 10, 20, 5, 20, 5, 20, 10, 20, 5, 5, 10, 5]) == False\nassert solution.lemonadeChange([20, 10, 10, 20, 20, 20, 10, 5, 20, 10, 20, 10, 10, 10, 10, 5, 20, 5, 5, 10, 10, 5, 5, 10, 5, 10, 20, 20, 10, 20, 10, 20, 5, 20, 20, 20, 10, 20, 20, 5, 20, 10, 5, 20, 20, 10, 10, 20, 10, 20, 20, 20, 10, 5, 20, 10, 5, 10, 10, 10, 20, 10, 20, 20, 5, 5, 20, 5, 5, 20, 5]) == False\nassert solution.lemonadeChange([20, 20, 5, 20, 10, 10, 5, 5, 5, 5, 20, 20, 20, 10, 20, 20, 5, 5, 20, 5, 5, 5, 5, 10, 10, 10, 5, 5, 20, 5, 5, 5, 5, 20, 20, 5, 10, 20, 10, 20, 5, 20, 20, 20, 5, 5, 10, 20, 10, 5, 10, 10, 10, 20, 10, 10, 5, 20, 20, 20]) == False\nassert solution.lemonadeChange([5, 5, 10, 20, 20, 10, 5, 10, 10, 10, 10, 5, 5, 20, 5, 5, 5, 10, 20, 10, 5, 20, 5, 5, 10, 10, 20, 5, 10, 10, 10, 10, 20, 10, 10, 20, 10, 10, 20, 5, 5, 10, 10, 10, 20, 10, 5, 20, 20, 20, 5, 20, 5, 20, 20, 10, 5, 10]) == False\nassert solution.lemonadeChange([5, 5, 5, 20, 20, 5, 20, 10, 5, 5, 20, 5, 5, 10, 20, 20, 20, 5, 20, 20, 10, 5, 20, 10, 20, 5, 5, 10, 5, 10, 10, 5, 20, 5, 10, 20, 10, 20, 10, 10, 10, 5, 10, 5, 20, 5, 5, 20, 5, 10, 5, 5]) == False\nassert solution.lemonadeChange([5, 20, 20, 10, 5, 5, 10, 5, 10, 20, 5, 10, 10, 20, 20, 20, 20, 20, 5, 10, 5, 10, 10, 5, 5, 20, 10, 5, 5, 10, 10, 5, 10, 20, 5, 10]) == False\nassert solution.lemonadeChange([10, 20, 20, 20, 5, 20, 20, 20, 20, 20, 20, 20, 5, 20, 5, 10, 10, 5, 5, 5, 5, 20, 5, 5, 10, 10, 5, 5, 5, 20, 20, 10, 20, 20, 10, 10, 5, 10, 5, 20, 20, 5, 20, 20, 10, 5, 5, 5]) == False\nassert solution.lemonadeChange([5, 10, 5, 20, 5, 5, 10, 10, 5, 10, 20, 10, 10, 10, 5, 10, 5, 10, 20, 20, 5, 20, 10, 5, 20, 10, 20, 10, 10, 20, 5, 5, 10, 5, 10, 5, 20, 5, 5, 10, 20, 5, 10, 20, 5, 5, 5, 10, 10, 10]) == False\nassert solution.lemonadeChange([5, 5, 20, 20, 5, 20, 10, 5, 5, 20, 10, 5, 20, 5, 20, 5, 10]) == False\nassert solution.lemonadeChange([20, 10, 5, 5, 20, 5, 10, 10, 20, 5, 10, 10, 10, 5, 10, 5, 20, 10, 20, 20, 5, 5, 5, 5, 20, 10, 5, 5, 20, 20, 20, 20, 20, 5, 5, 20, 20, 10, 20, 5, 10, 20, 5, 20, 10, 5, 10, 10, 5, 10, 20, 10, 5, 5, 20, 10, 10, 5, 20, 20, 10, 20, 5, 20, 20, 20, 5]) == False\nassert solution.lemonadeChange([10, 5, 5, 10, 20, 20, 10, 5, 5, 5, 10, 10, 10, 10, 20, 10, 10, 10, 5, 5, 10, 5, 10, 10, 10, 5, 10, 20, 10, 10, 5, 20, 5, 5, 5, 20, 5, 20, 20, 10, 10, 5, 10, 20, 20, 5, 20, 5, 20, 20, 10, 10, 10, 5, 10, 20, 5, 10, 20, 20, 20, 10, 20, 10]) == False\nassert solution.lemonadeChange([20, 10, 20, 20, 20, 5, 5, 5, 5, 10, 5, 10, 20, 5, 5, 5, 10, 5, 5, 5, 5, 20, 20, 5, 20, 10, 10, 5, 10, 5, 20, 5, 5, 10, 10, 20, 20]) == False\nassert solution.lemonadeChange([5, 10, 10, 20, 5, 5, 10, 10, 20, 5, 20, 10, 10, 10, 5, 5, 10, 20, 10, 5, 20, 20, 10, 20, 5, 5, 5, 5, 20, 20, 5, 20, 10, 20, 10, 10, 5, 5, 20, 20, 20, 10, 10, 5, 20, 20, 5, 10, 10, 10, 5, 20, 10, 20, 5, 5, 5, 5, 5, 10, 10, 5, 5, 20]) == False\nassert solution.lemonadeChange([20, 10, 20, 20, 5, 20, 10, 10, 10, 10, 20, 10, 10, 10, 5, 5, 10, 5, 20, 5, 10, 20, 10, 10, 20, 10, 20, 10, 5, 20, 5, 20, 10, 10]) == False\nassert solution.lemonadeChange([20, 5, 20, 20, 10, 5, 5, 5, 10, 20, 5, 20, 10, 20, 5, 5, 5, 10, 20, 5, 10, 5, 10, 5, 5, 5, 5, 10, 10, 5, 20, 20, 5, 10, 10, 5, 10, 5, 20, 5, 5, 10, 10, 20, 5, 10, 5, 10, 20, 10, 10, 10, 5, 10, 5, 20, 10, 5, 20, 5, 5, 20]) == False\nassert solution.lemonadeChange([10, 10, 5, 5, 5, 5, 10, 5]) == False\nassert solution.lemonadeChange([10, 20, 20, 20, 5, 20, 10, 10, 5, 5, 5, 10, 5, 5, 10, 10, 10, 10, 20, 5, 20, 5, 5, 10, 5, 5, 5, 20, 10, 5, 10, 10, 5, 5, 5, 20]) == False\nassert solution.lemonadeChange([5, 5, 5, 5, 10, 5, 5, 10, 20, 10, 10, 10, 20, 20, 5, 20, 10, 5, 5, 5, 20, 5, 5, 5, 10, 20, 5, 20, 20, 5, 10, 20, 20, 10, 10, 10, 10, 5, 10, 5, 10, 10, 20, 5, 10, 20, 10, 10, 5, 5, 10, 10, 10]) == False\nassert solution.lemonadeChange([10, 5, 10, 5, 10, 10, 10, 5, 5, 5, 20, 5, 10, 20, 5, 5, 10, 20, 20, 10, 20, 10, 5, 10, 20, 5, 5, 10, 10, 20, 10, 5, 5, 10, 20, 10, 10, 5, 10]) == False\nassert solution.lemonadeChange([10, 5, 5, 5, 10, 5, 10, 20, 20, 10, 5, 10, 10, 20, 5, 20, 5, 5, 20, 10, 5, 20, 10, 5, 5, 5, 10, 20, 5, 5, 5, 20, 10, 20, 5]) == False\nassert solution.lemonadeChange([5, 5, 10, 5, 10, 10, 10, 5, 20, 5]) == False\nassert solution.lemonadeChange([20, 10, 10, 5, 10, 20, 5, 10, 5, 10, 10, 20, 5, 10, 5, 10, 5, 10, 20, 20, 20, 10, 5, 5, 20, 5, 10, 5, 10, 10, 10, 20, 5, 20, 10, 5, 5, 10, 10, 20, 10, 5, 20, 10, 10, 10, 5, 5, 5, 10, 10, 10, 20, 5, 20, 20, 5, 5, 5, 20, 20, 5, 20, 10, 20, 10, 5, 10, 20, 5, 10, 20, 20, 10, 20, 5, 10, 5, 20, 20, 10, 10]) == False\nassert solution.lemonadeChange([5, 5, 20, 10, 10, 10, 20, 20, 10, 20, 5, 10, 10, 5, 5, 5, 5, 5, 20, 20, 5, 20, 20, 5, 20, 20, 20, 10, 20, 5, 10, 10, 10, 5, 20, 5, 20, 5, 5, 20, 20, 10, 10, 10, 20, 10, 5, 5, 20, 5, 10, 10, 20, 20, 5, 5, 10, 20, 5, 5, 20, 10, 20, 5, 10, 20, 5, 10]) == False\nassert solution.lemonadeChange([20, 5, 5, 20, 10, 10, 5, 20, 5, 20, 10, 20, 10, 10, 5, 10, 10, 5, 10, 20, 10, 10, 20, 5, 5, 20, 20, 10, 20, 10, 5, 5, 5, 20, 20, 5, 20, 10, 20, 5, 5, 20, 5, 20, 20, 20, 5, 20, 5, 5, 5, 10, 10, 20, 20, 10, 20, 5, 20, 10, 5, 5, 5, 10, 10, 5, 10, 20, 20, 10, 20, 20, 10, 10, 5, 5, 10, 5, 20, 5, 20, 20, 5, 5, 10, 20, 20, 10, 20, 10, 10]) == False\nassert solution.lemonadeChange([10, 10, 10, 5]) == False\nassert solution.lemonadeChange([10, 10, 10, 10, 5, 10, 20, 20, 10, 20, 10, 10, 5, 5, 5, 5, 10, 10, 5, 20, 20, 20, 20, 20, 5, 20, 20, 5, 5, 20, 20, 20, 5, 10, 20, 20, 10, 5, 10, 10, 20, 10, 5, 10, 5, 10, 5, 5, 5, 5, 10, 5, 5, 20, 10, 10, 10, 20, 5, 20, 5, 5, 5, 10, 20, 10, 5, 10, 10, 10, 10, 5, 20, 10, 5, 5, 10, 10, 5, 5, 20, 10, 5, 10, 20, 20, 10, 10, 10, 10, 20, 10, 20, 10, 5, 10, 10]) == False\nassert solution.lemonadeChange([10, 10, 20, 20, 20, 10, 20]) == False\nassert solution.lemonadeChange([20, 20, 20, 5, 20, 10, 5, 10, 20, 10, 10, 20, 5, 5, 10, 10, 5, 20, 20, 5, 5, 20, 20, 10, 5, 10, 20, 5, 10, 20]) == False\nassert solution.lemonadeChange([20, 10, 10, 20, 10, 5, 10, 5, 10, 10, 20, 5, 10, 10, 5, 5, 20, 10, 5, 5, 20, 20, 20, 20, 20, 10, 20, 20, 20, 10, 20, 5, 20, 5, 10, 5, 20, 10, 10, 20, 5, 20, 10, 5, 20, 10, 20, 10, 10, 20, 20, 5, 5, 5, 5, 20, 10, 20, 5, 20, 5, 10, 20, 20, 20, 5, 5, 20, 5, 10, 20, 20, 10, 10, 5, 20, 5, 20, 20, 20, 10, 10, 10, 5, 10, 5, 10, 10, 5, 20, 5, 10, 20, 20, 20, 10, 20, 20, 20]) == False\nassert solution.lemonadeChange([5, 10, 10, 10, 5, 5, 20, 20, 5, 10, 10, 5, 20, 10, 5, 5, 10, 20, 5, 5, 20]) == False\nassert solution.lemonadeChange([20, 20, 20, 5, 20, 5, 5, 20, 5, 5, 10, 10, 5, 20, 10, 20, 5, 5, 5, 20, 5, 5, 5, 10, 10, 20, 20, 10, 10, 10, 20, 20, 20, 10, 20, 10, 5, 10, 10, 10, 5, 10, 10, 10, 5, 5, 5, 5, 5, 10, 20, 20, 20, 10, 5, 10, 5, 20, 20, 5, 5, 5, 20, 5, 20, 5, 5, 5, 20, 5, 5, 10, 20, 10, 10, 5]) == False\nassert solution.lemonadeChange([5, 5, 10, 5, 20, 5, 10, 20, 20, 10, 5, 5, 20, 20, 10, 5, 20, 20, 10, 10]) == False\nassert solution.lemonadeChange([10, 5, 20, 5, 20, 20, 10, 5, 20, 10, 10, 20, 20, 20, 20, 5, 10, 20, 10, 10, 20, 20, 10, 10, 10, 5, 5, 10, 5, 10, 10, 10, 20, 5, 5, 20, 5, 10, 10, 20, 20, 10, 20, 20, 5, 5, 10, 20, 10, 20, 5, 20, 20, 20]) == False\nassert solution.lemonadeChange([10, 10, 5, 20, 10, 5, 20, 5, 5, 10, 10, 5, 5, 20, 20, 10, 5, 5, 20, 5, 20, 5, 5, 5, 5, 20, 20, 10, 10, 20, 10, 20, 10, 5, 20, 10, 5, 10, 20, 10, 20, 10, 5, 5]) == False\nassert solution.lemonadeChange([20, 20, 20, 10, 20, 20, 10, 20, 5, 10, 10, 10, 10, 20, 5, 10, 10, 5, 10, 20, 5, 5, 5, 10, 20, 10, 20, 5, 10, 20, 5, 5, 5, 5, 5, 5, 5, 10, 10, 10, 10]) == False\nassert solution.lemonadeChange([10, 10, 20, 10, 20, 5, 10, 10, 5, 20, 20]) == False\nassert solution.lemonadeChange([10, 10, 5, 5, 5, 10, 5, 20, 5, 20, 5, 10, 10, 20, 20, 10, 20, 10, 10, 20, 10, 5, 10, 20, 10, 20, 10, 20, 20, 5, 20, 10, 10, 20, 20, 10, 20, 5, 20, 10, 5, 10, 10, 20, 10, 10, 20, 5]) == False\nassert solution.lemonadeChange([5, 10, 5, 10, 20, 10, 5, 20, 5, 20, 20, 10, 20, 20, 5, 20, 5, 20, 5, 20, 20, 20, 10, 10, 20, 5, 20, 20, 5, 5, 20, 10, 10, 20, 20, 20, 5, 5, 10, 10, 20, 20, 10, 5, 20, 5, 5, 10, 20, 10, 10, 5, 20, 10, 5, 10, 20, 10, 10, 5, 20, 10, 10, 10, 10, 20, 20, 20, 10, 5, 20, 10, 5, 20, 5, 5, 5]) == False\nassert solution.lemonadeChange([5, 5, 10, 10, 5, 5, 5, 20, 10, 5, 10, 20, 10, 20, 5]) == False\nassert solution.lemonadeChange([20, 10, 20, 20, 10, 10, 5, 5, 5, 10]) == False\nassert solution.lemonadeChange([5, 5, 20, 5, 10, 20, 20, 5, 5, 20, 20, 20, 20, 10, 10, 5, 10, 20, 20, 20, 20, 20, 10, 20, 5, 5, 20, 10, 5, 10, 5, 10, 5, 20, 5, 5, 20, 10, 10, 20, 5, 20, 10, 5, 5, 10, 10, 20, 5, 5, 5, 10, 10, 20, 10, 5, 10, 10, 20, 20, 20, 10]) == False\nassert solution.lemonadeChange([20, 5, 5, 10, 20, 5, 5, 20, 20, 10, 20, 10, 5, 20, 20, 20, 10, 10, 10, 5, 10, 10, 5, 10, 5, 5, 10, 5, 20, 5, 20, 20, 20, 10, 20, 10, 5, 5, 10, 20, 10, 5, 20, 20, 20, 10, 20, 20, 5, 5, 5, 10, 10, 5, 20, 5, 10, 5, 10, 10, 5, 10, 20, 20, 10, 5, 20, 5, 20, 5, 5, 10, 10, 5, 20, 20, 10, 5, 10]) == False\nassert solution.lemonadeChange([5, 10, 10, 10, 10, 5, 20, 5, 20, 5, 10, 20, 20]) == False\nassert solution.lemonadeChange([20, 5, 5, 20, 20, 10, 10, 20, 20, 20, 20, 5, 10, 5, 10, 10, 20, 5, 10, 20, 5, 5, 5, 5, 20, 10, 20, 20]) == False\nassert solution.lemonadeChange([20, 20, 10, 5, 10, 5, 20, 5, 10, 20, 5, 20, 20, 10, 10, 10, 10, 20, 20, 20, 5, 10, 5, 20, 10, 5, 20, 20, 10, 20, 10, 5, 5, 20, 10, 20, 10, 10, 20]) == False\nassert solution.lemonadeChange([5, 20, 10, 5, 20, 10, 10, 10, 5, 10, 5, 5, 5, 10, 5, 5, 10, 5, 10, 20, 10, 10, 5, 10, 20, 20, 5, 5, 5, 10, 20, 10, 5, 5, 20, 5, 5, 20, 10, 5, 10, 20, 10, 20, 10, 10, 10, 5, 20, 5, 5, 5, 20, 20, 10, 5, 5, 20, 5, 5, 5, 10, 5, 10, 5, 5, 5, 5, 5, 10, 20, 20, 20, 5, 20, 20, 10, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 5, 20, 20, 10, 10]) == False\nassert solution.lemonadeChange([20, 5, 20, 10, 10, 5, 20, 20, 10, 5, 5, 5, 10, 10, 10, 5, 20, 20, 10, 10, 10, 10, 10, 20, 20, 5, 20, 10, 10, 10]) == False\nassert solution.lemonadeChange([10, 10, 10, 20, 5, 20, 10, 20, 20, 20, 20, 20, 20, 10, 5, 20, 10, 10, 5, 5, 20, 5, 20, 5, 10, 10, 5, 5, 5, 20]) == False\nassert solution.lemonadeChange([5, 20, 10, 10, 5, 5, 20, 10, 10, 10, 20, 5, 5, 10, 5, 20, 5, 5, 5, 20, 5, 10, 5, 5, 20, 5, 10, 10, 10, 10, 10, 5, 10, 10, 20, 20, 10]) == False",
  "inefficient_solution": "class Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        total_five = [0] * 1000000\n        total_ten = [0] * 1000000\n        for i, v in enumerate(bills):\n            if v == 5:\n                total_five[i] = 1\n            elif v == 10:\n                total_ten[i] = 1\n                if total_five[i-1] == 1:\n                    total_five[i-1] = 0\n                elif total_five[i-2] == 1:\n                    total_five[i-2] = 0\n            else:\n                if total_ten[i-1] == 1:\n                    total_ten[i-1] = 0\n                    if total_five[i-1] == 1:\n                        total_five[i-1] = 0\n                    elif total_five[i-2] == 1:\n                        total_five[i-2] = 0\n                else:\n                    for j in range(i-1, -1, -1):\n                        if total_five[j] == 1:\n                            total_five[j] = 0\n                            break\n                if total_five[i-1] == 1:\n                    total_five[i-1] = 0\n                elif total_five[i-2] == 1:\n                    total_five[i-2] = 0\n                elif total_five[i-3] == 1:\n                    total_five[i-3] = 0\n                elif total_five[i-4] == 1:\n                    total_five[i-4] = 0\n                elif total_five[i-5] == 1:\n                    total_five[i-5] = 0\n                else:\n                    return False\n            if total_five[i] < 0:\n                return False\n        return True",
  "is_python": true
}