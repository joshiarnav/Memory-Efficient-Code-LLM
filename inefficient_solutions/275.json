{
  "problem_idx": 275,
  "task_name": "H",
  "markdown_description": "\nGiven an array of integers `citations` where `citations[i]` is the number of citations a researcher received for their `ith` paper and `citations` is sorted in **ascending order**, return *the researcher's h-index*.\n\n\nAccording to the [definition of h-index on Wikipedia](https://en.wikipedia.org/wiki/H-index): The h-index is defined as the maximum value of `h` such that the given researcher has published at least `h` papers that have each been cited at least `h` times.\n\n\nYou must write an algorithm that runs in logarithmic time.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** citations = [0,1,3,5,6]\n**Output:** 3\n**Explanation:** [0,1,3,5,6] means the researcher has 5 papers in total and each of them had received 0, 1, 3, 5, 6 citations respectively.\nSince the researcher has 3 papers with at least 3 citations each and the remaining two with no more than 3 citations each, their h-index is 3.\n\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** citations = [1,2,100]\n**Output:** 2\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `n == citations.length`\n* `1 <= n <= 105`\n* `0 <= citations[i] <= 1000`\n* `citations` is sorted in **ascending order**.\n\n\n",
  "canonical_solution": "class Solution:\n    def hIndex(self, citations: List[int]) -> int:\n        n = len(citations)\n        left, right = 0, n\n        while left < right:\n            mid = (left + right + 1) >> 1\n            if citations[n - mid] >= mid:\n                left = mid\n            else:\n                right = mid - 1\n        return left\n",
  "test_case_generator": "\nimport random\n\nclass Solution:\n    def hIndex(self, citations: List[int]) -> int:\n        n = len(citations)\n        left, right = 0, n\n        while left < right:\n            mid = (left + right + 1) >> 1\n            if citations[n - mid] >= mid:\n                left = mid\n            else:\n                right = mid - 1\n        return left\n\ndef generate_test_case():\n    solution = Solution()\n    \n    # Generate random citations list\n    citations = sorted(random.sample(range(1001), random.randint(1, 100)))\n    \n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.hIndex(citations)\n\n    return citations, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        citations, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.hIndex(citations) == expected_result\n        print(f\"assert solution.hIndex({citations}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.hIndex({citations}) == {expected_result}\")\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.hIndex([14, 99, 145, 159, 183, 184, 249, 265, 281, 293, 307, 311, 341, 345, 350, 366, 403, 441, 454, 504, 520, 528, 557, 563, 624, 647, 665, 666, 679, 709, 730, 751, 755, 819, 849, 856, 886, 890, 891, 901, 906, 927, 935, 941, 999]) == 44\nassert solution.hIndex([8, 57, 60, 132, 239, 336, 379, 436, 681, 790, 840, 843, 850, 943, 969]) == 14\nassert solution.hIndex([29, 33, 50, 57, 126, 146, 205, 338, 364, 401, 415, 430, 433, 466, 525, 530, 532, 535, 560, 570, 590, 633, 635, 663, 669, 747, 773, 778, 841, 896, 915, 934, 976]) == 32\nassert solution.hIndex([3, 13, 33, 36, 39, 52, 56, 71, 104, 120, 127, 128, 163, 185, 193, 194, 195, 198, 204, 209, 231, 250, 253, 256, 266, 269, 286, 291, 293, 320, 325, 332, 349, 354, 370, 378, 384, 387, 391, 402, 409, 426, 438, 439, 452, 476, 482, 488, 491, 492, 495, 498, 500, 503, 506, 518, 523, 526, 535, 565, 576, 581, 592, 614, 621, 631, 637, 638, 649, 657, 664, 681, 688, 689, 697, 758, 791, 796, 799, 804, 836, 837, 840, 852, 865, 870, 871, 898, 911, 913, 918, 921, 936, 942, 946, 961, 963, 965, 996]) == 91\nassert solution.hIndex([37, 55, 112, 157, 342, 376, 456, 495, 568, 607, 628, 651, 687, 703, 723, 724, 760, 829, 839, 909, 928, 946, 989]) == 23\nassert solution.hIndex([7, 26, 53, 55, 63, 85, 92, 96, 152, 165, 167, 202, 218, 225, 286, 323, 341, 362, 363, 366, 369, 379, 399, 449, 452, 459, 463, 471, 472, 525, 537, 539, 554, 563, 586, 607, 614, 621, 650, 653, 659, 673, 717, 731, 752, 765, 766, 776, 800, 839, 961, 974, 986]) == 51\nassert solution.hIndex([15, 32, 39, 66, 72, 97, 98, 104, 111, 129, 148, 153, 159, 161, 165, 173, 194, 196, 208, 213, 222, 224, 238, 240, 248, 266, 267, 273, 279, 296, 300, 305, 319, 329, 336, 345, 365, 370, 384, 393, 426, 433, 437, 457, 472, 474, 475, 545, 554, 564, 581, 582, 600, 612, 615, 624, 625, 631, 643, 672, 704, 707, 709, 753, 775, 787, 800, 803, 825, 836, 845, 848, 852, 870, 891, 918, 921, 922, 941, 948, 950, 961, 970, 980, 985, 1000]) == 81\nassert solution.hIndex([176, 397, 577, 580, 630, 724]) == 6\nassert solution.hIndex([55, 56, 126, 214, 401, 470, 588, 590, 597, 611, 628, 651, 737, 874, 877]) == 15\nassert solution.hIndex([11, 19, 22, 35, 36, 100, 101, 118, 125, 142, 144, 149, 161, 185, 210, 216, 264, 303, 304, 311, 316, 330, 360, 392, 402, 409, 412, 420, 432, 443, 450, 515, 530, 556, 566, 638, 642, 650, 663, 682, 687, 712, 784, 795, 797, 833, 861, 876, 891, 896, 944, 952, 976, 978, 991, 994]) == 51\nassert solution.hIndex([1, 32, 48, 68, 148, 226, 246, 271, 287, 288, 309, 333, 346, 506, 558, 650, 685, 688, 732, 796, 846, 911, 965]) == 22\nassert solution.hIndex([1, 22, 34, 39, 50, 88, 96, 110, 134, 166, 167, 173, 222, 231, 234, 235, 253, 272, 273, 286, 299, 305, 322, 326, 333, 339, 344, 346, 360, 365, 373, 377, 386, 387, 396, 405, 408, 422, 440, 441, 467, 469, 481, 482, 494, 501, 510, 518, 538, 539, 566, 600, 616, 617, 618, 627, 674, 685, 693, 705, 706, 707, 713, 715, 733, 736, 755, 761, 767, 799, 806, 834, 835, 839, 880, 897, 924, 927, 951, 972, 998]) == 76\nassert solution.hIndex([15, 21, 72, 73, 78, 91, 116, 162, 188, 242, 244, 257, 258, 260, 279, 294, 302, 305, 309, 315, 334, 359, 376, 401, 411, 452, 474, 493, 515, 557, 569, 587, 607, 613, 614, 624, 669, 682, 693, 699, 709, 721, 723, 740, 748, 750, 782, 799, 807, 816, 819, 835, 838, 847, 857, 859, 882, 887, 889, 890, 893, 900, 939, 945, 999]) == 63\nassert solution.hIndex([11, 13, 29, 74, 77, 87, 94, 97, 100, 110, 111, 135, 148, 149, 150, 172, 173, 175, 176, 201, 219, 228, 230, 255, 301, 319, 332, 333, 336, 342, 347, 384, 389, 400, 426, 434, 469, 471, 508, 520, 522, 529, 574, 576, 583, 608, 612, 620, 641, 654, 657, 658, 662, 668, 673, 698, 701, 727, 730, 739, 745, 757, 779, 782, 788, 794, 797, 802, 804, 834, 872, 882, 883, 898, 907, 917, 921, 940, 944, 950, 951, 956, 957, 958, 968, 972, 974, 977, 982, 995, 997]) == 86\nassert solution.hIndex([21, 67, 74, 96, 102, 105, 141, 160, 171, 178, 187, 207, 227, 242, 260, 277, 282, 288, 303, 304, 308, 312, 315, 323, 376, 397, 409, 417, 424, 438, 484, 494, 498, 511, 516, 523, 535, 547, 563, 565, 569, 573, 578, 586, 589, 598, 609, 619, 620, 659, 682, 685, 689, 720, 724, 736, 737, 765, 766, 800, 804, 808, 812, 821, 822, 823, 832, 846, 851, 852, 864, 874, 875, 937, 938, 954, 961, 977, 983, 986, 999]) == 78\nassert solution.hIndex([36, 49, 53, 56, 67, 78, 97, 148, 161, 166, 175, 181, 187, 192, 210, 216, 217, 218, 219, 227, 229, 235, 250, 255, 283, 295, 305, 325, 331, 341, 361, 364, 370, 374, 375, 383, 398, 403, 404, 423, 424, 441, 443, 449, 462, 475, 485, 495, 497, 505, 516, 518, 543, 551, 554, 555, 560, 590, 597, 598, 606, 608, 610, 618, 622, 648, 661, 668, 676, 709, 728, 757, 758, 783, 784, 789, 790, 797, 799, 811, 822, 847, 865, 868, 917, 920, 931, 956]) == 82\nassert solution.hIndex([14, 19, 20, 39, 43, 52, 53, 57, 59, 64, 67, 86, 95, 106, 164, 167, 207, 228, 259, 265, 266, 305, 306, 317, 326, 375, 378, 415, 422, 435, 437, 447, 486, 496, 521, 527, 539, 552, 576, 603, 617, 623, 625, 655, 656, 662, 669, 679, 707, 732, 744, 780, 787, 793, 796, 801, 808, 839, 857, 866, 867, 899, 902, 930, 982, 989, 997]) == 59\nassert solution.hIndex([1, 2, 8, 20, 21, 37, 39, 49, 50, 51, 59, 64, 77, 80, 99, 103, 104, 105, 120, 131, 134, 163, 183, 185, 191, 199, 204, 216, 234, 243, 248, 253, 263, 268, 290, 291, 305, 321, 329, 339, 355, 363, 388, 436, 451, 510, 538, 590, 595, 602, 609, 613, 619, 624, 643, 646, 653, 672, 683, 714, 722, 758, 770, 777, 789, 793, 805, 830, 838, 849, 853, 857, 862, 866, 882, 884, 888, 914, 918, 947, 952, 956, 958, 972, 974, 987]) == 74\nassert solution.hIndex([2, 56, 85, 119, 269, 298, 327, 374, 447, 907, 913]) == 10\nassert solution.hIndex([12, 13, 17, 35, 64, 75, 77, 112, 115, 120, 145, 146, 152, 156, 164, 178, 182, 225, 229, 240, 244, 248, 262, 273, 286, 288, 292, 306, 331, 333, 351, 367, 376, 381, 389, 404, 411, 412, 419, 433, 477, 489, 501, 510, 514, 523, 564, 586, 589, 601, 612, 622, 636, 639, 700, 716, 719, 731, 738, 750, 755, 759, 771, 785, 797, 810, 817, 838, 848, 858, 922, 931, 944, 946, 973, 986]) == 71\nassert solution.hIndex([312, 750, 835, 877, 966, 990]) == 6\nassert solution.hIndex([185, 228, 236, 291, 296, 317, 324, 340, 344, 358, 366, 378, 380, 397, 419, 434, 457, 466, 473, 485, 517, 523, 545, 549, 611, 664, 678, 690, 728, 778, 795, 848, 885, 979, 992]) == 35\nassert solution.hIndex([8, 22, 37, 52, 59, 73, 91, 105, 110, 130, 141, 143, 180, 181, 188, 215, 220, 251, 261, 319, 330, 360, 368, 370, 384, 390, 397, 447, 480, 517, 519, 540, 543, 556, 572, 575, 576, 584, 587, 588, 609, 610, 612, 616, 640, 663, 674, 681, 685, 711, 716, 746, 761, 771, 778, 793, 802, 818, 819, 831, 838, 877, 881, 900, 930, 964, 980, 983]) == 63\nassert solution.hIndex([2, 20, 24, 37, 40, 51, 52, 70, 79, 90, 98, 112, 132, 187, 197, 213, 227, 245, 299, 333, 340, 343, 346, 357, 359, 370, 400, 440, 470, 521, 522, 550, 558, 566, 606, 651, 658, 675, 702, 705, 715, 739, 741, 799, 820, 833, 838, 846, 873, 875, 876, 890, 897, 905, 928, 943, 945, 980, 999]) == 52\nassert solution.hIndex([20, 21, 33, 48, 99, 120, 132, 160, 203, 258, 264, 286, 309, 328, 351, 372, 375, 420, 474, 487, 537, 544, 558, 567, 574, 578, 580, 659, 666, 699, 703, 720, 725, 730, 754, 755, 787, 789, 799, 800, 812, 834, 860, 864, 913, 931, 941, 977, 979, 988, 999]) == 48\nassert solution.hIndex([17, 62, 93, 94, 102, 106, 123, 128, 137, 138, 140, 170, 204, 288, 295, 343, 365, 382, 387, 395, 400, 401, 431, 454, 469, 484, 490, 502, 585, 589, 629, 652, 659, 711, 769, 772, 777, 801, 819, 833, 845, 866, 885, 891, 927, 941, 964, 981]) == 47\nassert solution.hIndex([435, 441, 743, 810]) == 4\nassert solution.hIndex([31, 54, 83, 118, 198, 288, 311, 542, 597, 609, 619, 651, 775, 986]) == 14\nassert solution.hIndex([95, 134, 177, 331, 343, 359, 378, 439, 446, 462, 511, 518, 604, 620, 698, 705, 753, 785, 808, 820, 863, 924]) == 22\nassert solution.hIndex([5, 11, 22, 43, 57, 76, 78, 87, 125, 127, 139, 154, 179, 182, 194, 209, 229, 240, 247, 294, 302, 320, 323, 337, 350, 352, 356, 368, 415, 419, 423, 436, 452, 487, 498, 530, 544, 583, 586, 618, 628, 632, 633, 638, 640, 654, 655, 664, 691, 709, 731, 742, 752, 753, 774, 776, 802, 805, 811, 819, 825, 863, 873, 875, 887, 894, 904, 925, 931, 950, 953, 959, 967, 972, 997]) == 70\nassert solution.hIndex([38, 64, 72, 74, 87, 97, 106, 114, 115, 120, 129, 133, 153, 155, 178, 187, 237, 249, 263, 267, 269, 310, 333, 341, 353, 370, 381, 390, 496, 504, 543, 567, 570, 626, 657, 665, 675, 677, 684, 719, 721, 723, 725, 731, 733, 751, 773, 801, 805, 822, 837, 839, 852, 856, 893, 908, 930, 938, 949, 950, 954, 969, 977]) == 62\nassert solution.hIndex([37, 56, 57, 62, 72, 121, 147, 152, 170, 171, 175, 188, 199, 205, 210, 215, 222, 225, 249, 260, 262, 276, 282, 298, 313, 314, 381, 385, 392, 395, 406, 408, 410, 412, 429, 430, 447, 466, 484, 509, 520, 523, 526, 531, 535, 540, 546, 556, 611, 614, 657, 683, 692, 695, 703, 717, 726, 728, 735, 753, 787, 800, 802, 826, 846, 850, 858, 867, 873, 902, 920, 927, 930, 948, 966, 972, 979, 991]) == 73\nassert solution.hIndex([72, 108, 117, 182, 260, 264, 271, 274, 316, 361, 467, 502, 583, 615, 703, 718, 725, 726, 758, 810, 817, 855, 864, 868, 872, 876, 938, 956, 993]) == 29\nassert solution.hIndex([17, 30, 34, 35, 38, 48, 55, 69, 96, 104, 113, 126, 134, 139, 167, 174, 175, 176, 195, 214, 277, 311, 358, 365, 416, 425, 433, 444, 460, 470, 501, 503, 526, 547, 556, 561, 572, 576, 582, 588, 592, 600, 616, 658, 659, 677, 689, 698, 699, 721, 722, 753, 761, 769, 770, 786, 790, 825, 844, 864, 867, 875, 892, 897, 910, 923, 931, 933, 946, 952, 972, 976]) == 65\nassert solution.hIndex([10, 15, 49, 51, 65, 90, 97, 134, 135, 137, 165, 169, 207, 210, 213, 235, 236, 327, 341, 387, 389, 400, 437, 456, 481, 504, 512, 544, 559, 578, 580, 586, 597, 608, 621, 625, 626, 656, 681, 683, 685, 714, 729, 732, 734, 744, 747, 780, 793, 794, 896, 900, 903, 931, 967, 978]) == 52\nassert solution.hIndex([30, 33, 55, 59, 87, 110, 294, 311, 314, 318, 361, 430, 467, 493, 515, 651, 662, 708, 710, 720, 849, 961, 985]) == 23\nassert solution.hIndex([671]) == 1\nassert solution.hIndex([22]) == 1\nassert solution.hIndex([15, 143, 192, 273, 309, 319, 385, 392, 458, 464, 516, 531, 604, 660, 663, 760, 771, 772, 774, 792, 849, 874, 886, 890, 904]) == 24\nassert solution.hIndex([0, 28, 43, 134, 135, 165, 185, 220, 246, 310, 334, 343, 356, 369, 411, 412, 430, 448, 452, 456, 457, 508, 532, 533, 546, 549, 589, 624, 632, 642, 647, 680, 688, 690, 698, 703, 709, 728, 738, 740, 749, 763, 772, 786, 791, 808, 826, 867, 869, 887, 922, 940, 967, 1000]) == 51\nassert solution.hIndex([3, 30, 58, 93, 103, 111, 115, 140, 141, 146, 230, 257, 261, 276, 279, 283, 341, 348, 403, 406, 414, 416, 418, 435, 437, 440, 463, 477, 479, 491, 509, 521, 537, 543, 552, 560, 589, 605, 650, 658, 660, 662, 676, 689, 715, 731, 777, 800, 833, 837, 901, 939, 942, 965, 970]) == 53\nassert solution.hIndex([18, 37, 69, 72, 76, 184, 195, 206, 240, 282, 305, 322, 339, 349, 370, 422, 561, 588, 600, 608, 614, 681, 704, 709, 746, 751, 779, 810, 907, 928, 930, 971, 999]) == 32\nassert solution.hIndex([3, 24, 43, 65, 75, 77, 82, 83, 92, 102, 150, 175, 177, 194, 218, 235, 250, 278, 280, 284, 292, 342, 354, 362, 372, 428, 446, 451, 454, 460, 474, 486, 495, 520, 584, 613, 626, 643, 645, 649, 660, 668, 675, 676, 679, 696, 702, 713, 719, 767, 770, 781, 792, 805, 808, 810, 824, 849, 875, 879, 885, 905, 915, 916, 925, 928, 930, 934, 937, 945, 970]) == 67\nassert solution.hIndex([7, 9, 11, 18, 79, 141, 183, 186, 196, 199, 211, 224, 233, 238, 253, 255, 260, 280, 312, 319, 341, 342, 344, 364, 366, 383, 392, 413, 460, 464, 466, 475, 485, 493, 498, 508, 524, 529, 563, 567, 573, 579, 583, 589, 594, 595, 611, 625, 631, 633, 681, 710, 712, 713, 719, 723, 724, 760, 782, 813, 839, 853, 860, 881, 888, 890, 911, 936, 941, 944, 956, 965, 982]) == 69\nassert solution.hIndex([9, 18, 47, 63, 86, 93, 96, 97, 102, 105, 123, 130, 144, 151, 170, 188, 199, 209, 236, 237, 245, 255, 268, 274, 282, 289, 303, 307, 312, 321, 361, 377, 387, 401, 402, 405, 422, 423, 425, 428, 441, 457, 459, 461, 462, 490, 513, 531, 536, 542, 543, 555, 570, 577, 579, 601, 605, 619, 645, 663, 668, 677, 684, 704, 708, 723, 751, 758, 761, 765, 768, 784, 800, 807, 808, 823, 853, 862, 875, 897, 910, 912, 918, 945, 952, 964, 974, 987, 1000]) == 85\nassert solution.hIndex([23, 34, 40, 49, 86, 105, 121, 124, 157, 166, 223, 233, 273, 293, 304, 314, 339, 362, 368, 375, 381, 386, 390, 399, 404, 430, 445, 469, 503, 525, 529, 530, 537, 539, 552, 566, 580, 591, 607, 627, 642, 697, 713, 760, 768, 795, 798, 810, 811, 848, 853, 865, 882, 887, 893, 895, 939, 947, 952, 989, 993]) == 57\nassert solution.hIndex([23, 45, 52, 73, 74, 95, 126, 141, 149, 172, 182, 210, 234, 304, 314, 339, 343, 396, 509, 513, 515, 527, 577, 582, 646, 656, 665, 687, 695, 713, 714, 731, 799, 808, 814, 822, 835, 846, 911, 950]) == 39\nassert solution.hIndex([38, 66, 82, 112, 151, 221, 287, 342, 367, 387, 389, 469, 516, 711, 786, 853, 862, 865, 875, 895]) == 20\nassert solution.hIndex([29, 55, 57, 62, 64, 92, 95, 111, 116, 140, 148, 164, 169, 173, 195, 243, 256, 262, 265, 286, 299, 315, 324, 327, 352, 355, 357, 363, 369, 371, 391, 396, 404, 417, 429, 433, 434, 442, 445, 449, 457, 473, 476, 501, 509, 515, 521, 534, 541, 544, 546, 551, 552, 561, 570, 587, 590, 612, 613, 621, 638, 645, 654, 659, 664, 667, 670, 682, 701, 723, 727, 759, 773, 779, 783, 785, 820, 828, 842, 846, 847, 848, 850, 857, 860, 892, 895, 911, 922, 925, 926, 934, 945, 947, 981, 985, 987]) == 92\nassert solution.hIndex([16, 28, 53, 91, 120, 124, 157, 158, 159, 166, 170, 234, 235, 237, 243, 249, 270, 287, 340, 349, 359, 362, 382, 510, 525, 539, 566, 625, 662, 666, 717, 726, 727, 737, 745, 746, 751, 752, 771, 805, 806, 850, 853, 864, 868, 900, 909, 928, 954, 979, 1000]) == 49\nassert solution.hIndex([14, 26, 27, 79, 172, 248, 387, 407, 454, 499, 535, 538, 570, 589, 605, 606, 609, 622, 632, 706, 709, 761, 799, 903, 962, 989, 998]) == 26\nassert solution.hIndex([44, 84, 115, 142, 146, 203, 219, 300, 329, 335, 351, 353, 357, 372, 375, 382, 391, 409, 456, 510, 548, 552, 588, 598, 673, 713, 803, 834, 859, 872, 878, 937, 938, 939, 942]) == 35\nassert solution.hIndex([4, 48, 59, 68, 83, 86, 94, 127, 133, 147, 156, 178, 181, 185, 187, 205, 210, 227, 285, 331, 337, 352, 361, 410, 416, 420, 436, 439, 444, 460, 473, 490, 503, 522, 550, 573, 581, 592, 610, 620, 628, 631, 633, 673, 705, 713, 715, 749, 769, 772, 781, 788, 798, 811, 858, 864, 871, 874, 881, 905, 915, 920, 930, 933, 963, 966, 989]) == 64\nassert solution.hIndex([47, 59, 65, 93, 123, 126, 127, 128, 145, 152, 172, 186, 208, 214, 234, 244, 276, 298, 314, 332, 334, 337, 348, 350, 382, 398, 401, 442, 470, 471, 473, 475, 493, 515, 574, 577, 611, 640, 664, 669, 685, 707, 721, 728, 748, 784, 836, 839, 871, 888, 910, 930, 931, 940, 949, 965, 967, 969, 987, 998]) == 59\nassert solution.hIndex([98, 159, 245, 648, 680, 897]) == 6\nassert solution.hIndex([70, 908, 934]) == 3\nassert solution.hIndex([0, 32, 54, 95, 113, 116, 123, 140, 147, 184, 188, 191, 200, 233, 264, 275, 282, 301, 312, 345, 350, 353, 362, 365, 367, 418, 429, 439, 449, 451, 452, 479, 502, 504, 516, 520, 529, 535, 548, 577, 581, 592, 598, 611, 612, 617, 619, 623, 633, 635, 657, 701, 737, 742, 760, 762, 777, 817, 863, 864, 867, 878, 889, 892, 900, 912, 925, 928, 936, 951, 970, 982, 993]) == 70\nassert solution.hIndex([35, 45, 69, 124, 132, 313, 428, 460, 475, 476, 688, 918, 932]) == 13\nassert solution.hIndex([17, 19, 28, 32, 33, 64, 82, 111, 113, 119, 132, 137, 156, 164, 176, 178, 179, 181, 188, 195, 207, 271, 272, 274, 296, 326, 347, 361, 386, 400, 402, 413, 434, 480, 481, 569, 575, 592, 593, 594, 644, 653, 655, 676, 682, 686, 707, 745, 760, 765, 772, 774, 805, 806, 819, 829, 830, 854, 864, 870, 891, 893, 915, 947, 960, 971, 980, 983, 994, 999]) == 64\nassert solution.hIndex([18, 43, 59, 77, 96, 105, 149, 272, 320, 327, 334, 376, 394, 397, 420, 432, 558, 588, 607, 624, 638, 651, 684, 691, 752, 763, 773, 801, 831, 834, 916, 931, 974, 980]) == 33\nassert solution.hIndex([13, 76, 214, 254, 267, 286, 409, 415, 438, 465, 520, 521, 552, 554, 558, 606, 747, 787, 789, 796, 820, 851, 882, 893]) == 23\nassert solution.hIndex([92, 157, 506, 709, 919]) == 5\nassert solution.hIndex([33, 63, 93, 128, 140, 159, 177, 178, 180, 184, 237, 238, 242, 250, 284, 285, 295, 359, 367, 381, 402, 404, 424, 480, 580, 619, 639, 673, 691, 694, 704, 706, 710, 732, 736, 737, 744, 749, 764, 801, 845, 865, 880, 913, 919, 924, 938]) == 46\nassert solution.hIndex([41, 62, 75, 78, 120, 128, 131, 141, 159, 163, 164, 168, 215, 229, 232, 245, 267, 269, 274, 280, 284, 298, 324, 358, 376, 379, 393, 409, 414, 417, 418, 419, 422, 443, 446, 460, 492, 507, 509, 531, 532, 533, 543, 549, 554, 582, 589, 595, 608, 614, 624, 692, 699, 708, 722, 731, 732, 737, 768, 777, 807, 832, 835, 838, 839, 846, 847, 882, 892, 905, 914, 918, 919, 935, 939, 941, 946, 955, 958, 963, 966, 978, 982, 983, 987, 996, 1000]) == 83\nassert solution.hIndex([20, 24, 25, 35, 38, 48, 59, 72, 75, 79, 131, 147, 171, 172, 190, 198, 199, 210, 214, 229, 243, 247, 258, 263, 268, 274, 282, 295, 298, 305, 319, 334, 342, 350, 353, 355, 359, 387, 396, 403, 410, 419, 425, 433, 441, 443, 446, 465, 471, 475, 481, 488, 501, 512, 551, 596, 616, 632, 640, 675, 682, 695, 711, 718, 724, 746, 747, 755, 763, 766, 769, 770, 778, 793, 796, 807, 809, 810, 814, 836, 839, 843, 873, 877, 885, 899, 908, 913, 919, 957, 969, 977, 984, 986, 987, 997]) == 86\nassert solution.hIndex([12, 32, 33, 37, 45, 46, 53, 81, 96, 106, 124, 128, 138, 140, 160, 163, 185, 202, 213, 217, 228, 236, 241, 242, 253, 271, 288, 299, 346, 376, 378, 390, 408, 409, 489, 521, 525, 564, 570, 571, 585, 595, 608, 612, 658, 670, 688, 694, 710, 717, 725, 738, 744, 759, 788, 790, 802, 823, 857, 870, 874, 895, 897, 898, 900, 914, 919, 936, 946, 962, 992]) == 64\nassert solution.hIndex([155, 186, 241, 334, 391, 621, 669, 742, 789, 798, 891]) == 11\nassert solution.hIndex([48, 295, 853]) == 3\nassert solution.hIndex([1, 12, 90, 95, 132, 146, 182, 207, 211, 231, 308, 321, 337, 342, 369, 385, 391, 394, 400, 427, 436, 452, 454, 480, 507, 536, 601, 689, 708, 710, 726, 734, 767, 768, 773, 785, 791, 853, 887, 889, 899, 926, 965, 990]) == 42\nassert solution.hIndex([5, 51, 55, 124, 338, 401, 468, 577, 614, 781, 867]) == 10\nassert solution.hIndex([2, 17, 19, 20, 22, 31, 57, 61, 63, 65, 83, 87, 100, 132, 139, 150, 152, 161, 162, 202, 207, 217, 233, 237, 327, 330, 336, 339, 356, 358, 359, 381, 397, 432, 437, 439, 448, 470, 505, 533, 536, 541, 562, 579, 607, 613, 624, 644, 651, 676, 682, 688, 729, 734, 754, 781, 784, 857, 868, 911, 936, 949, 951, 964]) == 57\nassert solution.hIndex([6, 18, 49, 86, 101, 102, 145, 146, 149, 156, 166, 179, 183, 190, 204, 243, 264, 299, 312, 327, 342, 355, 356, 357, 364, 367, 406, 422, 425, 429, 433, 440, 446, 562, 567, 575, 584, 598, 607, 617, 628, 634, 651, 658, 673, 687, 714, 716, 741, 765, 779, 782, 785, 790, 807, 811, 837, 842, 857, 870, 875, 884, 885, 888, 899, 923, 937, 941, 948, 977, 990, 999]) == 69\nassert solution.hIndex([112, 153, 172, 522, 598, 884, 949]) == 7\nassert solution.hIndex([7, 39, 40, 53, 58, 64, 67, 72, 75, 96, 105, 110, 119, 122, 123, 150, 181, 191, 212, 216, 223, 233, 236, 238, 268, 272, 282, 284, 292, 302, 306, 308, 342, 356, 366, 397, 403, 432, 449, 460, 463, 485, 501, 504, 512, 555, 570, 578, 579, 582, 599, 614, 644, 650, 651, 657, 669, 689, 693, 696, 699, 715, 717, 722, 728, 747, 752, 755, 758, 778, 782, 784, 794, 798, 801, 804, 805, 813, 864, 865, 890, 893, 894, 914, 933, 939, 940, 961, 971, 979, 987, 995, 997, 999]) == 85\nassert solution.hIndex([96, 167, 173, 234, 236, 278, 286, 388, 490, 507, 512, 583, 663, 677, 733, 794, 811, 837, 849, 882, 915]) == 21\nassert solution.hIndex([14, 109, 118, 135, 136, 205, 209, 222, 316, 317, 319, 346, 369, 375, 391, 394, 422, 456, 457, 460, 467, 472, 479, 519, 540, 548, 557, 561, 576, 619, 650, 657, 712, 749, 759, 760, 761, 768, 810, 813, 842, 857, 887, 901, 915, 928, 940, 961, 982, 995]) == 49\nassert solution.hIndex([12, 23, 40, 67, 76, 114, 118, 122, 145, 148, 190, 210, 213, 234, 278, 295, 298, 300, 305, 324, 354, 362, 374, 399, 424, 434, 441, 448, 476, 491, 512, 522, 525, 549, 565, 575, 588, 596, 633, 650, 678, 679, 717, 780, 795, 800, 818, 829, 846, 860, 868, 872, 877, 905, 909, 933, 962, 988]) == 55\nassert solution.hIndex([5, 10, 46, 73, 128, 226, 346, 404, 417, 424, 436, 443, 446, 463, 493, 506, 535, 578, 587, 646, 693, 714, 730, 744, 772, 789, 797, 823, 828, 851, 871, 872, 885, 902, 904, 924]) == 34\nassert solution.hIndex([31, 63, 74, 139, 230, 292, 353, 361, 411, 471, 538, 552, 553, 560, 570, 719, 786, 813, 817]) == 19\nassert solution.hIndex([796]) == 1\nassert solution.hIndex([20, 23, 70, 76, 80, 110, 126, 155, 171, 175, 178, 223, 227, 313, 366, 415, 518, 529, 533, 548, 567, 601, 608, 640, 658, 667, 668, 675, 699, 719, 734, 760, 769, 775, 780, 845, 857, 858, 903, 909, 925, 927, 967, 989, 991]) == 43\nassert solution.hIndex([0, 13, 16, 30, 51, 66, 82, 98, 103, 107, 116, 122, 123, 127, 144, 155, 173, 179, 207, 219, 221, 227, 229, 233, 240, 245, 253, 274, 298, 307, 343, 350, 363, 389, 392, 401, 403, 413, 414, 428, 437, 440, 451, 462, 468, 473, 477, 484, 497, 500, 501, 503, 509, 569, 578, 589, 591, 598, 626, 637, 639, 644, 655, 667, 671, 683, 703, 714, 717, 724, 740, 778, 798, 812, 814, 831, 847, 851, 861, 864, 918, 919, 924, 943, 950, 955, 958, 981, 985, 988, 993, 998]) == 85\nassert solution.hIndex([39, 50, 52, 68, 78, 197, 205, 209, 236, 252, 286, 295, 360, 395, 490, 503, 687, 762, 777, 800, 813, 839, 889, 900, 972, 997]) == 26\nassert solution.hIndex([437, 588, 597, 679, 689, 707, 718, 725, 832, 880, 926, 979, 993]) == 13\nassert solution.hIndex([48, 98, 107, 164, 189, 301, 336, 356, 383, 384, 412, 429, 442, 541, 543, 551, 561, 582, 614, 693, 696, 701, 724, 753, 811, 883, 939, 955]) == 28\nassert solution.hIndex([154, 258, 272, 405, 413, 477, 545, 551, 566, 576, 627, 688, 957]) == 13\nassert solution.hIndex([4, 5, 41, 42, 73, 74, 91, 97, 98, 101, 104, 114, 141, 165, 171, 173, 180, 191, 193, 219, 231, 232, 234, 244, 250, 261, 276, 290, 334, 345, 346, 357, 358, 366, 382, 385, 394, 402, 408, 409, 413, 424, 426, 434, 448, 454, 455, 481, 504, 514, 516, 520, 538, 550, 557, 566, 571, 584, 585, 586, 596, 602, 613, 625, 643, 661, 695, 720, 730, 746, 757, 762, 765, 770, 806, 842, 849, 854, 872, 877, 882, 891, 897, 903, 907, 910, 912, 927, 938, 952, 977, 988, 1000]) == 87\nassert solution.hIndex([49, 83, 94, 98, 201, 222, 224, 226, 240, 256, 265, 289, 304, 306, 308, 316, 346, 388, 390, 402, 432, 438, 476, 524, 596, 626, 711, 718, 733, 753, 760, 914, 924, 1000]) == 34\nassert solution.hIndex([27, 39, 41, 54, 59, 63, 64, 67, 70, 73, 90, 105, 130, 143, 172, 187, 188, 211, 214, 223, 224, 239, 253, 262, 283, 290, 296, 309, 316, 321, 332, 334, 365, 387, 388, 414, 428, 436, 440, 464, 466, 484, 485, 486, 495, 501, 523, 559, 560, 563, 582, 587, 603, 617, 619, 642, 676, 679, 682, 694, 722, 727, 728, 738, 743, 767, 770, 772, 783, 790, 791, 798, 802, 809, 811, 846, 861, 867, 888, 907, 923, 971, 973, 975, 977, 982, 993, 999]) == 78\nassert solution.hIndex([56, 61, 72, 118, 125, 143, 164, 180, 191, 197, 227, 232, 249, 278, 287, 341, 343, 350, 368, 379, 389, 394, 400, 407, 467, 478, 497, 503, 540, 558, 560, 562, 569, 594, 597, 623, 634, 641, 686, 688, 717, 742, 751, 792, 808, 867, 870, 872, 880, 882, 902, 924, 943, 948]) == 54\nassert solution.hIndex([7, 26, 38, 51, 54, 82, 85, 90, 102, 109, 135, 143, 144, 145, 147, 168, 171, 178, 180, 182, 189, 233, 243, 255, 257, 268, 273, 285, 291, 298, 306, 309, 321, 335, 339, 347, 364, 389, 394, 396, 442, 472, 484, 499, 507, 556, 574, 576, 580, 587, 617, 633, 635, 662, 663, 676, 678, 679, 681, 689, 692, 698, 699, 706, 718, 723, 746, 753, 761, 763, 780, 810, 816, 824, 845, 846, 848, 856, 862, 865, 874, 895, 906, 920, 922, 927, 940, 958, 964]) == 83\nassert solution.hIndex([10, 16, 25, 31, 54, 115, 131, 150, 152, 163, 165, 179, 198, 230, 241, 248, 255, 266, 269, 291, 308, 319, 326, 334, 373, 384, 395, 399, 436, 438, 446, 448, 456, 457, 460, 468, 470, 494, 504, 513, 529, 534, 536, 548, 549, 581, 615, 618, 644, 658, 700, 701, 720, 739, 749, 758, 778, 780, 794, 824, 851, 857, 892, 894, 899, 916, 920, 921, 929, 944, 981, 984, 995, 1000]) == 69\nassert solution.hIndex([0, 3, 10, 19, 28, 31, 52, 61, 70, 91, 114, 136, 148, 154, 180, 192, 193, 204, 206, 220, 223, 224, 257, 264, 283, 301, 312, 321, 361, 384, 394, 402, 413, 418, 433, 456, 491, 495, 496, 506, 517, 521, 536, 569, 577, 584, 589, 623, 632, 661, 678, 679, 688, 710, 723, 728, 738, 741, 807, 874, 875, 876, 889, 912, 917, 918, 922, 928, 932, 936, 940, 943, 953, 960, 981, 998]) == 68\nassert solution.hIndex([1, 6, 19, 23, 25, 46, 50, 80, 84, 93, 95, 97, 100, 122, 128, 143, 151, 160, 163, 165, 171, 177, 205, 226, 236, 255, 259, 263, 285, 286, 288, 289, 338, 341, 346, 352, 365, 380, 388, 397, 399, 403, 404, 431, 439, 473, 474, 477, 482, 494, 506, 554, 556, 576, 583, 592, 594, 601, 605, 613, 646, 652, 658, 662, 664, 667, 672, 676, 677, 683, 690, 694, 702, 718, 721, 762, 784, 790, 796, 809, 825, 833, 839, 841, 867, 889, 900, 925, 928, 946, 950, 953, 955, 962, 968, 973, 976, 977, 980, 990]) == 91\nassert solution.hIndex([5, 9, 13, 44, 53, 76, 85, 90, 91, 94, 96, 148, 156, 171, 213, 220, 261, 318, 338, 347, 360, 405, 435, 459, 539, 572, 615, 618, 630, 642, 720, 737, 738, 740, 753, 764, 773, 781, 795, 852, 857, 858, 866, 873, 881, 890, 905, 909, 949, 951, 986, 987, 991]) == 49\nassert solution.hIndex([2, 5, 19, 22, 36, 55, 56, 66, 76, 90, 95, 125, 141, 143, 146, 166, 170, 179, 186, 211, 217, 235, 254, 258, 263, 269, 285, 300, 325, 342, 356, 357, 388, 398, 406, 407, 419, 421, 426, 436, 452, 460, 464, 477, 484, 499, 502, 514, 523, 524, 532, 540, 545, 551, 574, 576, 581, 585, 596, 597, 599, 601, 609, 622, 632, 637, 650, 662, 663, 671, 673, 680, 712, 719, 725, 745, 763, 769, 784, 789, 804, 828, 830, 831, 836, 861, 892, 899, 901, 902, 929, 964]) == 83\nassert solution.hIndex([9, 13, 16, 22, 28, 29, 37, 54, 79, 88, 104, 124, 141, 143, 209, 213, 235, 304, 330, 345, 420, 422, 437, 517, 540, 557, 614, 683, 687, 692, 694, 712, 731, 781, 807, 816, 832, 877, 927, 944, 951, 996, 997]) == 37\nassert solution.hIndex([7, 11, 16, 23, 57, 85, 91, 124, 166, 192, 207, 224, 232, 253, 271, 275, 290, 292, 298, 299, 304, 308, 324, 354, 358, 368, 372, 396, 398, 410, 426, 434, 437, 448, 459, 464, 481, 483, 489, 510, 515, 517, 534, 542, 548, 555, 560, 564, 570, 609, 628, 629, 636, 641, 651, 654, 664, 669, 673, 674, 688, 724, 758, 766, 779, 789, 790, 792, 813, 827, 830, 831, 854, 855, 863, 881, 882, 890, 891, 903, 904, 934, 992, 998]) == 79\nassert solution.hIndex([36, 121, 158, 246, 290, 307, 525, 543, 630, 750, 859, 880, 919, 993]) == 14\nassert solution.hIndex([49, 51, 59, 86, 121, 142, 283, 288, 333, 399, 444, 481, 548, 578, 663, 756, 776, 787, 821, 869, 946]) == 21",
  "inefficient_solution": "class Solution:\n    def hIndex(self, citations: List[int]) -> int:\n        n = len(citations)\n        left, right = 0, n\n        while left < right:\n            mid = (left + right + 1) // 2\n            citations.append(citations[n - mid])\n            citations.append(mid)\n            citations.append(mid)\n            citations.append(mid)\n            if citations[n - mid] >= mid:\n                left = mid\n            else:\n                right = mid - 1\n        return left",
  "is_python": true
}