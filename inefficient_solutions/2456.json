{
  "problem_idx": 2456,
  "task_name": "Most Popular Video Creator",
  "markdown_description": "\nYou are given two string arrays `creators` and `ids`, and an integer array `views`, all of length `n`. The `ith` video on a platform was created by `creator[i]`, has an id of `ids[i]`, and has `views[i]` views.\n\n\nThe **popularity** of a creator is the **sum** of the number of views on **all** of the creator's videos. Find the creator with the **highest** popularity and the id of their **most** viewed video.\n\n\n* If multiple creators have the highest popularity, find all of them.\n* If multiple videos have the highest view count for a creator, find the lexicographically **smallest** id.\n\n\nReturn *a 2D array of strings* `answer` *where* `answer[i] = [creatori, idi]` *means that* `creatori` *has the **highest** popularity and* `idi` *is the id of their most popular video.* The answer can be returned in any order.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** creators = [\"alice\",\"bob\",\"alice\",\"chris\"], ids = [\"one\",\"two\",\"three\",\"four\"], views = [5,10,5,4]\n**Output:** [[\"alice\",\"one\"],[\"bob\",\"two\"]]\n**Explanation:**\nThe popularity of alice is 5 + 5 = 10.\nThe popularity of bob is 10.\nThe popularity of chris is 4.\nalice and bob are the most popular creators.\nFor bob, the video with the highest view count is \"two\".\nFor alice, the videos with the highest view count are \"one\" and \"three\". Since \"one\" is lexicographically smaller than \"three\", it is included in the answer.\n\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** creators = [\"alice\",\"alice\",\"alice\"], ids = [\"a\",\"b\",\"c\"], views = [1,2,2]\n**Output:** [[\"alice\",\"b\"]]\n**Explanation:**\nThe videos with id \"b\" and \"c\" have the highest view count.\nSince \"b\" is lexicographically smaller than \"c\", it is included in the answer.\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `n == creators.length == ids.length == views.length`\n* `1 <= n <= 105`\n* `1 <= creators[i].length, ids[i].length <= 5`\n* `creators[i]` and `ids[i]` consist only of lowercase English letters.\n* `0 <= views[i] <= 105`\n\n\n",
  "canonical_solution": "class Solution:\n    def mostPopularCreator(\n        self, creators: List[str], ids: List[str], views: List[int]\n    ) -> List[List[str]]:\n        cnt = defaultdict(int)\n        d = defaultdict(int)\n        for k, (c, i, v) in enumerate(zip(creators, ids, views)):\n            cnt[c] += v\n            if c not in d or views[d[c]] < v or (views[d[c]] == v and ids[d[c]] > i):\n                d[c] = k\n        mx = max(cnt.values())\n        return [[c, ids[d[c]]] for c, x in cnt.items() if x == mx]\n",
  "test_case_generator": "\nimport random\nfrom collections import defaultdict\nfrom typing import List\n\nclass Solution:\n    def mostPopularCreator(\n        self, creators: List[str], ids: List[str], views: List[int]\n    ) -> List[List[str]]:\n        cnt = defaultdict(int)\n        d = defaultdict(int)\n        for k, (c, i, v) in enumerate(zip(creators, ids, views)):\n            cnt[c] += v\n            if c not in d or views[d[c]] < v or (views[d[c]] == v and ids[d[c]] > i):\n                d[c] = k\n        mx = max(cnt.values())\n        return [[c, ids[d[c]]] for c, x in cnt.items() if x == mx]\n\ndef generate_test_case():\n    solution = Solution()\n    \n    # Generate random inputs\n    n = random.randint(1, 10^5)\n    creators = [random.choice(string.ascii_lowercase) for _ in range(n)]\n    ids = [random.choice(string.ascii_lowercase) for _ in range(n)]\n    views = [random.randint(0, 10^5) for _ in range(n)]\n\n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.mostPopularCreator(creators, ids, views)\n\n    return creators, ids, views, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        creators, ids, views, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.mostPopularCreator(creators, ids, views) == expected_result\n        if expected_result:\n            print(f\"assert solution.mostPopularCreator({creators}, {ids}, {views}) == {expected_result}\")\n            test_case_generator_results.append(f\"assert solution.mostPopularCreator({creators}, {ids}, {views}) == {expected_result}\")\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.mostPopularCreator(['v', 'q', 'k', 's', 'j', 'q', 'h', 's', 'w'], ['w', 'd', 'b', 'k', 'o', 'o', 'a', 't', 'i'], [6, 0, 14, 15, 1, 5, 9, 14, 13]) == [['s', 'k']]\nassert solution.mostPopularCreator(['x', 'p', 'g', 'j', 'x', 'r', 'g', 'b', 'w', 'q', 'j'], ['g', 'p', 'r', 'l', 'm', 'x', 'g', 'h', 'f', 'f', 'v'], [7, 7, 14, 9, 15, 8, 12, 9, 6, 6, 3]) == [['g', 'r']]\nassert solution.mostPopularCreator(['w', 'u', 'y', 'q', 'k', 'h', 'v', 'r'], ['u', 'e', 'p', 'u', 't', 't', 'i', 'm'], [2, 7, 14, 12, 10, 12, 11, 1]) == [['y', 'p']]\nassert solution.mostPopularCreator(['d', 'x', 'r'], ['q', 'q', 'f'], [12, 14, 7]) == [['x', 'q']]\nassert solution.mostPopularCreator(['s', 'v', 'x', 'v', 'e', 'a', 'y', 'r', 'w'], ['m', 'n', 'i', 'l', 'e', 'a', 'w', 'z', 's'], [1, 9, 7, 4, 0, 5, 2, 15, 10]) == [['r', 'z']]\nassert solution.mostPopularCreator(['m', 'h', 'n', 'i', 'f'], ['u', 'g', 'y', 'm', 'm'], [1, 3, 0, 7, 5]) == [['i', 'm']]\nassert solution.mostPopularCreator(['o', 'b', 'v', 'a'], ['d', 'l', 'u', 'h'], [1, 5, 0, 9]) == [['a', 'h']]\nassert solution.mostPopularCreator(['w', 'l', 'c', 'd', 'm', 'd', 'l', 'm', 'x', 'e', 'f', 'j', 'r', 'x', 'q'], ['x', 's', 'u', 'g', 'a', 'v', 's', 'u', 'a', 'f', 'o', 'c', 'n', 'p', 'z'], [5, 9, 12, 6, 5, 9, 7, 2, 1, 1, 0, 14, 14, 1, 3]) == [['l', 's']]\nassert solution.mostPopularCreator(['n', 'i', 'h'], ['w', 'u', 'y'], [8, 4, 11]) == [['h', 'y']]\nassert solution.mostPopularCreator(['f', 'a', 'a', 'o', 'd', 'r', 'n', 'i', 'b', 'w'], ['f', 'k', 'm', 't', 'f', 'o', 'z', 'n', 'm', 'k'], [2, 3, 9, 6, 5, 7, 13, 0, 9, 15]) == [['w', 'k']]\nassert solution.mostPopularCreator(['s', 'v', 'q', 'r'], ['p', 'a', 'y', 'd'], [11, 6, 8, 11]) == [['s', 'p'], ['r', 'd']]\nassert solution.mostPopularCreator(['z', 'w', 'm', 'k', 'y', 'f'], ['f', 'y', 'c', 'a', 't', 'k'], [11, 9, 14, 15, 5, 8]) == [['k', 'a']]\nassert solution.mostPopularCreator(['s', 'y'], ['y', 'b'], [11, 6]) == [['s', 'y']]\nassert solution.mostPopularCreator(['u', 'a', 'e', 'u', 'i', 'y', 'n', 'r', 'p', 'n', 'w', 'g', 't'], ['n', 'l', 'w', 'j', 'w', 'n', 'a', 'j', 'e', 'l', 'r', 'o', 'n'], [7, 2, 0, 3, 0, 7, 0, 2, 0, 14, 7, 12, 7]) == [['n', 'l']]\nassert solution.mostPopularCreator(['o', 'o', 'u', 'u', 'p', 'n', 'i', 'r', 'i', 'm', 'p', 'z', 'c', 'c'], ['v', 'i', 'n', 'b', 'h', 'd', 'u', 'v', 'e', 'd', 'e', 'a', 'x', 'g'], [5, 7, 8, 5, 11, 8, 15, 4, 3, 5, 2, 3, 9, 10]) == [['c', 'g']]\nassert solution.mostPopularCreator(['i', 'u', 'u', 'f', 'a', 'q', 'y', 'l', 't'], ['p', 'k', 't', 'o', 'u', 's', 'a', 'r', 'c'], [8, 10, 9, 3, 11, 12, 3, 12, 3]) == [['u', 'k']]\nassert solution.mostPopularCreator(['q', 'h', 't', 'e'], ['s', 'v', 'n', 'q'], [5, 12, 5, 15]) == [['e', 'q']]\nassert solution.mostPopularCreator(['b', 's', 'l', 'a', 'f', 'i', 's', 'j'], ['z', 'q', 'p', 'w', 'y', 'b', 'y', 'h'], [3, 11, 6, 9, 0, 11, 14, 3]) == [['s', 'y']]\nassert solution.mostPopularCreator(['a', 'u', 'm', 'l', 'n', 'd', 'l', 'i', 'd', 'g', 'e', 'x', 'j'], ['f', 'o', 'm', 'b', 'm', 'o', 'i', 'c', 't', 't', 'z', 'm', 'r'], [1, 5, 6, 10, 12, 13, 8, 1, 14, 9, 6, 8, 13]) == [['d', 't']]\nassert solution.mostPopularCreator(['b', 'i'], ['d', 'f'], [14, 8]) == [['b', 'd']]\nassert solution.mostPopularCreator(['b'], ['j'], [13]) == [['b', 'j']]\nassert solution.mostPopularCreator(['v'], ['d'], [9]) == [['v', 'd']]\nassert solution.mostPopularCreator(['p', 'b', 'y', 'm'], ['m', 'm', 'v', 'g'], [8, 10, 13, 2]) == [['y', 'v']]\nassert solution.mostPopularCreator(['x', 'v', 'q', 'h', 'f', 'z', 't', 'e', 'v', 'f', 't', 't'], ['b', 'u', 's', 'r', 't', 'x', 'c', 'd', 'r', 'g', 'g', 'i'], [7, 12, 15, 4, 6, 14, 3, 12, 1, 3, 10, 0]) == [['q', 's']]\nassert solution.mostPopularCreator(['q', 'c', 'c', 'y', 'o', 'l', 'e'], ['t', 'b', 'w', 'i', 't', 'h', 'l'], [7, 12, 4, 12, 8, 7, 3]) == [['c', 'b']]\nassert solution.mostPopularCreator(['a', 'z'], ['m', 'm'], [6, 5]) == [['a', 'm']]\nassert solution.mostPopularCreator(['l', 'j', 'u', 'z', 'c', 'n', 'c', 'h', 'f', 'g', 'y', 'z', 's'], ['g', 'v', 'y', 'n', 'f', 'q', 'o', 'f', 'z', 'z', 'q', 'e', 's'], [8, 4, 10, 13, 9, 6, 2, 3, 11, 8, 11, 9, 3]) == [['z', 'n']]\nassert solution.mostPopularCreator(['f', 'n', 'o', 'x', 'w', 'g'], ['l', 'k', 'w', 'a', 'g', 'v'], [1, 13, 8, 14, 12, 3]) == [['x', 'a']]\nassert solution.mostPopularCreator(['y', 'm', 'e', 'j', 'i', 'q', 'g', 'c', 'q'], ['i', 'e', 'b', 'q', 'd', 'c', 'd', 'a', 'v'], [10, 0, 1, 11, 6, 8, 11, 5, 0]) == [['j', 'q'], ['g', 'd']]\nassert solution.mostPopularCreator(['o', 'w', 'u', 'm', 'y', 'p', 'h'], ['s', 'c', 'k', 'c', 'o', 'h', 's'], [15, 6, 2, 15, 15, 5, 5]) == [['o', 's'], ['m', 'c'], ['y', 'o']]\nassert solution.mostPopularCreator(['x', 'h', 'y', 's', 'y', 'j', 'x', 'd', 'x', 'b', 't'], ['b', 'x', 'a', 'f', 'z', 'z', 's', 'b', 't', 'y', 't'], [15, 8, 1, 6, 8, 15, 7, 12, 4, 4, 6]) == [['x', 'b']]\nassert solution.mostPopularCreator(['s'], ['y'], [5]) == [['s', 'y']]\nassert solution.mostPopularCreator(['h', 'd', 'w', 'n'], ['i', 't', 'v', 'q'], [3, 6, 3, 4]) == [['d', 't']]\nassert solution.mostPopularCreator(['h', 'u', 'p', 'w', 'a'], ['l', 'y', 'l', 'k', 'z'], [2, 12, 11, 5, 4]) == [['u', 'y']]\nassert solution.mostPopularCreator(['u', 's', 'q', 'o', 'k', 'b', 'j'], ['h', 'a', 'w', 'r', 'f', 'p', 'y'], [11, 12, 5, 8, 14, 3, 9]) == [['k', 'f']]\nassert solution.mostPopularCreator(['c', 'v'], ['t', 'f'], [12, 5]) == [['c', 't']]\nassert solution.mostPopularCreator(['f', 'g', 'j', 'h', 'y', 'a', 't', 'd', 'h', 'n', 'q'], ['f', 'm', 'x', 'y', 'q', 'g', 'z', 'v', 'm', 'i', 'z'], [12, 4, 13, 13, 11, 3, 14, 15, 0, 5, 8]) == [['d', 'v']]\nassert solution.mostPopularCreator(['z', 'c', 'u', 'r', 'i', 'q', 'h', 'g', 'o', 'f'], ['y', 'k', 'f', 'v', 'p', 'd', 'u', 'v', 'c', 'b'], [5, 7, 0, 1, 3, 6, 6, 3, 3, 2]) == [['c', 'k']]\nassert solution.mostPopularCreator(['h', 'x', 'j', 'f', 'e', 'w', 'i', 'w', 'b', 'k', 'q', 'c', 'v', 'r', 'd'], ['d', 'r', 'u', 'm', 'o', 'p', 'i', 't', 'f', 'l', 'x', 'r', 'r', 'l', 'o'], [6, 9, 13, 1, 0, 14, 15, 12, 15, 8, 1, 13, 0, 1, 4]) == [['w', 'p']]\nassert solution.mostPopularCreator(['i', 'b', 'u', 'w', 'i', 'v', 'm', 'e', 'u', 'a', 'l', 'r', 'q', 'p', 'c'], ['j', 'i', 'k', 'o', 'c', 'u', 'v', 'd', 'b', 'j', 'x', 'g', 'q', 'e', 'd'], [0, 3, 12, 9, 8, 15, 12, 0, 13, 11, 12, 10, 1, 8, 8]) == [['u', 'b']]\nassert solution.mostPopularCreator(['s', 'd', 'b', 'q', 'k', 'a'], ['a', 'z', 'd', 'g', 'c', 'x'], [2, 13, 11, 4, 12, 1]) == [['d', 'z']]\nassert solution.mostPopularCreator(['p', 'w', 'z'], ['l', 'y', 't'], [2, 3, 0]) == [['w', 'y']]\nassert solution.mostPopularCreator(['t', 'f', 'u', 's', 'j', 'n', 'w', 'v', 'x', 'k', 'i', 'r'], ['d', 'v', 'o', 'b', 'y', 'f', 'p', 'k', 'e', 'h', 'w', 'a'], [6, 4, 6, 12, 12, 1, 9, 9, 2, 2, 11, 10]) == [['s', 'b'], ['j', 'y']]\nassert solution.mostPopularCreator(['o', 'u'], ['q', 'r'], [0, 7]) == [['u', 'r']]\nassert solution.mostPopularCreator(['a', 'c', 'i', 'j', 'g', 'o', 'r', 'o', 'f', 'z', 'h', 'b', 't', 'c'], ['q', 'n', 't', 'e', 'e', 'o', 't', 'a', 'w', 'x', 't', 'z', 'n', 'b'], [11, 0, 1, 4, 4, 2, 4, 7, 7, 7, 8, 8, 5, 7]) == [['a', 'q']]\nassert solution.mostPopularCreator(['a', 'j', 'n', 'h', 'f', 'p'], ['a', 'f', 'b', 'i', 'b', 'v'], [0, 12, 14, 15, 5, 0]) == [['h', 'i']]\nassert solution.mostPopularCreator(['d', 'z', 'd', 'i'], ['y', 'i', 'u', 'x'], [2, 15, 4, 2]) == [['z', 'i']]\nassert solution.mostPopularCreator(['t', 'm', 't', 't', 't', 'i', 'k', 'u', 's', 'l', 'n', 'v'], ['u', 'l', 'y', 'h', 'p', 'c', 'h', 'd', 'i', 'k', 't', 's'], [11, 3, 14, 12, 8, 11, 6, 1, 0, 8, 13, 7]) == [['t', 'y']]\nassert solution.mostPopularCreator(['p', 'y', 'k'], ['d', 'b', 'o'], [5, 11, 13]) == [['k', 'o']]\nassert solution.mostPopularCreator(['n', 'w'], ['k', 'b'], [3, 6]) == [['w', 'b']]\nassert solution.mostPopularCreator(['x', 'r', 'q'], ['u', 'c', 'm'], [8, 2, 4]) == [['x', 'u']]\nassert solution.mostPopularCreator(['o', 'd', 'c', 'y', 'c', 'y', 'e', 'v', 'k'], ['x', 'y', 'g', 'p', 'x', 'k', 'k', 'd', 'o'], [8, 0, 13, 7, 6, 8, 3, 10, 10]) == [['c', 'g']]\nassert solution.mostPopularCreator(['c', 'a', 'y', 'd', 'a', 'u', 'x'], ['j', 'v', 'q', 'f', 'o', 'd', 'r'], [11, 9, 12, 11, 8, 1, 13]) == [['a', 'v']]\nassert solution.mostPopularCreator(['t', 'e', 's', 'y', 'a', 'm'], ['y', 'a', 'i', 'p', 'c', 'h'], [12, 11, 8, 15, 14, 13]) == [['y', 'p']]\nassert solution.mostPopularCreator(['e', 'q', 'p'], ['b', 'g', 'j'], [15, 8, 5]) == [['e', 'b']]\nassert solution.mostPopularCreator(['r', 's', 'e', 'x', 'd', 'p', 'c', 's', 'o', 'r', 'l'], ['g', 'a', 'l', 'l', 'd', 'l', 's', 'f', 'n', 'y', 'p'], [13, 2, 6, 7, 15, 4, 8, 13, 3, 6, 6]) == [['r', 'g']]\nassert solution.mostPopularCreator(['k', 'q', 't', 'f', 'x', 'w', 'o', 'c', 'j', 'w', 'i', 'b', 'n'], ['u', 'f', 'w', 'm', 'v', 'o', 's', 'm', 'm', 'a', 'x', 's', 'e'], [7, 14, 9, 13, 0, 8, 0, 8, 7, 11, 11, 6, 2]) == [['w', 'a']]\nassert solution.mostPopularCreator(['t', 'w', 't', 'q', 'n', 'p'], ['s', 't', 's', 'e', 'b', 'l'], [11, 1, 10, 0, 9, 5]) == [['t', 's']]\nassert solution.mostPopularCreator(['t', 't', 'j', 'a', 'l', 'j', 'i', 'y', 'w', 'j'], ['l', 'l', 'v', 'f', 'l', 'x', 'c', 'g', 'x', 'l'], [1, 1, 8, 9, 5, 2, 10, 11, 15, 3]) == [['w', 'x']]\nassert solution.mostPopularCreator(['x', 'o', 'p', 'o', 'n', 'y', 'p', 'j', 'y', 'r', 'j', 's', 'u', 'k'], ['w', 'c', 'l', 'v', 'm', 'i', 'd', 'h', 'y', 'e', 'z', 'l', 'o', 'x'], [11, 2, 8, 9, 11, 7, 3, 13, 3, 6, 10, 4, 11, 12]) == [['j', 'h']]\nassert solution.mostPopularCreator(['b', 'r', 'j', 'n', 'e', 'j', 'a', 'o', 'x', 'e'], ['e', 'n', 'o', 'h', 'o', 'j', 'j', 'f', 'g', 'e'], [10, 0, 12, 10, 5, 8, 5, 13, 13, 8]) == [['j', 'o']]\nassert solution.mostPopularCreator(['d', 'y', 'x', 's', 'v', 'c', 'f', 'e', 'u', 'l', 'u', 'y', 'b', 'd', 'h'], ['f', 't', 'm', 'a', 'c', 'c', 'l', 'x', 'b', 'r', 'w', 'c', 'p', 't', 't'], [4, 7, 8, 1, 14, 9, 10, 2, 13, 2, 4, 15, 2, 5, 2]) == [['y', 'c']]\nassert solution.mostPopularCreator(['w', 'x', 'i', 'e', 'z', 'j', 'p', 's', 'h', 'h', 's', 'p', 't', 'r', 'v'], ['y', 'i', 'w', 'm', 'b', 'i', 'v', 'q', 'x', 't', 'w', 'r', 'h', 'v', 't'], [5, 11, 0, 9, 3, 14, 1, 12, 2, 3, 15, 1, 9, 9, 1]) == [['s', 'w']]\nassert solution.mostPopularCreator(['m', 'i'], ['z', 'f'], [5, 11]) == [['i', 'f']]\nassert solution.mostPopularCreator(['x', 'd', 'r', 'b', 'p', 'c', 'v'], ['c', 'm', 'd', 'r', 'f', 'o', 'l'], [10, 0, 0, 1, 3, 6, 6]) == [['x', 'c']]\nassert solution.mostPopularCreator(['w', 'f', 'z', 'f'], ['o', 'k', 'a', 'x'], [14, 12, 8, 4]) == [['f', 'k']]\nassert solution.mostPopularCreator(['q'], ['e'], [5]) == [['q', 'e']]\nassert solution.mostPopularCreator(['a', 'e', 'q', 'y', 'l', 's', 't', 'r', 'z', 'c', 'm', 'a', 'e', 'z'], ['i', 'l', 'f', 'x', 'l', 'i', 'g', 'h', 'u', 'g', 'i', 'n', 'h', 'f'], [10, 5, 1, 7, 15, 0, 9, 6, 2, 14, 14, 5, 4, 7]) == [['a', 'i'], ['l', 'l']]\nassert solution.mostPopularCreator(['o', 'z', 'l', 'k', 'u', 'n', 'm', 'k', 'e', 'c', 'x', 'h', 'i', 'p', 's'], ['g', 's', 'i', 'l', 't', 't', 'z', 'x', 'o', 'w', 'g', 'x', 'y', 'u', 'l'], [15, 13, 3, 6, 2, 9, 12, 14, 15, 10, 11, 3, 4, 4, 5]) == [['k', 'x']]\nassert solution.mostPopularCreator(['i', 'q', 'b', 'h', 'm', 'k', 'v', 'r', 'o', 'a', 't', 'q', 'n'], ['s', 'r', 'e', 'x', 'y', 'v', 'c', 'l', 'e', 'y', 'x', 'o', 'v'], [9, 1, 1, 15, 14, 8, 2, 0, 7, 14, 9, 3, 12]) == [['h', 'x']]\nassert solution.mostPopularCreator(['o', 'd', 'j', 'i', 'x', 'd', 'x', 'q'], ['b', 'k', 'b', 'm', 'v', 's', 'f', 'q'], [3, 11, 7, 13, 4, 3, 1, 9]) == [['d', 'k']]\nassert solution.mostPopularCreator(['n', 'z', 'a'], ['l', 'u', 'a'], [7, 1, 3]) == [['n', 'l']]\nassert solution.mostPopularCreator(['g', 's', 't', 'g', 'j', 'v', 'k'], ['t', 'k', 'p', 'r', 'b', 'm', 'o'], [5, 2, 10, 3, 13, 15, 15]) == [['v', 'm'], ['k', 'o']]\nassert solution.mostPopularCreator(['p', 'f', 't'], ['i', 'j', 'a'], [3, 1, 1]) == [['p', 'i']]\nassert solution.mostPopularCreator(['p', 'd', 'e', 'q', 'd', 'f', 'h', 'o'], ['w', 'a', 'o', 'd', 'g', 'i', 'z', 'q'], [5, 3, 2, 8, 6, 2, 4, 8]) == [['d', 'g']]\nassert solution.mostPopularCreator(['o', 'm', 't', 'r', 'd', 'd', 'b', 'w', 'm'], ['c', 'w', 'k', 'm', 'y', 'd', 'a', 'v', 'd'], [4, 2, 12, 5, 3, 4, 0, 10, 15]) == [['m', 'd']]\nassert solution.mostPopularCreator(['w', 'h', 'a', 'l', 'm', 'h', 'c'], ['w', 'i', 'z', 'k', 'x', 'w', 'o'], [14, 10, 9, 9, 7, 5, 12]) == [['h', 'i']]\nassert solution.mostPopularCreator(['g', 'h', 'c', 't', 'n', 'e', 'w', 'y', 'j', 'p', 'b', 'h'], ['r', 'v', 't', 'c', 'a', 'i', 'o', 'k', 'j', 'm', 'x', 'g'], [8, 13, 8, 0, 7, 12, 4, 11, 7, 7, 14, 6]) == [['h', 'v']]\nassert solution.mostPopularCreator(['a'], ['y'], [4]) == [['a', 'y']]\nassert solution.mostPopularCreator(['c', 'm'], ['z', 'u'], [15, 7]) == [['c', 'z']]\nassert solution.mostPopularCreator(['b', 'u'], ['g', 'c'], [5, 13]) == [['u', 'c']]\nassert solution.mostPopularCreator(['w', 'e', 'h', 'd', 'a', 'c', 'f', 'e', 'i', 'f', 'a'], ['m', 'k', 'm', 'a', 's', 'm', 'm', 'q', 'c', 'p', 'o'], [13, 11, 4, 11, 13, 12, 3, 2, 2, 11, 0]) == [['f', 'p']]\nassert solution.mostPopularCreator(['h', 'j', 'y', 'y', 'l', 'l'], ['r', 'f', 'f', 'i', 'b', 's'], [10, 6, 8, 14, 13, 6]) == [['y', 'i']]\nassert solution.mostPopularCreator(['l', 'p', 'l', 'p', 'n', 'h', 'v'], ['j', 't', 'k', 'c', 'i', 'w', 'n'], [1, 11, 4, 9, 6, 15, 5]) == [['p', 't']]\nassert solution.mostPopularCreator(['p', 'o', 'r', 'l'], ['t', 'l', 'i', 'e'], [1, 10, 1, 15]) == [['l', 'e']]\nassert solution.mostPopularCreator(['e', 'g', 'e', 'g', 'b', 'c', 'd', 'l', 'o', 'r', 'p', 'g', 'r', 'g'], ['e', 't', 'u', 'w', 'u', 'e', 'l', 'k', 'n', 'i', 'k', 'f', 'e', 'm'], [6, 15, 8, 7, 1, 0, 8, 7, 4, 4, 0, 13, 7, 3]) == [['g', 't']]\nassert solution.mostPopularCreator(['f', 'f', 'j', 'q', 'o', 'r', 'z', 'l', 'h', 'z', 'n', 'u', 'f', 'l', 'f'], ['f', 'g', 'f', 'p', 'u', 'p', 'o', 'r', 'u', 'j', 't', 'o', 'g', 'e', 'z'], [12, 1, 7, 9, 12, 8, 11, 14, 5, 11, 6, 7, 8, 12, 12]) == [['f', 'f']]\nassert solution.mostPopularCreator(['u', 'x', 'n', 't', 'n', 'l', 'w', 'l'], ['n', 'd', 'p', 'n', 'k', 'q', 's', 't'], [0, 14, 7, 11, 8, 5, 11, 5]) == [['n', 'k']]\nassert solution.mostPopularCreator(['f', 'v', 'm', 'f', 'y', 'k', 'z', 'w', 'y', 'e', 'm', 'a', 'u', 'h'], ['b', 'a', 'x', 'j', 'm', 'i', 'w', 's', 'p', 'b', 't', 'l', 'z', 'b'], [14, 7, 2, 8, 4, 5, 2, 10, 12, 12, 4, 4, 15, 4]) == [['f', 'b']]\nassert solution.mostPopularCreator(['o'], ['j'], [10]) == [['o', 'j']]\nassert solution.mostPopularCreator(['f', 'a', 'w', 'w', 't', 'y', 'j', 'q', 'x'], ['k', 'h', 'm', 's', 'h', 'i', 'b', 's', 'f'], [12, 3, 1, 14, 4, 11, 4, 13, 3]) == [['w', 's']]\nassert solution.mostPopularCreator(['s', 'u'], ['g', 'k'], [4, 7]) == [['u', 'k']]\nassert solution.mostPopularCreator(['t', 'j', 'd', 'p', 's', 'h', 'i', 'r', 'c', 'e', 'r'], ['a', 'i', 'v', 'y', 'r', 'a', 'u', 'x', 'r', 'j', 'l'], [11, 4, 6, 9, 15, 10, 12, 2, 9, 14, 12]) == [['s', 'r']]\nassert solution.mostPopularCreator(['z', 'z', 'p', 'p', 'u', 'v', 'g', 'f', 'v', 'z'], ['i', 'y', 'r', 'h', 'e', 'v', 'z', 'f', 't', 'y'], [6, 12, 8, 13, 11, 0, 10, 3, 13, 1]) == [['p', 'h']]\nassert solution.mostPopularCreator(['t', 'i', 'i', 'y', 'p', 'w', 'f', 'g', 'e', 't', 'g', 'n', 'a', 't'], ['j', 'g', 'a', 'l', 'f', 'b', 'y', 't', 'f', 'x', 'o', 'o', 'i', 'y'], [6, 15, 8, 6, 0, 15, 4, 12, 10, 7, 10, 1, 11, 0]) == [['i', 'g']]\nassert solution.mostPopularCreator(['a', 'o'], ['v', 'g'], [2, 14]) == [['o', 'g']]\nassert solution.mostPopularCreator(['n', 'v', 'l', 'u', 'a', 'z'], ['n', 'h', 'c', 'a', 'f', 'l'], [1, 2, 2, 2, 10, 5]) == [['a', 'f']]\nassert solution.mostPopularCreator(['m', 'o', 'b', 'x', 'v', 'n', 'o', 'v', 't', 'h', 'c'], ['v', 'e', 'h', 'n', 'y', 'e', 'v', 'i', 't', 'p', 'f'], [13, 10, 3, 14, 9, 15, 7, 11, 1, 15, 1]) == [['v', 'i']]\nassert solution.mostPopularCreator(['p'], ['k'], [6]) == [['p', 'k']]\nassert solution.mostPopularCreator(['g', 'c', 'u', 'i', 'x'], ['w', 'b', 'd', 'd', 'l'], [10, 5, 13, 12, 3]) == [['u', 'd']]",
  "inefficient_solution": "class Solution:\n    def mostPopularCreator(\n        self, creators: List[str], ids: List[str], views: List[int]\n    ) -> List[List[str]]:\n        creator_dict = {}\n        views_dict = {}\n        for i, (c, id, v) in enumerate(zip(creators, ids, views)):\n            if c not in creator_dict:\n                creator_dict[c] = {}\n                views_dict[c] = []\n            creator_dict[c][i] = v\n            views_dict[c].append((v, i))\n\n        all_popularity = []\n        for c in creator_dict:\n            popularity = sum(list(creator_dict[c].values()))\n            all_popularity.append((popularity, c))\n\n        max_popularity = max(all_popularity)[0]\n        max_creators = [c[1] for c in all_popularity if c[0] == max_popularity]\n\n        answer = []\n        for creator in max_creators:\n            view_count = [v for v, _ in views_dict[creator]]\n            max_view = max(view_count)\n            max_index = view_count.index(max_view)\n            max_id = ids[views_dict[creator][max_index][1]]\n            answer.append([creator, max_id])\n\n        return answer",
  "is_python": true
}