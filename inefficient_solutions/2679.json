{
  "problem_idx": 2679,
  "task_name": "Sum in a Matrix",
  "markdown_description": "\nYou are given a **0-indexed** 2D integer array `nums`. Initially, your score is `0`. Perform the following operations until the matrix becomes empty:\n\n\n1. From each row in the matrix, select the largest number and remove it. In the case of a tie, it does not matter which number is chosen.\n2. Identify the highest number amongst all those removed in step 1. Add that number to your **score**.\n\n\nReturn *the final **score**.*\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** nums = [[7,2,1],[6,4,2],[6,5,3],[3,2,1]]\n**Output:** 15\n**Explanation:** In the first operation, we remove 7, 6, 6, and 3. We then add 7 to our score. Next, we remove 2, 4, 5, and 2. We add 5 to our score. Lastly, we remove 1, 2, 3, and 1. We add 3 to our score. Thus, our final score is 7 + 5 + 3 = 15.\n\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** nums = [[1]]\n**Output:** 1\n**Explanation:** We remove 1 and add it to the answer. We return 1.\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `1 <= nums.length <= 300`\n* `1 <= nums[i].length <= 500`\n* `0 <= nums[i][j] <= 103`\n\n\n",
  "canonical_solution": "class Solution:\n    def matrixSum(self, nums: List[List[int]]) -> int:\n        for row in nums:\n            row.sort()\n        return sum(map(max, zip(*nums)))\n",
  "test_case_generator": "\nimport random\n\nclass Solution:\n    def matrixSum(self, nums):\n        for row in nums:\n            row.sort()\n        return sum(map(max, zip(*nums)))\n\ndef generate_test_case():\n    solution = Solution()\n\n    # Generate random nums list\n    nums = []\n    for _ in range(random.randint(1, 6)):\n        row = []\n        for _ in range(random.randint(1, 6)):\n            row.append(random.randint(0, 10**3))\n        nums.append(row)\n\n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.matrixSum(nums)\n\n    return nums, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        nums, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.matrixSum(nums) == expected_result\n        print(f\"assert solution.matrixSum({nums}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.matrixSum({nums}) == {expected_result}\") # You can find that we construct the test case in the same format as the example\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.matrixSum([[245, 452], [8, 73, 259, 570, 956], [705, 847, 889, 983], [44, 402, 645, 749, 843], [406, 446, 453, 540, 563, 828]]) == 1552\nassert solution.matrixSum([[177, 391, 878], [36, 183, 287, 574, 840], [540, 786], [494], [137]]) == 540\nassert solution.matrixSum([[311, 817], [35, 381, 505, 508, 662, 964], [2, 607, 705, 760, 940], [107, 131, 232, 474, 813, 893]]) == 1128\nassert solution.matrixSum([[218, 329, 559, 789], [162, 212, 247, 803, 862], [514], [221, 225, 455, 851]]) == 514\nassert solution.matrixSum([[499, 549, 783], [528, 850], [568, 750, 841], [26, 42, 169, 233, 855], [106, 342, 717], [170, 211, 346, 613, 814, 950]]) == 1418\nassert solution.matrixSum([[21, 167, 652, 686, 877], [73, 311, 318, 645, 672, 903], [180, 315, 523, 637, 730], [351], [89, 399]]) == 351\nassert solution.matrixSum([[319], [38, 90, 383, 474, 484, 723], [174, 376, 494, 503, 638, 657], [750, 805], [439, 518, 779, 889], [431]]) == 750\nassert solution.matrixSum([[147, 784], [211, 901], [343, 399], [154, 177, 299, 668, 841, 857], [652, 873]]) == 1553\nassert solution.matrixSum([[300, 666, 774], [825], [0, 120], [222, 532, 776]]) == 825\nassert solution.matrixSum([[130, 132, 858, 932]]) == 2052\nassert solution.matrixSum([[85, 449, 824, 872], [149, 579], [433, 437, 748]]) == 1012\nassert solution.matrixSum([[176], [72, 150, 936, 956], [407, 460, 939, 986], [905]]) == 905\nassert solution.matrixSum([[126, 126], [395]]) == 395\nassert solution.matrixSum([[333], [749]]) == 749\nassert solution.matrixSum([[249, 404, 991], [368, 372, 475, 935, 985], [174, 315, 385, 542], [454, 535], [210, 259, 259, 310]]) == 989\nassert solution.matrixSum([[174, 442, 492, 779], [188, 293, 583, 909, 940], [200], [787, 858], [424, 739], [3, 278, 451, 637]]) == 787\nassert solution.matrixSum([[114, 533, 957], [20, 973], [301, 388, 465, 672]]) == 1274\nassert solution.matrixSum([[101, 409, 499, 645], [518], [222, 781, 997], [45, 279, 513, 820, 908], [181, 338, 898]]) == 518\nassert solution.matrixSum([[229, 343, 355, 359, 987], [406, 462, 488, 571, 600, 607]]) == 2914\nassert solution.matrixSum([[256, 540, 728, 937]]) == 2461\nassert solution.matrixSum([[267, 621], [135, 300, 359, 554, 597, 820], [43, 83, 108, 269, 293, 365], [186, 259, 471]]) == 888\nassert solution.matrixSum([[28, 72, 488, 502, 784, 841], [994], [56, 424, 504, 704, 779, 883]]) == 994\nassert solution.matrixSum([[227, 277, 722, 846, 916], [525, 662, 762, 889], [167, 871], [496], [43, 422, 433, 514, 633, 791], [305, 495, 535, 889, 938, 981]]) == 525\nassert solution.matrixSum([[520, 777, 909, 975]]) == 3181\nassert solution.matrixSum([[461, 519, 700, 734], [89, 289, 424, 667, 796, 868], [243, 512], [335, 384]]) == 980\nassert solution.matrixSum([[80, 436, 436, 625, 821, 942], [206, 479, 589, 636, 727, 883], [9, 426, 429, 657, 838, 922], [237, 265, 290, 416, 463, 788], [280, 288, 422, 952]]) == 2300\nassert solution.matrixSum([[859], [269, 291, 306, 868, 880, 912], [354, 551, 553, 818, 939], [729, 890], [44, 362, 430, 576, 913]]) == 859\nassert solution.matrixSum([[173, 297, 453, 532, 845, 996], [172, 808], [19, 37, 120, 148, 227], [376, 490, 554, 860]]) == 1184\nassert solution.matrixSum([[85, 545, 578, 659], [248], [153, 984]]) == 248\nassert solution.matrixSum([[100, 120, 315, 572, 616, 735], [150, 241], [48, 461], [317], [420, 730, 805, 856], [201, 306, 466, 472, 535, 602]]) == 420\nassert solution.matrixSum([[167, 695, 879], [14, 46, 941], [612, 643], [49, 327, 419, 474, 581, 857], [68, 343, 391, 674, 711, 715], [199, 345, 716, 900]]) == 1307\nassert solution.matrixSum([[925], [614], [80], [307]]) == 925\nassert solution.matrixSum([[574], [184, 524, 572, 756], [53, 456, 655, 671, 844, 880]]) == 574\nassert solution.matrixSum([[148, 270, 323, 556, 976], [133, 205, 330, 498, 775, 816], [628], [970], [226]]) == 970\nassert solution.matrixSum([[22, 267, 300, 831], [169, 196, 706], [343], [221, 686], [558, 589, 847, 902, 916]]) == 558\nassert solution.matrixSum([[160, 322, 365, 582, 719, 759], [881], [54, 221, 273, 394, 812, 855]]) == 881\nassert solution.matrixSum([[182, 337, 949], [100, 186, 563, 565, 907, 959], [59, 621], [102, 347, 407, 570, 908], [567, 570, 598]]) == 1188\nassert solution.matrixSum([[67, 147, 317, 738, 903], [386, 461, 486, 594, 934], [641, 829]]) == 1470\nassert solution.matrixSum([[2, 572, 875, 928], [47, 135, 157, 311, 343, 929]]) == 2422\nassert solution.matrixSum([[252, 302, 761, 990], [219], [143, 258, 499, 856, 926], [63, 83, 293, 731, 879], [122, 243, 426], [325, 475, 792, 915, 933, 940]]) == 325\nassert solution.matrixSum([[577, 625, 647], [954], [81, 105, 275, 356, 541], [502, 569, 605, 607, 658, 779], [201, 444, 456, 466, 488, 806]]) == 954\nassert solution.matrixSum([[131, 177, 343, 443, 608], [754], [486, 844]]) == 754\nassert solution.matrixSum([[168, 268, 758, 829, 856], [263, 542, 883, 981], [12, 16, 41, 82, 531]]) == 2669\nassert solution.matrixSum([[528, 578, 604], [77, 502, 503, 584, 806, 977]]) == 1710\nassert solution.matrixSum([[367, 978], [119, 401, 563, 745, 935], [70, 660, 724, 837, 845], [211, 466, 542, 714]]) == 1345\nassert solution.matrixSum([[62, 321], [456, 483, 747, 778, 785]]) == 939\nassert solution.matrixSum([[517, 582], [6, 248, 364, 565, 702, 907], [21], [13, 416, 951]]) == 517\nassert solution.matrixSum([[559, 950], [142, 417, 787, 796], [134, 235, 433, 686, 692, 755]]) == 1509\nassert solution.matrixSum([[732], [3, 43, 486, 732, 761], [97, 184, 689, 988], [44, 502, 503, 781, 910]]) == 732\nassert solution.matrixSum([[224, 286, 306, 729, 916]]) == 2461\nassert solution.matrixSum([[87, 117, 298, 548, 580, 891]]) == 2521\nassert solution.matrixSum([[60, 134, 328, 452, 583, 637], [128, 654, 671], [212, 235, 272, 297, 315, 350], [265, 756, 783]]) == 1804\nassert solution.matrixSum([[65, 196, 305, 368, 948], [768], [0, 81, 732, 810], [588, 889], [424, 991], [102, 259, 668]]) == 768\nassert solution.matrixSum([[706], [77, 258, 678, 906, 953], [293, 336], [16, 419, 687, 902], [296, 812, 877, 886], [261, 535, 545]]) == 706\nassert solution.matrixSum([[385, 474], [630, 688, 754, 769, 931], [198, 447, 993], [704]]) == 704\nassert solution.matrixSum([[103, 460], [496, 522, 609], [189, 607, 719, 791, 803]]) == 1103\nassert solution.matrixSum([[16, 953], [228, 255, 510, 760, 812], [35, 95, 519, 641, 664, 758], [430, 456, 642, 756, 908, 958], [420, 488, 680, 791], [230, 274, 411, 466, 476, 515]]) == 1383\nassert solution.matrixSum([[216, 293, 417, 515, 695, 873], [700, 729, 999], [346, 437, 484, 507, 522, 664], [513, 879]]) == 1579\nassert solution.matrixSum([[319, 579, 588, 748, 803, 970], [568], [372, 689, 742, 837, 936], [83, 156, 445], [362, 639, 676], [11, 33, 53, 74, 267, 671]]) == 568\nassert solution.matrixSum([[4, 57, 311, 576, 711], [111, 691]]) == 802\nassert solution.matrixSum([[540, 723], [584, 887], [93, 189, 813, 984], [530], [47, 90, 111, 119, 172, 274], [270, 618, 940]]) == 584\nassert solution.matrixSum([[721, 836]]) == 1557\nassert solution.matrixSum([[104, 829], [289]]) == 289\nassert solution.matrixSum([[135], [87, 147, 169, 177, 846]]) == 135\nassert solution.matrixSum([[36, 77, 415, 739, 790], [159, 419, 583, 621, 707], [168, 486, 589, 948], [319, 661, 668], [278, 505, 700, 747, 837, 935]]) == 1680\nassert solution.matrixSum([[300, 376, 979], [561], [590, 781], [333]]) == 590\nassert solution.matrixSum([[136, 960], [72, 202, 313, 726, 872], [506, 885], [738], [201, 278, 301, 763, 932, 961], [287, 567, 844]]) == 738\nassert solution.matrixSum([[177, 300, 825], [994]]) == 994\nassert solution.matrixSum([[33, 708, 910, 998], [842, 843, 907], [253, 729], [48, 351, 509], [82, 281, 388, 555, 563, 638], [89, 292, 423, 479, 775]]) == 1685\nassert solution.matrixSum([[162, 465, 834], [39, 221], [159, 335, 360, 401], [89, 253, 353], [77, 172, 442, 749, 905]]) == 627\nassert solution.matrixSum([[212, 470, 590, 710, 736], [35, 821], [84, 645, 650, 724, 761]]) == 1033\nassert solution.matrixSum([[22], [260, 712], [614, 979]]) == 614\nassert solution.matrixSum([[270, 817], [597], [529], [351, 490, 561, 627, 634, 665], [488, 704]]) == 597\nassert solution.matrixSum([[227, 241, 243, 677, 947, 985], [521, 938], [366, 437, 940], [201, 565], [52, 124, 327, 541, 881]]) == 1459\nassert solution.matrixSum([[282], [280], [406, 718, 824, 991], [49, 300, 445, 447, 574, 828], [133, 293, 363, 832], [724]]) == 724\nassert solution.matrixSum([[443, 518], [475, 554, 571, 594, 997], [675], [318, 402], [167, 199, 254, 719, 731, 885], [93, 310]]) == 675\nassert solution.matrixSum([[6, 252, 261, 448, 581], [358, 516, 540, 616, 645, 909], [122, 620], [956], [700, 858]]) == 956\nassert solution.matrixSum([[56, 482, 513], [75, 671, 683, 850, 906], [278, 279, 424], [350, 366, 586, 625, 795, 810], [77, 938, 940]]) == 2228\nassert solution.matrixSum([[50, 98, 129, 424], [44, 90, 142, 330, 425, 569], [301], [349, 624, 684]]) == 349\nassert solution.matrixSum([[12, 227, 550, 580, 633, 648], [179, 209, 492, 611, 701], [383, 410, 849]]) == 1642\nassert solution.matrixSum([[503, 638], [363, 548], [302], [51, 241, 248, 301, 453], [215, 252, 986]]) == 503\nassert solution.matrixSum([[168, 612]]) == 780\nassert solution.matrixSum([[275, 428, 491, 912, 968], [131, 149, 150, 466, 761, 838]]) == 3074\nassert solution.matrixSum([[35, 158, 345], [8, 318, 385, 533]]) == 738\nassert solution.matrixSum([[23, 291, 605, 850, 945], [105, 630, 949], [321]]) == 321\nassert solution.matrixSum([[182, 471, 504, 590, 774], [231], [24, 171, 512, 543, 949], [226, 449, 747, 800]]) == 231\nassert solution.matrixSum([[473, 703], [236, 292, 300, 405, 594, 829], [603, 745, 932], [175, 243, 384, 401, 482, 604], [174, 669, 880, 931]]) == 1348\nassert solution.matrixSum([[778], [54, 548, 558], [168, 194, 283, 327, 479, 623], [323, 345], [32, 305]]) == 778\nassert solution.matrixSum([[32, 643, 687], [945], [22, 248, 256, 571, 606, 657], [312, 565, 609, 743]]) == 945\nassert solution.matrixSum([[490, 530, 945], [77, 215, 591, 761, 785]]) == 1965\nassert solution.matrixSum([[49, 548, 739, 748, 861]]) == 2945\nassert solution.matrixSum([[203, 402, 607, 764, 913], [77], [37, 139, 543, 605, 789], [54, 389, 437, 612, 621, 897], [143, 618, 866, 881]]) == 203\nassert solution.matrixSum([[807, 869], [762, 810, 968], [620, 909], [190, 603]]) == 1716\nassert solution.matrixSum([[618], [287, 795, 884], [28, 67, 127, 481, 715, 859], [17, 295, 831]]) == 618\nassert solution.matrixSum([[18, 407], [141], [69, 342, 506, 583, 794, 798], [225, 469]]) == 225\nassert solution.matrixSum([[468, 581, 619, 860], [38, 108, 183, 204, 238, 791], [385], [340, 449, 793, 794, 875, 885], [165, 272, 285, 660]]) == 468\nassert solution.matrixSum([[233, 300, 963]]) == 1496\nassert solution.matrixSum([[196, 909], [291, 700, 989], [266, 328, 608, 727, 762, 855], [90, 266, 979], [16, 108, 407, 416, 694]]) == 1200\nassert solution.matrixSum([[915], [95, 182, 235, 286, 477, 955], [446, 612, 664, 948], [7]]) == 915\nassert solution.matrixSum([[73, 611, 748], [32, 450, 674, 681, 726], [275, 496, 692]]) == 1634",
  "inefficient_solution": "class Solution:\n    def matrixSum(self, nums: List[List[int]]) -> int:\n        total_memory_used = 0\n        max_removed = []\n        for row in nums:\n            sort_copy = row.copy()\n            sort_copy.sort()\n            max_removed.extend([sort_copy.pop()] * len(sort_copy))\n            total_memory_used += len(sort_copy)\n        max_removed.sort(reverse=True)\n        return sum(max_removed)",
  "is_python": true
}