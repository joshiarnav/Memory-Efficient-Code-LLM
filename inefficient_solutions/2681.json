{
  "problem_idx": 2681,
  "task_name": "Power of Heroes",
  "markdown_description": "\nYou are given a **0-indexed** integer array `nums` representing the strength of some heroes. The **power** of a group of heroes is defined as follows:\n\n\n* Let `i0`, `i1`, ... ,`ik` be the indices of the heroes in a group. Then, the power of this group is `max(nums[i0], nums[i1], ... ,nums[ik])2 * min(nums[i0], nums[i1], ... ,nums[ik])`.\n\n\nReturn *the sum of the **power** of all **non-empty** groups of heroes possible.* Since the sum could be very large, return it **modulo** `109 + 7`.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** nums = [2,1,4]\n**Output:** 141\n**Explanation:** \n1st\u00a0group: [2] has power = 22\u00a0* 2 = 8.\n2nd\u00a0group: [1] has power = 12 * 1 = 1. \n3rd\u00a0group: [4] has power = 42 * 4 = 64. \n4th\u00a0group: [2,1] has power = 22 * 1 = 4. \n5th\u00a0group: [2,4] has power = 42 * 2 = 32. \n6th\u00a0group: [1,4] has power = 42 * 1 = 16. \n\u200b\u200b\u200b\u200b\u200b\u200b\u200b7th\u00a0group: [2,1,4] has power = 42\u200b\u200b\u200b\u200b\u200b\u200b\u200b * 1 = 16. \nThe sum of powers of all groups is 8 + 1 + 64 + 4 + 32 + 16 + 16 = 141.\n\n\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** nums = [1,1,1]\n**Output:** 7\n**Explanation:** A total of 7 groups are possible, and the power of each group will be 1. Therefore, the sum of the powers of all groups is 7.\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `1 <= nums.length <= 105`\n* `1 <= nums[i] <= 109`\n\n\n",
  "canonical_solution": "class Solution:\n    def sumOfPower(self, nums: List[int]) -> int:\n        mod = 10**9 + 7\n        nums.sort()\n        ans = 0\n        p = 0\n        for x in nums[::-1]:\n            ans = (ans + (x * x % mod) * x) % mod\n            ans = (ans + x * p) % mod\n            p = (p * 2 + x * x) % mod\n        return ans\n",
  "test_case_generator": "\nimport random\n\nclass Solution:\n    def sumOfPower(self, nums):\n        mod = 10**9 + 7\n        nums.sort()\n        ans = 0\n        p = 0\n        for x in nums[::-1]:\n            ans = (ans + (x * x % mod) * x) % mod\n            ans = (ans + x * p) % mod\n            p = (p * 2 + x * x) % mod\n        return ans\n\ndef generate_test_case():\n    solution = Solution()\n\n    # Generate random numbers list\n    nums = random.sample(range(1, 1001), random.randint(1, 101))\n\n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.sumOfPower(nums)\n\n    return nums, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        nums, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.sumOfPower(nums) == expected_result\n        print(f\"assert solution.sumOfPower({nums}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.sumOfPower({nums}) == {expected_result}\") # You can find that we construct the test case in the same format as the example\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.sumOfPower([4, 16, 41, 44, 47, 49, 61, 63, 73, 94, 100, 118, 146, 211, 219, 226, 245, 294, 307, 337, 338, 356, 371, 373, 395, 418, 442, 446, 466, 468, 485, 496, 527, 584, 597, 618, 626, 632, 644, 655, 659, 667, 678, 714, 724, 736, 738, 769, 792, 801, 805, 859, 864, 876, 890, 896, 917, 925, 935, 943, 980]) == 9032275\nassert solution.sumOfPower([51, 84, 177, 191, 230, 413, 425, 615, 622, 638, 660, 678, 719, 743, 827, 853]) == 617590138\nassert solution.sumOfPower([2, 18, 21, 27, 38, 53, 115, 118, 123, 129, 142, 147, 167, 172, 173, 189, 195, 198, 209, 217, 219, 224, 245, 247, 255, 266, 272, 281, 289, 296, 329, 333, 337, 341, 343, 348, 362, 371, 372, 377, 397, 405, 425, 445, 450, 458, 466, 516, 548, 579, 596, 609, 618, 628, 636, 638, 684, 688, 699, 715, 738, 749, 750, 761, 800, 802, 816, 830, 869, 881, 888, 907, 929, 931, 937, 940, 942, 943, 944, 958, 968, 974, 980]) == 944766616\nassert solution.sumOfPower([221, 315, 436, 705, 736, 796, 889, 976]) == 552960322\nassert solution.sumOfPower([5, 24, 29, 44, 176, 240, 302, 315, 319, 328, 362, 385, 414, 421, 455, 476, 487, 492, 564, 580, 584, 663, 687, 711, 752, 762, 766, 785, 948, 956]) == 53119676\nassert solution.sumOfPower([10, 17, 38, 39, 55, 65, 81, 123, 128, 131, 162, 166, 196, 203, 213, 235, 245, 258, 309, 325, 327, 361, 395, 407, 414, 427, 434, 439, 447, 450, 459, 466, 469, 473, 486, 489, 502, 522, 544, 560, 565, 568, 575, 580, 600, 603, 621, 636, 648, 650, 675, 681, 683, 691, 709, 711, 738, 752, 753, 756, 767, 776, 778, 808, 812, 856, 873, 882, 896, 900, 909, 925, 951, 956, 968, 976, 977, 983, 984]) == 963062320\nassert solution.sumOfPower([57, 114, 170, 211, 217, 219, 253, 257, 315, 333, 336, 345, 349, 385, 452, 495, 524, 533, 630, 652, 688, 735, 747, 751, 780, 782, 820]) == 291254730\nassert solution.sumOfPower([15, 40, 48, 65, 83, 117, 124, 145, 157, 183, 213, 251, 264, 279, 295, 301, 345, 351, 362, 379, 395, 432, 449, 450, 463, 483, 492, 509, 522, 525, 528, 542, 576, 579, 589, 611, 624, 629, 637, 664, 670, 696, 708, 713, 722, 723, 729, 732, 752, 774, 796, 805, 814, 839, 857, 878, 887, 903, 904, 917, 936, 942, 947, 962, 971, 976, 992, 997]) == 730952754\nassert solution.sumOfPower([1, 13, 14, 18, 19, 27, 28, 29, 35, 36, 40, 42, 46, 64, 66, 89, 95, 97, 163, 167, 168, 178, 194, 199, 206, 207, 221, 227, 250, 252, 287, 290, 291, 292, 311, 347, 367, 373, 382, 385, 412, 414, 416, 417, 421, 425, 429, 445, 458, 470, 473, 475, 482, 506, 512, 517, 542, 550, 570, 572, 576, 582, 583, 590, 598, 648, 657, 665, 668, 686, 694, 699, 700, 701, 706, 710, 727, 741, 751, 768, 771, 781, 800, 809, 836, 838, 852, 856, 866, 871, 873, 915, 923, 929, 938, 952, 953, 989, 994]) == 334734582\nassert solution.sumOfPower([7, 20, 27, 29, 36, 40, 53, 69, 91, 94, 96, 107, 120, 124, 131, 145, 154, 156, 177, 180, 200, 214, 222, 229, 230, 236, 276, 286, 296, 301, 302, 305, 313, 342, 346, 365, 369, 383, 384, 385, 417, 434, 444, 445, 449, 454, 456, 459, 462, 472, 482, 488, 491, 526, 534, 549, 562, 569, 576, 587, 589, 646, 650, 667, 671, 679, 687, 691, 716, 723, 733, 737, 757, 773, 789, 813, 819, 849, 850, 855, 859, 864, 876, 882, 883, 887, 895, 897, 901, 906, 914, 921, 930, 950, 959, 961, 967, 968, 985, 993, 995]) == 99584012\nassert solution.sumOfPower([14, 35, 59, 78, 92, 104, 114, 121, 154, 182, 186, 187, 193, 212, 219, 221, 225, 233, 239, 241, 261, 285, 311, 325, 358, 361, 375, 385, 386, 400, 405, 417, 443, 444, 465, 469, 471, 487, 494, 531, 596, 612, 623, 653, 671, 706, 710, 721, 730, 752, 766, 773, 792, 813, 856, 865, 889, 891, 942, 945, 974, 993, 999]) == 69986711\nassert solution.sumOfPower([301, 302, 396, 438, 550, 582, 592, 732]) == 966734941\nassert solution.sumOfPower([20, 55, 63, 121, 177, 207, 358, 385, 392, 398, 437, 450, 472, 514, 560, 639, 644, 662, 726, 729, 752, 767, 768, 844, 944, 970, 988, 996]) == 250175264\nassert solution.sumOfPower([8, 40, 73, 74, 86, 113, 116, 143, 163, 307, 312, 363, 365, 413, 423, 426, 441, 473, 554, 561, 577, 614, 650, 716, 745, 865, 875, 934, 963]) == 44674600\nassert solution.sumOfPower([16, 25, 32, 33, 38, 42, 53, 58, 79, 82, 107, 110, 118, 120, 124, 125, 129, 140, 146, 162, 163, 167, 189, 202, 203, 206, 212, 223, 231, 235, 237, 240, 243, 250, 253, 269, 276, 284, 289, 298, 343, 360, 366, 368, 391, 400, 422, 425, 436, 438, 442, 475, 477, 484, 510, 524, 535, 537, 539, 548, 559, 569, 573, 575, 576, 577, 591, 601, 622, 635, 661, 677, 686, 697, 700, 732, 744, 768, 769, 816, 817, 834, 871, 882, 909, 917, 918, 938, 944, 945, 948, 955, 970, 975, 983]) == 213860559\nassert solution.sumOfPower([6, 26, 59, 94, 130, 139, 152, 155, 243, 279, 296, 364, 398, 485, 495, 522, 534, 616, 644, 747, 760, 775, 791, 886, 906, 958, 978, 994]) == 750862045\nassert solution.sumOfPower([10, 23, 24, 44, 80, 99, 100, 106, 113, 114, 134, 137, 140, 145, 153, 157, 179, 184, 186, 208, 210, 213, 226, 260, 268, 270, 282, 284, 313, 314, 342, 348, 355, 358, 365, 374, 377, 378, 392, 404, 408, 420, 421, 435, 449, 477, 484, 505, 510, 521, 549, 568, 605, 631, 635, 638, 641, 645, 655, 661, 663, 669, 680, 683, 712, 746, 753, 772, 790, 817, 822, 838, 843, 845, 853, 866, 890, 898, 916, 920, 950, 951, 963, 979, 988, 998]) == 909416815\nassert solution.sumOfPower([3, 4, 50, 60, 82, 101, 113, 132, 136, 162, 181, 183, 200, 212, 229, 235, 243, 250, 259, 267, 270, 272, 301, 321, 385, 397, 446, 469, 474, 521, 528, 558, 615, 616, 638, 658, 708, 722, 739, 779, 793, 809, 903, 910, 914, 930, 945, 955, 964, 967, 986]) == 123976773\nassert solution.sumOfPower([17, 21, 22, 100, 113, 130, 161, 174, 236, 256, 262, 289, 314, 326, 350, 356, 391, 428, 434, 442, 444, 446, 456, 463, 472, 529, 530, 539, 571, 588, 594, 680, 783, 798, 830, 838, 844, 845, 851, 868, 870, 872, 880, 890, 896, 920, 953, 979, 984, 986, 990, 999]) == 941503667\nassert solution.sumOfPower([17, 365, 411, 431, 548, 549, 607, 676, 862, 893, 969]) == 894910616\nassert solution.sumOfPower([12, 41, 59, 109, 119, 125, 150, 152, 155, 183, 217, 257, 260, 261, 277, 338, 350, 379, 475, 503, 506, 524, 532, 561, 619, 731, 836, 922, 961, 993]) == 599085045\nassert solution.sumOfPower([6, 22, 45, 66, 81, 93, 105, 117, 133, 138, 186, 235, 249, 255, 299, 319, 323, 326, 329, 336, 362, 373, 400, 444, 465, 475, 573, 591, 593, 594, 596, 679, 683, 698, 707, 725, 736, 785, 851, 861, 863, 874, 884, 903, 906, 909, 936, 941, 973, 989, 992]) == 348469633\nassert solution.sumOfPower([5, 26, 36, 44, 46, 73, 79, 85, 87, 93, 112, 116, 135, 140, 156, 164, 180, 183, 192, 199, 200, 222, 236, 241, 245, 249, 268, 295, 298, 310, 312, 315, 322, 333, 346, 351, 384, 391, 402, 413, 440, 446, 492, 512, 514, 524, 526, 533, 536, 537, 561, 592, 601, 642, 644, 664, 667, 672, 688, 692, 712, 723, 736, 748, 763, 770, 788, 792, 793, 809, 826, 835, 839, 844, 848, 860, 861, 880, 888, 913, 916, 917, 922, 935, 938, 939, 945, 958, 965, 972, 973, 982]) == 254303475\nassert solution.sumOfPower([15, 56, 57, 64, 76, 84, 101, 129, 148, 151, 176, 190, 226, 242, 253, 261, 266, 268, 273, 292, 304, 307, 316, 325, 369, 400, 418, 428, 433, 464, 490, 499, 518, 527, 539, 540, 548, 560, 569, 574, 581, 586, 597, 610, 616, 622, 634, 637, 644, 666, 674, 675, 680, 705, 712, 718, 724, 734, 746, 759, 764, 799, 810, 823, 826, 828, 855, 869, 876, 878, 906, 925, 951, 958, 959]) == 723096471\nassert solution.sumOfPower([33, 47, 83, 127, 173, 211, 215, 216, 217, 221, 223, 246, 253, 257, 295, 303, 311, 312, 330, 337, 377, 386, 419, 468, 481, 484, 514, 522, 556, 569, 582, 606, 614, 654, 675, 722, 843, 846, 849, 860, 871, 882, 888, 936, 981, 990]) == 915267173\nassert solution.sumOfPower([15, 92, 101, 188, 191, 243, 255, 446, 497, 538, 600, 613, 618, 632, 637, 639, 673, 858, 992]) == 356470585\nassert solution.sumOfPower([65, 85, 103, 124, 127, 167, 176, 181, 219, 291, 299, 313, 332, 336, 346, 356, 362, 388, 391, 408, 449, 477, 526, 563, 573, 597, 703, 704, 707, 714, 740, 784, 801, 823, 881, 898, 942, 967, 983]) == 822754733\nassert solution.sumOfPower([19, 36, 48, 54, 74, 85, 95, 98, 158, 184, 216, 226, 266, 304, 345, 357, 379, 382, 389, 391, 403, 409, 411, 422, 430, 450, 452, 476, 478, 498, 524, 533, 553, 595, 662, 681, 702, 735, 744, 750, 751, 754, 759, 767, 770, 771, 776, 778, 793, 806, 807, 811, 827, 873, 880, 896, 910, 942, 971, 974, 992]) == 957110609\nassert solution.sumOfPower([19, 28, 40, 41, 47, 69, 83, 91, 96, 100, 109, 112, 117, 162, 174, 197, 201, 207, 211, 216, 226, 228, 230, 231, 233, 236, 239, 261, 303, 304, 308, 314, 317, 323, 324, 334, 341, 356, 369, 379, 388, 401, 410, 429, 431, 464, 502, 510, 535, 576, 584, 599, 605, 616, 618, 627, 643, 658, 669, 673, 675, 694, 708, 724, 727, 737, 760, 761, 770, 776, 777, 798, 826, 828, 835, 852, 910, 922, 929, 952, 954, 964, 974, 981, 989, 994]) == 774253829\nassert solution.sumOfPower([23, 53, 70, 93, 99, 101, 128, 135, 170, 196, 237, 287, 324, 353, 364, 375, 386, 446, 464, 469, 480, 526, 535, 537, 586, 588, 622, 677, 686, 713, 746, 752, 760, 773, 774, 779, 785, 792, 795, 817, 826, 872, 906, 922, 972, 988]) == 164015826\nassert solution.sumOfPower([2, 10, 23, 34, 38, 61, 72, 80, 104, 124, 145, 158, 159, 172, 175, 187, 223, 241, 244, 254, 263, 283, 294, 318, 319, 335, 343, 345, 347, 381, 382, 383, 386, 412, 433, 450, 456, 459, 461, 480, 488, 502, 512, 517, 519, 532, 551, 553, 568, 576, 590, 624, 635, 681, 723, 751, 753, 763, 768, 771, 789, 790, 794, 831, 836, 854, 868, 877, 886, 893, 902, 912, 949, 974, 975, 979, 987, 988, 999]) == 589761523\nassert solution.sumOfPower([17, 58, 123, 128, 269, 327, 348, 468, 524, 541, 643, 707, 759, 914]) == 367322799\nassert solution.sumOfPower([70, 153, 253, 304, 343, 356, 357, 361, 452, 460, 482, 487, 496, 501, 510, 517, 530, 550, 572, 577, 621, 626, 642, 682, 698, 749, 782, 792, 818, 826, 874, 877, 888, 971]) == 948054959\nassert solution.sumOfPower([18, 89, 118, 200, 230, 487, 502, 529, 603, 616, 683, 730, 767, 771, 860, 927, 957]) == 282788833\nassert solution.sumOfPower([5, 26, 41, 66, 78, 81, 97, 190, 197, 232, 268, 274, 275, 288, 300, 304, 319, 338, 347, 380, 390, 432, 476, 491, 492, 502, 504, 549, 552, 560, 571, 572, 590, 605, 649, 653, 671, 712, 725, 728, 738, 750, 763, 767, 804, 825, 826, 832, 839, 863, 864, 881, 887, 895, 896, 903, 918, 921, 947, 957, 964, 979]) == 810850888\nassert solution.sumOfPower([93, 685, 949]) == 4955213\nassert solution.sumOfPower([6, 65, 91, 99, 105, 110, 127, 130, 143, 164, 166, 167, 177, 184, 191, 198, 221, 252, 259, 264, 276, 288, 309, 331, 343, 353, 362, 375, 427, 428, 439, 444, 472, 473, 478, 489, 497, 502, 511, 538, 540, 575, 579, 580, 585, 609, 616, 626, 632, 675, 681, 685, 690, 693, 698, 703, 765, 766, 777, 807, 893, 906, 911, 916, 931, 936, 968]) == 461600460\nassert solution.sumOfPower([3, 69, 135, 136, 150, 157, 182, 189, 218, 227, 252, 272, 293, 297, 329, 354, 358, 366, 374, 382, 410, 443, 453, 463, 465, 469, 475, 491, 497, 506, 532, 553, 555, 559, 592, 600, 607, 614, 675, 677, 682, 700, 701, 709, 728, 792, 822, 824, 832, 839, 880, 894, 899, 905, 908, 916, 926, 935, 952, 970, 982]) == 801221232\nassert solution.sumOfPower([2, 41, 82, 104, 135, 169, 301, 305, 344, 380, 505, 535, 549, 624, 666, 727, 729, 824, 838, 922, 930, 949]) == 76118513\nassert solution.sumOfPower([46, 47, 77, 79, 169, 184, 304, 440, 485, 543, 559, 560, 686, 717, 744, 750, 760, 866, 900, 922, 935, 940, 959, 960]) == 457948711\nassert solution.sumOfPower([15, 16, 27, 41, 50, 53, 62, 69, 70, 73, 79, 90, 91, 96, 107, 121, 123, 135, 136, 168, 191, 194, 211, 212, 219, 221, 253, 280, 293, 297, 306, 331, 335, 336, 341, 346, 353, 355, 365, 406, 438, 452, 472, 488, 493, 533, 540, 551, 564, 576, 579, 581, 582, 586, 590, 602, 607, 616, 639, 648, 654, 685, 699, 710, 715, 719, 727, 740, 744, 749, 750, 757, 767, 779, 796, 798, 800, 827, 828, 842, 847, 873, 884, 901, 910, 923, 924, 938, 972, 985]) == 935279250\nassert solution.sumOfPower([25, 40, 56, 74, 77, 87, 104, 133, 147, 148, 165, 171, 222, 233, 238, 289, 351, 364, 395, 417, 424, 464, 476, 494, 499, 549, 551, 610, 619, 658, 685, 691, 716, 725, 796, 800, 802, 841, 855, 858, 868, 897, 905, 930, 953, 955, 959]) == 764994471\nassert solution.sumOfPower([16, 104, 112, 121, 130, 141, 155, 173, 194, 232, 245, 256, 261, 274, 306, 318, 325, 342, 343, 355, 359, 370, 372, 386, 425, 454, 458, 464, 467, 468, 480, 515, 516, 524, 526, 536, 540, 545, 563, 593, 611, 621, 662, 672, 681, 695, 710, 727, 732, 746, 750, 752, 754, 761, 772, 783, 785, 788, 803, 813, 829, 848, 857, 887, 934, 935, 946, 994]) == 593311161\nassert solution.sumOfPower([6, 25, 32, 62, 71, 82, 93, 105, 111, 135, 143, 153, 156, 162, 181, 185, 192, 197, 202, 228, 234, 237, 242, 250, 264, 276, 280, 307, 311, 317, 340, 343, 349, 359, 360, 370, 374, 383, 395, 400, 404, 436, 437, 442, 445, 453, 456, 501, 510, 522, 532, 572, 580, 603, 608, 623, 627, 654, 656, 661, 670, 722, 729, 733, 760, 779, 782, 793, 802, 806, 810, 836, 857, 875, 889, 922, 927, 929, 933, 942, 955, 975]) == 716772171\nassert solution.sumOfPower([12, 15, 36, 37, 45, 55, 56, 63, 80, 107, 120, 130, 155, 156, 169, 178, 185, 227, 242, 250, 251, 265, 288, 294, 298, 305, 327, 377, 395, 396, 403, 421, 424, 457, 459, 469, 492, 511, 517, 545, 558, 567, 571, 580, 582, 592, 598, 623, 637, 639, 646, 649, 654, 657, 663, 664, 672, 684, 689, 692, 693, 695, 708, 709, 732, 736, 751, 762, 786, 806, 846, 869, 871, 883, 887, 896, 898, 903, 939, 950, 971, 973, 975]) == 955772959\nassert solution.sumOfPower([6, 34, 54, 103, 109, 158, 169, 183, 198, 205, 211, 224, 248, 267, 272, 278, 296, 308, 328, 370, 376, 413, 435, 442, 454, 458, 480, 497, 563, 572, 589, 605, 641, 646, 694, 703, 705, 711, 726, 773, 797, 838, 859, 861, 869, 892, 949, 988]) == 793678435\nassert solution.sumOfPower([1, 6, 15, 43, 67, 70, 81, 84, 117, 139, 143, 173, 208, 214, 233, 246, 250, 265, 278, 282, 291, 317, 347, 356, 359, 409, 417, 422, 440, 447, 485, 487, 498, 502, 537, 540, 551, 557, 577, 586, 595, 610, 619, 620, 645, 661, 679, 682, 723, 735, 739, 750, 765, 776, 777, 783, 792, 806, 825, 827, 832, 834, 835, 881, 886, 901, 916, 950, 966, 977, 985, 992]) == 858003588\nassert solution.sumOfPower([49, 58, 64, 70, 114, 123, 154, 156, 159, 180, 209, 330, 376, 379, 384, 388, 393, 404, 414, 425, 438, 439, 440, 455, 457, 458, 463, 484, 490, 499, 524, 532, 559, 569, 598, 636, 707, 717, 750, 752, 757, 767, 806, 815, 817, 823, 829, 835, 868, 882, 887, 906, 933, 976, 987, 992, 996]) == 56846917\nassert solution.sumOfPower([58, 114, 195, 258, 277, 470, 520, 625, 799, 815, 909, 945, 950]) == 179898797\nassert solution.sumOfPower([43, 46, 73, 89, 109, 119, 138, 161, 170, 178, 197, 215, 231, 251, 258, 260, 275, 285, 326, 363, 371, 385, 395, 409, 425, 443, 479, 492, 501, 505, 523, 532, 548, 561, 584, 605, 619, 625, 628, 637, 639, 666, 681, 685, 694, 713, 714, 715, 716, 722, 728, 767, 773, 788, 800, 820, 844, 851, 856, 888, 906, 943, 969, 979, 984, 992, 995]) == 660909037\nassert solution.sumOfPower([4, 11, 21, 24, 30, 40, 68, 134, 154, 157, 173, 186, 188, 226, 234, 237, 241, 258, 264, 327, 340, 342, 365, 436, 442, 444, 457, 461, 467, 490, 507, 549, 568, 584, 612, 613, 616, 628, 635, 642, 646, 657, 675, 680, 700, 703, 731, 747, 757, 793, 797, 828, 832, 858, 865, 889, 893, 905, 916, 934, 966, 970]) == 889175198\nassert solution.sumOfPower([1, 15, 25, 26, 31, 43, 48, 64, 70, 81, 82, 88, 93, 118, 139, 162, 190, 197, 203, 232, 236, 242, 247, 262, 267, 274, 276, 286, 299, 300, 335, 339, 349, 364, 371, 377, 388, 396, 402, 408, 418, 420, 423, 444, 456, 471, 472, 502, 504, 512, 526, 535, 556, 559, 566, 572, 582, 615, 620, 621, 630, 640, 672, 681, 684, 685, 701, 707, 736, 751, 762, 763, 770, 778, 783, 792, 796, 806, 810, 816, 823, 828, 831, 832, 850, 851, 855, 875, 884, 885, 901, 907, 928, 950, 960, 965, 975]) == 512033600\nassert solution.sumOfPower([4, 33, 38, 45, 66, 72, 102, 108, 110, 114, 118, 139, 150, 151, 185, 199, 207, 243, 247, 250, 259, 261, 308, 320, 332, 340, 349, 365, 377, 382, 391, 394, 400, 433, 439, 447, 462, 473, 479, 480, 489, 501, 503, 519, 520, 526, 527, 528, 531, 560, 565, 566, 572, 591, 606, 616, 625, 644, 647, 668, 680, 683, 710, 715, 716, 724, 738, 755, 757, 771, 778, 779, 782, 790, 826, 850, 859, 863, 884, 886, 892, 899, 900, 917, 933, 942, 952, 978, 986]) == 468552790\nassert solution.sumOfPower([10, 12, 17, 19, 23, 72, 85, 94, 103, 110, 131, 145, 150, 154, 156, 162, 180, 181, 188, 192, 198, 269, 300, 324, 341, 352, 381, 382, 386, 402, 415, 436, 442, 450, 457, 460, 461, 467, 473, 481, 492, 507, 547, 550, 556, 557, 560, 576, 581, 590, 615, 623, 633, 634, 636, 657, 696, 701, 715, 746, 751, 757, 760, 768, 778, 781, 795, 805, 822, 832, 833, 836, 838, 843, 847, 868, 883, 889, 893, 903, 908, 942, 944, 953, 968, 977, 979, 994, 995]) == 263402201\nassert solution.sumOfPower([9, 29, 37, 52, 66, 72, 73, 89, 97, 100, 106, 107, 166, 180, 186, 193, 205, 274, 276, 281, 295, 310, 312, 320, 331, 346, 373, 378, 388, 409, 414, 454, 455, 471, 498, 513, 514, 517, 525, 529, 534, 548, 563, 572, 577, 587, 595, 607, 619, 647, 664, 688, 690, 698, 703, 725, 764, 795, 798, 804, 842, 848, 850, 865, 881, 885, 888, 898, 921, 922, 927, 938, 942, 954, 955, 980, 983, 984, 990, 992]) == 619905551\nassert solution.sumOfPower([7, 13, 15, 22, 44, 77, 101, 126, 147, 166, 173, 175, 182, 191, 229, 253, 258, 261, 266, 275, 284, 304, 320, 333, 344, 347, 358, 363, 389, 406, 407, 452, 469, 487, 508, 510, 512, 538, 542, 571, 578, 579, 590, 592, 629, 634, 638, 665, 678, 680, 681, 689, 697, 706, 709, 727, 731, 735, 751, 763, 766, 804, 807, 833, 852, 854, 857, 858, 862, 883, 885, 892, 904, 916, 943, 989, 994]) == 459865938\nassert solution.sumOfPower([4, 39, 41, 55, 98, 107, 112, 115, 129, 137, 149, 157, 178, 181, 182, 191, 204, 212, 230, 258, 262, 272, 278, 282, 283, 284, 285, 301, 303, 304, 308, 314, 329, 364, 370, 397, 416, 427, 448, 461, 501, 513, 516, 537, 542, 577, 583, 585, 596, 598, 613, 614, 619, 628, 647, 653, 667, 668, 670, 673, 675, 683, 685, 688, 691, 692, 703, 741, 744, 746, 747, 750, 754, 761, 776, 782, 788, 789, 791, 826, 831, 851, 852, 856, 857, 861, 909, 911, 921, 929, 945, 952, 954, 969, 973, 974, 997]) == 276741594\nassert solution.sumOfPower([3, 6, 9, 13, 17, 36, 53, 74, 87, 89, 97, 109, 114, 115, 127, 143, 155, 157, 159, 160, 162, 174, 176, 191, 193, 200, 233, 246, 262, 263, 273, 290, 296, 297, 304, 317, 318, 319, 321, 369, 385, 404, 410, 421, 437, 441, 445, 458, 480, 484, 490, 509, 515, 533, 540, 583, 601, 605, 613, 615, 633, 637, 647, 653, 663, 674, 686, 691, 703, 709, 716, 717, 719, 721, 730, 743, 753, 756, 785, 786, 803, 845, 873, 886, 887, 889, 896, 913, 944, 977]) == 504104719\nassert solution.sumOfPower([4, 9, 23, 43, 54, 58, 71, 79, 87, 114, 124, 157, 163, 177, 179, 189, 191, 197, 228, 244, 247, 249, 251, 256, 266, 302, 318, 323, 324, 327, 343, 353, 364, 365, 372, 393, 401, 408, 411, 414, 415, 420, 422, 428, 432, 470, 476, 478, 485, 500, 507, 517, 518, 527, 545, 560, 579, 594, 616, 654, 655, 667, 673, 679, 681, 714, 740, 741, 747, 759, 766, 768, 776, 781, 786, 794, 804, 811, 834, 836, 850, 863, 877, 905, 915, 917, 979]) == 197228135\nassert solution.sumOfPower([24, 31, 32, 39, 68, 74, 75, 80, 83, 88, 115, 124, 147, 181, 183, 201, 202, 223, 227, 236, 242, 259, 263, 287, 288, 299, 318, 329, 338, 342, 359, 366, 370, 380, 386, 413, 434, 448, 460, 465, 506, 514, 525, 527, 533, 545, 550, 557, 560, 566, 578, 583, 584, 585, 593, 602, 632, 633, 648, 669, 694, 702, 717, 739, 763, 770, 771, 775, 776, 779, 781, 808, 826, 841, 848, 849, 867, 876, 884, 887, 893, 912, 931, 939, 958, 960, 965, 978, 980]) == 704134470\nassert solution.sumOfPower([174, 197, 275, 302, 347, 385, 473, 475, 617, 619, 638, 877, 878, 906, 911, 917, 925]) == 670864953\nassert solution.sumOfPower([45, 53, 108, 219, 222, 224, 233, 236, 249, 253, 288, 291, 295, 363, 418, 448, 450, 466, 532, 555, 740, 764, 795, 845, 848, 869, 898, 949]) == 81739951\nassert solution.sumOfPower([8, 12, 34, 111, 126, 131, 133, 152, 153, 158, 196, 228, 234, 239, 251, 263, 267, 270, 287, 305, 324, 327, 331, 344, 357, 393, 399, 429, 431, 437, 491, 504, 547, 565, 626, 642, 654, 666, 668, 669, 681, 686, 693, 698, 699, 706, 716, 730, 753, 755, 757, 827, 842, 845, 885, 918, 940, 962, 992, 994]) == 545834278\nassert solution.sumOfPower([5, 37, 48, 93, 116, 121, 125, 135, 146, 178, 190, 203, 204, 239, 258, 261, 306, 332, 344, 347, 351, 359, 402, 452, 459, 462, 463, 508, 533, 565, 572, 575, 613, 630, 650, 653, 659, 668, 731, 764, 780, 807, 817, 821, 858, 904, 936, 954, 985, 991, 996, 998]) == 338346195\nassert solution.sumOfPower([46, 182, 232, 245, 246, 450, 493, 605, 659, 871, 960, 984, 985]) == 79495879\nassert solution.sumOfPower([32, 33, 43, 46, 54, 87, 146, 149, 156, 227, 228, 236, 244, 251, 252, 258, 315, 353, 354, 357, 386, 398, 416, 466, 468, 469, 470, 516, 555, 575, 596, 616, 623, 636, 638, 652, 676, 683, 788, 803, 817, 821, 835, 841, 876, 882, 886, 906, 913, 960, 972, 983]) == 474429927\nassert solution.sumOfPower([14, 21, 22, 44, 65, 69, 74, 76, 91, 107, 155, 160, 173, 175, 228, 229, 249, 298, 299, 304, 317, 319, 347, 358, 360, 361, 384, 399, 402, 432, 441, 447, 451, 456, 466, 473, 480, 491, 522, 534, 540, 545, 565, 602, 614, 621, 640, 642, 643, 652, 657, 662, 663, 674, 689, 708, 725, 734, 745, 755, 772, 777, 778, 783, 784, 802, 817, 834, 849, 875, 878, 879, 902, 911, 936, 941, 991]) == 154366773\nassert solution.sumOfPower([15, 52, 74, 111, 227, 255, 320, 342, 395, 404, 440, 461, 462, 476, 492, 514, 519, 534, 569, 627, 658, 661, 665, 674, 690, 705, 713, 732, 743, 772, 778, 817, 827, 847, 911, 942, 952, 970, 982]) == 427919659\nassert solution.sumOfPower([2, 4, 7, 26, 33, 44, 49, 55, 61, 67, 69, 95, 101, 107, 118, 125, 137, 139, 154, 157, 160, 168, 178, 188, 189, 194, 195, 203, 204, 209, 218, 219, 231, 241, 251, 252, 270, 274, 282, 283, 284, 299, 301, 331, 345, 388, 392, 397, 402, 431, 439, 445, 447, 454, 467, 470, 480, 500, 523, 526, 530, 535, 557, 560, 584, 586, 591, 605, 620, 622, 636, 642, 657, 676, 689, 690, 714, 715, 727, 740, 749, 773, 795, 819, 833, 839, 848, 852, 863, 866, 867, 888, 899, 924, 935, 941, 947, 951, 974, 983, 996]) == 303922697\nassert solution.sumOfPower([29, 54, 110, 144, 149, 205, 212, 234, 260, 264, 301, 312, 373, 393, 407, 411, 437, 453, 483, 531, 542, 551, 578, 656, 672, 754, 827, 876, 890, 977]) == 848608081\nassert solution.sumOfPower([15, 30, 70, 77, 81, 82, 88, 98, 103, 115, 134, 136, 156, 172, 181, 192, 212, 231, 232, 235, 262, 265, 270, 276, 285, 314, 341, 346, 362, 372, 375, 382, 389, 393, 409, 444, 449, 451, 474, 496, 525, 531, 532, 548, 576, 577, 582, 607, 610, 622, 647, 656, 669, 675, 690, 721, 722, 724, 729, 742, 748, 759, 766, 779, 803, 819, 826, 827, 834, 866, 878, 900, 912, 968, 973, 976, 988, 992, 994]) == 555648072\nassert solution.sumOfPower([22, 32, 75, 174, 204, 212, 255, 299, 321, 326, 357, 394, 432, 439, 454, 456, 534, 565, 608, 652, 667, 759, 777, 791, 837, 898, 945]) == 629335508\nassert solution.sumOfPower([8, 14, 24, 29, 32, 39, 50, 73, 90, 91, 94, 103, 127, 147, 151, 163, 175, 179, 181, 193, 203, 207, 211, 217, 228, 246, 250, 277, 278, 308, 325, 337, 342, 343, 355, 363, 364, 371, 379, 390, 396, 422, 425, 451, 454, 481, 482, 500, 515, 520, 522, 526, 530, 531, 534, 550, 594, 621, 635, 658, 665, 676, 678, 690, 709, 721, 723, 729, 735, 737, 738, 739, 766, 776, 788, 800, 805, 826, 841, 957, 959, 963, 977, 992, 994, 996]) == 825924706\nassert solution.sumOfPower([7, 17, 66, 70, 120, 124, 198, 302, 313, 330, 345, 373, 405, 451, 498, 605, 607, 613, 633, 710, 711, 798, 858, 938, 940, 945, 984]) == 959685698\nassert solution.sumOfPower([46, 55, 77, 86, 89, 96, 104, 108, 120, 152, 167, 197, 238, 264, 274, 281, 292, 305, 311, 316, 348, 355, 356, 358, 365, 393, 406, 408, 417, 418, 446, 472, 494, 504, 514, 524, 530, 558, 577, 586, 630, 635, 639, 649, 677, 678, 697, 704, 712, 744, 757, 760, 777, 782, 801, 857, 866, 872, 883, 890, 903, 905, 914, 921, 944, 952, 973, 985, 993]) == 9042872\nassert solution.sumOfPower([41, 66, 69, 76, 85, 97, 108, 121, 126, 146, 154, 157, 163, 166, 173, 188, 189, 200, 203, 211, 226, 230, 233, 270, 280, 321, 349, 370, 400, 403, 412, 417, 425, 458, 470, 507, 521, 525, 536, 546, 548, 558, 568, 588, 601, 606, 610, 616, 623, 632, 665, 714, 723, 726, 738, 739, 740, 754, 760, 771, 781, 789, 797, 802, 806, 809, 810, 823, 828, 830, 832, 834, 840, 847, 851, 853, 861, 863, 867, 890, 892, 914, 919, 974, 984]) == 906534880\nassert solution.sumOfPower([53, 318, 549, 656, 773, 873, 887]) == 709398616\nassert solution.sumOfPower([16, 20, 48, 49, 50, 55, 63, 72, 90, 111, 118, 139, 168, 201, 210, 246, 248, 282, 296, 297, 320, 365, 376, 380, 388, 408, 409, 424, 427, 429, 446, 461, 466, 469, 470, 478, 484, 503, 504, 509, 534, 553, 570, 575, 614, 617, 621, 622, 624, 641, 654, 655, 665, 672, 674, 693, 703, 708, 712, 730, 736, 739, 743, 759, 786, 810, 814, 818, 819, 847, 890, 895, 903, 917, 922, 944, 969, 992, 1000]) == 821331682\nassert solution.sumOfPower([47, 79, 101, 126, 132, 165, 200, 229, 286, 293, 294, 440, 493, 505, 539, 574, 581, 636, 655, 661, 677, 721, 774, 867, 900]) == 936283059\nassert solution.sumOfPower([10, 28, 86, 87, 114, 245, 247, 324, 449, 508, 701, 846, 885, 894]) == 854395528\nassert solution.sumOfPower([12, 17, 25, 55, 97, 122, 154, 179, 190, 234, 235, 269, 315, 316, 365, 391, 400, 427, 456, 462, 509, 613, 662, 725, 731, 746, 828, 859, 894, 900, 907, 951, 954]) == 997777288\nassert solution.sumOfPower([10, 203, 552]) == 244924117\nassert solution.sumOfPower([29, 31, 32, 45, 50, 83, 98, 107, 113, 118, 123, 125, 127, 131, 136, 143, 146, 184, 190, 192, 212, 214, 217, 218, 222, 231, 248, 282, 317, 331, 338, 340, 345, 346, 349, 378, 388, 403, 427, 433, 435, 436, 438, 452, 470, 484, 497, 506, 514, 518, 545, 549, 559, 597, 624, 636, 638, 640, 650, 658, 659, 663, 665, 670, 690, 709, 728, 732, 733, 750, 755, 782, 787, 792, 813, 821, 822, 824, 830, 839, 844, 856, 885, 912, 914, 924, 927, 958, 959, 967, 976, 981, 998]) == 724873997\nassert solution.sumOfPower([50, 90, 228, 305, 369, 462, 476, 641, 700, 847, 950, 987]) == 559169273\nassert solution.sumOfPower([2, 6, 7, 16, 22, 24, 26, 27, 30, 61, 97, 116, 119, 124, 146, 153, 187, 198, 200, 241, 243, 264, 267, 273, 275, 277, 278, 284, 302, 318, 320, 345, 356, 373, 378, 385, 389, 392, 397, 402, 409, 417, 433, 442, 480, 489, 493, 501, 512, 518, 519, 547, 555, 557, 577, 602, 605, 606, 610, 623, 647, 655, 656, 671, 672, 683, 704, 718, 726, 727, 740, 746, 761, 814, 829, 847, 855, 865, 887, 910, 938, 942, 958, 965, 981, 992]) == 533417223\nassert solution.sumOfPower([67, 105, 188, 193, 212, 234, 245, 270, 286, 334, 345, 350, 427, 469, 495, 501, 503, 525, 532, 578, 653, 680, 724, 738, 739, 759, 763, 895, 917, 923, 967]) == 665880907\nassert solution.sumOfPower([136, 186, 443, 773, 788, 845, 882]) == 705165843\nassert solution.sumOfPower([4, 12, 35, 48, 57, 97, 106, 150, 153, 170, 201, 258, 306, 347, 431, 468, 474, 509, 531, 539, 549, 660, 668, 690, 748, 749, 753, 762, 785, 787, 837, 898, 908, 963, 972, 979]) == 228557431\nassert solution.sumOfPower([10, 59, 104, 105, 149, 171, 253, 262, 266, 273, 293, 310, 326, 376, 397, 469, 482, 498, 524, 550, 563, 573, 580, 581, 595, 604, 618, 630, 636, 672, 675, 695, 734, 739, 770, 811, 854, 867, 922, 967, 985, 993]) == 449092824\nassert solution.sumOfPower([57, 58, 61, 78, 153, 398, 485, 532, 578, 597, 598, 629, 633, 643, 677, 738, 747, 811, 843, 846, 913, 933, 975]) == 451337467\nassert solution.sumOfPower([12, 44, 98, 210, 259, 289, 315, 322, 331, 332, 342, 351, 374, 378, 388, 413, 419, 428, 443, 505, 575, 639, 648, 661, 663, 701, 735, 789, 793, 826, 841, 858, 886, 891, 916, 938, 945, 984]) == 449031822\nassert solution.sumOfPower([12, 28, 55, 84, 90, 98, 109, 149, 169, 175, 188, 199, 202, 218, 228, 229, 243, 248, 257, 268, 273, 274, 286, 334, 361, 374, 382, 404, 441, 445, 449, 452, 473, 479, 483, 484, 509, 512, 525, 534, 565, 571, 572, 605, 624, 625, 674, 687, 701, 763, 770, 774, 785, 790, 841, 878, 897, 898, 901, 904, 928, 931, 937, 990, 992, 994]) == 479468844\nassert solution.sumOfPower([4, 50, 52, 55, 59, 60, 74, 85, 102, 115, 155, 165, 177, 185, 190, 205, 268, 279, 298, 306, 312, 348, 353, 374, 377, 416, 422, 451, 461, 475, 476, 498, 511, 519, 528, 548, 565, 567, 583, 594, 605, 613, 627, 637, 666, 691, 693, 699, 700, 715, 723, 737, 742, 753, 765, 790, 792, 806, 810, 825, 864, 879, 880, 893, 894, 909, 935, 940]) == 527132935\nassert solution.sumOfPower([115, 258, 372, 379, 565, 720, 886, 967]) == 408648652\nassert solution.sumOfPower([43, 81, 150, 205, 210, 241, 311, 321, 330, 389, 395, 549, 578, 602, 623, 791, 810, 826, 827, 938, 994]) == 16755988\nassert solution.sumOfPower([20, 24, 38, 62, 67, 71, 97, 107, 110, 121, 138, 148, 162, 176, 186, 202, 253, 262, 269, 282, 301, 306, 314, 328, 350, 353, 364, 402, 414, 420, 426, 435, 441, 457, 461, 470, 474, 490, 510, 512, 514, 548, 573, 584, 619, 627, 634, 637, 642, 644, 645, 653, 662, 672, 680, 686, 691, 695, 704, 705, 709, 710, 711, 747, 772, 812, 838, 848, 882, 895, 897, 904, 910, 923, 939, 942, 943, 961, 964, 966, 994, 1000]) == 828562298\nassert solution.sumOfPower([3, 70, 93, 123, 257, 291, 436, 503, 515, 593, 680, 743, 754, 777, 905, 988]) == 830638640\nassert solution.sumOfPower([27, 114, 142, 161, 234, 259, 276, 363, 386, 397, 426, 447, 457, 467, 560, 574, 678, 722, 850, 953]) == 710308188\nassert solution.sumOfPower([82, 113, 216, 243, 252, 322, 366, 414, 435, 447, 479, 490, 550, 558, 562, 601, 714, 739, 821, 834, 849, 904, 929, 947, 954, 964, 974]) == 742206030\nassert solution.sumOfPower([16, 17, 22, 23, 30, 43, 52, 84, 91, 93, 121, 130, 160, 165, 198, 207, 210, 215, 218, 219, 252, 309, 320, 335, 339, 340, 358, 376, 389, 395, 397, 414, 434, 441, 459, 462, 464, 465, 507, 519, 546, 550, 552, 555, 589, 596, 600, 612, 623, 628, 646, 653, 661, 707, 722, 727, 733, 740, 741, 742, 753, 765, 770, 771, 773, 774, 787, 793, 794, 802, 833, 841, 876, 877, 907, 917, 942, 945, 969, 978, 980, 991]) == 701923562",
  "inefficient_solution": "class Solution:\n    def sumOfPower(self, nums):\n        mod = 10**9 + 7\n        nums.sort()\n        ans = 0\n        powers = []\n        for x in nums:\n            powers.append(x * x)\n        for x in nums[::-1]:\n            powers.append(x)\n        for _ in range(2**len(nums)):\n            group = []\n            for i in range(len(nums)):\n                if (1 << i) & _:\n                    group.append(nums[i])\n            if group:\n                group.sort()\n                ans = (ans + (group[-1] * group[-1] % mod) * group[0]) % mod\n                for x in group:\n                    ans = (ans + x * sum(group)) % mod\n        return ans",
  "is_python": true
}