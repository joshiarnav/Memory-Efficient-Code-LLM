{
  "problem_idx": 1051,
  "task_name": "Height Checker",
  "markdown_description": "\nA school is trying to take an annual photo of all the students. The students are asked to stand in a single file line in **non-decreasing order** by height. Let this ordering be represented by the integer array `expected` where `expected[i]` is the expected height of the `ith` student in line.\n\n\nYou are given an integer array `heights` representing the **current order** that the students are standing in. Each `heights[i]` is the height of the `ith` student in line (**0-indexed**).\n\n\nReturn *the **number of indices** where* `heights[i] != expected[i]`.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** heights = [1,1,4,2,1,3]\n**Output:** 3\n**Explanation:** \nheights:  [1,1,4,2,1,3]\nexpected: [1,1,1,2,3,4]\nIndices 2, 4, and 5 do not match.\n\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** heights = [5,1,2,3,4]\n**Output:** 5\n**Explanation:**\nheights:  [5,1,2,3,4]\nexpected: [1,2,3,4,5]\nAll indices do not match.\n\n```\n\n**Example 3:**\n\n\n\n```\n\n**Input:** heights = [1,2,3,4,5]\n**Output:** 0\n**Explanation:**\nheights:  [1,2,3,4,5]\nexpected: [1,2,3,4,5]\nAll indices match.\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `1 <= heights.length <= 100`\n* `1 <= heights[i] <= 100`\n\n\n",
  "canonical_solution": "class Solution:\n    def heightChecker(self, heights: List[int]) -> int:\n        expected = sorted(heights)\n        return sum(a != b for a, b in zip(heights, expected))\n",
  "test_case_generator": "\nimport random\n\nclass Solution:\n    def heightChecker(self, heights):\n        expected = sorted(heights)\n        return sum(a != b for a, b in zip(heights, expected))\n\n\ndef generate_test_case():\n    solution = Solution()\n    \n    # Generate random numbers list\n    heights = random.sample(range(1, 101), random.randint(1, 100))\n    \n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.heightChecker(heights)\n\n    return heights, expected_result\n\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    \n    for i in range(num_tests):\n        heights, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.heightChecker(heights) == expected_result\n        print(f\"assert solution.heightChecker({heights}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.heightChecker({heights}) == {expected_result}\")\n    \n    return test_case_generator_results\n\n\nif __name__ == \"__main__\":\n    num_tests = 100\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.heightChecker([70, 51, 49, 28, 52, 7, 87, 56, 55, 40, 18, 44, 26, 50, 20, 19, 74, 96, 38, 4, 30, 5, 84, 81, 17, 61, 85, 73, 29, 68, 33, 76, 14, 78, 58, 24, 43, 41, 32, 64, 34, 8, 1, 22, 37, 21, 82, 54, 99, 35, 71, 89, 53, 46, 95, 79, 75, 98, 13, 42, 39, 27, 11, 100, 62, 16, 83, 67, 10]) == 68\nassert solution.heightChecker([18, 68, 44, 27, 2, 74, 43, 46, 79, 54, 61, 80, 60, 93, 67, 28, 10, 77, 22, 20, 56, 63, 52, 69, 7, 70, 40, 45, 65, 59, 100, 19, 6, 55, 72, 88, 5, 66, 83, 39, 92, 91, 3, 14, 13, 12, 49, 95, 25, 47, 78, 73, 30, 1, 8, 21, 53, 38, 29, 64, 86, 89, 35, 50, 17, 24, 97, 84, 81, 75, 42, 51, 26, 96, 31, 15, 33, 94, 71, 90, 85, 98, 9, 4, 62, 48]) == 86\nassert solution.heightChecker([88, 17, 39, 31, 10, 69, 80, 71, 65, 2, 76, 97, 13, 53, 56, 1, 85, 12, 62, 79, 3, 57, 20, 23, 40, 7, 24, 49, 82, 41, 91, 9, 44, 48, 84, 83, 4, 42, 32, 37, 19, 100, 64, 81, 58, 77, 63, 55, 27, 66, 95, 96, 74, 18, 99, 34, 46, 94, 47, 78, 38, 5, 86, 73, 29, 16, 67, 51, 60, 6, 25, 87, 50, 70, 21, 14, 15, 54, 98, 28, 59, 75, 30, 93, 8, 22, 26, 52, 36, 43, 35]) == 90\nassert solution.heightChecker([82, 80, 8, 56, 42, 9, 4, 84, 97, 98, 37, 48, 38, 41, 67, 87, 36, 47, 79, 99, 17, 76, 77, 27, 15, 10, 40, 19, 51, 21, 1, 35, 70, 6]) == 34\nassert solution.heightChecker([4, 53, 98, 1, 18, 3, 97, 93, 32, 55, 40, 73, 22, 24]) == 13\nassert solution.heightChecker([68, 81, 73, 66, 82, 91, 36, 96, 35, 23, 47, 38, 84, 62, 2, 53, 100, 21, 87, 99, 88, 37, 14, 83, 30, 16, 11, 93, 57, 55, 45, 90, 25, 95, 58, 67, 4, 8, 89, 7, 64, 22, 59, 17, 44, 61, 77, 50, 72]) == 49\nassert solution.heightChecker([23, 96, 84, 6, 53, 80, 22, 10, 50, 81, 2, 48, 95, 32, 61, 76, 75, 31, 7, 91, 39, 49, 40, 35, 15, 1, 94, 71, 72, 30, 5, 14, 3, 42, 90, 47, 26, 9, 68, 59, 37, 20, 44, 66, 55, 64, 8, 86, 43, 27, 88, 12, 87, 79, 19, 21, 36, 73, 38, 46, 60, 77, 56, 54, 51, 98, 17, 92, 67, 11, 93, 99, 25, 62, 18, 65, 29, 82, 33, 52, 97, 45, 24, 58, 85, 83, 13, 74, 16, 41, 69, 100, 57, 4, 78, 63, 28]) == 95\nassert solution.heightChecker([15, 92, 54, 7, 81, 94, 91, 9, 25, 79, 49, 44, 86, 17, 55, 38, 16, 53, 22, 10, 76, 11, 89, 60, 80, 23, 2, 8, 66, 40, 85, 99, 83, 70, 39, 88, 31, 61, 100, 24, 50, 37, 30, 67, 6, 63, 82, 93, 74, 5, 34, 52, 4, 13, 1, 3, 20, 12, 45, 36, 46, 19, 47, 98, 57, 90, 87, 62, 26, 29, 41, 18]) == 72\nassert solution.heightChecker([39, 90, 80, 11, 65, 84, 3, 64, 67, 33, 26, 52, 46, 94, 50, 74, 88, 59, 1, 96, 92, 35, 58, 8, 83, 71, 29, 37, 23, 87, 43, 40, 15, 7, 78, 81, 57, 44, 17, 69, 42, 73, 41, 79, 22, 66, 100, 51, 10, 4, 5, 47, 98, 60, 9, 45, 82, 18, 31, 77, 93, 56, 14, 13, 25, 53, 99, 28, 36, 97, 76, 34, 54]) == 71\nassert solution.heightChecker([38, 47, 43, 17, 90, 8, 77, 100, 15, 27, 76, 68, 13, 18, 78, 49, 73, 69, 72, 67, 35, 29, 79, 46, 89, 56, 52, 24, 45, 80, 9, 5, 23, 60, 63, 84, 16, 12, 14, 22, 96, 4, 53, 36, 64, 75, 99, 2, 51, 85, 83, 57, 54, 59, 44, 1, 62, 42, 70, 28, 26, 30, 41, 6, 82, 61, 10, 33, 94, 19, 48, 20, 31, 95, 40, 65, 98, 88, 21, 74, 7, 91, 55, 97, 34, 93, 3, 87, 39, 71, 37, 66, 81, 86, 32, 11]) == 94\nassert solution.heightChecker([44, 46, 21, 43, 98, 39, 16, 92, 99, 20, 75, 88, 83, 4, 84, 90, 61, 35, 63, 29, 87, 77, 79, 100, 38, 62, 23, 25, 67, 28, 42, 51, 71, 72, 34, 56, 1, 32, 54, 14, 6, 10, 96, 13, 37, 19, 52, 12, 49, 40, 94, 69, 58, 89, 22, 70, 60, 55, 64, 45, 9, 97, 5, 85, 11, 78, 36, 91, 68, 2, 31, 74, 53, 17, 50, 59, 41, 3, 26, 30, 65, 33, 93, 57, 24, 95]) == 86\nassert solution.heightChecker([67, 32, 66, 75, 10, 27, 15, 44, 7, 95, 12, 60, 28, 97, 57, 69, 26, 94, 86, 53, 50, 9, 55, 87, 79, 58, 11, 71, 3, 77, 6, 17, 73, 65, 45, 8, 1, 29, 74, 30, 88, 85, 54, 24, 49, 25, 92, 96, 16, 68, 62, 38, 46, 19, 13, 52, 42, 61, 78, 48, 63, 64, 83, 33, 41, 80, 36, 82, 91, 43, 34, 37, 40, 72, 47, 81, 70, 100, 98, 35, 99, 21, 76, 39, 14, 90, 31, 59, 5, 20, 22, 18, 93, 84, 2, 23, 51, 89, 56]) == 98\nassert solution.heightChecker([52, 97, 18, 20, 9, 92, 19, 27, 45, 66, 6, 31, 99, 73, 55, 87, 60, 74, 39, 1, 82, 72, 48, 83, 44, 40, 54, 26, 84, 85, 76, 38, 28, 98]) == 32\nassert solution.heightChecker([84, 62, 6]) == 2\nassert solution.heightChecker([5, 40, 43, 31, 21, 33, 37, 60, 94, 80, 16, 71, 52, 83, 73, 82, 14, 70, 22, 62, 92, 39, 32, 36, 11, 28, 53, 64, 20, 77, 89, 58, 51, 6, 69, 95, 75, 12, 17, 26, 25, 81, 55, 47, 45, 30, 56, 29]) == 45\nassert solution.heightChecker([33, 75, 92, 74, 45, 83, 88, 79, 37, 48, 36, 60, 58, 51, 77, 31, 6, 87, 72, 34, 59, 23, 14, 26, 44, 80, 21, 7, 42, 29, 96, 94, 71, 70, 50, 89, 4, 55, 91, 98, 3, 32, 64, 69, 57, 81, 19, 66, 82, 22, 61, 16, 100, 40, 65, 1, 53, 68, 78, 95, 54, 9, 56, 10, 27, 43, 85, 2, 67, 62, 30, 39, 86, 41, 17, 15, 97, 46, 38, 90, 52, 35]) == 81\nassert solution.heightChecker([100, 10, 61, 25, 40, 70, 52, 66, 84, 56, 73, 63, 33, 75, 78, 57]) == 16\nassert solution.heightChecker([36, 10, 60, 11, 100, 81, 32, 7, 37, 85, 28, 88, 12, 46, 48, 29, 74, 73, 49, 90, 16, 92, 26, 45, 24, 22, 94, 63, 70, 43, 35, 61, 78, 47, 59, 83, 51, 96, 77, 23, 17, 13, 19, 99, 2, 68, 79, 30, 80, 3, 53, 69, 9, 33, 55, 8, 39, 82, 21]) == 58\nassert solution.heightChecker([52, 41, 87, 64, 25, 56, 17, 58, 75, 5, 28, 62, 21, 10, 63, 44, 65, 2, 68, 81, 50]) == 18\nassert solution.heightChecker([58, 30, 9, 45, 66, 80, 68, 8, 84, 37, 41, 83, 55, 88, 19, 20, 16, 33, 87, 93, 42, 14, 71, 39, 97, 81, 59, 26, 48, 67, 47, 98, 17, 77, 73, 51, 53, 36, 46, 78, 75, 91, 35, 52, 89, 32, 86, 29, 92, 74, 43, 24, 13, 79, 40, 44, 57, 64, 10, 72, 22, 90]) == 61\nassert solution.heightChecker([2, 92, 83, 23, 88, 60, 10, 5, 21, 94, 35, 18, 11, 57, 26, 77, 47, 86, 53, 56, 98, 85, 48, 7, 14, 61, 15, 44, 89, 66, 93, 64, 12, 91, 29, 34, 68, 69, 38, 22, 80, 40, 63, 33, 20, 41]) == 45\nassert solution.heightChecker([28, 87, 77, 45, 70, 56, 32, 9, 97, 14, 12]) == 11\nassert solution.heightChecker([100, 20, 70, 58, 97, 65, 68, 62, 83, 17, 56, 49, 41]) == 12\nassert solution.heightChecker([35, 43, 99, 73, 40, 85, 53, 31, 42, 59, 51, 64, 97, 7, 38, 25, 17, 56, 84, 28, 1, 29, 36, 70, 4, 98, 95, 93, 5, 16, 74, 27, 66, 89, 61, 67, 54, 34, 81, 24, 32, 77, 14, 50, 92, 8, 79, 20, 86, 23, 75, 52, 58, 9, 13, 12, 39, 71, 69, 41, 91, 55, 19, 87, 60, 30, 90]) == 64\nassert solution.heightChecker([47, 42, 38, 81, 26, 56, 62, 94, 99, 1, 69, 55, 25, 82, 41, 57, 79, 89, 12, 2, 84, 77, 48, 92, 15, 16, 49, 78, 43, 18, 54, 5, 13, 34, 58, 87, 70, 91, 28, 95, 63, 7, 8, 24, 39, 53, 60, 44, 3, 30, 64, 22, 85, 35, 29, 23, 10, 67, 36, 68, 17, 71, 100, 11, 6, 80, 32, 14, 4, 73, 72]) == 71\nassert solution.heightChecker([81, 25, 63, 56, 29, 59, 79, 45, 7, 85, 72, 77, 1, 78, 52, 61, 94, 96, 67, 57, 16, 58]) == 21\nassert solution.heightChecker([86, 51, 7, 47, 16, 34, 1, 66, 58, 89, 84, 24, 59, 32, 61, 53, 8, 91, 17, 62, 49, 88, 15, 73, 27, 83]) == 25\nassert solution.heightChecker([74, 73, 6, 11, 24, 41, 84, 50, 44, 4, 66, 12, 35, 91, 96, 70, 13, 65, 15, 18, 55, 54, 48, 61, 92, 20, 9, 99, 43, 56, 36, 34, 25, 94, 75, 78, 47, 58, 60, 3, 31, 51, 80, 64, 33, 46, 49, 26, 45, 37, 87, 30, 79, 53, 27, 40, 14]) == 54\nassert solution.heightChecker([18, 68, 48, 20, 50, 69, 87, 9, 94, 97, 51, 83, 5, 33, 70, 36, 46, 65, 81, 35, 73, 8, 7, 30, 92, 23, 21, 96, 53, 60, 93, 39, 84, 22, 71, 13, 29, 17, 4, 64, 6, 26, 16, 75, 91, 56, 55, 24, 85, 41, 47, 52, 19, 49, 1, 58, 66, 98, 12, 77, 25, 44, 28]) == 63\nassert solution.heightChecker([45, 62, 1, 10, 100, 15, 60, 79, 30, 22, 27, 8, 11, 77, 63, 78, 99, 31, 84, 48, 32, 85, 54, 69, 29, 86, 68, 82, 93, 59, 47, 89, 70, 81, 38, 90, 61, 12, 76, 95, 3, 37, 57, 74, 20, 97, 39, 18, 16, 65, 64, 42, 56, 72, 19, 14, 23, 33, 28, 21, 6, 91, 55, 41, 80, 5, 53, 94, 49, 50, 51, 83, 24, 13, 36, 52, 43]) == 76\nassert solution.heightChecker([91, 15, 44, 98, 45, 57, 80, 31, 70, 55, 47, 10, 22, 24, 29, 64, 69, 63, 66, 7, 16, 89, 46, 94, 39, 78, 95, 33, 27, 71, 51, 76, 68, 90, 62, 88, 3, 100, 65, 73, 79, 17]) == 42\nassert solution.heightChecker([95, 49, 9, 16, 59, 86, 60, 38, 1, 31, 51, 17, 100, 75, 22, 4, 63, 30, 88, 85, 53, 99, 76, 23, 74, 70, 8, 96, 28, 97, 61, 12, 73, 68, 5, 54, 32, 50, 93, 44, 48, 78, 42, 43, 55, 45, 64, 52, 67, 3, 13, 25, 18, 26, 69, 89, 92, 6, 72, 81, 62, 47, 24, 71, 37, 21, 83, 11, 46, 35, 98]) == 69\nassert solution.heightChecker([91, 80, 28, 6, 71, 54, 29, 9, 30, 25, 87, 72, 34, 42, 10, 16, 79, 61, 74, 94, 12, 17, 8, 83, 60, 27, 77, 26, 1, 15, 58, 55, 41, 78, 50, 11, 32, 40, 4, 51, 97, 89, 85, 86, 52, 24, 73, 47, 75, 84, 48, 20, 7, 44, 56, 45, 18, 65, 33, 21, 37, 69, 43, 14, 88, 99, 67, 93, 63, 38, 100, 64, 19, 35, 31, 23, 62, 98, 39, 49, 90, 76, 13, 46, 96, 2, 81, 36, 57, 70, 82, 66, 92, 22, 53, 59, 3, 95, 68, 5]) == 98\nassert solution.heightChecker([15, 88, 76, 94, 8, 29, 20, 25, 58, 83, 14, 87, 69, 61, 47, 17, 93, 6, 48, 11, 44, 49, 33, 75, 97, 100, 26, 56, 7, 39, 2, 21, 62, 82, 80, 9, 70, 68, 73, 28, 24, 1, 45, 38, 52, 99, 18, 90, 65, 34, 51, 12, 32, 85, 46, 78, 84, 77, 86, 57, 31, 92, 95, 10, 96, 43, 63, 13, 54, 27, 36]) == 69\nassert solution.heightChecker([41, 11, 57, 28, 79, 49, 12, 63, 16, 64, 97, 77, 13, 9, 98]) == 12\nassert solution.heightChecker([13, 24]) == 0\nassert solution.heightChecker([87, 27, 4, 3, 38, 63, 45, 53, 83, 62, 85, 26, 39, 12, 36, 24, 70, 80, 100, 13, 42, 47, 46, 97, 56, 7, 30, 14, 74, 72, 44, 15, 23, 51, 98, 5, 65, 33, 57, 32, 96, 11, 37, 21, 81]) == 45\nassert solution.heightChecker([87, 13, 88, 45, 43, 9, 89, 85, 52, 91, 39, 83, 90, 41, 79, 37, 2, 21, 64, 59]) == 20\nassert solution.heightChecker([94]) == 0\nassert solution.heightChecker([67, 54, 94, 56, 1, 92, 48, 97, 63, 18, 43, 22, 100, 65, 14, 7, 80, 89, 3, 27, 26, 15, 60, 78, 61, 10, 95, 31, 50, 62, 37, 29, 74, 9, 28, 46, 4, 73, 23, 77, 41, 87, 98, 90, 47, 13, 33, 30, 76, 83, 75, 24, 57, 49, 39, 84, 99, 85, 53, 70, 6, 96, 79, 44, 12, 36, 72, 81, 17, 8, 40, 32, 66, 5, 20, 64, 11, 45, 2, 38, 88, 69, 34, 19, 58, 35, 93, 59, 42, 55, 52]) == 89\nassert solution.heightChecker([98, 86, 2, 31, 84, 52, 47, 58, 13, 48, 30, 14, 32, 9, 1, 83, 18, 16, 8, 71, 26, 70, 22, 12, 4, 80, 24, 57, 56, 88, 17, 49, 100, 73, 37, 50, 69, 99, 51, 65, 46, 97, 7, 66, 78, 89, 96, 68, 95, 91, 10, 34, 53, 42, 21, 72]) == 54\nassert solution.heightChecker([74, 42, 88, 28, 58, 50, 3, 69, 66, 87, 55, 4, 23, 40, 35, 83, 93, 39, 19, 72, 13, 70, 47, 84, 61, 53, 98, 22, 25, 30, 11, 54, 12, 99, 27, 18, 17, 2, 15, 31]) == 40\nassert solution.heightChecker([69, 67, 15, 19, 46, 56, 45, 27, 39, 37, 51, 83, 9, 70, 66, 52, 34, 55, 84, 72, 65, 76, 87, 38, 62, 58, 60, 33, 54, 93, 16, 98, 30, 12, 10, 73, 100, 8, 13, 59, 94, 74, 35, 96, 61, 23, 28, 50, 17, 49, 2, 97, 81, 44, 88, 43, 21, 75, 31, 47, 14, 68, 32]) == 62\nassert solution.heightChecker([94, 82, 71, 1, 65, 26, 76, 19, 100, 96, 83, 3, 21, 5, 18, 22, 87, 95, 85, 24, 38, 97, 9, 80, 67, 86, 59, 69, 93, 90, 91, 31, 60, 37, 42, 70, 56, 51, 73, 81, 78, 52, 57, 45, 68, 7, 88, 33, 20, 61, 16, 36, 47, 27, 44, 79, 58, 12, 25, 17]) == 59\nassert solution.heightChecker([67, 51, 4, 9, 79, 26, 33, 21, 99, 52, 28, 32, 77, 95, 48, 97, 61, 22, 10, 71, 98, 15, 35, 56, 92, 40, 57, 65, 93, 100, 78, 74, 90, 11, 81, 38, 72, 13, 58, 50, 8, 1, 5, 96, 24, 44, 16, 86, 27, 64, 55, 43, 85, 39, 54, 19, 87, 49, 18, 75, 47, 70]) == 62\nassert solution.heightChecker([66, 27, 29, 25, 98, 76, 21, 19, 69, 58, 24, 82, 13, 40, 53, 62, 26, 94, 91, 55]) == 20\nassert solution.heightChecker([44, 63, 52, 88, 65, 31]) == 4\nassert solution.heightChecker([17, 10, 48, 60, 92, 34, 22, 27, 50, 83, 76, 65, 91, 40, 52, 86, 45, 79, 96, 2, 44, 8, 32, 82, 68, 39, 41, 54, 64, 71, 81, 11, 20, 55, 14, 9, 21, 85, 90, 29, 93, 15, 100, 5, 73, 38, 89, 37, 4, 98, 99, 77, 67, 28, 94, 12, 1, 88, 26, 58]) == 60\nassert solution.heightChecker([47, 28, 37, 83, 11, 89, 29, 46, 57, 33, 3, 78, 76, 64, 4, 19, 8, 36, 14]) == 19\nassert solution.heightChecker([19, 44, 12, 96, 71, 89, 34, 43, 2, 84, 25, 95, 29, 55, 73, 33, 58, 30, 72, 88, 99, 78, 27, 66]) == 23\nassert solution.heightChecker([5, 57, 96, 17, 44, 64, 95, 19, 79, 47, 65, 60, 98, 34, 50, 37, 67, 90, 23, 4, 51, 62, 59, 15, 56, 81, 27, 22, 31]) == 28\nassert solution.heightChecker([43, 79, 19, 35, 10, 21, 96, 40, 17, 64, 38, 25, 30, 58, 100, 12, 16, 28, 5, 71, 84, 31, 75, 70, 88, 92, 13, 47, 67, 73, 22, 46, 94, 29, 11, 9, 4, 41, 85, 81, 52, 74, 83, 50, 56, 49, 18, 53, 59, 26, 42, 45, 3, 37, 76, 7, 99, 60, 54, 98, 14, 72, 78, 36, 15, 62, 34, 91, 82, 8, 95]) == 70\nassert solution.heightChecker([8, 74, 81, 98, 65, 15, 2, 3, 88, 34, 95, 7, 79, 66, 14, 49, 72, 50, 22, 53, 62, 36, 100, 82, 99, 18, 91]) == 25\nassert solution.heightChecker([40, 12, 46, 23, 72, 14, 4, 10, 78, 99, 33, 59, 36, 80, 22, 38, 84, 11, 34, 75, 97, 77, 90, 79, 35, 39, 81, 7, 41, 9, 37, 6, 68, 53, 63, 52, 27, 47, 51, 45, 44, 16, 94, 13, 76, 61, 86, 62, 24, 26, 8, 82, 32, 95, 98, 15, 2, 21, 74, 69, 92, 71, 85, 48, 56, 57, 28, 70, 20, 55, 89, 83, 5, 96, 17, 1, 100, 66, 30, 88, 31, 50, 29, 19, 54, 67, 60, 91, 64]) == 88\nassert solution.heightChecker([95, 85, 23, 76, 94, 48, 18, 92, 100, 81, 5, 41, 13, 21, 31, 19, 17, 57, 55, 71, 37, 98, 22, 58, 87, 15, 16, 45, 53, 14, 47, 30, 38, 72, 25, 4, 49, 32, 86, 54, 51, 44, 24, 2, 36, 39, 83, 79, 96, 93, 78, 84, 28, 67, 6, 10, 91, 29, 26, 90, 20, 11, 3, 80, 77, 73, 27, 42, 62, 59, 89, 69, 60, 74, 56, 50, 40, 68, 88, 75, 65, 46, 70]) == 83\nassert solution.heightChecker([81, 63, 68, 86, 64, 29, 89, 82, 1, 27, 100, 50, 16, 36, 91, 14, 32, 19, 69, 73, 2, 79, 77, 12, 35, 67, 99, 54, 78, 57, 22, 11, 72, 75, 59, 70, 83, 42, 55, 7, 90, 65, 48, 6, 58, 74, 5, 23, 41, 61, 20, 80, 45, 34, 98, 60, 31, 39, 30, 71, 33, 24, 17, 28, 87, 8, 76, 51, 93, 43, 3, 21, 62, 88, 95, 44]) == 75\nassert solution.heightChecker([88, 73, 49, 93, 15, 53, 23, 71, 72, 38, 22, 17, 99, 84, 48, 42, 52, 87, 43, 55, 20, 33, 35, 69, 11, 97, 25, 19, 4, 27, 32, 24, 29]) == 32\nassert solution.heightChecker([24, 72, 1, 15, 34, 17, 66, 30, 18, 99, 4, 89, 48, 41, 58, 9, 27, 52, 32, 93, 84, 85, 26, 88, 80, 43, 86, 59, 39, 2]) == 28\nassert solution.heightChecker([99, 43, 9, 6, 86, 50, 37, 10, 91, 11, 81, 39, 44, 56, 3, 42, 80, 96, 13, 82, 77, 83, 34, 33, 54, 71, 20, 68, 28, 73, 29, 55, 38, 53, 22, 67, 48, 85, 18, 84, 88, 92, 87, 17, 100]) == 40\nassert solution.heightChecker([51, 36, 59, 70, 34, 94, 97, 87, 49, 20, 65, 60, 17, 100, 35, 80, 44, 75, 99, 12, 83, 30, 56, 4, 46, 11, 79, 85, 16, 25, 68, 77, 31, 93, 89, 15, 58, 2, 32, 45, 5, 55, 43, 42, 74, 7, 86, 40, 90, 63, 29, 19, 28, 26, 6, 23, 62, 22, 39, 27, 76, 9, 82, 78, 24, 54, 38, 1, 84, 96, 92, 73, 8, 18, 10, 48, 81, 88, 66, 69, 41, 33, 47, 13, 95]) == 85\nassert solution.heightChecker([68, 31, 85, 69, 42, 17, 63, 65, 36, 71, 38, 8, 88, 53, 21, 43, 97, 23, 33, 93, 75, 51, 22, 5, 74, 40, 95, 81, 32, 14, 52, 13, 60, 24, 79, 67, 54, 56, 57, 87, 94, 12, 62, 92, 9, 29, 11, 28, 16, 18, 78, 44, 98, 39, 6, 99, 80, 77, 59, 73, 64, 70, 96, 58, 15, 41, 4, 82, 19, 55, 34, 90, 20, 3]) == 74\nassert solution.heightChecker([73, 83, 23, 27, 4, 46, 62, 76, 90, 63, 36, 100, 17, 84, 52, 10, 71, 77, 91]) == 18\nassert solution.heightChecker([19, 54, 50, 58, 16, 24, 48, 91, 69, 68, 67, 29, 71, 5, 17, 94, 40, 89, 44, 47, 14, 63, 57, 74, 72, 97, 59, 6, 96, 81, 43, 98, 88, 70, 27, 76, 31, 62, 38, 35]) == 40\nassert solution.heightChecker([52, 20, 37, 55, 47, 38, 42, 67, 41, 54, 8, 34, 62, 64, 96, 23, 59, 10, 3, 75, 99, 80, 33, 94, 72, 74, 71, 60, 22, 50, 46, 7, 90, 92, 82, 63, 4, 36, 43, 88, 13, 12, 28, 21, 93, 100, 81, 35, 53, 86, 51, 1, 40, 78, 2, 29, 95, 84, 18, 24, 61, 83, 31, 91, 27, 9, 66, 89, 87, 77, 30, 69, 79, 19, 26, 25, 58, 17, 39, 57, 76, 6, 14, 56, 73, 49, 11, 48, 45, 85]) == 89\nassert solution.heightChecker([61, 14, 13, 80, 78, 15, 29, 55]) == 7\nassert solution.heightChecker([46, 27, 8, 56, 57, 98, 68, 10, 55, 69, 70, 91, 79, 14, 65, 29, 47, 62, 7, 76, 86, 39, 63, 51, 3, 44, 22, 95, 80, 36, 6, 20, 82, 15, 77, 13, 5, 24, 83, 81, 11, 30, 50, 31, 97]) == 43\nassert solution.heightChecker([21, 2, 74, 45, 31, 50, 61, 72, 40, 65, 83, 60, 100, 63, 49, 98, 92, 76, 30, 8, 48, 10, 62, 57, 54, 69, 5, 24, 19, 81, 82]) == 31\nassert solution.heightChecker([65, 64, 74, 22, 87, 47, 24, 75, 31, 8, 7, 12, 52, 99, 93, 82, 38, 25, 80, 27, 49, 33, 60, 43, 2, 51, 14, 37, 50, 36, 97, 86, 67, 71, 45, 39, 11, 68, 85, 34, 72, 88, 3, 62, 40, 48, 78, 32]) == 47\nassert solution.heightChecker([38, 77, 95, 91, 8, 63, 57, 31, 22, 44, 65, 34, 3, 99, 30, 54, 87, 45, 76, 43, 85, 46, 6, 48, 39, 13, 52, 58, 42, 27, 14, 55, 97, 19, 60, 18, 82, 71, 74, 17, 90, 20, 84, 35, 89, 7, 68, 2, 88, 62, 61, 47, 92, 80, 83, 26, 69, 15, 67, 53, 5, 81, 12, 32, 72, 41, 33, 24, 70, 11, 29, 64, 86, 40, 36, 59]) == 75\nassert solution.heightChecker([64, 82, 28, 79, 67, 4, 73, 87, 88, 56, 15, 19, 5, 38, 92, 10, 33, 2]) == 17\nassert solution.heightChecker([12, 14, 72, 74, 33, 66, 65, 18, 93, 54, 30, 39, 26, 40, 45, 70, 95, 6, 73, 85, 23, 15, 37, 64, 19, 49, 92, 34, 77, 50, 67, 52, 91, 8, 20, 96, 44, 100, 61, 94, 80, 4, 83, 63, 89, 46, 53, 5, 22, 58, 25, 7, 60, 79, 29, 3, 21, 78, 36, 17, 2, 27, 28, 81, 38, 98, 35, 75, 90, 32, 69, 86, 88, 13, 76, 87, 31, 10, 47, 9, 97, 82, 56, 57, 16]) == 83\nassert solution.heightChecker([68, 11, 85, 27, 98, 54, 32, 29, 89, 51, 61, 72, 100, 87, 26, 95, 19, 8, 35, 70, 65, 64, 41, 21, 5, 2, 81, 6, 44, 3, 77, 97, 31, 7, 14]) == 34\nassert solution.heightChecker([10, 59, 51, 58, 53, 65, 38, 34, 57, 90, 91, 82]) == 10\nassert solution.heightChecker([49, 37, 100, 99, 56, 96, 97]) == 7\nassert solution.heightChecker([36, 74, 35, 11, 99, 81, 41, 100, 62, 70]) == 10\nassert solution.heightChecker([42, 63, 24, 53, 16, 23, 74, 6, 49, 10, 56, 28, 94, 12, 9, 85, 20, 4]) == 18\nassert solution.heightChecker([98, 89, 14, 81, 42, 4, 75, 66, 70, 2, 88, 35, 78, 80, 34, 45, 86, 87, 12, 58, 49, 3, 91, 74, 25, 22, 95, 76, 41, 55, 99, 48, 69, 37, 97, 29, 94, 5]) == 38\nassert solution.heightChecker([3, 83, 82, 37, 21, 68, 66, 97, 38, 88, 4, 75, 28, 61, 5, 52, 47, 41, 20, 8, 72, 25, 11, 44, 1, 23, 63, 30, 35, 24, 60, 92, 16, 94, 65, 90, 99, 7, 56, 81, 18, 48, 22, 14, 36, 57, 13, 34, 45, 69, 86, 6, 64, 87, 27, 46, 71, 19, 96, 26, 15, 53, 50, 33, 85, 49, 67, 70, 32, 55, 95, 43, 17, 77, 80, 73, 12, 51, 84, 31, 29, 98, 78, 42, 93, 54]) == 85\nassert solution.heightChecker([20, 31, 86, 55, 72, 67, 60, 40, 75, 16, 54, 1, 41, 44, 85, 78, 100, 79, 61, 33, 57, 23, 82, 95, 94, 10, 83, 36, 47, 80, 93, 49, 64, 50, 5, 6, 51, 77, 99, 66, 90, 17, 68, 89, 30, 12, 32, 53, 43, 71, 18, 46, 42, 39, 98, 70, 35, 76, 29, 2, 69, 97, 84, 13, 24, 56, 62, 28, 22, 88, 8, 4, 65, 48]) == 73\nassert solution.heightChecker([45, 8, 36, 23, 54, 74, 60, 94, 20, 93, 43, 16, 29, 34, 21, 89, 33, 6, 68, 96, 77, 18, 84, 47, 38, 46, 90, 67, 61, 1, 30, 92, 65, 59, 52, 50, 44, 41, 95, 62, 10, 19, 42, 75, 72, 49, 99, 98, 25, 35, 58, 4, 82, 5, 12, 11]) == 55\nassert solution.heightChecker([83, 39, 97, 75, 66, 95, 17, 10, 28]) == 8\nassert solution.heightChecker([30, 17, 43, 75]) == 2\nassert solution.heightChecker([79, 28, 61, 62, 85, 81, 56, 97, 45, 98, 54, 25, 31, 35, 55, 99, 21, 39, 9, 43, 88, 20, 91]) == 22\nassert solution.heightChecker([68, 66, 36, 67, 31, 74, 40, 97, 13, 69, 22, 62, 12, 46, 56, 6, 28, 73, 81, 72, 5, 9, 19, 54, 92, 11, 87, 58, 65, 55, 37, 17, 91, 82, 51, 70, 21, 35, 15, 20, 47, 85, 26, 48]) == 42\nassert solution.heightChecker([57, 31, 96, 54, 48, 8, 10, 63, 51, 37, 75, 83, 46]) == 11\nassert solution.heightChecker([45, 99, 73, 15, 28, 57, 31, 41, 79, 47, 87, 60, 24, 35, 56, 38, 93, 98, 22, 71, 58, 77, 74, 40, 51, 89, 67, 27, 26, 88]) == 27\nassert solution.heightChecker([8, 39, 45, 1, 79, 20, 65, 44, 28, 22, 36, 49, 96, 82, 85, 33, 72, 18, 30, 68, 38, 37, 54, 51, 46, 95, 42, 61, 81, 90]) == 30\nassert solution.heightChecker([91, 6, 88, 19, 68, 99, 72, 26, 96, 37, 53, 36, 43, 10, 60, 41, 42, 34, 44, 77, 100, 61, 47, 11, 82, 64, 50, 81, 59, 3, 14, 29, 25, 46, 76, 52, 79, 56, 83, 67, 89, 66, 75, 90, 5, 80, 20, 70, 92, 30, 28, 74, 35, 7, 48, 12, 87, 98, 1, 21, 24, 2, 17, 55, 73, 94, 31, 45, 57]) == 68\nassert solution.heightChecker([28, 8, 67, 64, 85, 21, 78, 63, 11, 59, 7, 32, 76, 100, 79, 51, 9, 44, 57, 75, 56, 15, 30, 83, 62, 16, 42, 31, 94, 60, 96, 2, 49, 91, 27, 36, 69, 82, 71, 54, 92, 22, 68, 73]) == 41\nassert solution.heightChecker([53, 14, 88, 61, 13, 70, 57, 90, 86, 63, 15, 8, 79, 39, 74, 78, 85, 60, 23, 82, 97, 66, 48, 94, 35]) == 24\nassert solution.heightChecker([99, 62, 91, 9, 42, 40, 11, 97, 94, 83, 55, 31, 63, 59, 23, 80, 56, 54, 37, 79, 84, 7, 86, 90, 73, 22, 20, 39, 87, 71, 50, 21, 89, 65, 5, 3, 16, 17, 15, 32, 70, 66, 28, 96, 26, 12, 61]) == 46\nassert solution.heightChecker([10, 50, 59, 74]) == 0\nassert solution.heightChecker([3, 94, 47, 34, 85, 62, 16, 17, 86, 84, 89, 22, 82, 95, 75, 46, 91, 99, 45, 73, 60, 4, 9, 88, 23, 93, 8, 54, 43, 2, 71, 98, 65, 6, 74, 27, 11, 49, 18, 40, 67, 26, 83, 87, 35, 68, 10, 31, 78, 20, 48, 52, 53, 32, 33, 79, 37, 21, 63, 57, 66, 51, 1, 72]) == 63\nassert solution.heightChecker([74, 87, 26, 95, 57, 63, 55, 99, 46, 22, 58, 32, 13]) == 12\nassert solution.heightChecker([51, 26, 72, 9, 66, 97, 81, 24, 67, 3, 94, 32, 79, 68, 52, 92]) == 15\nassert solution.heightChecker([36, 14, 89, 46, 15, 62, 96, 80, 71, 50, 6, 10, 4, 23, 7, 76, 81, 48, 55, 12, 21, 38, 45, 67, 86, 54, 39, 30, 68, 75, 82, 85, 94, 77, 99, 56, 35, 57, 100, 3, 9, 69, 43, 13, 47, 51, 11, 61, 60, 88, 49, 83]) == 52\nassert solution.heightChecker([60, 99, 32, 68, 7, 39, 22, 24, 58, 41, 49, 11, 40, 30, 19, 42, 56, 88, 53, 33, 82, 9, 50, 35, 91, 62, 59, 17, 84, 26, 8, 54, 71, 18, 67, 2, 72, 20, 61, 63, 83, 73, 10, 64, 65, 36, 3, 13, 37, 96, 16, 81, 23, 34, 52, 98, 70, 79, 78, 69, 28, 4, 77, 45, 48, 51, 1, 38, 94, 90, 12, 15, 97, 85, 21, 55, 74, 76, 44, 100]) == 78\nassert solution.heightChecker([66, 15, 92, 38, 23, 26, 94, 85, 10, 89, 71, 12, 4, 39]) == 12\nassert solution.heightChecker([9, 70, 96, 10, 48, 61, 39, 41, 16, 80, 37, 51, 69, 43, 74, 36, 17, 71, 55, 88, 85, 73, 58, 12, 20, 13, 98, 8, 15, 38, 27, 52, 65, 35, 29, 57, 42, 68, 90, 59, 99, 7, 26, 76, 45, 83, 19, 44, 87, 53, 66, 3, 40, 64, 49, 100, 4, 28, 31, 33, 1, 11, 6, 84, 82, 60, 77, 14, 25, 5, 2, 95, 86, 63, 91, 50, 56, 93, 94, 72, 23, 18, 79, 81, 97, 67, 92, 89, 24, 21, 62, 22, 32, 47, 46, 54, 75, 30, 34]) == 96\nassert solution.heightChecker([52, 43, 12, 76, 59, 13, 14, 5, 31, 33, 35, 71, 48, 22, 69, 24, 4, 93, 47, 39, 66, 10, 11, 79, 98, 41, 55, 7, 77]) == 29",
  "inefficient_solution": "class Solution:\n    def heightChecker(self, heights: List[int]) -> int:\n        numbers = []\n        for i, h in enumerate(heights):\n            numbers.append(i)\n            numbers.append(h)\n        numbers = sorted(numbers)\n        groups = {}\n        for n in numbers:\n            if n in groups:\n                groups[n].append(n)\n            else:\n                groups[n] = [n]\n        result = 0\n        for i, h in enumerate(heights):\n            for g in groups:\n                if g == i:\n                    if h != sorted(groups[g])[0]:\n                        result += 1\n        return result",
  "is_python": true
}