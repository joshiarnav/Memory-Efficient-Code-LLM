{
  "problem_idx": 2566,
  "task_name": "Maximum Difference by Remapping a Digit",
  "markdown_description": "\nYou are given an integer `num`. You know that Danny Mittal will sneakily **remap** one of the `10` possible digits (`0` to `9`) to another digit.\n\n\nReturn *the difference between the maximum and minimum**values Danny can make by remapping\u00a0**exactly** **one** digit* *in* `num`.\n\n\n**Notes:**\n\n\n* When Danny remaps a digit d1\u00a0to another digit d2, Danny replaces all occurrences of `d1`\u00a0in `num`\u00a0with `d2`.\n* Danny can remap a digit to itself, in which case `num`\u00a0does not change.\n* Danny can remap different digits for obtaining minimum and maximum values respectively.\n* The resulting number after remapping can contain leading zeroes.\n* We mentioned \"Danny Mittal\" to congratulate him on being in the top 10 in Weekly Contest 326.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** num = 11891\n**Output:** 99009\n**Explanation:** \nTo achieve the maximum value, Danny can remap the digit 1 to the digit 9 to yield 99899.\nTo achieve the minimum value, Danny can remap the digit 1 to the digit 0, yielding 890.\nThe difference between these two numbers is 99009.\n\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** num = 90\n**Output:** 99\n**Explanation:**\nThe maximum value that can be returned by the function is 99 (if 0 is replaced by 9) and the minimum value that can be returned by the function is 0 (if 9 is replaced by 0).\nThus, we return 99.\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `1 <= num <= 108`\n\n\n",
  "canonical_solution": "class Solution:\n    def minMaxDifference(self, num: int) -> int:\n        s = str(num)\n        mi = int(s.replace(s[0], '0'))\n        for c in s:\n            if c != '9':\n                return int(s.replace(c, '9')) - mi\n        return num - mi\n",
  "test_case_generator": "\nimport random\n\nclass Solution:\n    def minMaxDifference(self, num: int) -> int:\n        s = str(num)\n        mi = int(s.replace(s[0], '0'))\n        for c in s:\n            if c != '9':\n                return int(s.replace(c, '9')) - mi\n        return num - mi\n\ndef generate_test_case():\n    solution = Solution()\n    \n    # Generate a random num\n    num = random.randint(1, 100000000)\n\n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.minMaxDifference(num)\n\n    return num, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        num, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.minMaxDifference(num) == expected_result\n        print(f\"assert solution.minMaxDifference({num}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.minMaxDifference({num}) == {expected_result}\") # You can find that we construct the test case in the same format as the example\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.minMaxDifference(92172134) == 97007000\nassert solution.minMaxDifference(20804427) == 90000090\nassert solution.minMaxDifference(71943470) == 90000090\nassert solution.minMaxDifference(44195743) == 99000090\nassert solution.minMaxDifference(63771733) == 90000000\nassert solution.minMaxDifference(97443755) == 92000200\nassert solution.minMaxDifference(1935418) == 9000090\nassert solution.minMaxDifference(42232558) == 90000000\nassert solution.minMaxDifference(94718233) == 95000000\nassert solution.minMaxDifference(3264502) == 9000000\nassert solution.minMaxDifference(37111090) == 90000000\nassert solution.minMaxDifference(3452111) == 9000000\nassert solution.minMaxDifference(61130406) == 90000009\nassert solution.minMaxDifference(47717263) == 90000000\nassert solution.minMaxDifference(83276107) == 90000000\nassert solution.minMaxDifference(2097301) == 9000000\nassert solution.minMaxDifference(52502225) == 90900009\nassert solution.minMaxDifference(89318773) == 90009000\nassert solution.minMaxDifference(52942446) == 90000000\nassert solution.minMaxDifference(7746777) == 9900999\nassert solution.minMaxDifference(90031158) == 99900000\nassert solution.minMaxDifference(67855487) == 90000000\nassert solution.minMaxDifference(60356983) == 90009000\nassert solution.minMaxDifference(94187474) == 95000505\nassert solution.minMaxDifference(24961039) == 90000000\nassert solution.minMaxDifference(36235036) == 90090090\nassert solution.minMaxDifference(28196649) == 90000000\nassert solution.minMaxDifference(59210070) == 90000000\nassert solution.minMaxDifference(86155230) == 90000000\nassert solution.minMaxDifference(41513932) == 90000000\nassert solution.minMaxDifference(13428890) == 90000000\nassert solution.minMaxDifference(82877343) == 90900000\nassert solution.minMaxDifference(86275053) == 90000000\nassert solution.minMaxDifference(57141709) == 90000000\nassert solution.minMaxDifference(99175778) == 99800000\nassert solution.minMaxDifference(85608131) == 90009000\nassert solution.minMaxDifference(74070688) == 90090000\nassert solution.minMaxDifference(38271470) == 90000000\nassert solution.minMaxDifference(19800693) == 90000000\nassert solution.minMaxDifference(28526131) == 90090000\nassert solution.minMaxDifference(17301478) == 90009000\nassert solution.minMaxDifference(96444719) == 93000009\nassert solution.minMaxDifference(31243197) == 90009000\nassert solution.minMaxDifference(9506618) == 9400000\nassert solution.minMaxDifference(66196252) == 99009000\nassert solution.minMaxDifference(95731684) == 94000000\nassert solution.minMaxDifference(76983464) == 90000000\nassert solution.minMaxDifference(95966349) == 94900009\nassert solution.minMaxDifference(38473886) == 90009000\nassert solution.minMaxDifference(79692184) == 90000000\nassert solution.minMaxDifference(32924341) == 90000900\nassert solution.minMaxDifference(58805888) == 90009000\nassert solution.minMaxDifference(7746688) == 9900000\nassert solution.minMaxDifference(7702221) == 9900000\nassert solution.minMaxDifference(2317397) == 9000000\nassert solution.minMaxDifference(73212521) == 90000000\nassert solution.minMaxDifference(92869831) == 97009000\nassert solution.minMaxDifference(20680606) == 90000000\nassert solution.minMaxDifference(65826409) == 90009000\nassert solution.minMaxDifference(14061429) == 90009000\nassert solution.minMaxDifference(36607692) == 90000000\nassert solution.minMaxDifference(37597458) == 90000000\nassert solution.minMaxDifference(51959121) == 90090000\nassert solution.minMaxDifference(86350250) == 90000000\nassert solution.minMaxDifference(49153748) == 90000090\nassert solution.minMaxDifference(47540347) == 90090090\nassert solution.minMaxDifference(62733476) == 90000009\nassert solution.minMaxDifference(8946573) == 9000000\nassert solution.minMaxDifference(39821746) == 90000000\nassert solution.minMaxDifference(94153068) == 95000000\nassert solution.minMaxDifference(46109089) == 90000000\nassert solution.minMaxDifference(2116238) == 9000900\nassert solution.minMaxDifference(7872609) == 9090000\nassert solution.minMaxDifference(26681665) == 90000000\nassert solution.minMaxDifference(83139345) == 90000000\nassert solution.minMaxDifference(30044894) == 90000000\nassert solution.minMaxDifference(42392409) == 90000900\nassert solution.minMaxDifference(90363210) == 99000009\nassert solution.minMaxDifference(45168081) == 90000000\nassert solution.minMaxDifference(87450497) == 90000000\nassert solution.minMaxDifference(71606680) == 90000000\nassert solution.minMaxDifference(67843589) == 90000000\nassert solution.minMaxDifference(10344888) == 90000000\nassert solution.minMaxDifference(9328869) == 9600009\nassert solution.minMaxDifference(77972366) == 99090000\nassert solution.minMaxDifference(58075000) == 90009000\nassert solution.minMaxDifference(11203312) == 99000090\nassert solution.minMaxDifference(9721803) == 9200000\nassert solution.minMaxDifference(88519650) == 99000000\nassert solution.minMaxDifference(35311185) == 90900000\nassert solution.minMaxDifference(73485407) == 90000009\nassert solution.minMaxDifference(53399079) == 90000000\nassert solution.minMaxDifference(40396996) == 90000000\nassert solution.minMaxDifference(73423339) == 90000000\nassert solution.minMaxDifference(93006462) == 96000000\nassert solution.minMaxDifference(20414996) == 90000000\nassert solution.minMaxDifference(94505792) == 95000090\nassert solution.minMaxDifference(70651245) == 90000000\nassert solution.minMaxDifference(83715582) == 90000090\nassert solution.minMaxDifference(85934423) == 90000000",
  "inefficient_solution": "class Solution:\n    def minMaxDifference(self, num: int) -> int:\n        s = list(str(num))\n        max_num = s[:]\n        min_num = s[:]\n        \n        for i in range(10):\n            for j in range(10):\n                if i == j:\n                    continue\n                s[0] = '0' if i == 0 else '9'\n                for k in range(10):\n                    for index, c in enumerate(s):\n                        if c != str(k):\n                            s[index] = str(k)\n                max_num = max(int(''.join(s)), max_num)\n                s = max_num[:]\n                s[0] = str(i)\n                for k in range(10):\n                    for index, c in enumerate(s):\n                        if c != str(k):\n                            s[index] = str(k)\n                min_num = min(int(''.join(s)), min_num)\n                s = min_num[:]\n        \n        return max_num - min_num",
  "is_python": true
}