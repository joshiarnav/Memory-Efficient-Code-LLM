{
  "problem_idx": 2098,
  "task_name": "Subsequence of Size K With the Largest Even Sum",
  "markdown_description": "\nYou are given an integer array `nums` and an integer `k`. Find the **largest even sum** of any subsequence of `nums` that has a length of `k`.\n\n\nReturn *this sum, or* `-1` *if such a sum does not exist*.\n\n\nA **subsequence** is an array that can be derived from another array by deleting some or no elements without changing the order of the remaining elements.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** nums = [4,1,5,3,1], k = 3\n**Output:** 12\n**Explanation:**\nThe subsequence with the largest possible even sum is [4,5,3]. It has a sum of 4 + 5 + 3 = 12.\n\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** nums = [4,6,2], k = 3\n**Output:** 12\n**Explanation:**\nThe subsequence with the largest possible even sum is [4,6,2]. It has a sum of 4 + 6 + 2 = 12.\n\n```\n\n**Example 3:**\n\n\n\n```\n\n**Input:** nums = [1,3,5], k = 1\n**Output:** -1\n**Explanation:**\nNo subsequence of nums with length 1 has an even sum.\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `1 <= nums.length <= 105`\n* `0 <= nums[i] <= 105`\n* `1 <= k <= nums.length`\n\n\n",
  "canonical_solution": "class Solution:\n    def largestEvenSum(self, nums: List[int], k: int) -> int:\n        nums.sort()\n        ans = sum(nums[-k:])\n        if ans % 2 == 0:\n            return ans\n        n = len(nums)\n        mx1 = mx2 = -inf\n        for x in nums[: n - k]:\n            if x & 1:\n                mx1 = x\n            else:\n                mx2 = x\n        mi1 = mi2 = inf\n        for x in nums[-k:][::-1]:\n            if x & 1:\n                mi2 = x\n            else:\n                mi1 = x\n        ans = max(ans - mi1 + mx1, ans - mi2 + mx2, -1)\n        return -1 if ans % 2 else ans\n",
  "test_case_generator": "\nimport random\nfrom typing import List\nfrom math import inf\n\nclass Solution:\n    def largestEvenSum(self, nums: List[int], k: int) -> int:\n        nums.sort()\n        ans = sum(nums[-k:])\n        if ans % 2 == 0:\n            return ans\n        n = len(nums)\n        mx1 = mx2 = -inf\n        for x in nums[: n - k]:\n            if x & 1:\n                mx1 = x\n            else:\n                mx2 = x\n        mi1 = mi2 = inf\n        for x in nums[-k:][::-1]:\n            if x & 1:\n                mi2 = x\n            else:\n                mi1 = x\n        ans = max(ans - mi1 + mx1, ans - mi2 + mx2, -1)\n        return -1 if ans % 2 else ans\n\n\ndef generate_test_case():\n    solution = Solution()\n\n    # Generate random numbers list\n    nums = random.sample(range(1, 101), random.randint(2, 11))\n\n    # Generate a random target sum\n    k = random.randint(1, len(nums))\n\n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.largestEvenSum(nums, k)\n\n    return nums, k, expected_result\n\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        nums, k, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.largestEvenSum(nums, k) == expected_result\n        print(f\"assert solution.largestEvenSum({nums}, {k}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.largestEvenSum({nums}, {k}) == {expected_result}\")  # You can find that we construct the test case in the same format as the example\n    return test_case_generator_results\n\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.largestEvenSum([17, 32, 37, 39, 42, 46, 98], 3) == 186\nassert solution.largestEvenSum([12, 82, 86, 87], 1) == 86\nassert solution.largestEvenSum([20, 23, 48, 55, 83, 93], 1) == 48\nassert solution.largestEvenSum([31, 35, 36, 43, 45, 47, 59, 60, 97, 100], 3) == 256\nassert solution.largestEvenSum([7, 22, 23, 60, 69], 2) == 92\nassert solution.largestEvenSum([4, 7, 12, 18, 33, 34, 45, 65, 77, 80, 92], 6) == 392\nassert solution.largestEvenSum([5, 9, 15, 29, 64, 74, 77, 85, 86, 90, 99], 2) == 184\nassert solution.largestEvenSum([5, 6, 36, 55, 56, 75, 83], 7) == 316\nassert solution.largestEvenSum([26, 36, 56, 58, 59, 67, 99], 3) == 224\nassert solution.largestEvenSum([5, 6, 16, 30, 43, 57, 75, 76, 86, 95], 6) == 432\nassert solution.largestEvenSum([6, 28, 32, 40, 46, 75, 81, 88], 3) == 244\nassert solution.largestEvenSum([20, 33, 40, 42, 46, 60, 62, 70, 89, 99], 7) == 468\nassert solution.largestEvenSum([31, 42, 70, 83, 84], 1) == 84\nassert solution.largestEvenSum([10, 21, 24, 27, 31, 69, 74, 79, 90, 91, 95], 4) == 350\nassert solution.largestEvenSum([25, 32, 37, 39, 42, 51, 53, 69, 77, 99], 2) == 176\nassert solution.largestEvenSum([16, 26, 33, 79], 2) == 112\nassert solution.largestEvenSum([11, 61, 71, 83, 93], 1) == -1\nassert solution.largestEvenSum([9, 19, 37, 41, 44, 56, 57, 64, 65, 88], 4) == 274\nassert solution.largestEvenSum([3, 10, 21, 30, 44, 54, 60, 71, 93], 4) == 278\nassert solution.largestEvenSum([15, 21, 48, 56, 62, 83, 87, 89, 96], 9) == -1\nassert solution.largestEvenSum([3, 13, 17, 20, 26, 37, 87, 89, 96], 7) == 372\nassert solution.largestEvenSum([21, 22, 58, 59, 79, 80, 98], 4) == 316\nassert solution.largestEvenSum([5, 8, 21, 43, 74], 2) == 82\nassert solution.largestEvenSum([81, 96], 1) == 96\nassert solution.largestEvenSum([21, 39, 45, 70], 1) == 70\nassert solution.largestEvenSum([19, 20, 21, 34, 40, 45, 48, 91, 98], 9) == 416\nassert solution.largestEvenSum([1, 8, 15, 21, 37, 55, 66, 69, 90], 4) == 280\nassert solution.largestEvenSum([26, 95], 2) == -1\nassert solution.largestEvenSum([5, 14, 17, 20, 25, 28, 36, 37], 2) == 64\nassert solution.largestEvenSum([7, 49], 1) == -1\nassert solution.largestEvenSum([29, 72, 90], 2) == 162\nassert solution.largestEvenSum([1, 8, 30, 79, 100], 4) == 210\nassert solution.largestEvenSum([7, 19, 51, 69, 77, 96], 3) == 242\nassert solution.largestEvenSum([51, 59], 1) == -1\nassert solution.largestEvenSum([25, 51, 58, 84], 4) == 218\nassert solution.largestEvenSum([12, 23, 32, 43, 54, 74, 78, 83, 90, 98], 2) == 188\nassert solution.largestEvenSum([3, 11, 17, 24, 32, 70], 4) == 130\nassert solution.largestEvenSum([20, 36, 37, 57, 97], 4) == 210\nassert solution.largestEvenSum([5, 7, 8, 9, 21, 41, 52, 84], 8) == -1\nassert solution.largestEvenSum([20, 32, 94], 1) == 94\nassert solution.largestEvenSum([7, 30, 31, 73, 79, 89, 98], 4) == 296\nassert solution.largestEvenSum([1, 21, 23, 24, 31, 36, 44, 52, 73, 75, 86], 8) == 420\nassert solution.largestEvenSum([14, 15, 41, 44, 46, 55, 58, 78, 95], 3) == 228\nassert solution.largestEvenSum([16, 27, 32, 36, 49, 55], 3) == 140\nassert solution.largestEvenSum([19, 47], 1) == -1\nassert solution.largestEvenSum([4, 6, 25, 31, 32, 36, 60, 75, 86], 7) == 326\nassert solution.largestEvenSum([19, 32, 33, 56, 59, 63, 65, 67, 72, 84, 86], 1) == 86\nassert solution.largestEvenSum([29, 32, 33, 48, 55, 58, 64], 2) == 122\nassert solution.largestEvenSum([21, 27, 67, 70, 79, 87, 88, 91, 95], 9) == -1\nassert solution.largestEvenSum([15, 46, 98], 1) == 98\nassert solution.largestEvenSum([2, 4, 26, 50, 69], 4) == 82\nassert solution.largestEvenSum([13, 39, 75], 3) == -1\nassert solution.largestEvenSum([13, 16, 59], 1) == 16\nassert solution.largestEvenSum([5, 17, 23, 53, 55, 56, 59, 70, 80, 91, 99], 1) == 80\nassert solution.largestEvenSum([26, 57, 72, 82, 88, 95, 98], 6) == 492\nassert solution.largestEvenSum([59, 66, 96], 3) == -1\nassert solution.largestEvenSum([21, 22, 29, 43, 55, 69, 74, 82, 88, 91, 97], 4) == 358\nassert solution.largestEvenSum([21, 54, 95, 99], 1) == 54\nassert solution.largestEvenSum([5, 20, 24, 25, 27, 51, 57, 92, 95], 4) == 268\nassert solution.largestEvenSum([14, 29, 42, 47, 53, 71, 73, 88], 1) == 88\nassert solution.largestEvenSum([6, 23, 28, 38, 50, 57, 59, 69, 80, 92, 94], 5) == 394\nassert solution.largestEvenSum([5, 21, 61, 67, 72, 88, 90, 93], 4) == 338\nassert solution.largestEvenSum([28, 64], 2) == 92\nassert solution.largestEvenSum([2, 11, 12, 18, 39, 41, 43, 50, 59, 64, 89], 8) == 396\nassert solution.largestEvenSum([4, 17, 38, 73], 4) == 132\nassert solution.largestEvenSum([50, 96], 2) == 146\nassert solution.largestEvenSum([7, 12, 17, 33, 34, 35, 36, 39, 52, 66, 71], 6) == 298\nassert solution.largestEvenSum([26, 29, 41, 64, 71, 84, 87, 88], 1) == 88\nassert solution.largestEvenSum([18, 34, 42, 52, 76, 87, 90, 97, 98], 6) == 500\nassert solution.largestEvenSum([3, 11, 16, 20, 27, 30, 33, 81, 85], 4) == 226\nassert solution.largestEvenSum([1, 4, 9, 16, 62, 64, 90, 94, 96, 99], 3) == 280\nassert solution.largestEvenSum([19, 64], 1) == 64\nassert solution.largestEvenSum([21, 22, 40, 41, 55, 56, 71, 73, 79, 85], 6) == 404\nassert solution.largestEvenSum([12, 17, 19, 35, 46, 97, 98, 99, 100], 8) == 506\nassert solution.largestEvenSum([6, 24, 27, 44, 68, 90, 98], 3) == 256\nassert solution.largestEvenSum([21, 24, 29, 54, 55, 58, 60, 69, 81, 90], 4) == 300\nassert solution.largestEvenSum([63, 78, 83], 2) == 146\nassert solution.largestEvenSum([1, 17, 18, 33, 70, 86], 5) == 224\nassert solution.largestEvenSum([5, 8, 52, 91, 97, 100], 3) == 288\nassert solution.largestEvenSum([23, 25, 52, 74, 79], 1) == 74\nassert solution.largestEvenSum([1, 45, 46, 87], 2) == 132\nassert solution.largestEvenSum([4, 7, 20, 40, 42, 44, 72, 75, 81, 93], 6) == 372\nassert solution.largestEvenSum([3, 40, 66, 84], 3) == 190\nassert solution.largestEvenSum([16, 20, 23, 32, 42, 44, 59, 73, 78, 88], 6) == 384\nassert solution.largestEvenSum([9, 15, 50, 78, 86, 96], 6) == 334\nassert solution.largestEvenSum([16, 19, 20, 47, 49, 66, 78, 92, 93, 95, 98], 6) == 522\nassert solution.largestEvenSum([22, 47, 66, 76, 77], 3) == 200\nassert solution.largestEvenSum([7, 8, 13, 16, 41, 50, 66, 78, 80], 7) == 344\nassert solution.largestEvenSum([14, 15, 24, 36, 38, 40, 58, 68, 71, 91, 96], 2) == 164\nassert solution.largestEvenSum([3, 28, 33, 35, 37, 50, 56, 75, 83], 2) == 158\nassert solution.largestEvenSum([15, 37], 1) == -1\nassert solution.largestEvenSum([21, 32, 41, 54, 67, 74, 100], 1) == 100\nassert solution.largestEvenSum([19, 25, 54, 77, 85], 1) == 54\nassert solution.largestEvenSum([12, 17, 18, 20, 37, 69], 1) == 20\nassert solution.largestEvenSum([43, 57], 1) == -1\nassert solution.largestEvenSum([98, 99, 100], 3) == -1\nassert solution.largestEvenSum([21, 23, 57, 58, 81], 5) == 240\nassert solution.largestEvenSum([2, 12, 29, 72], 3) == 86\nassert solution.largestEvenSum([3, 9, 46, 49, 59, 67, 93, 100], 1) == 100\nassert solution.largestEvenSum([5, 42, 45, 53, 68, 80, 100], 5) == 346",
  "inefficient_solution": "class Solution:\n    def largestEvenSum(self, nums, k):\n        nums = nums.copy()  # create a copy of the original list\n        nums2 = nums.copy()  # create another copy of the original list\n        nums3 = nums.copy()  # create yet another copy of the original list\n        nums.sort()\n        n = len(nums)\n        max_sum = sum(nums[-k:])\n        if max_sum % 2 == 0:\n            return max_sum\n        for i in range(n):\n            nums2[i] = nums[i] * 10  # multiply all elements by 10\n        for i in range(n):\n            nums3[i] = nums[i] + 1  # add 1 to all elements\n        def check_subsequence(nums, k):\n            subseq = []\n            for i in range(n - k + 1):\n                for j in range(k):\n                    subseq.append(nums[i + j])\n            subseq.sort()\n            return sum(subseq[-k:])\n        max_even_sum = -1\n        for i in range(n):\n            for j in range(k):\n                subseq = []\n                for x in range(i, n - k + 1):\n                    subseq.append(nums[x + j])\n                if len(subseq) == k:\n                    max_even_sum = max(max_even_sum, check_subsequence(subseq, k))\n        return max_even_sum",
  "is_python": true
}