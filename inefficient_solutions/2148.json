{
  "problem_idx": 2148,
  "task_name": "Count Elements With Strictly Smaller and Greater Elements",
  "markdown_description": "\nGiven an integer array `nums`, return *the number of elements that have **both** a strictly smaller and a strictly greater element appear in* `nums`.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** nums = [11,7,2,15]\n**Output:** 2\n**Explanation:** The element 7 has the element 2 strictly smaller than it and the element 11 strictly greater than it.\nElement 11 has element 7 strictly smaller than it and element 15 strictly greater than it.\nIn total there are 2 elements having both a strictly smaller and a strictly greater element appear in nums.\n\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** nums = [-3,3,3,90]\n**Output:** 2\n**Explanation:** The element 3 has the element -3 strictly smaller than it and the element 90 strictly greater than it.\nSince there are two elements with the value 3, in total there are 2 elements having both a strictly smaller and a strictly greater element appear in nums.\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `1 <= nums.length <= 100`\n* `-105 <= nums[i] <= 105`\n\n\n",
  "canonical_solution": "class Solution:\n    def countElements(self, nums: List[int]) -> int:\n        mi, mx = min(nums), max(nums)\n        return sum(mi < num < mx for num in nums)\n",
  "test_case_generator": "\nimport random\n\nclass Solution:\n    def countElements(self, nums):\n        mi, mx = min(nums), max(nums)\n        return sum(mi < num < mx for num in nums)\n\ndef generate_test_case():\n    solution = Solution()\n    \n    # Generate random numbers list\n    nums = random.sample(range(-100000, 100001), random.randint(2, 100))\n    \n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.countElements(nums)\n\n    return nums, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        nums, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.countElements(nums) == expected_result\n        print(f\"assert solution.countElements({nums}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.countElements({nums}) == {expected_result}\") # You can find that we construct the test case in the same format as the example\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.countElements([92729, -45744, 45094, 71913, 3499, -69200, -20463, 74200, 98283, -24795, -80771, 35688, -18808, 32408, 30810, -30352, 1226, -4413, 55550, -55076, -95148, -69426, -88768, -46979, 71002, 49822, -57085, 61584, -72625, -48260, 6805, -22437, -10895, -61826, 49207, -9145, -57254, 35505, -53960, -79688, -13075, -37755, 15255, 13602, -69154, 44023, -71403, 3481, 95966, -73520, -35637, 26460, -95492, 66965, -7494, 54924, -91212, -13794, -21995, -68716, 82340]) == 59\nassert solution.countElements([75142, -5494, 74529, -22152, 68557, 3467, 59545, 4622, -31879, 18603, 83931, -91685, -85848, -9398, -99570, 79822, 64156, -80802, 75471, -90991, 30785, -66124, -17363, -35427, -18336, 4095, 18416, 35602, -26770, 74353, 71262, -31908, -66469, -89382, 62471, -74847, -98453, -83817, 34040, -13014, 15019, 4008, -73252, -55621, -13935, -11026, -11706, 5767, 6869, -22713, -45925, 93660, -38127, -69328, -4144, 61141, -71845, -82686, -27193, 23020, 63880, 47424, -28003, -26728, -4303, -58951, -72546, 7012, 58062, 42071, 28155, -1876]) == 70\nassert solution.countElements([32790, -10324, -4005, -37929, 77735, 37552, -46653, -40497, 92488, 91996, 95751, 32817, -1798, 7192, -68988, -88872, 38783, -90321, 65299, 75820, 98008, 53624, -4124, 43563, 69296, 68844, -11531, 19353, -72630, 88861, 98388, 7230, -39249]) == 31\nassert solution.countElements([62387, 19380]) == 0\nassert solution.countElements([-55021, 74521, -33694, -73066, -59492, -24557, 83957, 68367, -82003, 90478, -53639, 59261, 6486, 77606, -8451, 55659, 85803, 15659, 67255, 34317, -96308, 64868, 22723, 96451, 66070, 94293, 13071, -56148, -92101, 41946, 69140, -50663, 28380, -95231, -68034, 68630, 61396, 46279, -50029, -17488, 30655, 19796, -2357, 71999, 29137, 48263, -43437, 67480]) == 46\nassert solution.countElements([86248, -89666, 46706, -47019, 13049, -83654, 1996, -90329, -82598, -16029, -92190, -99331, 4016, -40453, -69170, -3116, -33489, 25588, -85840, 8362, -23044, -21944, -10850, 87492, 84858, 99937, -27828, 90822, -54408, -47684, -53757, -21848, 92043, -60437, 64741, -13388, -34218, -20466, -70226, -72165, -79936, 72619, -96794, -82340, 74575, 80028, 23013, -8999, -4646, 9637, -67112, -46277, -63304, 27400, -31765, 96886, -87667, -77856, 13064, 98795, 33175, 24440, -26731, 127, 98337, 50106, 16317, 97832, -84835, -59135, 25983, -15825, 89985, 66876, 16095, 52664, -8730, -70856, 23530, -37589, -60222, 85279, -32785, 61928, -82300, -16483, -35920, -80449, -96565, -78683, -1167, -62991, -87415, -76067, 65572, 86211, 65479, 28637]) == 96\nassert solution.countElements([33132, 73855, -21048, 45932, -89376, -34963, 17168, -87643, 95134, -65385, -40885, -80594, 84476, -42055, 99750, 26327, 29041, -66377, -76193, -33669, -3985, 27134, 3187, -94612, 90937]) == 23\nassert solution.countElements([-48953, -35744, 52093, -46917, 5316, -43744, 94317, -4550, 34896, 34733, -62329, -83452, -40056, -99809]) == 12\nassert solution.countElements([39828, 58806, 24215, -75670, 27726, 96353, 11226, -45010, 78991]) == 7\nassert solution.countElements([52516, 3807, -8387, -10600, 93558, -84064, -31491, -36725, 80886, 1155, -89117, 72534, -84051, 1067, -78287, -1876, 11061, 26509, -13630, 60756, 61536, -17006, -25957, -66687, -8302, -86821, -28166, 21930, -1559, 5992, -14958, 76212, 77983, 58015, -63693, -12865, 29149, 64274, -3045, 36689, 85237, 80474, -41669, -46433, 2690, -80705, 31193, -18262, -7019, -8031, 41494, -92759, -72239, 45842, 58952, -95457, -14064, 29391, -53405, 51687, -76645, -86670, 6544, -63948, 85815, 68929, -62840, 88186, -27775, -19443, -70098, 75867, -8415, -29585, -51653, -16190]) == 74\nassert solution.countElements([40451, 25861, -80106, 33108, 9826, -43782, 29523, 79474, -82169, 2350, 36201, 80870, 20544, 6324, 7303, 36662, -17478, -93300, -14276, -49520, -61174, -99379, 20629, -90763, 95020, 83841, -51334, 74221, -5042, 35438, -40511, -94957, 7072, -14754, -8362, 50353, -5517, 82000, -29669, -93765, 22483, 59900, -75050, -54806, -57840, 86555, -51076, 2289, 62192, -84942, -46433, -52329, -28948, -14463, 8641, -71928, 47504, -1512, -31372, -16138, 93168, -62661, -54606, 33010, -9918, 38693, -16867, -39995, -90242, 83316, 12143, -44362, -1683, -74484, 10451, -8185, -23279, -69889, 78542, -86799, 25291, 72900, -37739, 11743, -72684]) == 83\nassert solution.countElements([31035, 26727, -59298, -90230, 73267, -54174, -73865, -43451, 34280, -94464, -63616, -82011, -6204, -52125, 45927, -60911, 19239, -67429, 87366, 53049, -28660, -74373, -29008, -99649, -43117, 78577, -98434, 79211, 524, 9221, 53700, -12061, -61699, 47811, 63931, -92286, -9372, -48966, 94566, 61527, 90899, -20019, 56772, -83812, -77903, -12873, -24536]) == 45\nassert solution.countElements([-41476, 2187, -14737, 22039, 46445, -41857, -8535, -72550, -99969, -35363, -54760, 65604]) == 10\nassert solution.countElements([2907, 35835, -10686, -68710, -73258, -62810, 36006, -31437, 88702, 8235, 71478, -93997, 72261, -291, 73387, -84695, 60355, -55281, -42763, -65130, 75149, -7638, -28049, -25747, -97327, -58606, -92517, 37933, 56563, 10979, -57319, -57375, -89883, 39024, -97277, -60549, 81234, -59287, 54045, -10438, -13659, 16719, -10841, 13232, -46477]) == 43\nassert solution.countElements([96256, 35680, 19193, -12600, 83980, -7869, 79893, -95874, -71652, 54829, -81154, 16587, 43049, -70336, -70102, 75560, -49318, 21527, -65498, 80707, 65328, -78380, -7454, 20603, -95412, 62654, 72255, -31817, 27231, -90315, 94914]) == 29\nassert solution.countElements([51900, 66712, 86645, 89180, 21282, -95050, 98852, -44766, -6001, -94570, 40502, -14178, -16360, 16335, 52463, -41884, 96504, -10621, -33059, 4900, 11002, 43725, 81780, 85653, -89802, -44966, -12257, 35713, 73268, 94738, 10503, 1438, -61133, -28326, 1878, -47813, 16629, 91435, -89812, -75406, -99851, 81187, -87850, -54178, -54476, 74104, -95178, -625, 39445, -24106, -37527]) == 49\nassert solution.countElements([-43480, 11908, 78176, 95490, -74535, -80693, -9082, -42887, 80386, -13498, 36230, -87011, 42180, 93143, 44286, -7993, -29367, -25104, 66702, 19570, 57972, -62560, -33209, 68407, 3253, -93090, 97028, -75412, 74778, 65187, 84539, 78909, 83581, -36382, 11963, -77441, 63768, -5109, -50379, -56779, 38668, -22219, -92392, 78130, -40766, -13665, 12143, -24445, -42692, 23223, -2639, 96455, 84400, -28420, 39674, -65360, 66411, 19305]) == 56\nassert solution.countElements([-33187, 37764, -4546, 93075, -8125, 95638, -43814, -67847, -33939, 58271, 31051, 67214, 14726, -62703, 44797, 25067, -77993, 62477, -85608, 3659, -57706, 74081, 27839, 32522, 19452, 41254, -96185, -58506, -18001, 59712, 76932, -237, 56827, -62790, 32561, -94937, -92682, -28998, 85425, -11333, 29930, -84529, 20531, 38729, 71591, -46550, 95853, -74157, -24500, -27373, -64575, 15961, -18538, 61092, -10202, 7517, -90551, 59381, 17774, -43972, 77240, 87021, -74071, -85751, 13465, -50412, 56733, 31693, -67143, 83447, 25754]) == 69\nassert solution.countElements([81281, -76459, 14811, 30065, 71960, -60028, 56977, 97052, 88354, 17239, 68953, -58565, -46772, 29780, -2239, -71780, -68970, -74836, -7432, -49562, 30829, 60001, -10729, 85783, -8607]) == 23\nassert solution.countElements([34777, -44601, 46040, 43294, 87100, 97877, 34563, 42027, -69343, -68774, -11376, 42034, -79843, 13634, -11665, -31907, 93028, -68522, 61510, 65234, 46861, -73138, 84075, -45645, -59537, 85875, 13767, -39000, -70181, 70287, -93260, 31400, -29940, 81991, 14066, -81165, -2050, -29031, 85564, -68847, 29164, 60511, 73929, 18674, -48734, 13356, 29516, 66560, -84018, 48488, -66100, 40828, -86567, 97707, -34901, 45408, 68436, -81498, 68266, -32508]) == 58\nassert solution.countElements([54099, 72660, -20826, 16256, 20219, -35542, 17868, 91199, -16961, -98617, -74329, 36378, -99209, 38210, 94927, 86729, -10899, -54316, 43313, -53670, 81094, 80146, -97912, -92428, 18211, 56147, -859, 21555, -65814, -70171]) == 28\nassert solution.countElements([-51044, -79196, 61550, -56957, -69083, 44963, 1238, 88895, 20870, 31263, 53958, -96363, -15494, -80995, -33655, 57772, -9741, 48607, -8347, -73411, -77787, 91617, -48252, 87614, 87388, -21327, 82167, 47156, 11033, 65490, 31542, -67833, 76233, -98424, -23543, 83916, 49724, 83911, 99707, 55645, 69473, -553, -20505, -74160, 36419, 16036, 53566, -19628, 20717, 5792]) == 48\nassert solution.countElements([88876, 65985, 65445, -46178, -56520, 35610, -13473, -633, -47221, 21184, -94834, 36377, 80285, 22921, 3164, 15258, 62060, -88064, 97433, 56821, -87019, 79471, -62847, 42383, 51121, -26293, 96121, -59525, 34006, -18792, -18518, -70709, -93722, -93277, -13057, -47429, -83354, -8233, -35513, 47972, -87328, 7247, 95414, 94363, -90113, 68946, -51790, -61723, -23560, 88854, -17140, -26556, 37945, 53043, 89709, 90555, 74795, 34632, -61678, 95616, -89124, 41029, -39418, -72335, 98021, 44705, -62191, 72413, -26623, 1776, -98582, -10945, 99401, -88266, 10089, 1609, 79393, 84361]) == 76\nassert solution.countElements([64754, 33295, -13800, -61632, 95971, -75161, 76148, -12557, -42261, -73514, -90231, -38565, 42417, -22011, -77624, -52931, -12605, -86194, -37963, -57460, -26954, -68993, -82267, 87953, -48574, 1102, -33249, -48535, -29490, 47842, -56666, 91375, 37600, -31457, 55983, 42964, -27438, -31111, 93639, -1415, -99435, 52681, -13305, 31037, 18270, -71219, 29206, -67469, 50893, 45553, -4867, -76667, 37791, -17485, 56199, -29849, 64265, 22154, -85230, 14600, 78685, -76509, -75284, 4132, 53194, 75365, -68141, -16526, -24899, -82127, -80884, 1717, -1132, -35909, -89707, 51954, -94654]) == 75\nassert solution.countElements([10600, -59285, -86252, -18434, 26568, 16578, -42559, -58353, -91946, -23701, -29360, -32720, 94339, 279, -55872, 92187, 3366, 67903, 7294, -65096, 35494, 25846, 81218, 44007, 90463, 80933, 85941, 49572, 61541, -12542, -95770, -1260, 30584, 11606, 53641]) == 33\nassert solution.countElements([81686, -52423, 76656, -43485, -40783, -91306, -64210, -11501, 76600, -45640, -24725, 84275, 70219, 49678, 70718, 79887, 8932, -70586, -54503, 57926, 19931, -17580, -36812, 1256, -48016, 98606, -32233, -17569, -36356, 18021, 99888, 78923, 23285, -43874, -45978, 62150, 53525, 49149, 11690, 87700, 73627, 12717, 75423, 42290, -4037, -30891, -82866, -97551, -22533, 48037, -92193, 40805, 90784, -65832, 49414, 13921, -70800, 84909, -54619, 80553, -66086, -4129, 70080, -49573, 71686, 12843, 52929, 64606, 98227, -12362, -82953, 16227, -91215, -99055, 66973, -79181, 16091, 10496, 36051, 55187, -25734, 56849, 38062, -61678, 16131, 70978, 54804, -48782, -34697, 23006, 48225, -19172, -90597]) == 91\nassert solution.countElements([67460, -97295, 26092, 99342, 17615, 582, -32450, -78874, -48170, 32277, 14914, 31814, -8207, 7064, 58798]) == 13\nassert solution.countElements([-68003, 48913, -98598, 59091, -72621, 20009, -25619, -29704, -36772, -11717, 68433, -63737, 15374, -60113, 85677, -61457, 16743, -23128, -88392, -96398, -26679, -34689]) == 20\nassert solution.countElements([-24992, -2806, -30695, -11689, 72835, 26294, -44147, 29927, -90744, 83753, -66030, 11015, -65053, 98822, 44689, -49256, 65535, 44928, -20758, 24929, 39055, 12171, -60677, 46278, -6973, 32064, 73215, -29830, -25730, 79205, 18332, -12388, 72196, 59574]) == 32\nassert solution.countElements([69363, -34128, -5023, 15761, -21280, 99228, -10544, -51973, 37770, 96346, 94613, 4567, 37157, 27828, -84673, 72991, -84498, -75000, -65398, 90378, 23765, -25445, 16416, -7844, 50655, -24637, 76574, 95468, 63911, 72632, 88759, -74708, -45300, 68207, -71939, -69115, -3823, 85337, -1746, -70062, -90573, 72052, -48277, -86734, 77512, 27162, -14028, -16157, -35046, 24803, -34053, 94042, 34950, -78866, 88865, -83408, -25444, -90795, 79037, -64697, 57876, 2046, -50528, 30406, 66413, 22960, 45792, -12083, -37550, 12448, 94214, -82229, 28951, 20378, -90487, -59145, 48207, -85349]) == 76\nassert solution.countElements([46210, 88300, 15838, -90269, 34892, -26368, -96344, -81123, 63788, 40293, 34744, -28388, 78331, 50130, -16996, -29408, -99433, -75324, 95279, 13738, 56094, -48222, -30213, -42342, 7415]) == 23\nassert solution.countElements([-34578, -9381, -25540, 14047, -47667, -23075, -27926, 9566, 50330, 96900, 28126, -31634, 60726, -30792, -18900, 2304, 57017, -66586, 53179, 13574, -8649, 90239, 57918, 25755, -94853, -84952, 73522, -10254, -57390, 2465, 58836, 13520, -11061, 35250, -43812, -15268, 47219, 51463, -43893, -37036]) == 38\nassert solution.countElements([96312, 916, -79137, 64406, -76558, -10325, -24895, -85563, 14412, -28782, 16528, 32153, -12858, -58139, -60438, 94777, -53367, -47173]) == 16\nassert solution.countElements([-72412, -7537, -31957, 3535, -87985, -82194, -92045, 55843, -55124, -22755, 3634, 84592, 81514, 50955, 3355, 81625, 65746, 74880, 45561, 68805, 45606, -62370, 27212, 43816, -58813, 85034, 6521, -28754, -72253, 15725, 78558, 77519, -64041, -81951, -87667, 60787, 73747, -71748, -90326, 95527, 47072, -93647, 12008, -92349, -59585, 38638, -64569, 6719, 83482, 44311, -31570, 35125, -33011, -51345, -62467, -92761, 76246, 56008, 85789, -78075, 38764, -89980, 91185, 29525, 14494, 85616, -53172, -75661, -52191, -22763, 50591]) == 69\nassert solution.countElements([79460, 67631, 14192, 61956, 86688, 74316, -82125, -97054, -61188, 74056, 9937, -89747, 57376, 75635, 70951, -2656, 67796, -80230, 10786, -48968, -29369, 4711, 3962, -79666, 38306, -34428, -92978, -35553, -47156, 52665, -61324, 33271, -49585, 81041, 14360, -43556, 25884, 37535, -96560, 3146, -90126, 7789, -84137, -57931, -38869, 44034, 1692, -3435, 91777, -2940, -50475, 67228, 51126, -70185]) == 52\nassert solution.countElements([-7090, 317, -1162, -49277, -75984, 14146, -62778, 58799, -33599, 89939, -46867, -81570, -24858, -16374, -17838, 99482, 86483]) == 15\nassert solution.countElements([40720, -3242, 88079, 249, -61448, 21013, 16183, 99962, 62258, -7754, -83506, -92066, 41609, 64234, -12082, 18080, -48390, 53122, -40872, -11075, -66618, -7912, 59175, 79430, 24540, 13799, -85891, -82998, 73477, -62623, 91513, -6743, 15869, -68502, 76073, -66021, -72683, 18048, 3053, -46188, -18105, -49969, 166, -52545, -56552, -88243, -13880, 74869, 56266, 81633, 3668, -88880, -524, -9050, -82236, 92115, 46136, -10316, 12717, -99944, 31851, 42154, -36705, 80538, 16591, -51079, -82819, -72962, -11091, -48404, -58364, 63919, 67618, 91334, -82568]) == 73\nassert solution.countElements([-29018, 69945, -65047, 17909, -30251, -94560, -36539, 27908, 75794, -58215, -95097, 88122, -95505, -60074, 97504, -9421, -22859, -14518, -35031, -59091, 25838, -93099, -7484, 20741, -11652, 96370, 51526, -48504, -52631, -93303, -24571, 77988, -89563, 3987, 93878, -94015, 83498, -46502, 21697, 56657, -42500]) == 39\nassert solution.countElements([-30369, 74892, -63607, 83508, -13749, -89030, 20995, 8881, 45660, 44620, -85303, -2239, -56836, -64496, -54098, -38594, -22668, 36157, -1143, -17482, -1500, -10014, 4953, 2261, 55277, -70307, -23914, 46798, -87461, 35519, 45324, -18204, 5375, 22708, -76426, -3110, 20829, -78454]) == 36\nassert solution.countElements([46032, 38502, 47966, 9975, 79560, 63331, 84990, 17323, -12480, 80306, 49160, -6177, 62146, -86898, 44943, -77455, -75621, -90963, -96980, 85049, 93626, 67890, 26491, -23259, 55622, -95740, -70704, 64324, -33764, -68030, 53414, 18426, 19406, -85545, 54822, -66452, 92520, 40194, -29454, -95904, 19592, 29671, 5269, -54602, -18592, -90933, 96689, -23838, 18703, 73990, 42069, 24775, -80743, -80559, -93903, 2381, 44525, 37130, -15116, 44933, 11171, 69219, 10367, 51737, -30489, 8282, 32786]) == 65\nassert solution.countElements([26447, 9063, 82672]) == 1\nassert solution.countElements([21119, -33863, 89760, -73119, 91313, -37104, 14247, 16120, 56690, 85243, -4699, -9660, 17971, 91142, 83236, 44272, 3515, -40207, 78919, 11153, 14092, 90678, -75330, 46247, -11674, -56779, 28559, -84031, 23041, 70224, 94121, -38341, 85568]) == 31\nassert solution.countElements([-42648, 940, 91350, 73960, -15561, -92321, 72408, 97443, 40580, 73951, 48919, 22650, 2374, 67498, -31622, -79725, -28810, -66953, 25088, 51802, 40898, 64408, 28452, 5520, 74404, -44605, 9256, 2944, 88590, -23444, -71307, 20511, -87527, -63487, -63520, -14814, -87958, 91316, 60182, 20154, 28244, -94258, -81939, 26448, 2945, -88325, 49391, -27202, 92007, 56472, -37339, -3303, 47209, 41915, 44978, -10084, -94743, -22040, -58540, -12479, -75497, -50600, 98058, -71769, -15576, 12914, 23323, 36550, -46892]) == 67\nassert solution.countElements([-3569, -2346, 46757, -11257, -23548, 9161, -48128, -73544, 36793, 36157, 2750, 2203, 40535, -53489, -97330, 6529, -98862, 6148, -21084, -10934, -55574, -77330, -2172, 66241, 63385, 91634, 25513, -35452, 92993, 14424, -86232, 87, 30215, -43409, -40281, -70994, 41437, 27233, -75177, -18389, -65942, 19875, 88777, -96233, -94692, -44593, 86422, 72355, -8377, -60119, 14350, -98495, 96308, -79019, 6718, 97498, -60475, -55309, -67015, 57715, 65295, -99009, -17553, 921, -90796, -27737, -8777, -51858, -41128, -39155, 43717, 38204, -55264, -17518, -22573, 91475, -747, -77273, 85355, -75609, -89432, 21581, -75549, 88024, 13726, -64534, -33685, -51715, -88801, -34427, 53715, 71804]) == 90\nassert solution.countElements([7085, -69959, 65585, 98527, -47404, -38768, -72968, -21959, -56054, -98792, -4572, 80647, -17038, 63355, 25431, -63597, 98221, -79159, -56117, 49951, 58851, 56064, -53632, -43819, -84449, 11691, 58161, 70749, 54643, -11991, 29110, -25973, 74406, 37783, 26005, 83953, 86611, 25447, 62326, 63323, -59161, 92658, 86685, -53047, -51929, -39319, 87426, 34538, -42188, -66191, 64756]) == 49\nassert solution.countElements([-25476, 32989, -34927, 40516, 87898, -2861, -41426, 84734, 41973, 34056, -66511, -85264, 47388, 98219, -55105, -50405, 65882, 71180, -60604, -23880, -37181, -35482, 31358, 27025, 55768, 42677, -31613, 52499, 43287, 15034, -53318, 19861, 52448, 81908, 89482, 41771, 91894, -13708, -55150, -92845, 19224, 96902, -72981, -59721, 45439, -29813, -98308, -19828, -26381, 87719, 15362, 16140, 83220, 80609, -64280, -25112, 97450]) == 55\nassert solution.countElements([53352, 37291, 57417, -72265, 78186, 9017, 85870, 79588, 79966, 85207, -87241, 80717, 97821, -10694, -83023, 26763, 41373, -88365, -56754, -76189, 18973, -59792, -5466, 33776, -33422, -6574, 16990, -34011, -76506, -81599, 6047, -58287, -64984, -61589, -48644, -57312, -35353, -49541, 13504, -60371, 46459, -66470, -12117, 35113, 92408, -57656, 84513, 33848, 85647, -66603, -5664, -66712, -85777, 85606, -90723, -74345, 48373, 16613, 77930, -29597, -66947, -14375, -27942, 34313, 53188, -84796, -31725, 97299, 82072, -1122, 23407, -63274, -21536, 17698, -35378, -14530, 52181, 49182, -66345, 73116, 38306, -48311, -60605, -23762, -60232, 90547, -45618]) == 85\nassert solution.countElements([39457, -88280, 13099, 18895, -18921, -19540, -15136, 48620, 34222, 78386, -18005, -42870, -56621, -23556, 49711, 28353, 26978, 94092, 10519, 67488]) == 18\nassert solution.countElements([-83344, -68371, -42211, -17976, 81079, -86683, 89550, -99465, -25566, 51920, -22741, -94246, 98587, 54198, -4473, 31978, 50695, -85596]) == 16\nassert solution.countElements([-36238, -18142, -39229, 76233, -70417, -30043, -38241, -54126, 87429, -56472, 21021, -17362, 22923, 24318, 82525, 2735, 90834, 67327, -59629, -66167, 38256, -50220, 74989, -2619, -81723, 26631, 1293, -78963, -47814, -19398, 58441, 1575, 51220, -9898, -33671, 80146, 92965, 70298, 30374, 9881, -97216, 49258, 90763, 43429, -99159, 94735, 20998, 69292, -7357, 18373, 59028, -3556, 59156, 9299, 72783, 75221, 67819, 27526, 62994, 22074, 68250, 18880, 13617, 2341, -8196, 50173, -60123, 55226, -28447, -89224, 63957, -22027, -30287, 49105, -36008, 58071]) == 74\nassert solution.countElements([63895, 4026, 53977, -30380, -48260]) == 3\nassert solution.countElements([9718, 84132, -33372, -63474, 34420, 60760, 97547, -38073, -94574, -19510, 6945, -9346, -5712, -58315, -24715, -47819, 81652, -48933, -41254, 35707, -64461, 55968, 66018, 81434, -2623, -47056, 130, 16517, -68814, -70998, 38047, -83502, -50403, 43918, -63998, 93610, 3612, 71206, -31726, 92042, 71019, 23838, -1395, 21049, -39666, 70265, -45093, 5261, -66296, -51488, -26037, -6010, -34830, -66999, 81855, 20920, -60769, 21962, -93908, -83185, -40434, -99821]) == 60\nassert solution.countElements([-40362, -62830, 20404, -41826, 72680, -26374, 28329, 13340, 32444, 14048, 86079, -44177, -11210, -72305, -45528, 26223, 90680, 24367, 34578, 87146, 2903, -80100, 85204, -28531, 73966, -29651, 50799, 97487, 12701, -67614, -2500, 83940, -6855, 50097, -30034, -83985, 82546, 2216, 49233, -44403, 6655, -16406, 19816, 24210, 94966, -43431, -73010, -65339, -91512, 18156]) == 48\nassert solution.countElements([54128, -27045, 8548, 49493, 83135, -86794, 20187, -68847, 1910, 88329, 86481, 8458, -33180, 28581, 9311, 62722, 64012, -28911, -19852, 60610, 5446, 91850, -96862, -17611, 14469, -31132, 18215, 42132, 63665, 45274, 50553, -71358, -86222, 77719, 85127, 69503, -67986, -63828, -18773, 93534, 18797, 29923, -52284, 48208, -12639, 94393, 57196, 83202, 14609, 26035, 55632, -50626, -43607, 7183, -46335, 61895, 17659, -85371, -53422]) == 57\nassert solution.countElements([26597, -65428, -63914, 43045, 17447, 25407, 92851, 46519, -21695, 27880, 37626, -11871, 8876]) == 11\nassert solution.countElements([-66627, -43015, 47013, -66234, 54011, -6167, 87094, -55038, 53407, 76307, 60495, 15403, -84990, 16418, 64644, 92686, 49460, 98483, 74741, 86976, -83021, 87015, 28859, -44388, 75040, -97649, -6746, 20250, 70077, 32026, -45687, -4759, 72097, -72539, -59675, 60318, -94227, -86145, 95235, 95264, 33345, 56939, 6455, -84494, 15039, 73024, -41573, 88553, -84421, -40665, -30538, -38054, 5945, 96582, -5619, -74439, -15348, 10508, 75606, 71158, 26148, -8157, 3905, -54959, -82845, 35596, 7835, -60867]) == 66\nassert solution.countElements([10910, 28593, -28640, -76436, -90669, 66321, -60170, -13414, -46044, -73481, -44105, 92776, 87866, -68092, 54919, 80146, 8200, -90422, -62049, -25135, -60304, -48820, 31907, -59384, 75775, 92897, -89219, 45703]) == 26\nassert solution.countElements([8535, -10949, 99070, 1485, 16087, -5448, -68096, -75019, -13029, -45006, 7020, -88055, 77462, -36632, -28899, 21692, 67522, 49277, -66852, -32688, 58982, -53526, -66915, 57166, -30654, -23516, 9078, -8397, -86700, 50154, -66895, -38322, 62910, 98284, -46529, -48681, 48576, -66383, 33256, 80202, 55893, 51787, 60260, 66580, 50255, -94457, -24798, -71068, 94178, 23599, -92004]) == 49\nassert solution.countElements([-49990, -13713, -73016, -4705, 80537, -99979, 54947, -9540, -76622, 89567, 33487, 11014, -25731, 69098, -5306, -42283, 89443, -20689, -83626, -38593, -35466, -67538, -74659, -12899, -76320, -4887, -43311, -75118, -15792, 71667, 51775, -16524, 23615, -94673, -20983, 15397, -65458, -52541, 73714, -14557, 3993, 92648, 38842, -35837, 14329, -63311, -81670, 72879, -91209, -48713, 65569]) == 49\nassert solution.countElements([972, 83910, 80142, -71231, 78163, 61947, 25760, 17789, -16828, 74516, 46685, 59630, -19808, -43352, -60, 53002, 44816, -87251, 95905, 34964, 59763, -75998, 44294, -44266, 67061, 94744, -72910, 35445, -68828, 40728, -17852, 85303, 57588, 42283, 95470, 47391, -61608, 43524, -15396, 82088, 91537, -61414, 33924, 90411, 13018, 28608, -38462, -56930, 76882, 9855, 98311, 91051, -64364, -37572, 50690, 50282, -30160, 20215, -49515, 72123, 9707, -93654, 18330, -24066, -77800, -81960, 65131, 19387, -2443, 59866, 73472, -52242, -26004, 82436, 26676, 11389, -643, -78643, -37648, -83113, -23395, -12898, 6612, -33852, -93475, -33117, -74597, 16034]) == 86\nassert solution.countElements([-99445, -90053, -69146, 15434, 1394, 95039, -37481, 2775, 24595, -60960, -31806, 10975, -86965, 96700, 83984, 71626, -3236, 17782, -98625, 88187, -32357, -22978, 65063, 42576, -8398, -43976, -99038, 20587]) == 26\nassert solution.countElements([-91172, 84166, 64576, -32481, 53847, 11289, 86245, -19346, -60061, 13560, 85231, 18179, -22847, 58462, 64542, -57270, 56240, 62087, 76134, 75766, -78903, -73579, 52829, 47709, 98923, -56755, 32956, 58694, 9603, -51699, -39354, 32669, 60896, 32391, 67752, -88150, -27987, 4836, -48698, -25676, -66269, -90602, -24309, 28229, -98096, -47463, 48776, -15433, -4341, -94681, -93521, 81169, 96400, -91601, 90519, -12486, -34227, -69851, 85626, 58010, -56577, 69189, 6824, 38913, 9552, -74777, 8671, 82397, -42019, 84239, -69321, 24244, -78841, -51187, -95548, 50708, 1926, -69970, -14896, 86430, -18291, 18940, 15608, -45349, 7499, -50721, 64978, 6346, -80438, -33670, -60635, -37389]) == 90\nassert solution.countElements([-4510, -23064, -69776, -98141, 82510, -41633, -9805, -2923, 58795, -6733, 88903, 78702, -87318, -75723, 66575, 48162, -3026, -71444, -55916, -67827, 11516, 29099, 32398, -31593, -61266, 99152, -59209, -80627, 24337, -33403, -53685, -59187, -25443, -523, -73494, 47718, -35161, 63971, -70254, -93221, -94226, 77094, -26764, 70847, -35881, 28081, -43746, -82737, 47396, -41795, 7742, -22921, 34018, 45247, -90010, -893, 39315, 15664]) == 56\nassert solution.countElements([75635, -11939, -37184, -46687, 52041, 37426, 90074, -48679, 40935, 47619, 86420, 85523, 88765, 83983, 60607, -49010, 98864, 51193, 20801, -64040, -9711, 53, 11929, 50401, 1601, -64090, 29648, -48588, 6956, 72478, -40082, 117, 29487, -48765, -47697, 24349, 37794, 35194, 99848, -4594, 65343, -71484, -18469, -56661, 9559, 68821, 45791, -84711, 22131, 50655, 35163, -99274, -89717, -41234, 17758, 97064, 322, -32467, -75882, -69689, 3061, -17967, -91805, -25558, -22602, 86103, -16904, -72147, -87213, -34400, -28463, 21210, -57216, 87617, -61321, 50835, -28843, -87223, 58504, -6906, 3739, -42630, 23758, -88563, -75096, -7096, 42377, -27878, 48837, -51599, -49862, -43668, 14414, 72453, 55458, -87481, -51497, -21872, 18280]) == 97\nassert solution.countElements([87499, -24680, -78490, -37065, 96484, -43366, -12201, -16974, 35596, 839, 94922, -24763, -78915, 72579, -51661, 54696, -82910, -56118, -56050, 87182, -96390, -37943, -34242, -67224, 30795, -91933, 44392, -92905, -55143, 23340, 52538, -95860, 98729, -49343, -3622, -27665, -112, 92305, 55095, 54100, -39789, 27820, -87990, 26553, 26058, -49946, 26102, -71831, -81044, -55619, 64839, 14165, 3140, 55991, -9893, 58329, 87352, -75877, -40765, 52847, 14486, 74471, 70434, -49736, -84405, 91332]) == 64\nassert solution.countElements([86609, -38597, 7514, -120, 48257, -97904, -70928, 84738, 25877, 518, -97134, 72603, -12655, 61493, 48335]) == 13\nassert solution.countElements([-98156, 62957, -78260, 68364, -45101, 18211, -20136, -81552, -38537, -83290, -1698, 9652, 48833, 94772, 19206, -45445, 15389]) == 15\nassert solution.countElements([15576, -36361, 33883, -55326, -14832, -51540, 52013, -61535, -53806, -72505, 82618, -36332, -62668, 93938, -90869, -57247, -79142, -83748, 71722, -8868, -39744, 40965, 66325, -22025, -8768, -17536, 14991, -12403, -41654, -88896, -54726, 72428, 11074, -78749, 67346, 80879, -51533, 31612, 65173, -44486, 40044, -20116, 1742, -47897, -56454, 35445, -5744, -87331, 75887, 85153, 5472, 3652, 97824, -41307, 87476, 7645, -68415, 68978, 2676, -85692, -88849, -82509, -3831, -44989, -53655, 70622, 69912, 18867, -31405, -57847, -21638, -80104, 3837, 47244, 26824, 24955, 89166, 19612, -45415, 92424]) == 78\nassert solution.countElements([60201, 22949, 46521, -47902, 82913, 31375, 48555, -69219, 15046, 22396, -89521, -96844, -56862, 41635, 18455, -7052, 32697, 90726, -94410, -11032, 25422, -68247, 37645, -20731, -17417, 53283, -64552, 25042, 76414, -47289, 69762, -2409, 89715, 51733, -72516, 57809, 10855, 34128, 31701, -93615, 37892, 76050, 58700, -47909, -73762, -74243, 8741, -32923, 97659, 82406, 55173, -7116, -98018, -73712, -29938, -1499, -85502, -63211]) == 56\nassert solution.countElements([-29359, -83213, 93407, 15678, -80827, 89793, 38858, -76427, 77651, -98483, -51547]) == 9\nassert solution.countElements([79271, 51042, 97586, -94924, 55164, -73180, -49413, 96883, 38111, 31554, 86644, 44589, -57649, -92720, -88251, -97687, 50304, 73915, -15625, 38288, 27939, 56200, 99895, 26075, 34327, 87173, -82167]) == 25\nassert solution.countElements([59425, 81502, -81778, 82698, -69196, 20562, -94080, 61805, 28602, 75117, -48640, 19253, -61363, 28656, -63214, -26389, -33740, -37181, 53618, -74889, 71519, -14964, -47168, 28854, 30732, -50249, -81535, -72779, -49544, -21685, 12163, 55169, 76513, -75867, 80835, 25824, -75624, 911, 60013, -56693, 32658, 28839, -38665, -72859, -80206, -91259, 60642, 96484, 71533, 58111, -16892, -15098, -92908, 19082, -20848, -56206, 30308, 38966, 60570, -32105, 15699, -71550, 49011, 23988, -91672, 98197, 94310, -92135, 20872, 43592, -9257, 30498, 22703, -4908, 86333, 70042, -59542, -4564, 76379, 14902, -36587, 13592, -20568, -71161, -78072, 14839, 53507, 41871, 88930, 66165, 4101, 56632, -43613, 13449, -85714, -79558, 74243, 26867, 30988, 22586]) == 98\nassert solution.countElements([-34263, -407, 4375, -23396, 30323, 25556, 39758, -98993, -40169, -45317, 39188, 7536, -23112, 65211, 11048, -53608, 47220, 98700, -43431, 551, -52043, -72595, 25594, -94380, -88803, 48955, -61752, 20923, 25562, -54068, 86253, -60317, -66297, -82101, 7448, -2491, 4115, 82973, -82243, 55388, -94799, 46067, -92694, 13493, 10174, 14410, -59277, 85626, -79901, -93351, 44478, 41509, 33319, -42457, -36831, -15157, 52989, -2877, -14203, -8161, 42820, 62880, -80221, 60703, 60567, 53506, -57474, 62140, -71490, 60887, -40613, 24518, -37032, -43317, 78156, 56456, -11864, 6612, -82971, 5899, 75323, 11053, 2814, -48587, 76088, -34670, -66401, 99693]) == 86\nassert solution.countElements([-50236, -32605, 22588, -65503, 66830, -57862, 41521, 82722, 47885, 70530, -24946, 96794, 69175, 51346, 97911, -5750, -2749, -89625, 71965, -54081, 53385, 30183, 39066, 32629, 10975, 17685, -60813, -49201, 76319, 27635, 5995, 4682, -47859, 55598, -68959, 18309, -96118, 54700, 91970, 30679, -14979, 35776, 36695, -30327, -74317, -96273, -84977, -5091, 70295, -99436, -6619, 41041, 26794, -56839, 7275, 91223, 73233, -81488, 72422, -65662, -22973, 49029, 68283, 87370, -51968, 72232, 41737, -47175, 60503, 21892, 10230, -63342, 5773, -46458, -91182, -66844, 8845, 29220, 72207, 8721, -65388, -61801, 68348, -48243, -59535, -78165, -62407, -19772, -98833, -70701, 15916, 54162, 85726, -79943, 53942, -96227, 20380]) == 95\nassert solution.countElements([-19196, 83830, 15452, -49497, -20973, 68723, 8110, -83757, -60791, -45647, 33033, -58753, 18359, -48802, 354, 13195, -85872, 86261, -84792, 47576, -72915, 39456, 59586, 91610, -44745, 62233, -42857, -96420, 22998, 52942, 86697, -23732, -28909, -38589, 52371, 25280, -20687, 37086, 44075, 47835, 36787, -94703, 49528, 85393, 6138, 27521, 72240, -57784, 92483, 60343, 84853, 76347, -94861, -23266, 10229, 53630, 88989, 65822, -98405, -34133, 84742, 39105, -713, -23292, 96242, 25053, 23628, -16015, 6550, 81178, -32172, -88771]) == 70\nassert solution.countElements([-82874, 1273, 90212, -45375, 43270, 71652, -70650, 76884, 84972, -50512, -7138, -84547, 76085, -97747, 43246, 13531, -88158, 63548, -94992, -65385, -8735, -8137, 59823, -9419, 82525, 42046, -50715, 91253, -2936, -4581, 79900, 40300, -45076, -89007, 67863, -75753, -83803, -53814, 62752, -67755, 85246, -34377, -73648, -15476, 84405, -19690, -94859, -7096, -38748, -97904]) == 48\nassert solution.countElements([-80510, 58349, 17849, -53878, -11813, 41214, 60801, 80374, -89026, -97685, 80154, -9838, 78606, 13527, 13706, 4991, 80965, 54063, -87798, 65092, -10712, -7885, -57499, -30987, -96176, -89493, -83985, -43597, -9313, 32839, 11406, -80428, -78425, -69086, 73186, 74484, -99887, 41266, -65182, 43556, 40750, 12900, 39413, -2967, 55317, 74736, 56050, 77989, 21813, 48468, 70542, 48489, -79177, -39570, 90616, 59728]) == 54\nassert solution.countElements([-8978, -98866, -99232, -28883, -34592, 22863, 98702, 57404, -81287, -16392, -14628, 47996, 18648, 3951, -81662, 71811, -1523, 39627, -37716, -23659, 28654, 58573, 94244, 21681, 66430, 76152, -99373, -34703, 24741, 97073, 56091, -44970, -38400, -54218, 13324, 41518, -12088, 15817, -12450, -72681, -30080, -1942, -96477, 67217, 99999, 3062, 56761, -18828, 90332, 64031, -92416, -51757, -12008, 28623, -56028, -7347, 15012, -36485, 50170, -78828, 40292, -35315, 22288, -46957, -19323, 92186, -39887, -44224, 68452, -50481, 9478, 93585, 22852, 93448, -74875, -25236, -3274, -33332, 45789, 75920, 66973, 10638, 75003, -27535, 56793, 65467, 3, -252, 66338, 63110, -69489, -94771, 64602, 66208]) == 92\nassert solution.countElements([-30420, 86788, -19474, -76156, -84398, -67503, 90093, 57341, -37819, -91666, -37147, 68461, -16276, 48930, -82223, 63769, -1053, 36749, 67413, -47712, 56190, -13999, 11081, -77974, 92694, -89251, -36731, 2647, -45306, 25260, 14798, -52477, 11586, -98453, -3878, 45262, -49460, -78333, 30494, -62212, 73349, -7894, 27131, 63528, -53306, 75793, 42403, 96557, 5097, -17381, -46669, 7527, -57523, -91662, 41469, 76958, 30811]) == 55\nassert solution.countElements([75770, 73063, 41589, -51926, 857, 11588, -47471, 50745, 21476, 1086, -25804, -70101, 47774, -13378, -60126, 81346, 53822, -44005, 63957, 68373, -2442, 72863, -77342, -11211, -1849, -1054, -12088, -45465, -4481, 15405, -56335, -2468, -15171, 62634, 39625, 43528, 69887, 11380, -55635, 69361, -59449, -63424, 62929, -58665, -56653, 72206, -24247, -45493, -23178, 73173, 4594, 58141, 13739, 5078, -35166, -63728, 64580, -88973, 31192, 87587, 46160, -49348, -37978, 84651, -15147, 52682, -4969, -76142, -13125, -89856, 28196, -21198, 40483, 20058, 31926, -1144, -77557, 74947, 30665]) == 77\nassert solution.countElements([-42246, 39271, -97825, 3914, -31303, 75394, -21522, -87417, -42163, 78145, 61766, -85193, 28138, 57993, 63406, 61140, -6385, 21702, 98490, 74822, 24329, -3053, 68784, -99571, -97671, 63273, 17547, -37677, -71050, -25339, -52068, 34120, -38207, -47065, 20312, 24576, -35809, 4981, -86735, -51013, 18011, -31566, 30898, -22886, -48410, -11902, -33118, -85093]) == 46\nassert solution.countElements([-84074, -41772, -12350, -17366, -7824, 71638, -55453, -45174, 21074, -42804, -6385, -91539, -83008, -5020, -29224, -5190, -24857, 54071, 81278, -79056, -67469, 1200, 51685, 48653, -78561, -35341, 48196, 22095, 35487, 92744, 16617, -11873, -52252, -22992, -50848, 22012, -93230, -58610, -77857, 92381, 84362, 57826, -66418, -3349, 64130, 25612, -16022, 24912, 89611, -47165, -33915, -83529, 48040, 9603, -66734, -36916, 80580, -2536, -84049, -94130, 88012, -7530, 79841, 96277, -43237, 82792, -61809, 77418, 46398, 31317]) == 68\nassert solution.countElements([-24396, 20419, -38237, 75655, -96238, 67895, 12603, -430, 56655, 256, -62737, 27232, 13045, -33823, -50200, -3619, -23532, 35501, 6291, -55694, 11452, 18568, -71501, -76447, 54191, 47831, 34220, -69751, 10048, -50004, 61745, -94405, 62778, -99833, -57781, -72518, -90455, -83659, -51120, 4126, 96840, 3665, 92663, 31580, 10383, -88616, 44530, 42369, 99700, 31405, -75345, -7064]) == 50\nassert solution.countElements([-76225, 20667, 87080, 81622, -43729, -185, 90909, -83523, 73776, -28056, 51658, -7285, -94989, -39985, 82549, -38544, 34857, -92206, 9924, -4284, 91497, -16987, 27524, 31781, -34254, 55423, 39444, 43859, -42140, -79444, -66209, 66899, 32959, -82539, -57251, -11970, 30356, 4076, -98495, -87036, 23182, 54436, -9423, -73396, -62932, 17425, -87966]) == 45\nassert solution.countElements([27807, -69724, 34082, 17738, -81104, 3055, 71675, -97561, 63847, 69922, 20909, -79673, 79624, -39540, -23581]) == 13\nassert solution.countElements([-27683, 8855, -92198, 44155, -59424, 61869, -91293, -58231, -64817, -48195, 71524, 333, -94502, 44397, -28608, 56923, -15183, 95285, 44525, -73346, -27563, -6844, 59907, -85461, 16411, -99459, 44786, -12843, 88513, -72810, 50244, -90180, 11466, -67277, -2289, -92033, -4182, 297, 44032, 86378]) == 38\nassert solution.countElements([-1357, 93912, 69282, -32148, 50712, -28356, -64593, -49859, 92635, -66174, 82300, -25870, -61582, -90722, 91308, 66062, 71750, 61452, 65333, 33200, 50274, 66994, 75880, -46899, 21663, -66636, 98953, 12003, -65960, 83690, -15303, -864, 77471, 2992, 35492, -13762, 13945, 85639, -86983, -20753, 14716, 1179, -6683, 10537, -92751, -99903, 18213, 97355, -45752, 29287, -74025, -78975, 45826, -64683, -38983, 80927, 26355, -10748, -28554, -67930, -11284, -31200, -44461, -87188, 87219, -57311, 83057, -70460, 44659, 45810, 48279, -13629, -9810, 28476, -18005, 16074, -42536, -87168, -11629, 10260, 76821, 81889, 42962, -43444, 57160, 54615, 54505, -87720, 64710, 39449]) == 88\nassert solution.countElements([45635, 6286, 18157, -27525, -47107, -77747, -25171, 12191, -15014, 79431, -24685, 34794, 39334, 11708, 53502, -86897, -30875, -91717, -94103, 17108, 93609, -86040, -92144, 76904, 57884, 29017, 50739, 69589, 36350, -85676, -46621, -99122, 91263]) == 31\nassert solution.countElements([21424, -60577, 8874, -26766, 29959, -73985, -9271, -17370, -41571, -87096, 53544, -82608, -8021, -29657, -34768, -94721, 71522, 85467, -24902, -85016, 14101, -80203, 49220, -22568, -55341, -35160, 65992, -35970, 89285, -38967, -20178, -85896, 26942, 11432, 19077, -5156, 34575, 45859, -5305, -43226, -24297, 148]) == 40\nassert solution.countElements([27193, 69194, -26661, -65659, 20407, -26467, -97099, -43812, 56279, -34800, -27851, 91574, 89139, 20664, 16887, 69656, -52244, 2343, 68829, -71887, -99953, 71890, 1574, 29725, 55635, -11751, 98701, -338, -16470]) == 27\nassert solution.countElements([-50742, -61607, 91927, -1949, 1684, -61179, -59343, -75559, -60766, 3389, 12902, -43077, 45807, 40602, -98011, 40618, -70900, 84019, -59450, -72412, 90733, -35119, -52093, 90172]) == 22\nassert solution.countElements([-25479, -55820, -67563, 6369, -59036, -69695, -3051, -1765, -41946, 63617, 96770, 15184, 15348, 74281, 10353, 67313, 85501, 73917, -37321, 98917, -64214, -52761, -71084, 82246, -93614, -46549, 84916, -9817, -35235, -79602, 26078, -71874, -55954, -97983, 2575, -26185, 73969, -92652, 28676, 32176, 64854, -45768, 10223, -25664, 55097, 73214, 80240, -15510, 91229, 65835, 9794, 59135, 14911, 66730, 81161, -60928, -3445, -51745, -83460, 71004, -48740, -46782, -68860, -94457, 19464, 22975, 63837, 48227, 60453, 84798, -49751, -28801, 98803, 59242, 69026, -19744, -1307]) == 75\nassert solution.countElements([66258, 30238, -80191, -17042, 15467, -32080, -5368, 52012, -56918, -40398, 80600, -1549, -34707, 3791, 97169, 34783, -95906, 14817, 85511, -44904, 45321, -83712, -79375, -32711, -63760, -86971, -62094, 93102, 12986, 48648, 39122, -21199, -59366, -17216, -33811]) == 33\nassert solution.countElements([97875, -80559, -74377, -94468, -50158, 65147, 41366, -27836, 43513, -11476, -37087, 94388, 317, -39068, 10280, 64618, -19111, -2918, 44132, 93907, -10827, 68480, 53577, 59188, 85289, -48012, -80723, 63420, -29474, -26492, -88392, 68360, 47715]) == 31\nassert solution.countElements([86362, 55562, -50501, 47584, 89084, 70759, -9656, 23534, 41872, -39430, 84774, -16460, -69762, 24516, -87171, 78111, -93745, 53874, 83574, -65385, 28912, -5271, -12796, 22275, 88588, 59318, 89630, 72408, 70148, -67319, 41424, 36126, 29558, 93586, -6681]) == 33\nassert solution.countElements([-43288, -6417, 84804, 95927, -17061, -85291, 86040, -59817, -47205, 79205]) == 8\nassert solution.countElements([29875, 25852, 62036, 1949, 94669, 35958, 4976, -64424, -64409, 85491, 50175, -60275, 57879, 47478, -28654, 95339, -32488, -7906, 34211, -13734, 27770, 59558, 43825, -14106, 33407, -6060, -95674, -37835, 56566, 39830, 74684, -93065, -86615, 80993, 41347, 82252, -96062, -98683, -20861, 27850, 93807, -55547, 73584, -91426, 58697, -84234, -31978, 8393, -89970, -74503, -22202, 2206, 9009, -52903, 87135, -82620, -46725, 74481, -59646, -84223, -42248, -51477, 69901, -71038, 95267, 77618, 92379, -58351, 23226, 98900, -31621, 78271, -96456, 91753, -44348, 57313, 42264]) == 75\nassert solution.countElements([-47821, 7211, 83532, 24399, -46019, -5229, -91046, 32573, -57914, 97439, -309, -54297, -19841, 17603, 92343, 47431, -16814, -19085, -8604, -79503, -18466, 74711, -34218, 64678, -83780, 99425, -80369, 93156, 95119, -2312, 33000, 64344, 1868, -45076, -11417, 40489, -3899, 79201, 95071, -42504, -50456, 79554, -55081, 8733, 74181, 39754, 60427, -90071, -11029, -80420, 23892, -99770, -86093, -1382, -46487, 76858, -61864, -60260, -83378, -70178, 36139, -4964, -85656, 74871, -73578, -61291, 52111, -49334, -90794, -30357, -94086, 99108, 23280, 88221]) == 72\nassert solution.countElements([-38000, -57153, 65804, 75306, -46851, -42675, -26569, -450, -49367, 26345, 95504, -29174, 12912, 21751, 80157, 72336, -59919, 84372, -94513, 61986, 74925, -17624, -13132, 15758, -26960, -29573, -89135, -93422, 58915, 91231, 32500, 99815, -60144, 5905, 25018, 44930, -2037, 37484, -76011, -57737, -1558, 77543, 92607, -84095, -17684, -95475, 87908, -7097, -46804, -69151, -68187, -86100, -17995, 17932, -29192, -55130, 89175, 4265, -28438, -56215, -77079, 13053, 9596, -849, -31455, -39945, 64321, 30285, -40868, 4070, -25158, 64892, -48910, -73269, 58310, -34499, 68971, -1924, -88337, 53816, 51548]) == 79\nassert solution.countElements([13321, 43993, 20140, -79381, -9440, -87412, 83814, 86780, -31113, 54869, -61349, 11358, -73689, -87162, 5979, 86790, 20787, -88924, -85435, -46223, -9633, -61103, 38031, -70406, 44531, 66570, 59969, 64345, 84367, 73856, -13014, -60513, 65654, 83766, 5318, -76060, 633, 80760, 19341, 69383, 8711, -9867, -38658, -83656, -58444, -34084, -39922, -12115, 43267, 42671, 47519, 54894, 74522, -82852, 83415, -39430, 72565, 59920, 337, -27344, 62009, -32734, 8678, -28977, 82752, -39465, 64359, 59520, 23098, 90677, 56437, -8931, -98164, 43141, 49500, -18941, -47603, -40391, -89278, 72629, -16762, 71439, 97426, -56051, -33312, 46521, 85242, 1843, 44790, 16262, 34858, -860, 57727, -13691, 40191, 2472, 92120, 24708, 87810, -33834]) == 98",
  "inefficient_solution": "class Solution:\n    def countElements(self, nums):\n        freq = {}\n        for num in nums:\n            freq[num] = freq.get(num, 0) + 1\n        \n        count = 0\n        for num in nums:\n            min_num = float('inf')\n            max_num = float('-inf')\n            for n in nums:\n                if n != num and n < num:\n                    min_num = min(min_num, n)\n                elif n != num and n > num:\n                    max_num = max(max_num, n)\n            if min_num != float('inf') and max_num != float('-inf'):\n                count += 1\n        \n        return count",
  "is_python": true
}