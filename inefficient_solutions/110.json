{
  "problem_idx": 110,
  "task_name": "Balanced Binary Tree",
  "markdown_description": "\nGiven a binary tree, determine if it is **height-balanced**.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n![](https://fastly.jsdelivr.net/gh/doocs/leetcode@main/solution/0100-0199/0110.Balanced%20Binary%20Tree/images/balance_1.jpg)\n\n```\n\n**Input:** root = [3,9,20,null,null,15,7]\n**Output:** true\n\n```\n\n**Example 2:**\n\n\n![](https://fastly.jsdelivr.net/gh/doocs/leetcode@main/solution/0100-0199/0110.Balanced%20Binary%20Tree/images/balance_2.jpg)\n\n```\n\n**Input:** root = [1,2,2,3,3,null,null,4,4]\n**Output:** false\n\n```\n\n**Example 3:**\n\n\n\n```\n\n**Input:** root = []\n**Output:** true\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* The number of nodes in the tree is in the range `[0, 5000]`.\n* `-104 <= Node.val <= 104`\n\n\n",
  "canonical_solution": "# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isBalanced(self, root: Optional[TreeNode]) -> bool:\n        def height(root):\n            if root is None:\n                return 0\n            l, r = height(root.left), height(root.right)\n            if l == -1 or r == -1 or abs(l - r) > 1:\n                return -1\n            return 1 + max(l, r)\n\n        return height(root) >= 0\n",
  "test_case_generator": "\nimport random\n\ndef generate_test_case():\n    solution = Solution()\n    \n    # Generate a random binary tree\n    root = generate_binary_tree(random.randint(0, 5))\n\n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.isBalanced(root)\n\n    return root, expected_result\n\ndef generate_binary_tree(depth):\n    if depth == 0 or random.random() < 0.2:\n        return None\n    \n    root = TreeNode(random.randint(-10**4, 10**4))\n    \n    root.left = generate_binary_tree(depth - 1)\n    root.right = generate_binary_tree(depth - 1)\n\n    return root\n\ndef serialize_binary_tree(root):\n    if root is None:\n        return \"None\"\n\n    return f\"TreeNode({root.val}, {serialize_binary_tree(root.left)}, {serialize_binary_tree(root.right)})\"\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        root, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.isBalanced(root) == expected_result\n        if root is not None:\n            serialized_root = serialize_binary_tree(root)\n            print(f\"root = {serialized_root}\")\n            print(f\"assert solution.isBalanced({serialized_root}) == {expected_result}\")\n            test_case_generator_results.append(f\"assert solution.isBalanced({serialized_root}) == {expected_result}\")\n        else:\n            print(f\"assert solution.isBalanced(None) == {expected_result}\")\n            test_case_generator_results.append(f\"assert solution.isBalanced(None) == {expected_result}\")\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.isBalanced(None) == True\nassert solution.isBalanced(TreeNode(-6754, None, TreeNode(9580, None, None))) == True\nassert solution.isBalanced(TreeNode(-5748, TreeNode(988, None, TreeNode(2632, None, None)), TreeNode(-4913, TreeNode(9049, TreeNode(-6694, None, None), TreeNode(-2528, TreeNode(4564, None, None), TreeNode(-9508, None, None))), TreeNode(-6640, TreeNode(-4181, TreeNode(9188, None, None), TreeNode(4279, None, None)), None)))) == False\nassert solution.isBalanced(TreeNode(580, None, None)) == True\nassert solution.isBalanced(TreeNode(4058, TreeNode(-2066, TreeNode(6556, TreeNode(-6990, None, None), None), TreeNode(1952, TreeNode(1601, None, None), TreeNode(-4420, None, None))), TreeNode(1511, TreeNode(-5671, TreeNode(-9241, None, None), TreeNode(6767, None, None)), TreeNode(6666, TreeNode(3323, None, None), None)))) == True\nassert solution.isBalanced(TreeNode(3857, TreeNode(-8866, None, TreeNode(6166, TreeNode(9192, None, None), TreeNode(2558, None, None))), TreeNode(-6405, TreeNode(4670, TreeNode(-7353, None, None), TreeNode(2430, None, None)), TreeNode(-3469, None, TreeNode(1028, None, None))))) == False\nassert solution.isBalanced(TreeNode(-594, None, None)) == True\nassert solution.isBalanced(TreeNode(8206, TreeNode(8923, TreeNode(-3514, TreeNode(-9024, TreeNode(-7606, None, None), TreeNode(-1681, None, None)), None), TreeNode(4472, TreeNode(-593, TreeNode(5709, None, None), TreeNode(359, None, None)), TreeNode(1467, TreeNode(-2149, None, None), None))), TreeNode(-325, TreeNode(9860, TreeNode(9752, TreeNode(2191, None, None), TreeNode(3585, None, None)), None), TreeNode(-5342, TreeNode(239, None, None), TreeNode(3571, TreeNode(2033, None, None), TreeNode(-7501, None, None)))))) == False\nassert solution.isBalanced(TreeNode(-1099, TreeNode(-8914, TreeNode(-3356, None, None), TreeNode(5362, None, None)), None)) == False\nassert solution.isBalanced(TreeNode(-5042, TreeNode(2119, TreeNode(985, None, None), TreeNode(-7268, None, None)), None)) == False\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(TreeNode(-9778, None, TreeNode(5721, TreeNode(3911, None, TreeNode(-3394, None, None)), TreeNode(3355, TreeNode(-2433, TreeNode(9701, None, None), TreeNode(7242, None, None)), TreeNode(-773, TreeNode(-6668, None, None), None))))) == False\nassert solution.isBalanced(TreeNode(9242, None, None)) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(TreeNode(5054, TreeNode(5012, TreeNode(-9950, TreeNode(-1953, None, None), TreeNode(-4764, None, None)), None), TreeNode(-5756, None, TreeNode(6883, TreeNode(-4425, None, None), TreeNode(9842, None, None))))) == False\nassert solution.isBalanced(TreeNode(7353, TreeNode(-6616, None, None), TreeNode(-2128, None, None))) == True\nassert solution.isBalanced(TreeNode(2381, TreeNode(891, TreeNode(-8752, None, None), None), TreeNode(1665, TreeNode(-8145, None, None), TreeNode(297, None, None)))) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(TreeNode(3647, TreeNode(-7247, TreeNode(3185, TreeNode(8232, None, None), None), TreeNode(6776, TreeNode(9368, None, None), TreeNode(3863, None, None))), TreeNode(4182, TreeNode(-7705, TreeNode(-9914, None, None), None), TreeNode(-2810, TreeNode(7345, None, None), TreeNode(-36, None, None))))) == True\nassert solution.isBalanced(TreeNode(2889, None, None)) == True\nassert solution.isBalanced(TreeNode(-3129, TreeNode(6596, TreeNode(3420, TreeNode(-3972, None, None), TreeNode(3214, None, None)), TreeNode(-7501, TreeNode(-1344, None, None), TreeNode(8343, None, None))), TreeNode(5339, None, TreeNode(3457, TreeNode(-7091, None, None), TreeNode(-5907, None, None))))) == False\nassert solution.isBalanced(TreeNode(5187, None, None)) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(TreeNode(6938, None, None)) == True\nassert solution.isBalanced(TreeNode(9970, TreeNode(3564, TreeNode(9107, None, TreeNode(-5118, TreeNode(-535, None, None), None)), None), TreeNode(-7441, TreeNode(-712, TreeNode(1114, TreeNode(9447, None, None), TreeNode(6352, None, None)), TreeNode(-7249, TreeNode(8558, None, None), TreeNode(-2038, None, None))), None))) == False\nassert solution.isBalanced(TreeNode(6259, None, TreeNode(-4320, None, None))) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(TreeNode(2275, TreeNode(-3803, TreeNode(526, TreeNode(2387, None, None), TreeNode(-4016, None, None)), TreeNode(-5289, TreeNode(4434, None, None), TreeNode(-3100, None, None))), TreeNode(-8876, TreeNode(-9990, TreeNode(1465, None, None), TreeNode(722, None, None)), TreeNode(-8321, TreeNode(9777, None, None), None)))) == True\nassert solution.isBalanced(TreeNode(2649, TreeNode(5584, TreeNode(-1755, TreeNode(9963, None, None), TreeNode(-5065, None, None)), None), TreeNode(7129, TreeNode(-7813, TreeNode(5064, None, None), None), TreeNode(6059, TreeNode(-3807, None, None), TreeNode(5064, None, None))))) == False\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(TreeNode(6709, TreeNode(9266, TreeNode(-2600, None, None), TreeNode(-6502, None, None)), TreeNode(-3540, TreeNode(5603, None, None), TreeNode(1581, None, None)))) == True\nassert solution.isBalanced(TreeNode(-9665, TreeNode(2044, None, TreeNode(625, None, TreeNode(522, TreeNode(8687, None, None), TreeNode(-9705, None, None)))), TreeNode(-7908, TreeNode(9364, TreeNode(826, None, TreeNode(9899, None, None)), TreeNode(-7280, None, TreeNode(-5103, None, None))), TreeNode(8368, TreeNode(8641, TreeNode(2431, None, None), TreeNode(-4428, None, None)), TreeNode(192, TreeNode(-5158, None, None), TreeNode(-6948, None, None)))))) == False\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(TreeNode(-2362, None, TreeNode(-5372, TreeNode(-6302, None, None), None))) == False\nassert solution.isBalanced(TreeNode(-8540, TreeNode(5691, TreeNode(-3240, TreeNode(-3692, TreeNode(5868, None, None), None), TreeNode(-5278, TreeNode(-2757, None, None), TreeNode(-7965, None, None))), TreeNode(2848, None, TreeNode(-3813, TreeNode(248, None, None), TreeNode(7214, None, None)))), TreeNode(3929, TreeNode(6287, TreeNode(71, TreeNode(-2530, None, None), None), TreeNode(1387, TreeNode(9438, None, None), TreeNode(-29, None, None))), TreeNode(-3576, None, TreeNode(1685, TreeNode(-8831, None, None), TreeNode(6390, None, None)))))) == False\nassert solution.isBalanced(TreeNode(465, TreeNode(-3514, None, None), TreeNode(-80, None, None))) == True\nassert solution.isBalanced(TreeNode(6032, TreeNode(9005, TreeNode(-9619, TreeNode(3042, TreeNode(-8509, None, None), TreeNode(2763, None, None)), TreeNode(9177, TreeNode(9074, None, None), TreeNode(8285, None, None))), TreeNode(-6974, TreeNode(9608, TreeNode(-5414, None, None), TreeNode(-1860, None, None)), TreeNode(5538, TreeNode(5737, None, None), TreeNode(2176, None, None)))), TreeNode(-6139, TreeNode(8727, TreeNode(6297, TreeNode(3105, None, None), TreeNode(-1692, None, None)), TreeNode(-8790, TreeNode(-7940, None, None), TreeNode(7462, None, None))), TreeNode(878, TreeNode(5069, TreeNode(-4025, None, None), TreeNode(-5063, None, None)), TreeNode(7027, None, TreeNode(-1246, None, None)))))) == True\nassert solution.isBalanced(TreeNode(3080, TreeNode(3028, None, None), TreeNode(9404, None, None))) == True\nassert solution.isBalanced(TreeNode(-6885, TreeNode(-3247, TreeNode(141, None, None), TreeNode(9445, None, TreeNode(-8979, None, None))), None)) == False\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(TreeNode(-4669, TreeNode(2195, None, None), TreeNode(7186, None, None))) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(TreeNode(-5606, TreeNode(1539, TreeNode(-2328, None, TreeNode(-3129, TreeNode(8462, None, None), TreeNode(-3939, None, None))), TreeNode(5035, TreeNode(9455, TreeNode(-2397, None, None), TreeNode(-2683, None, None)), TreeNode(-5993, TreeNode(1019, None, None), TreeNode(8218, None, None)))), TreeNode(-1805, TreeNode(3340, TreeNode(-2875, TreeNode(2456, None, None), None), TreeNode(1675, None, None)), TreeNode(-4787, TreeNode(2600, TreeNode(3097, None, None), TreeNode(-4080, None, None)), TreeNode(-2719, TreeNode(6555, None, None), TreeNode(9557, None, None)))))) == False\nassert solution.isBalanced(TreeNode(4689, TreeNode(-467, TreeNode(1237, TreeNode(-6259, None, None), TreeNode(4932, None, None)), TreeNode(6540, TreeNode(4231, None, None), TreeNode(-2850, None, None))), None)) == False\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(TreeNode(519, TreeNode(-6017, TreeNode(-9271, TreeNode(-9706, None, None), TreeNode(-9802, None, None)), TreeNode(5240, TreeNode(1579, None, None), TreeNode(5711, None, None))), TreeNode(4592, TreeNode(-9410, TreeNode(4489, None, None), None), TreeNode(3691, TreeNode(7764, None, None), TreeNode(9365, None, None))))) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(TreeNode(2917, TreeNode(-1105, None, None), TreeNode(-7772, None, None))) == True\nassert solution.isBalanced(TreeNode(-5740, None, None)) == True\nassert solution.isBalanced(TreeNode(2877, None, TreeNode(5893, None, TreeNode(9526, None, TreeNode(-6561, None, None))))) == False\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(TreeNode(-4456, TreeNode(-1016, TreeNode(9392, None, None), TreeNode(-531, None, None)), TreeNode(-3068, TreeNode(1962, None, None), TreeNode(8000, None, None)))) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(TreeNode(3762, None, None)) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(TreeNode(-8245, TreeNode(-3441, None, TreeNode(9850, None, TreeNode(-8918, None, TreeNode(-2975, None, None)))), TreeNode(9585, TreeNode(-3486, TreeNode(6187, TreeNode(5440, None, None), TreeNode(2198, None, None)), TreeNode(-2107, None, TreeNode(-7821, None, None))), TreeNode(-992, TreeNode(845, TreeNode(-8328, None, None), TreeNode(3230, None, None)), None)))) == False\nassert solution.isBalanced(TreeNode(-4892, TreeNode(4075, None, None), TreeNode(9800, None, None))) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(TreeNode(-3122, TreeNode(7221, None, None), TreeNode(-3891, None, None))) == True\nassert solution.isBalanced(TreeNode(1404, TreeNode(8474, TreeNode(7956, TreeNode(-9510, None, None), TreeNode(-6467, None, None)), TreeNode(-5019, None, TreeNode(-7137, None, None))), TreeNode(-2447, TreeNode(9479, TreeNode(-809, None, None), TreeNode(2046, None, None)), None))) == False\nassert solution.isBalanced(TreeNode(980, TreeNode(-6458, TreeNode(4353, TreeNode(3956, None, None), TreeNode(-9248, None, None)), None), None)) == False\nassert solution.isBalanced(TreeNode(1627, TreeNode(3663, None, None), None)) == True\nassert solution.isBalanced(TreeNode(-8669, None, TreeNode(6890, None, None))) == True\nassert solution.isBalanced(TreeNode(381, TreeNode(-8290, TreeNode(-463, TreeNode(5951, None, None), TreeNode(5032, TreeNode(-7708, None, None), TreeNode(-6868, None, None))), TreeNode(-7952, TreeNode(-5035, TreeNode(9961, None, None), TreeNode(7138, None, None)), None)), TreeNode(-339, TreeNode(-4883, TreeNode(-8919, TreeNode(-2563, None, None), None), None), TreeNode(7580, TreeNode(8694, TreeNode(-5877, None, None), None), TreeNode(2944, TreeNode(-4725, None, None), TreeNode(8404, None, None)))))) == False\nassert solution.isBalanced(TreeNode(6384, None, None)) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(TreeNode(2766, TreeNode(9883, None, TreeNode(9096, TreeNode(-3444, TreeNode(-8450, None, None), TreeNode(9410, None, None)), TreeNode(4043, TreeNode(1226, None, None), None))), TreeNode(-5359, TreeNode(9456, TreeNode(-236, TreeNode(-7356, None, None), TreeNode(8235, None, None)), None), TreeNode(7959, TreeNode(-9323, TreeNode(-6516, None, None), TreeNode(-8574, None, None)), TreeNode(-4121, TreeNode(-7879, None, None), TreeNode(-1211, None, None)))))) == False\nassert solution.isBalanced(TreeNode(-5255, None, TreeNode(-5257, TreeNode(8438, TreeNode(-6609, TreeNode(1564, None, None), None), TreeNode(-1762, TreeNode(-4151, None, None), TreeNode(2366, None, None))), TreeNode(-9919, TreeNode(2085, None, TreeNode(-7904, None, None)), TreeNode(3076, TreeNode(-2829, None, None), TreeNode(4493, None, None)))))) == False\nassert solution.isBalanced(TreeNode(-8044, TreeNode(-8141, None, TreeNode(-2104, None, None)), TreeNode(-4644, TreeNode(-6965, TreeNode(-7615, None, None), TreeNode(879, None, None)), TreeNode(2573, None, TreeNode(-2924, None, None))))) == True\nassert solution.isBalanced(TreeNode(1285, None, None)) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(TreeNode(-5529, TreeNode(-7221, TreeNode(3310, None, None), TreeNode(3730, None, None)), TreeNode(-2595, None, TreeNode(-7663, None, None)))) == True\nassert solution.isBalanced(TreeNode(-9471, TreeNode(827, TreeNode(-4223, None, TreeNode(9463, None, None)), TreeNode(-7537, TreeNode(3350, None, None), TreeNode(-8161, None, None))), TreeNode(-6812, TreeNode(-449, None, TreeNode(2981, None, None)), TreeNode(5113, TreeNode(488, None, None), TreeNode(4378, None, None))))) == True\nassert solution.isBalanced(TreeNode(-8544, None, None)) == True\nassert solution.isBalanced(TreeNode(-2469, None, None)) == True\nassert solution.isBalanced(TreeNode(5068, TreeNode(1616, TreeNode(-2676, TreeNode(-8795, TreeNode(6138, None, None), TreeNode(-5731, None, None)), TreeNode(3160, None, TreeNode(-2942, None, None))), TreeNode(-5890, TreeNode(9997, TreeNode(-5807, None, None), TreeNode(-4901, None, None)), TreeNode(729, TreeNode(-4978, None, None), TreeNode(5644, None, None)))), TreeNode(-9597, TreeNode(-7926, TreeNode(-3842, None, TreeNode(-3863, None, None)), None), TreeNode(-6318, TreeNode(-9324, TreeNode(-2193, None, None), None), TreeNode(-9142, TreeNode(-3344, None, None), TreeNode(-9208, None, None)))))) == False\nassert solution.isBalanced(TreeNode(-5034, None, None)) == True\nassert solution.isBalanced(TreeNode(4073, TreeNode(-2041, TreeNode(-8444, None, TreeNode(6930, None, None)), None), TreeNode(-320, TreeNode(-4123, None, TreeNode(3016, None, None)), None))) == False\nassert solution.isBalanced(TreeNode(6955, TreeNode(2481, TreeNode(-6336, TreeNode(2979, None, None), TreeNode(-1510, None, None)), TreeNode(9529, TreeNode(4340, None, None), TreeNode(9655, None, None))), TreeNode(3258, None, TreeNode(7155, None, TreeNode(5560, None, None))))) == False\nassert solution.isBalanced(TreeNode(2182, TreeNode(-7426, None, None), TreeNode(5218, TreeNode(5418, None, None), TreeNode(1238, None, None)))) == True\nassert solution.isBalanced(None) == True\nassert solution.isBalanced(TreeNode(-7116, None, None)) == True",
  "inefficient_solution": "",
  "is_python": true
}