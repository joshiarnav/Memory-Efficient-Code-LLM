{
  "problem_idx": 1038,
  "task_name": "Binary Search Tree to Greater Sum Tree",
  "markdown_description": "\nGiven the `root` of a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to the original key plus the sum of all keys greater than the original key in BST.\n\n\nAs a reminder, a *binary search tree* is a tree that satisfies these constraints:\n\n\n* The left subtree of a node contains only nodes with keys **less than** the node's key.\n* The right subtree of a node contains only nodes with keys **greater than** the node's key.\n* Both the left and right subtrees must also be binary search trees.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n![](https://fastly.jsdelivr.net/gh/doocs/leetcode@main/solution/1000-1099/1038.Binary%20Search%20Tree%20to%20Greater%20Sum%20Tree/images/tree.png)\n\n```\n\n**Input:** root = [4,1,6,0,2,5,7,null,null,null,3,null,null,null,8]\n**Output:** [30,36,21,36,35,26,15,null,null,null,33,null,null,null,8]\n\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** root = [0,null,1]\n**Output:** [1,null,1]\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* The number of nodes in the tree is in the range `[1, 100]`.\n* `0 <= Node.val <= 100`\n* All the values in the tree are **unique**.\n\n\n\u00a0\n\n\n**Note:** This question is the same as 538: <https://leetcode.com/problems/convert-bst-to-greater-tree/>\n\n\n",
  "canonical_solution": "# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def bstToGst(self, root: TreeNode) -> TreeNode:\n        s = 0\n        node = root\n        while root:\n            if root.right is None:\n                s += root.val\n                root.val = s\n                root = root.left\n            else:\n                next = root.right\n                while next.left and next.left != root:\n                    next = next.left\n                if next.left is None:\n                    next.left = root\n                    root = root.right\n                else:\n                    s += root.val\n                    root.val = s\n                    next.left = None\n                    root = root.left\n        return node\n",
  "test_case_generator": "\nimport random\n\nclass Solution:\n    def bstToGst(self, root: TreeNode) -> TreeNode:\n        s = 0\n        node = root\n        while root:\n            if root.right is None:\n                s += root.val\n                root.val = s\n                root = root.left\n            else:\n                next = root.right\n                while next.left and next.left != root:\n                    next = next.left\n                if next.left is None:\n                    next.left = root\n                    root = root.right\n                else:\n                    s += root.val\n                    root.val = s\n                    next.left = None\n                    root = root.left\n        return node\n\ndef generate_test_case():\n    solution = Solution()\n    \n    # Generate a binary tree\n    root = generate_binary_tree()\n    \n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.bstToGst(root)\n\n    return root, expected_result\n\ndef generate_binary_tree():\n    num_nodes = random.randint(1, 10)\n    nodes = []\n    for i in range(num_nodes):\n        nodes.append(random.randint(0, 100))\n    root = TreeNode(nodes[0])\n    for i in range(1, num_nodes):\n        insert_node(root, nodes[i])\n    return root\n\ndef insert_node(root, val):\n    if root is None:\n        return TreeNode(val)\n    if val < root.val:\n        root.left = insert_node(root.left, val)\n    else:\n        root.right = insert_node(root.right, val)\n    return root\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        root, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.bstToGst(root) == expected_result\n        print(f\"assert solution.bstToGst({root}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.bstToGst({root}) == {expected_result}\") # You can find that we construct the test case in the same format as the example\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.bstToGst(<__main__.TreeNode object at 0x7f198783b450>) == <__main__.TreeNode object at 0x7f198783b450>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987898e90>) == <__main__.TreeNode object at 0x7f1987898e90>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878729d0>) == <__main__.TreeNode object at 0x7f19878729d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987898ed0>) == <__main__.TreeNode object at 0x7f1987898ed0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872990>) == <__main__.TreeNode object at 0x7f1987872990>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987898ed0>) == <__main__.TreeNode object at 0x7f1987898ed0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872590>) == <__main__.TreeNode object at 0x7f1987872590>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878725d0>) == <__main__.TreeNode object at 0x7f19878725d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872590>) == <__main__.TreeNode object at 0x7f1987872590>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19879ca490>) == <__main__.TreeNode object at 0x7f19879ca490>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872990>) == <__main__.TreeNode object at 0x7f1987872990>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878725d0>) == <__main__.TreeNode object at 0x7f19878725d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872590>) == <__main__.TreeNode object at 0x7f1987872590>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f198783b450>) == <__main__.TreeNode object at 0x7f198783b450>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878729d0>) == <__main__.TreeNode object at 0x7f19878729d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872590>) == <__main__.TreeNode object at 0x7f1987872590>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987898d90>) == <__main__.TreeNode object at 0x7f1987898d90>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878725d0>) == <__main__.TreeNode object at 0x7f19878725d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987898d90>) == <__main__.TreeNode object at 0x7f1987898d90>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878725d0>) == <__main__.TreeNode object at 0x7f19878725d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878729d0>) == <__main__.TreeNode object at 0x7f19878729d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872590>) == <__main__.TreeNode object at 0x7f1987872590>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878729d0>) == <__main__.TreeNode object at 0x7f19878729d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878725d0>) == <__main__.TreeNode object at 0x7f19878725d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872990>) == <__main__.TreeNode object at 0x7f1987872990>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878729d0>) == <__main__.TreeNode object at 0x7f19878729d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872590>) == <__main__.TreeNode object at 0x7f1987872590>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878729d0>) == <__main__.TreeNode object at 0x7f19878729d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878725d0>) == <__main__.TreeNode object at 0x7f19878725d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f198783b450>) == <__main__.TreeNode object at 0x7f198783b450>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878725d0>) == <__main__.TreeNode object at 0x7f19878725d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987898d90>) == <__main__.TreeNode object at 0x7f1987898d90>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878725d0>) == <__main__.TreeNode object at 0x7f19878725d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987898d90>) == <__main__.TreeNode object at 0x7f1987898d90>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878725d0>) == <__main__.TreeNode object at 0x7f19878725d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987898d90>) == <__main__.TreeNode object at 0x7f1987898d90>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872590>) == <__main__.TreeNode object at 0x7f1987872590>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878729d0>) == <__main__.TreeNode object at 0x7f19878729d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878725d0>) == <__main__.TreeNode object at 0x7f19878725d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f198783b450>) == <__main__.TreeNode object at 0x7f198783b450>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872590>) == <__main__.TreeNode object at 0x7f1987872590>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878729d0>) == <__main__.TreeNode object at 0x7f19878729d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872590>) == <__main__.TreeNode object at 0x7f1987872590>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f198783b450>) == <__main__.TreeNode object at 0x7f198783b450>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878725d0>) == <__main__.TreeNode object at 0x7f19878725d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878729d0>) == <__main__.TreeNode object at 0x7f19878729d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19879ca490>) == <__main__.TreeNode object at 0x7f19879ca490>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872590>) == <__main__.TreeNode object at 0x7f1987872590>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878729d0>) == <__main__.TreeNode object at 0x7f19878729d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872990>) == <__main__.TreeNode object at 0x7f1987872990>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878729d0>) == <__main__.TreeNode object at 0x7f19878729d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878725d0>) == <__main__.TreeNode object at 0x7f19878725d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19879ca490>) == <__main__.TreeNode object at 0x7f19879ca490>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878725d0>) == <__main__.TreeNode object at 0x7f19878725d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872590>) == <__main__.TreeNode object at 0x7f1987872590>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878725d0>) == <__main__.TreeNode object at 0x7f19878725d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872590>) == <__main__.TreeNode object at 0x7f1987872590>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872990>) == <__main__.TreeNode object at 0x7f1987872990>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19879ca490>) == <__main__.TreeNode object at 0x7f19879ca490>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878725d0>) == <__main__.TreeNode object at 0x7f19878725d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872990>) == <__main__.TreeNode object at 0x7f1987872990>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878729d0>) == <__main__.TreeNode object at 0x7f19878729d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872990>) == <__main__.TreeNode object at 0x7f1987872990>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872590>) == <__main__.TreeNode object at 0x7f1987872590>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19879ca490>) == <__main__.TreeNode object at 0x7f19879ca490>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878729d0>) == <__main__.TreeNode object at 0x7f19878729d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872590>) == <__main__.TreeNode object at 0x7f1987872590>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878725d0>) == <__main__.TreeNode object at 0x7f19878725d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19879ca490>) == <__main__.TreeNode object at 0x7f19879ca490>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878725d0>) == <__main__.TreeNode object at 0x7f19878725d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872590>) == <__main__.TreeNode object at 0x7f1987872590>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878725d0>) == <__main__.TreeNode object at 0x7f19878725d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878729d0>) == <__main__.TreeNode object at 0x7f19878729d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872990>) == <__main__.TreeNode object at 0x7f1987872990>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872590>) == <__main__.TreeNode object at 0x7f1987872590>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872990>) == <__main__.TreeNode object at 0x7f1987872990>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987898d10>) == <__main__.TreeNode object at 0x7f1987898d10>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878729d0>) == <__main__.TreeNode object at 0x7f19878729d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19879ca490>) == <__main__.TreeNode object at 0x7f19879ca490>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878729d0>) == <__main__.TreeNode object at 0x7f19878729d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987898e10>) == <__main__.TreeNode object at 0x7f1987898e10>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878725d0>) == <__main__.TreeNode object at 0x7f19878725d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878729d0>) == <__main__.TreeNode object at 0x7f19878729d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872990>) == <__main__.TreeNode object at 0x7f1987872990>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872590>) == <__main__.TreeNode object at 0x7f1987872590>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878725d0>) == <__main__.TreeNode object at 0x7f19878725d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19879ca490>) == <__main__.TreeNode object at 0x7f19879ca490>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872990>) == <__main__.TreeNode object at 0x7f1987872990>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872590>) == <__main__.TreeNode object at 0x7f1987872590>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878725d0>) == <__main__.TreeNode object at 0x7f19878725d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878729d0>) == <__main__.TreeNode object at 0x7f19878729d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878725d0>) == <__main__.TreeNode object at 0x7f19878725d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19879ca490>) == <__main__.TreeNode object at 0x7f19879ca490>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872590>) == <__main__.TreeNode object at 0x7f1987872590>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19878729d0>) == <__main__.TreeNode object at 0x7f19878729d0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872990>) == <__main__.TreeNode object at 0x7f1987872990>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f19879ca490>) == <__main__.TreeNode object at 0x7f19879ca490>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872990>) == <__main__.TreeNode object at 0x7f1987872990>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987898fd0>) == <__main__.TreeNode object at 0x7f1987898fd0>\nassert solution.bstToGst(<__main__.TreeNode object at 0x7f1987872590>) == <__main__.TreeNode object at 0x7f1987872590>",
  "inefficient_solution": "class Solution:\n    def bstToGst(self, root: TreeNode) -> TreeNode:\n        if not root:\n            return None\n        node = root\n        self.inorder_traversal(root, 0)\n        return node\n\n    def inorder_traversal(self, node, total):\n        if node is None:\n            return 0\n        total = self.inorder_traversal(node.right, total)\n        total += node.val\n        node.val = total\n        total = self.inorder_traversal(node.left, total)\n        return total",
  "is_python": true
}