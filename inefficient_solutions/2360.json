{
  "problem_idx": 2360,
  "task_name": "Longest Cycle in a Graph",
  "markdown_description": "\nYou are given a **directed** graph of `n` nodes numbered from `0` to `n - 1`, where each node has **at most one** outgoing edge.\n\n\nThe graph is represented with a given **0-indexed** array `edges` of size `n`, indicating that there is a directed edge from node `i` to node `edges[i]`. If there is no outgoing edge from node `i`, then `edges[i] == -1`.\n\n\nReturn *the length of the **longest** cycle in the graph*. If no cycle exists, return `-1`.\n\n\nA cycle is a path that starts and ends at the **same** node.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n![](https://fastly.jsdelivr.net/gh/doocs/leetcode@main/solution/2300-2399/2360.Longest%20Cycle%20in%20a%20Graph/images/graph4drawio-5.png)\n\n```\n\n**Input:** edges = [3,3,4,2,3]\n**Output:** 3\n**Explanation:** The longest cycle in the graph is the cycle: 2 -> 4 -> 3 -> 2.\nThe length of this cycle is 3, so 3 is returned.\n\n```\n\n**Example 2:**\n\n\n![](https://fastly.jsdelivr.net/gh/doocs/leetcode@main/solution/2300-2399/2360.Longest%20Cycle%20in%20a%20Graph/images/graph4drawio-1.png)\n\n```\n\n**Input:** edges = [2,-1,3,1]\n**Output:** -1\n**Explanation:** There are no cycles in this graph.\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `n == edges.length`\n* `2 <= n <= 105`\n* `-1 <= edges[i] < n`\n* `edges[i] != i`\n\n\n",
  "canonical_solution": "class Solution:\n    def longestCycle(self, edges: List[int]) -> int:\n        n = len(edges)\n        vis = [False] * n\n        ans = -1\n        for i in range(n):\n            if vis[i]:\n                continue\n            j = i\n            cycle = []\n            while j != -1 and not vis[j]:\n                vis[j] = True\n                cycle.append(j)\n                j = edges[j]\n            if j == -1:\n                continue\n            m = len(cycle)\n            k = next((k for k in range(m) if cycle[k] == j), inf)\n            ans = max(ans, m - k)\n        return ans\n",
  "test_case_generator": "\nimport random\n\nclass Solution:\n    def longestCycle(self, edges):\n        n = len(edges)\n        vis = [False] * n\n        ans = -1\n        for i in range(n):\n            if vis[i]:\n                continue\n            j = i\n            cycle = []\n            while j != -1 and not vis[j]:\n                vis[j] = True\n                cycle.append(j)\n                j = edges[j]\n            if j == -1:\n                continue\n            m = len(cycle)\n            k = next((k for k in range(m) if cycle[k] == j), float('inf'))\n            ans = max(ans, m - k)\n        return ans\n\ndef generate_test_case():\n    solution = Solution()\n    \n    # Generate random edges list\n    n = random.randint(2, 101)\n    edges = [random.randint(-1, n-1) for _ in range(n)]\n    \n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.longestCycle(edges)\n\n    return edges, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        edges, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.longestCycle(edges) == expected_result\n        print(f\"assert solution.longestCycle({edges}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.longestCycle({edges}) == {expected_result}\") # You can find that we construct the test case in the same format as the example\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.longestCycle([41, 79, 49, 24, 63, 60, 41, 28, 64, 25, 2, 69, 33, 2, 0, 51, -1, 16, 11, 2, 18, 50, -1, 5, 37, 35, 20, 53, 43, 26, 69, 45, 81, 16, 54, 30, 5, 53, 32, 72, 54, 75, 15, 46, 59, -1, 22, 16, 17, 75, 38, 40, 64, 66, 0, 31, 81, 31, 59, 8, 72, 57, 13, 22, 17, 6, 28, 35, 74, -1, 60, 65, 40, 52, 52, 5, 19, 79, 4, 13, 71, 27]) == 8\nassert solution.longestCycle([25, 21, 22, 24, 2, 32, 5, 31, -1, 13, 13, 20, 1, 11, -1, 6, 30, 11, 12, 3, 18, 20, -1, 22, 1, 13, 9, 12, 30, 19, 11, 32, 31]) == 5\nassert solution.longestCycle([40, 33, 43, 54, 30, 37, 36, 11, 36, 12, 50, 45, 44, 54, 8, 32, 23, 28, 25, 29, 28, 46, 51, 33, 43, 15, 51, 35, 55, 14, 1, 52, 0, 39, 10, 17, 46, 52, 27, -1, 3, 9, 35, 32, 0, 36, 16, 22, 25, 52, 0, 51, 8, 49, 30, 44]) == 1\nassert solution.longestCycle([40, 28, 28, 14, 53, 34, 43, 37, 53, 32, 38, 0, 7, 4, 37, 46, 47, 18, 22, 0, 11, 16, 43, -1, 23, 6, 29, 5, 11, 31, 11, 48, 48, 9, 22, 29, 41, 43, 11, 43, 25, 1, 51, 12, 7, 6, 29, 13, 19, 51, 17, 25, 15, 19, 50, 36]) == 4\nassert solution.longestCycle([5, 43, 86, 70, 61, 44, 5, 69, 63, 84, 5, 35, 71, 92, 26, 4, 2, 90, 17, 19, 16, 94, 17, 61, -1, 59, 74, 61, 26, 82, 17, 4, 64, 34, 33, 17, 80, 23, 51, 11, 72, 49, 74, 76, 79, 51, 77, 22, 73, 81, 25, 82, 32, 38, 25, 73, 64, 48, 65, 55, 78, 78, 14, 84, 68, 59, 17, 21, 87, 57, 68, 26, 47, 70, 61, 60, 35, 77, 59, 6, 10, 6, 85, 24, 62, 94, 56, 52, 57, 31, 21, 37, 30, 90, 84]) == 5\nassert solution.longestCycle([16, 33, 30, 0, 29, 20, 13, 42, 64, -1, 54, 63, 35, 62, 51, 37, 20, 62, 5, 4, 21, 26, 58, 37, 28, 26, -1, 46, 42, 62, 54, 21, 21, 57, 57, 5, 63, 57, 31, 39, 50, 52, 51, 53, 25, 21, 54, 42, 65, 40, 0, 10, 57, 11, 38, 16, 29, 9, 53, 49, 33, 31, 65, 32, 0, 50, 16, 60]) == 1\nassert solution.longestCycle([36, 32, 44, 29, 49, 30, 23, 39, 43, 40, 10, 14, 31, 36, 1, 6, 32, 21, 0, 47, 23, 33, 29, 5, 22, 50, 34, 23, 1, 24, 22, 26, 21, 47, 9, 3, 18, 38, 48, 25, 24, 26, 50, 40, 26, 9, 6, 44, 39, 8, 25]) == 3\nassert solution.longestCycle([18, 7, 33, 1, 9, 7, 28, 2, 15, 9, 3, -1, 17, 4, 15, 15, 29, 20, 28, 27, 26, 18, 7, 33, 34, 31, 0, 0, 20, 25, 26, 3, 20, 11, 23]) == 5\nassert solution.longestCycle([30, 7, -1, 19, 8, 4, 45, 17, 54, 14, 51, 14, 28, 28, 58, 25, 56, 13, 56, 36, 47, 38, 55, 29, 7, 33, 8, 9, 38, 35, 24, 55, 38, 47, 20, 20, 14, 40, 5, 4, 26, 19, 19, 35, -1, 43, 36, 23, 53, 5, 54, 45, 9, 40, 49, 8, 25, 43, 47, 32, 30]) == 5\nassert solution.longestCycle([14, 19, 19, 0, 21, 21, 14, 0, 9, 20, 21, -1, 19, 2, 24, 22, 20, 21, 18, 18, 3, 19, 5, 8, 10]) == 1\nassert solution.longestCycle([35, 21, 32, 25, 35, 7, 37, 23, 5, 11, 29, 19, 4, 4, 2, 9, 26, 21, 6, 5, 19, 17, 14, 37, 24, 7, 14, 15, 40, 7, 40, 17, 19, 33, -1, 11, 6, 7, 33, -1, 17, 7, 25, 5, 21, 9]) == 3\nassert solution.longestCycle([2, 23, 28, 8, 7, 19, 11, 20, 12, 27, 16, 0, 24, 15, 11, 9, 20, 8, 19, 25, 27, 28, -1, 20, 12, 15, 26, 20, 26]) == 2\nassert solution.longestCycle([73, 57, 77, 75, 2, 71, 20, 47, 50, 77, 9, 9, 11, 4, 76, 24, 35, 16, 49, 27, 54, 69, 80, 8, 80, 70, 20, 30, 41, 77, 36, 35, 63, 25, 19, 35, 57, 30, 8, 15, 31, 22, 69, 83, 7, 50, 42, -1, 3, 37, 6, 58, 32, 6, 81, 48, 70, 58, 44, 24, 10, 41, 83, 7, 39, 43, 68, 8, 29, 14, 40, 51, 6, 70, 12, 17, 62, 6, 73, 32, 38, 75, 25, 35]) == 1\nassert solution.longestCycle([1, 5, 6, 2, -1, 0, 5]) == 3\nassert solution.longestCycle([5, 0, 8, 8, 1, 4, 3, 5, 1, -1, 9]) == 4\nassert solution.longestCycle([29, 0, 35, 45, 43, 38, 44, 41, 15, 47, 6, 22, 13, 51, 28, 21, 43, 26, 0, 27, 38, 16, 3, 6, 6, 17, 44, 7, 0, 16, 26, 46, 17, 3, 22, 51, 14, 40, 8, 30, 41, 25, 46, 7, 7, 19, 6, 35, 43, 40, 0, 12, 49]) == 6\nassert solution.longestCycle([12, 3, 9, 6, 14, -1, 13, 3, 8, 16, 16, 0, 13, 9, 2, 0, -1]) == 1\nassert solution.longestCycle([9, 41, 32, 23, 2, 25, 24, 22, 22, 15, 27, 6, 12, 25, 29, 33, 16, 31, 10, 10, 34, 22, 2, 35, 13, 2, 41, 26, 11, 36, 9, 29, 42, 24, 39, 27, 13, 26, 18, 12, 12, 35, 28, 17, 16, -1]) == 9\nassert solution.longestCycle([7, 14, -1, 15, 0, -1, 12, 6, 14, 6, 9, 13, 16, 12, 8, 10, 16]) == 2\nassert solution.longestCycle([10, 53, 2, 71, 42, 58, 39, 11, 33, 22, 39, 52, 18, 13, 64, 53, 21, 37, 18, 43, 12, 71, 8, 67, 27, 57, 4, 41, 31, 30, 31, 72, 29, 5, 12, 11, 71, 9, 36, 1, 48, 13, 9, 25, 48, 36, 51, 38, 38, 60, 56, 46, 40, 34, 15, 14, 3, 3, 44, 53, 26, 59, 71, 5, 12, 36, 55, 66, 47, 38, 24, 14, 71]) == 2\nassert solution.longestCycle([24, 67, 16, 36, 17, 14, 24, 69, 6, 12, 48, 3, 1, 10, 12, 20, 56, 18, 18, 29, 20, 5, 51, 64, 36, 1, 46, 51, 15, 37, 58, 16, 66, 32, 49, 4, 37, 30, 44, 60, 2, 52, 16, 46, 46, 6, 6, 49, 63, 1, 26, 51, 20, 3, 44, 3, 56, 5, 22, 20, 14, 60, 28, 18, 6, 66, 26, 20, 51, 65, 38]) == 1\nassert solution.longestCycle([44, 37, 17, 38, 54, 62, 39, 43, 39, 23, 17, 81, 25, 40, 40, 10, 3, 12, 34, 81, 56, 5, 1, 10, 53, 63, 79, 31, 55, 60, 56, 24, 4, 77, 15, 14, 16, 51, 17, 43, 31, 27, 5, 74, 23, 31, 32, 40, 9, 42, 32, 12, 63, 55, 25, 38, 45, 60, 33, 65, 0, 38, 50, 70, 40, 68, 24, 47, 74, 41, 60, 69, 78, 25, 64, 23, 2, 25, 59, 13, 43, 75]) == 10\nassert solution.longestCycle([39, 30, 48, 39, 59, 27, 20, 50, 40, 24, 7, 47, 28, 8, 33, 10, 18, 60, 58, 45, 28, 30, 27, 30, 46, 46, 54, 60, 44, 37, 14, 7, 28, 45, 53, 16, 58, 15, 33, 7, 40, 46, 19, 44, 38, 19, 46, 2, 32, 42, 39, 51, 28, 41, 9, 59, 25, 50, 6, 9, 61, 7]) == 3\nassert solution.longestCycle([4, -1, 4, 1, 1]) == -1\nassert solution.longestCycle([19, 18, 75, 78, 78, 35, 9, 36, 71, 41, 56, 21, 57, 78, 66, 54, 10, 66, -1, 51, -1, 76, 70, 31, 76, 46, 59, 63, 47, 39, 7, 55, 57, 5, 68, 42, 16, 9, 64, 5, 14, 12, 5, 73, 57, 64, 34, 71, 60, -1, 46, 1, 54, 17, 77, 33, 60, 6, 7, 73, 62, 69, 4, 55, 44, 26, 14, 21, 13, 49, 8, 3, 72, 27, 33, 10, 65, 75, 17]) == 5\nassert solution.longestCycle([20, 21, 44, 15, 51, 19, 35, 59, 5, 14, 16, 61, 47, 4, 19, 42, 43, 13, 29, 40, 25, 20, 28, 1, 21, 35, 53, 20, 62, 28, 27, -1, 7, 1, 47, 43, 21, 47, 24, 59, 15, 60, 39, 57, 13, 66, 16, 19, 16, 15, 29, 22, 50, 13, 65, 47, 6, 28, 13, 25, 32, 37, 28, 57, 16, 19, 3]) == 2\nassert solution.longestCycle([3, 24, 1, 22, 19, 15, 2, 20, 25, 12, 27, 12, 11, 16, 12, 17, -1, 8, 9, 33, 18, 2, 30, 18, 16, 14, 27, 34, 23, 17, 10, 3, 31, 10, 22]) == 5\nassert solution.longestCycle([21, 8, 42, 29, 10, 33, 22, 66, 46, 52, 35, 0, 37, 9, 16, 0, 0, 50, 53, 56, 5, 23, 38, 52, 5, 50, 57, 11, 7, 15, 58, 18, 46, 1, 58, 65, -1, 2, 11, -1, 30, 30, 4, 64, 18, 14, 15, -1, 25, 49, 37, 23, 2, 5, 51, 13, 23, 2, 7, 26, 59, 50, 24, 25, 46, 48, 30]) == 10\nassert solution.longestCycle([51, -1, 74, 18, 3, 34, 19, 72, 61, 14, 5, 12, 14, 77, 0, 47, 51, 56, 19, 13, 54, 45, 38, 54, 28, 12, 33, 29, 74, 39, 47, 71, 75, 54, 46, 62, 20, 38, 51, 22, 0, 70, 40, 15, 40, 64, 79, 68, 66, 10, 29, 47, 67, 36, 53, 30, 72, 71, 22, 76, 79, 25, 79, 46, 6, 27, 70, 7, 27, 28, 41, 3, 67, 29, 25, 45, 49, 34, 75, 19]) == 8\nassert solution.longestCycle([27, 30, 23, 5, 6, 10, 17, 13, 23, 18, 31, 5, 5, 23, 5, 24, 26, 0, 31, 17, 4, 28, 15, 8, 10, 29, 22, 27, 13, 9, 31, 20, 7, 29]) == 2\nassert solution.longestCycle([16, 19, 25, 55, 59, 48, 25, 21, 39, 0, 2, -1, 48, 57, 30, 33, 54, 42, 35, 21, 34, 40, 37, 49, 46, 29, 22, 0, 26, 50, 39, 2, 38, 2, 40, 20, 6, 43, 4, 37, 57, 36, 11, 53, 46, 19, 55, 25, -1, 62, 12, 14, 54, 0, 35, 31, 37, 27, 10, 38, 34, 20, 62]) == 9\nassert solution.longestCycle([25, 65, 56, 54, 47, 50, 49, 93, 72, 59, 90, 89, 86, 28, 8, 91, 14, 46, 50, 46, 29, 4, 4, 53, 30, 68, 58, 33, 43, 6, 30, 61, 58, 40, 95, 78, 47, 61, 94, 60, 73, 50, 60, 21, 7, 7, 22, 32, 7, 68, 68, 92, 15, 57, 35, 0, 64, 70, 57, 89, 18, 76, 45, 11, 30, 71, 48, 60, 19, 23, 56, 6, 12, 19, 83, 91, 82, 90, 21, 15, 75, 95, 83, 51, 48, 75, 26, 39, 60, 97, 43, 17, 44, 27, 25, 29, 86, 63]) == 4\nassert solution.longestCycle([5, 5, -1, 1, -1, 3]) == 3\nassert solution.longestCycle([53, 62, 11, 32, 7, 37, 67, 59, 33, 61, 56, 74, 15, 51, 47, 20, 21, 13, 13, 12, 56, 47, 8, 63, 55, 73, 4, 65, 69, 65, 26, 50, 12, 25, 59, 15, 47, 64, 5, 60, 10, 45, 47, 70, 3, 30, 1, 67, 41, 35, 2, 0, 19, 74, 49, 14, 59, 35, 10, 63, 68, 62, 44, 65, 27, -1, 67, 70, 48, 73, 17, 12, 60, 12, 48]) == -1\nassert solution.longestCycle([5, 6, 1, 9, 13, 12, 3, 5, 6, 4, -1, 0, 7, 14, -1]) == 3\nassert solution.longestCycle([0, 49, 0, 36, 37, 15, 51, 23, 9, 2, 21, 24, 48, 40, 37, 35, 47, 48, 20, 26, 8, 30, 20, 45, 38, 13, 18, 4, 48, 8, 41, 10, 49, 12, 21, 48, 15, 37, 10, 47, 40, 42, 14, 11, 12, 22, 53, 35, 8, 49, 2, 26, 31, 15, 13, 9, 52, 47, 4]) == 1\nassert solution.longestCycle([3, -1, 1, -1, 0]) == -1\nassert solution.longestCycle([14, 40, 26, 20, 0, 37, 5, 41, 37, 28, 16, -1, 35, 38, 16, 3, 27, 0, 21, 27, 42, 22, 23, 14, 35, 8, 26, 27, 39, 30, 39, 33, 21, 40, 17, 39, 31, 22, 24, 27, 42, 22, 4, 40]) == 1\nassert solution.longestCycle([34, 39, 15, 62, 54, 57, 73, 57, 55, 33, 25, 55, 14, 54, 42, 26, 3, 53, 15, 74, 45, 22, 2, 48, 34, 60, 22, -1, 11, 76, 27, 61, 56, 34, 12, 41, 32, 5, 52, 31, 56, 62, 44, 70, 47, 66, 16, 21, 28, 56, 75, 61, 9, 42, 65, 52, 53, 25, 48, 26, 38, 62, 43, 60, 76, 40, 34, 76, 52, 11, 64, 36, 53, 75, 8, 68, 69]) == 4\nassert solution.longestCycle([13, 38, 38, 42, 11, 30, 29, 23, 18, 8, -1, 29, -1, 1, 21, 17, 3, 28, 0, 11, 36, 31, 11, 43, 19, 17, 35, 40, 4, 11, 26, 20, 7, 40, 9, 22, 25, 10, 38, 1, 5, 24, 19, 10]) == 2\nassert solution.longestCycle([6, 6, 0, 3, 5, 30, 23, 26, 11, 31, 8, 24, 35, 2, 22, 5, -1, 20, 34, -1, 32, 20, 6, 16, 34, 25, 25, 12, 13, 1, 22, 3, 11, 32, 19, 7]) == 1\nassert solution.longestCycle([27, 56, 8, 60, 6, 25, 12, 44, 32, 54, 28, 43, 11, -1, 5, 33, 17, 57, 2, 36, 27, 51, 3, 45, 25, 47, 15, 24, 20, 47, 54, 44, 24, 12, 13, 20, 54, 39, -1, 26, 23, 18, 18, 29, 54, 54, 0, 36, 33, 59, 1, 4, 19, 17, 58, 29, 23, 45, 31, 38, 60, 0]) == 4\nassert solution.longestCycle([4, 38, 44, 0, 17, 31, 60, 32, 56, 3, 51, 5, 32, 15, 2, 60, 21, 39, 21, 41, 60, 48, 0, 36, 26, 39, 30, 48, 20, 23, 64, 11, 34, 34, 15, 41, 38, 58, 10, 7, 23, 48, 43, 23, 24, 47, 20, 42, 63, 29, 63, 53, 37, 49, 38, 4, 23, 7, 14, 54, 26, 44, 21, 15, -1, 31, 47]) == 8\nassert solution.longestCycle([5, 8, 26, 30, 25, 41, 21, -1, 36, 36, 11, 26, 35, 28, 6, 39, 23, 27, 26, 29, 6, 40, 31, 6, 26, 18, 35, 18, 7, 12, 1, 7, 21, 7, 34, 26, 32, 25, 42, 17, 40, 25, 33, 19]) == 2\nassert solution.longestCycle([49, 69, 6, 31, 16, 48, 82, 13, 44, 23, 82, 31, 2, 15, 17, 70, 32, 50, 55, 92, 54, 92, 39, 28, 8, 32, 57, 13, 7, 11, 59, 49, 51, 64, 21, 81, 42, 50, 92, 40, 40, 90, 35, 72, 23, 58, 25, 1, 37, 85, 36, 58, 62, 46, 90, 81, 73, 4, 66, 58, -1, 44, 44, 18, 89, 56, 74, 41, 93, 39, 51, 62, 7, 0, 71, 83, 21, 2, 15, 78, 80, 84, 62, 11, 69, 17, 20, 46, 19, 44, 9, 91, 87, 50, 54, 70, 36, 48]) == 13\nassert solution.longestCycle([39, 53, 64, 23, 78, 13, 21, 2, 69, 30, 64, 31, 76, 7, 29, 66, 32, 71, 33, 33, 14, 14, 43, 39, 65, 60, 44, 49, 22, 73, 30, 61, 20, 36, 48, 22, 49, 67, 62, 57, 18, 67, 73, 10, 43, 60, 57, 9, 49, 48, 11, 44, 25, 59, 55, 49, 78, 7, 57, 12, 48, 77, 74, -1, 4, 61, 19, 2, 26, 26, 41, 38, 41, 16, 44, 14, 39, 76, 21]) == 6\nassert solution.longestCycle([71, 23, 61, 6, 84, 20, 27, 67, 21, 81, 31, 42, 69, 10, 21, 22, 44, 68, 76, 26, 5, 28, 21, 18, 13, 61, 37, 86, 20, 25, 84, 23, 71, 85, 20, 89, 25, 13, 43, 29, 14, 11, 11, 38, 29, 13, 19, 52, 62, 65, 26, 79, 17, 52, 6, 25, 28, 45, 57, 11, 75, 17, 81, 62, 55, 20, 38, 8, 36, 50, 57, -1, 23, 14, 40, 9, 19, 57, 51, 45, 73, 6, 75, 25, 68, 74, 27, 7, 68, 51]) == 9\nassert solution.longestCycle([76, 67, 85, 66, 47, 66, 84, 10, 73, 48, 17, 42, 8, -1, 37, 48, 47, 70, 84, 67, 68, 2, 61, 32, 71, 57, 5, 75, 33, 14, 75, 8, 40, 33, 31, 36, 67, 11, 18, 22, 19, 39, 5, 53, 51, 74, 72, 28, 67, 54, 77, 62, 35, 31, 37, 78, 50, 55, 28, 12, 66, 83, 24, 23, 70, -1, 31, 87, 6, 52, 77, 82, 59, 20, 34, 3, 63, 24, 24, 9, 34, 42, 39, 23, 83, 14, 63, 86]) == 8\nassert solution.longestCycle([44, 2, 31, 31, 29, 42, 8, 22, 5, 44, 25, 12, 4, 0, 30, 18, 21, 7, 24, 25, 36, 2, 10, 40, 20, 9, 44, 25, 35, 29, 4, 4, 29, 38, 16, 29, 25, 13, 4, 13, 28, 28, 24, 35, 8]) == 9\nassert solution.longestCycle([25, 3, 17, 10, 16, 3, 13, 10, 2, 13, 10, 18, 20, 26, 19, 22, 8, 23, 10, 22, 18, 13, 27, 26, 7, 3, 13, 3]) == 2\nassert solution.longestCycle([26, 14, 32, 30, 2, 8, 10, 3, 26, 12, 5, 2, 15, 11, 17, 26, 22, 22, 30, 17, 26, 5, 10, 17, 9, -1, 30, 23, 11, 18, 16, 18, 31]) == 7\nassert solution.longestCycle([52, 39, 84, 58, 45, 86, 44, 82, 77, 53, -1, 11, 24, 20, 67, 73, 81, 86, 47, 73, 63, 62, 76, 5, 74, 32, 37, 85, 32, 29, 75, 80, -1, 41, 61, 56, 78, 63, 54, 33, 6, 66, 77, 45, 50, 53, 10, 8, 74, 11, 20, 17, 47, 20, 80, 47, 74, 50, 23, 27, 30, 73, 50, -1, 31, 52, 33, 44, 87, 29, 39, 17, 37, 19, 85, 7, 51, 74, 23, 30, 7, 4, 71, 86, 32, 45, 19, 79]) == 3\nassert solution.longestCycle([26, 5, 33, 4, 36, 23, 6, 15, 27, 20, 44, 46, 10, 43, 37, 40, 6, 11, 11, 16, 28, 39, 44, 9, 45, 46, 35, 29, 40, 17, 26, 9, 41, 16, 40, 38, 44, 19, 12, 46, 29, 32, 42, 0, 42, 6, 42, 6]) == 2\nassert solution.longestCycle([21, 26, 24, 4, 11, 15, 30, 19, 28, 9, 0, 11, 23, 18, 31, 16, 11, -1, 15, 10, 2, 8, 25, 22, 0, 23, 10, 19, 12, 10, 29, 27, 27]) == 3\nassert solution.longestCycle([47, 67, 48, 43, 66, 7, 5, 49, 47, 16, 63, 45, 5, 20, 48, 38, 60, 6, 64, 62, 7, 50, 51, 65, 41, 59, 24, 53, 10, 15, 46, 48, 20, 63, 44, 57, 2, 45, 32, 63, 48, 43, 11, 5, 47, 66, 56, 13, 49, 1, 1, 63, 25, 62, 44, 0, 56, 17, 68, 38, 8, -1, 3, 54, 12, 68, 49, 19, 60, 59, 55, 36, 21]) == 9\nassert solution.longestCycle([22, 21, 22, 2, 1, 9, 23, 5, 22, 14, 12, 11, 11, 21, 16, 22, 6, 24, 24, 8, 25, 21, 7, 25, 2, 20, 9]) == 2\nassert solution.longestCycle([67, 60, 12, 3, 91, 5, 47, 60, 4, 58, 0, 48, 43, 26, 59, 23, 32, 69, 33, 62, 2, 29, 68, 61, 41, 87, 82, 20, 57, 13, 84, 87, 37, 35, 40, 14, 75, 26, 69, 3, 47, 77, 80, 42, 83, 63, 30, 55, 41, 43, 14, 2, 70, 63, 0, 17, 88, 37, 18, 61, 59, 48, 66, 88, 26, 52, 64, 63, 76, 31, 87, 2, 7, 38, 35, 41, 16, 19, 74, 60, 6, 13, 74, 51, -1, 9, -1, 19, 32, -1, 42, 30, 90, 53]) == 14\nassert solution.longestCycle([22, 13, 29, 11, 28, 36, 28, 8, 35, 3, 44, 44, 41, 39, 29, 25, 32, 34, 36, 25, 21, -1, 42, 3, 4, 4, 5, 14, 19, 16, 25, 7, 10, 43, -1, 26, 34, 4, 31, 19, 28, 44, -1, -1, 26]) == 4\nassert solution.longestCycle([25, 8, 1, 18, 14, 22, 10, 5, 24, 19, 21, 7, 6, 15, 20, 19, 18, 26, 13, 27, 26, 20, 25, 21, 17, 27, 0, 4, 6]) == 7\nassert solution.longestCycle([65, 71, 14, 23, 62, 25, 28, 51, 73, 40, 47, 47, 56, 3, 63, 20, 10, 20, 49, 14, 68, 2, 39, 4, 81, 45, 83, 20, -1, 79, 52, 56, 32, 49, 40, 13, 39, 62, 33, 22, 46, 14, 62, 76, 80, 49, 23, 41, 83, 71, 47, 67, 57, 60, 27, 76, 44, 79, 27, 53, 27, 82, 7, 62, 42, 77, 10, 80, 33, 41, 25, 4, 64, 12, 63, 39, 3, 53, 72, 28, 14, 82, 72, 68]) == 7\nassert solution.longestCycle([22, 13, 26, 46, 43, 17, 10, 9, 7, 27, 39, 23, 52, 10, 23, 18, 10, 43, 15, 33, 46, 7, 11, 19, 33, 21, 33, 44, 27, 55, 31, -1, 23, 18, 40, 44, 46, 19, 24, 10, 32, 25, 45, 34, 34, 24, 33, 42, 40, 28, 13, 15, 22, 25, 16, 21]) == 2\nassert solution.longestCycle([1, 36, 20, 33, 41, 10, 6, 7, 27, 2, 21, 20, 31, 14, 23, 11, 31, 31, 21, 15, 24, 32, 27, 19, 13, 41, 23, 31, 23, 41, 17, 27, 37, 44, 43, 15, 23, -1, 30, 4, 35, 0, 2, 42, 41]) == 8\nassert solution.longestCycle([0, -1, 2, 6, 6, 6, 3, 3]) == 2\nassert solution.longestCycle([1, -1]) == -1\nassert solution.longestCycle([-1, 6, 2, 1, 6, 4, 5]) == 3\nassert solution.longestCycle([12, 10, 14, 6, 13, 6, 13, 10, 9, 4, 14, -1, 9, 12, 7]) == 4\nassert solution.longestCycle([4, 0, 19, 19, 11, 24, 14, 13, 15, 21, 21, 19, 30, 22, 30, 19, 30, 11, 8, 29, 24, 17, 30, 26, 18, 18, 23, 30, 14, 16, 11]) == 5\nassert solution.longestCycle([79, 67, 21, 11, 42, 58, 14, 55, 35, 40, 49, 53, 5, 82, 63, 55, 64, 63, 31, 33, 18, 71, 26, 72, 56, 52, 9, 59, 70, 40, 71, 56, 80, 8, 38, 29, 47, 71, 31, 44, 14, 34, 39, 67, 87, 87, 24, 27, 79, 28, 44, 62, 84, 40, 86, 70, 26, -1, 72, 10, 27, 6, 28, 70, 9, 40, 48, 29, 40, 30, 68, 11, 50, 40, 38, 51, 6, 75, 68, 80, 61, 12, 27, 50, 33, 60, 21, 52, 35, 69]) == 5\nassert solution.longestCycle([26, 72, 43, 60, 14, 11, 60, 4, 15, 78, 57, 10, 40, 63, -1, 25, 18, 28, 73, 42, 75, 61, -1, 12, 8, 50, 32, 25, 59, 9, 5, 44, 73, 49, 22, -1, 58, 40, 4, 78, 18, 7, 38, 75, 17, 15, 21, 13, 14, 14, 75, 41, 70, 0, 18, 8, 0, 50, 70, 53, 33, 25, 7, 43, 0, 29, 70, 55, 7, 80, 76, 20, 42, 33, 21, 1, 66, 75, 2, 56, 14, 44]) == 3\nassert solution.longestCycle([8, 17, 19, 17, 23, 25, 17, 8, 17, 12, 10, 6, 3, 25, 15, 12, 8, 9, 8, 6, 24, 13, 8, 14, 11, 10]) == 4\nassert solution.longestCycle([19, 64, 68, 45, 10, 82, 10, 89, 46, 39, 46, 70, 17, 48, 42, 52, 44, 33, 70, 20, 55, 46, 9, 5, 39, 78, 88, 46, 68, 46, 24, 20, 58, 14, 25, 23, 21, 13, 29, 56, 59, 60, 74, 74, 46, 42, 47, 28, 21, 9, 5, 2, 83, 49, 45, 42, 23, 30, 2, 80, 32, 87, 19, 15, 50, 26, 76, 48, 9, 29, 87, 38, 57, 67, 15, 62, 0, 34, 25, 24, 41, 25, 53, 29, 44, 49, 35, 79, 34, 1, 55]) == 8\nassert solution.longestCycle([24, 8, 40, 4, 5, 27, 0, 39, 14, 15, 35, 7, 2, 9, 30, 1, 14, 14, 20, 26, 1, 3, 40, 12, -1, 19, 41, 2, 34, 14, 22, 41, 30, 13, 30, 22, 15, 35, 10, 23, 10, 14, 34, 13]) == 4\nassert solution.longestCycle([5, 33, 39, 40, 15, 25, 32, 29, 15, 7, 30, 15, 42, 43, 33, 2, 5, 24, 32, 41, 46, 40, 40, -1, 4, 29, 40, 49, 17, 12, 14, 1, 45, 49, 41, 34, 40, 2, 24, 12, 13, 41, 49, 8, 11, 26, 34, 14, 20, 38]) == 9\nassert solution.longestCycle([9, 16, 1, 13, 11, 10, 8, 15, 10, 8, 9, 7, 14, 1, 11, 0, 14]) == 3\nassert solution.longestCycle([3, -1, 3, 2, -1, -1]) == 2\nassert solution.longestCycle([32, 30, 19, 30, 7, 19, 34, 5, 18, 15, -1, 14, 5, 26, 27, 54, 25, 4, 34, 47, 22, 55, 13, 40, 34, 32, -1, 28, 18, 43, 29, 50, 18, 0, 38, 20, 6, 24, 14, 52, 13, 26, 38, 46, 26, 45, 0, 26, 36, 11, 30, 40, 28, 10, 14, 39]) == 6\nassert solution.longestCycle([-1, 29, 18, 38, 40, 38, 3, 31, 35, 18, 10, 33, 27, 26, 2, 34, 16, -1, 32, 38, 2, 28, 16, 20, 14, 40, 10, 19, 30, 18, 1, 27, 14, 22, 31, 17, 17, 36, 36, 23, 18, 7, 30]) == 4\nassert solution.longestCycle([28, 45, 20, 44, 53, 5, 54, 53, 58, 44, 22, 35, 53, 26, 3, 54, 21, 41, 42, 55, 26, 23, 10, 19, 45, 34, 0, 33, 22, 27, 26, 23, 29, 48, 15, 37, 19, 44, 43, 37, 42, 24, 11, 40, 53, 53, 47, 23, 36, 53, 48, 7, 24, 10, 56, 28, 32, 53, 8]) == 2\nassert solution.longestCycle([1, 32, 14, 31, 32, 57, 8, 72, 49, 24, 75, 6, 3, 16, 39, 31, 61, 19, 53, 37, 79, 51, 65, 34, 78, 34, 64, 55, 25, 35, 28, 69, 28, 65, 75, 7, 29, 1, 36, 44, 6, 52, 74, 77, 60, 47, 34, 46, 62, -1, 1, 24, 15, 55, 53, 12, 37, 19, 35, 5, 68, 11, 2, 8, 11, 8, 71, 46, 13, 27, 1, 68, 39, 67, 6, 0, 50, 26, 21, 60]) == 7\nassert solution.longestCycle([23, 4, 57, 57, 58, 27, 14, 40, 15, 40, 63, 1, 61, 13, 30, 61, 40, 66, 33, 0, 35, 14, 17, 57, 6, 35, 39, 2, 51, 3, 63, 38, 34, 45, 0, 25, 1, 57, 61, 29, 51, 24, 48, 3, 18, 51, 57, 61, 34, 34, 57, 52, 30, 49, 40, 26, 4, 35, 8, 60, 43, 54, 53, 34, 51, 64, 48]) == 2\nassert solution.longestCycle([25, -1, 52, 26, 7, 25, 12, 8, 50, 0, 27, 7, 47, 50, 21, 4, 34, 27, 0, 6, 36, 15, 30, 22, 40, 6, 24, 11, 25, 50, 17, 36, 49, 14, 24, 20, 11, 8, 47, 15, 5, 15, 38, 39, -1, 18, 25, 26, 12, 36, 38, 22, 17, 16]) == 8\nassert solution.longestCycle([10, 21, 24, 33, 5, 13, 40, -1, 41, 9, 33, 18, 34, 11, 17, 23, 20, 40, 30, 42, 2, 41, 12, 20, 12, 19, 40, 16, 9, 6, 18, 8, 7, 36, 19, 22, 22, 21, 17, 23, 41, 11, 29]) == 2\nassert solution.longestCycle([48, 6, 12, 65, 55, 9, 23, 47, 41, 41, 24, 22, 10, 67, 54, 18, 1, 25, 19, 43, 50, 1, 21, 12, 43, 36, 41, 62, 41, 38, 32, 67, 50, 48, 60, 3, 39, 36, 65, 32, 13, 64, 21, 58, 37, 35, 62, 2, 12, 59, 18, 67, 64, 55, 36, 50, 28, 22, 64, 6, 1, 61, 43, 34, 59, 47, 66, -1]) == 9\nassert solution.longestCycle([91, 56, 46, 85, 52, 81, 79, 98, 55, 49, 97, 96, 20, 85, 51, 98, 13, 66, 22, 81, 74, 91, 27, 51, 75, 95, 80, 91, 80, 86, 1, 80, 79, 68, 2, 73, 5, 2, 7, 94, 37, 7, 68, 11, 25, 93, 67, 41, 51, -1, 93, 76, 64, 23, 26, 31, 73, 76, 4, 61, 86, 38, 64, 11, 51, 57, 95, 74, 41, 14, 2, 90, 33, 41, 77, 23, 31, 69, 60, 95, 98, 58, 7, 73, 7, 19, 71, 16, 21, 47, 0, 94, 28, 11, -1, -1, 60, 62, 79, 92, 68]) == -1\nassert solution.longestCycle([21, 15, 29, 22, 15, 10, 3, -1, 13, 5, 23, 28, 5, 1, 23, 22, 8, 12, 26, 24, 20, 27, 15, 3, 14, 25, 29, 6, 10, 28]) == 2\nassert solution.longestCycle([49, 8, 53, 63, 7, 4, 20, 1, 23, 24, 44, 20, 48, 13, 0, 58, 50, 35, 52, 18, 10, 57, 19, 27, 55, 33, 57, 61, 4, 28, 44, 50, 25, 6, 51, 5, 14, 15, 58, 14, 50, 48, -1, 55, 10, 30, 10, 65, 21, 62, 33, 18, 57, 40, 37, 14, 40, 6, 33, 63, 41, 1, 60, 0, 59, 67, 61, 30]) == 5\nassert solution.longestCycle([22, 55, 53, 51, 39, 29, 21, 57, 49, 47, 21, 33, 23, 51, 46, 10, 2, 10, 15, 41, 10, 38, 52, 4, 57, 31, 36, 21, 34, 4, 37, 28, 55, 35, 52, 15, 9, 61, 54, 22, 22, 8, 46, 54, 21, 54, 28, 57, 2, 13, 5, 33, 59, 26, 24, 27, 35, 25, 1, 14, 13, 29]) == 6\nassert solution.longestCycle([45, 5, 23, 52, 52, 29, 39, 43, 36, 31, 23, 26, 28, 50, 41, 40, 49, 52, 2, 20, 45, -1, 42, 13, 4, 6, 23, 28, 5, 12, 46, 39, 22, 18, 39, 27, 14, 28, 11, 51, 51, 23, 13, 42, 40, 42, 52, 14, 22, 51, 12, 35, 4]) == 4\nassert solution.longestCycle([48, 75, 52, 59, 72, 32, 42, 7, 7, 52, 73, 1, 1, 32, 2, 56, 27, 34, 71, 0, 60, 42, 33, 56, 37, 11, 17, 24, -1, 55, 23, 46, 51, 63, 38, 16, 10, 29, 13, 33, 60, 63, 53, 72, 43, 57, 5, 61, 10, 65, 19, 56, 61, 9, 13, 59, 53, 66, 24, 37, 19, 40, 75, 45, 18, 20, 62, 35, 58, 8, 50, 12, 23, 0, 20, 33]) == 7\nassert solution.longestCycle([35, -1, 0, 11, 34, 35, 2, 9, 33, 29, 53, 40, 48, 19, 39, 26, 5, 53, 29, 0, 34, 3, 21, 23, 20, 53, 5, 16, 12, 4, 47, 35, 51, 8, 32, 43, 9, 15, 45, 50, 36, 38, 55, 28, 38, 8, 22, 56, 41, 10, 9, 52, 50, 4, 44, 41, 27]) == 8\nassert solution.longestCycle([26, 27, 54, 26, 75, 56, 47, 4, 67, 45, 32, 8, 22, 10, 36, 18, 60, -1, 67, 25, 23, 1, 4, 47, 5, 58, 35, -1, 0, 72, 69, 74, 15, 76, 47, 17, 37, 28, 29, 19, 5, 9, 20, 38, 20, 36, 64, 50, 55, 67, 43, 43, 15, 14, -1, 23, 21, 5, 48, 71, 16, 72, 31, 64, 63, 23, 13, 63, 11, 52, 68, 37, 60, 20, 32, -1, 40, 33]) == 2\nassert solution.longestCycle([37, 59, 20, 4, 4, 48, 17, 40, 35, 46, 2, 43, 2, 52, 61, 57, 46, 46, 7, 29, 17, 59, 0, 46, 6, 2, 44, 19, 28, 0, 20, 55, 27, 11, 37, 45, 48, 24, 47, 14, 10, 28, 24, 1, 41, 10, 37, 52, 60, 9, 44, 54, 45, 35, 60, 32, 30, 18, 4, 51, 42, 30, 44]) == 5\nassert solution.longestCycle([15, 12, 29, 0, 9, 29, 21, 17, 23, 32, 7, 1, 6, 10, 8, 28, 0, 15, 1, 8, 24, 38, 9, 27, 6, 23, 16, 27, 2, 9, 31, 8, 29, 29, 9, 33, 24, 1, 4]) == 3\nassert solution.longestCycle([16, 30, 19, 19, 5, 29, 10, 28, 11, 18, 23, 40, 37, 41, 9, 15, 20, -1, 16, 0, 23, 19, 18, 31, 17, 11, 44, 25, 44, 41, 14, 20, 11, 32, 2, 36, 10, 33, 23, 2, 14, 13, 29, 44, 35]) == 3\nassert solution.longestCycle([1, 28, 9, 12, 32, 2, 0, 16, 34, 3, 27, 10, 30, 1, 18, 15, 10, 32, 10, 15, 18, 4, 33, 25, 10, 29, 22, 5, -1, 23, 24, 21, 19, 28, -1, -1]) == 9\nassert solution.longestCycle([39, 1, 47, 14, 33, 20, 26, 47, 2, 66, 42, 27, 21, 53, 65, 5, 64, 67, 13, 25, 26, 64, 61, 57, 8, 47, 61, 42, 32, 18, 67, 57, 29, 8, 36, 33, 32, -1, 43, 23, 48, 40, 6, 24, 21, 64, 60, 28, 44, 69, 35, 66, 46, 62, 4, 3, 68, 20, 64, 24, 48, 50, 9, 64, 13, 44, 32, 35, 52, 19, 48, 26]) == 8\nassert solution.longestCycle([60, 28, 57, 40, 33, 11, 21, 7, 47, 46, 33, 76, 39, 12, 0, 26, 13, 63, 71, 59, 17, 41, 46, 17, 43, 66, 61, 42, 16, 19, 19, 78, 26, 16, 62, 2, 47, 19, 74, 20, 54, 51, 69, 15, 49, 69, 35, 65, 16, 7, 35, 9, 31, 15, 4, 27, 37, 50, 65, 36, 66, 25, 5, 5, 7, 52, 19, 43, 45, 4, 29, 53, 18, 76, 13, 32, 71, 35, 3]) == 30\nassert solution.longestCycle([19, 6, 6, 12, 8, 15, 0, 10, 4, 8, 7, 3, 14, 3, 18, 2, 15, 14, 12, 0, 17]) == 3\nassert solution.longestCycle([36, 66, 39, 0, 44, 14, 35, 18, 28, 32, 6, 64, 19, 39, 30, 10, 31, 49, 4, 55, 57, 28, 61, 59, 57, 2, 20, 3, 42, 28, 64, 44, -1, 65, 11, 7, 5, 64, 51, 32, 27, 28, 54, 56, 57, 11, 1, 34, 4, 32, 61, 10, 3, 42, 20, 17, 66, 11, 12, 6, 56, 66, 56, 3, 4, 63, 24]) == 5\nassert solution.longestCycle([10, 7, 33, 37, 21, 22, 19, 28, 10, 11, 8, 30, 15, 5, 36, 14, 33, 23, 0, 7, 8, 0, 11, 6, 6, 24, 4, 22, 11, 2, 20, 2, 19, 22, 3, 37, 38, 25, 29]) == 2",
  "inefficient_solution": "class Solution:\n    def longestCycle(self, edges: List[int]) -> int:\n        n = len(edges)\n        vis = [False] * (n * 2)\n        ans = -1\n        for i in range(n):\n            if vis[i]:\n                continue\n            j = i\n            cycle = []\n            while j != -1 and not vis[j]:\n                cycle.append(j)\n                vis[j] = True\n                j = edges[j]\n            if j == -1:\n                continue\n            m = len(cycle)\n            k = next((k for k in range(m) if cycle[k] == j), float('inf'))\n            ans = max(ans, m - k + 1)\n        return ans",
  "is_python": true
}