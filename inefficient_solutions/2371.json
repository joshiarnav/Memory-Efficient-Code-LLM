{
  "problem_idx": 2371,
  "task_name": "Minimize Maximum Value in a Grid",
  "markdown_description": "\nYou are given an `m x n` integer matrix `grid` containing **distinct** positive integers.\n\n\nYou have to replace each integer in the matrix with a positive integer satisfying the following conditions:\n\n\n* The **relative** order of every two elements that are in the same row or column should stay the **same** after the replacements.\n* The **maximum** number in the matrix after the replacements should be as **small** as possible.\n\n\nThe relative order stays the same if for all pairs of elements in the original matrix such that `grid[r1][c1] > grid[r2][c2]` where either `r1 == r2` or `c1 == c2`, then it must be true that `grid[r1][c1] > grid[r2][c2]` after the replacements.\n\n\nFor example, if `grid = [[2, 4, 5], [7, 3, 9]]` then a good replacement could be either `grid = [[1, 2, 3], [2, 1, 4]]` or `grid = [[1, 2, 3], [3, 1, 4]]`.\n\n\nReturn *the **resulting** matrix.* If there are multiple answers, return **any** of them.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n![](https://fastly.jsdelivr.net/gh/doocs/leetcode@main/solution/2300-2399/2371.Minimize%20Maximum%20Value%20in%20a%20Grid/images/grid2drawio.png)\n\n```\n\n**Input:** grid = [[3,1],[2,5]]\n**Output:** [[2,1],[1,2]]\n**Explanation:** The above diagram shows a valid replacement.\nThe maximum number in the matrix is 2. It can be shown that no smaller value can be obtained.\n\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** grid = [[10]]\n**Output:** [[1]]\n**Explanation:** We replace the only number in the matrix with 1.\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `m == grid.length`\n* `n == grid[i].length`\n* `1 <= m, n <= 1000`\n* `1 <= m * n <= 105`\n* `1 <= grid[i][j] <= 109`\n* `grid` consists of distinct integers.\n\n\n",
  "canonical_solution": "class Solution:\n    def minScore(self, grid: List[List[int]]) -> List[List[int]]:\n        m, n = len(grid), len(grid[0])\n        nums = [(v, i, j) for i, row in enumerate(grid) for j, v in enumerate(row)]\n        nums.sort()\n        row_max = [0] * m\n        col_max = [0] * n\n        ans = [[0] * n for _ in range(m)]\n        for _, i, j in nums:\n            ans[i][j] = max(row_max[i], col_max[j]) + 1\n            row_max[i] = col_max[j] = ans[i][j]\n        return ans\n",
  "test_case_generator": "\nimport random\n\nclass Solution:\n    def minScore(self, grid):\n        m, n = len(grid), len(grid[0])\n        nums = [(v, i, j) for i, row in enumerate(grid) for j, v in enumerate(row)]\n        nums.sort()\n        row_max = [0] * m\n        col_max = [0] * n\n        ans = [[0] * n for _ in range(m)]\n        for _, i, j in nums:\n            ans[i][j] = max(row_max[i], col_max[j]) + 1\n            row_max[i] = col_max[j] = ans[i][j]\n        return ans\n\ndef generate_test_case():\n    solution = Solution()\n\n    m = random.randint(1, 11)\n    n = random.randint(1, 11)\n\n    grid = [[random.randint(1, 101) for _ in range(n)] for _ in range(m)]\n\n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.minScore(grid)\n\n    return grid, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        grid, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.minScore(grid) == expected_result\n        print(f\"assert solution.minScore({grid}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.minScore({grid}) == {expected_result}\") # You can find that we construct the test case in the same format as the example\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.minScore([[35], [51], [65]]) == [[1], [2], [3]]\nassert solution.minScore([[16, 78], [62, 58], [80, 99], [43, 30], [33, 66], [36, 89], [22, 19], [20, 57], [25, 18]]) == [[1, 7], [8, 5], [9, 10], [7, 3], [5, 6], [6, 8], [3, 2], [2, 4], [4, 1]]\nassert solution.minScore([[26, 100, 33, 95, 37, 82, 93, 10, 33, 87]]) == [[2, 10, 3, 9, 5, 6, 8, 1, 4, 7]]\nassert solution.minScore([[48, 30], [28, 88]]) == [[2, 1], [1, 2]]\nassert solution.minScore([[82, 49, 42, 58, 9, 4, 88], [23, 56, 9, 98, 6, 5, 12]]) == [[8, 6, 5, 7, 4, 1, 9], [6, 7, 4, 8, 3, 2, 5]]\nassert solution.minScore([[86, 52, 69, 66, 3, 26, 18], [85, 12, 94, 57, 19, 14, 72], [19, 32, 93, 50, 38, 65, 14], [26, 65, 2, 91, 14, 27, 26], [25, 8, 28, 28, 3, 69, 80]]) == [[12, 7, 11, 10, 1, 6, 2], [11, 4, 13, 9, 6, 5, 10], [2, 5, 12, 8, 7, 9, 1], [5, 8, 1, 11, 3, 7, 6], [4, 3, 5, 6, 2, 10, 11]]\nassert solution.minScore([[23, 47, 52, 17, 80, 96], [53, 34, 39, 45, 70, 58], [84, 70, 9, 67, 50, 61], [8, 3, 25, 73, 95, 53], [54, 95, 23, 89, 89, 37]]) == [[3, 4, 5, 1, 9, 10], [6, 2, 4, 5, 8, 7], [11, 10, 1, 9, 2, 8], [2, 1, 3, 10, 13, 4], [7, 13, 2, 11, 12, 3]]\nassert solution.minScore([[17, 52, 94, 35, 3, 31, 99, 18, 73, 16, 71], [15, 80, 74, 83, 10, 50, 14, 72, 29, 47, 13], [15, 20, 91, 55, 42, 75, 64, 45, 21, 36, 22], [77, 90, 3, 47, 18, 30, 27, 6, 30, 66, 90], [65, 100, 65, 59, 59, 98, 41, 62, 32, 54, 74], [43, 58, 63, 74, 98, 19, 33, 27, 19, 82, 82], [85, 39, 55, 19, 77, 67, 73, 59, 87, 4, 7], [91, 73, 1, 87, 76, 10, 76, 47, 82, 93, 51]]) == [[7, 11, 21, 10, 1, 9, 22, 8, 16, 2, 15], [5, 20, 19, 21, 2, 12, 4, 17, 9, 11, 3], [6, 7, 20, 13, 11, 16, 14, 12, 8, 10, 9], [18, 21, 2, 11, 4, 6, 5, 3, 10, 14, 22], [17, 22, 18, 14, 15, 20, 12, 16, 11, 13, 19], [11, 12, 13, 15, 21, 3, 10, 9, 4, 16, 20], [19, 8, 9, 3, 17, 15, 16, 14, 20, 1, 2], [23, 15, 1, 22, 16, 2, 17, 13, 18, 24, 14]]\nassert solution.minScore([[32, 65, 61, 91, 65, 36], [65, 4, 16, 5, 48, 86], [94, 24, 4, 39, 3, 41]]) == [[1, 5, 4, 7, 6, 2], [5, 1, 3, 2, 4, 6], [6, 3, 2, 4, 1, 5]]\nassert solution.minScore([[40, 28, 94, 40], [74, 20, 26, 97], [64, 79, 54, 73], [28, 61, 80, 101], [82, 93, 32, 87], [12, 63, 9, 2], [20, 23, 69, 89], [10, 49, 81, 29], [92, 39, 79, 23], [86, 52, 68, 87], [35, 72, 29, 13]]) == [[7, 6, 15, 8], [9, 1, 3, 14], [8, 13, 6, 9], [5, 10, 13, 15], [10, 14, 5, 11], [3, 11, 2, 1], [4, 5, 11, 13], [1, 8, 14, 4], [13, 7, 12, 3], [11, 9, 10, 12], [6, 12, 4, 2]]\nassert solution.minScore([[101], [39], [33]]) == [[3], [2], [1]]\nassert solution.minScore([[21, 2, 59, 98, 4, 69, 30], [56, 99, 14, 52, 44, 77, 22], [40, 9, 97, 101, 49, 18, 101], [93, 80, 13, 35, 26, 40, 54], [96, 16, 6, 60, 14, 62, 16], [87, 4, 78, 2, 63, 33, 35], [7, 35, 3, 61, 97, 99, 58], [42, 2, 27, 47, 31, 68, 61], [3, 54, 36, 101, 72, 71, 86]]) == [[3, 1, 9, 15, 2, 14, 8], [10, 17, 4, 9, 8, 16, 7], [6, 4, 12, 16, 9, 5, 18], [13, 11, 3, 5, 4, 7, 10], [14, 5, 2, 10, 3, 11, 6], [12, 3, 11, 1, 10, 6, 9], [2, 6, 1, 12, 17, 18, 11], [7, 2, 5, 8, 6, 13, 12], [1, 7, 6, 18, 16, 15, 17]]\nassert solution.minScore([[26, 39], [49, 98]]) == [[1, 2], [2, 3]]\nassert solution.minScore([[8, 37, 36, 6, 34, 100, 59, 72], [26, 15, 41, 27, 21, 19, 19, 76]]) == [[2, 7, 6, 1, 5, 10, 8, 9], [5, 1, 7, 6, 4, 2, 3, 10]]\nassert solution.minScore([[101, 6, 8, 34, 47, 17, 25, 13], [76, 89, 49, 13, 7, 59, 37, 49], [63, 75, 100, 54, 90, 69, 47, 47]]) == [[12, 1, 2, 6, 7, 4, 5, 3], [11, 13, 7, 2, 1, 10, 6, 9], [10, 12, 14, 9, 13, 11, 7, 8]]\nassert solution.minScore([[14, 1, 2], [72, 53, 74], [64, 57, 93], [88, 20, 97], [70, 52, 16], [11, 36, 4], [88, 67, 93], [97, 75, 73], [3, 8, 43], [61, 40, 50], [84, 48, 78]]) == [[5, 1, 2], [13, 9, 14], [11, 10, 16], [17, 3, 20], [12, 8, 4], [4, 5, 3], [18, 11, 19], [19, 12, 8], [1, 2, 5], [8, 6, 7], [16, 7, 15]]\nassert solution.minScore([[29, 35, 67, 100], [78, 23, 40, 17], [81, 21, 41, 93], [21, 48, 60, 93], [67, 71, 9, 17]]) == [[2, 3, 6, 8], [4, 2, 3, 1], [5, 1, 4, 6], [1, 4, 5, 7], [3, 5, 1, 2]]\nassert solution.minScore([[60, 26, 92, 22, 35, 48], [59, 52, 83, 48, 82, 99], [23, 5, 61, 40, 53, 5], [54, 53, 77, 59, 37, 37], [37, 21, 97, 16, 74, 99], [11, 39, 30, 23, 74, 54], [92, 49, 44, 39, 14, 23], [91, 46, 76, 29, 64, 22], [25, 24, 65, 29, 25, 52], [21, 64, 80, 20, 73, 3]]) == [[15, 4, 19, 3, 7, 10], [14, 11, 18, 10, 17, 19], [4, 1, 11, 9, 10, 2], [13, 12, 15, 14, 8, 9], [6, 2, 20, 1, 15, 21], [1, 6, 5, 4, 16, 12], [17, 10, 9, 8, 1, 4], [16, 7, 13, 5, 11, 3], [5, 3, 12, 7, 6, 11], [3, 13, 16, 2, 14, 1]]\nassert solution.minScore([[83, 34, 1, 94, 13, 88, 20, 99], [84, 15, 89, 43, 74, 20, 70, 53], [73, 34, 49, 56, 40, 58, 48, 55], [40, 96, 51, 66, 82, 64, 84, 55], [76, 35, 89, 13, 41, 36, 91, 1]]) == [[14, 4, 1, 16, 2, 15, 3, 17], [15, 1, 16, 3, 9, 2, 8, 4], [12, 5, 8, 10, 6, 11, 7, 9], [1, 16, 9, 13, 14, 12, 15, 10], [13, 6, 17, 2, 8, 7, 18, 1]]\nassert solution.minScore([[35, 2, 100, 99, 85, 28], [23, 8, 4, 58, 61, 60], [34, 65, 65, 16, 40, 62], [40, 30, 5, 47, 11, 70], [5, 59, 37, 90, 67, 85], [56, 49, 76, 101, 40, 67], [74, 89, 27, 78, 48, 11], [78, 45, 42, 61, 7, 91]]) == [[5, 1, 16, 15, 12, 2], [3, 2, 1, 8, 10, 9], [4, 11, 12, 1, 5, 10], [6, 4, 2, 7, 3, 12], [1, 8, 4, 14, 11, 13], [8, 7, 13, 16, 6, 11], [9, 12, 3, 10, 7, 1], [10, 6, 5, 9, 1, 14]]\nassert solution.minScore([[22, 63, 35, 73, 81, 11, 22, 11, 75], [91, 14, 24, 85, 32, 35, 58, 95, 70], [83, 100, 99, 17, 3, 94, 61, 19, 33], [2, 23, 10, 93, 67, 66, 31, 100, 5], [1, 75, 81, 91, 35, 20, 20, 98, 88]]) == [[3, 7, 6, 8, 11, 1, 4, 2, 10], [11, 1, 5, 10, 6, 7, 8, 12, 9], [10, 13, 12, 2, 1, 11, 9, 3, 4], [2, 5, 4, 13, 9, 8, 6, 14, 3], [1, 8, 9, 12, 7, 2, 3, 13, 11]]\nassert solution.minScore([[61, 21, 61, 75, 8, 52, 94, 72, 4, 52, 1]]) == [[7, 4, 8, 10, 3, 5, 11, 9, 2, 6, 1]]\nassert solution.minScore([[55, 58], [23, 94], [26, 97]]) == [[3, 4], [1, 5], [2, 6]]\nassert solution.minScore([[64, 9, 23, 79, 17, 22, 51, 41, 17, 7], [88, 90, 73, 30, 22, 60, 100, 37, 36, 3], [7, 94, 8, 53, 4, 63, 98, 84, 62, 29], [4, 25, 11, 42, 47, 58, 94, 32, 8, 84], [67, 89, 11, 87, 55, 42, 79, 89, 34, 57], [81, 21, 34, 54, 12, 17, 7, 74, 84, 39], [95, 72, 20, 51, 11, 46, 24, 101, 91, 32], [101, 10, 52, 99, 36, 55, 54, 21, 12, 97]]) == [[12, 3, 8, 13, 4, 7, 11, 10, 6, 2], [17, 18, 16, 6, 5, 15, 21, 9, 8, 1], [2, 19, 3, 11, 1, 16, 20, 17, 12, 4], [1, 6, 4, 8, 9, 14, 16, 7, 2, 15], [13, 16, 5, 15, 10, 8, 14, 18, 7, 11], [14, 5, 9, 12, 3, 4, 1, 13, 15, 10], [18, 11, 6, 10, 2, 9, 7, 19, 16, 8], [19, 4, 10, 17, 7, 13, 12, 6, 5, 16]]\nassert solution.minScore([[2, 2, 10, 72, 101, 13, 24, 56], [21, 41, 63, 93, 29, 51, 17, 73], [90, 25, 25, 74, 63, 97, 91, 65], [16, 32, 73, 35, 47, 100, 10, 67], [26, 32, 27, 88, 75, 86, 38, 22], [46, 18, 43, 56, 25, 85, 81, 51], [37, 2, 37, 69, 20, 67, 38, 63], [61, 51, 42, 23, 33, 21, 70, 24], [45, 68, 77, 73, 52, 76, 49, 70], [75, 2, 88, 63, 19, 8, 81, 15]]) == [[1, 2, 3, 20, 21, 6, 7, 16], [3, 11, 14, 26, 10, 12, 2, 21], [23, 6, 7, 22, 15, 25, 24, 18], [2, 7, 20, 9, 12, 26, 1, 19], [8, 10, 9, 25, 16, 24, 11, 7], [14, 5, 13, 16, 9, 23, 17, 15], [9, 3, 10, 19, 8, 18, 12, 17], [15, 13, 12, 8, 11, 7, 16, 9], [10, 15, 23, 21, 14, 22, 13, 20], [18, 4, 24, 17, 7, 5, 19, 6]]\nassert solution.minScore([[63, 37, 52, 79, 99], [85, 61, 89, 43, 51], [9, 40, 51, 1, 18], [45, 30, 86, 94, 13], [90, 87, 86, 20, 33], [53, 15, 66, 12, 51], [49, 46, 58, 46, 93]]) == [[11, 5, 8, 12, 13], [12, 8, 14, 4, 5], [2, 6, 7, 1, 3], [5, 4, 12, 13, 1], [15, 14, 13, 3, 4], [10, 3, 11, 2, 6], [9, 7, 10, 8, 11]]\nassert solution.minScore([[59, 1, 59, 3, 39, 76, 33, 50, 45, 70], [78, 85, 71, 56, 21, 92, 95, 1, 44, 30], [13, 90, 84, 84, 49, 75, 23, 23, 91, 87]]) == [[7, 1, 8, 2, 4, 10, 3, 6, 5, 9], [10, 11, 9, 5, 2, 12, 13, 1, 4, 3], [1, 13, 10, 11, 5, 6, 2, 3, 14, 12]]\nassert solution.minScore([[86, 36, 55], [32, 23, 94], [58, 35, 24], [21, 17, 70], [91, 37, 92], [89, 8, 4], [52, 2, 14], [63, 12, 96]]) == [[10, 7, 8], [6, 5, 14], [8, 6, 3], [5, 4, 9], [12, 8, 13], [11, 2, 1], [7, 1, 2], [9, 3, 15]]\nassert solution.minScore([[45, 45, 84, 45, 97], [26, 60, 97, 18, 30], [82, 95, 60, 77, 66], [66, 67, 58, 53, 60], [11, 90, 66, 56, 92], [70, 30, 72, 66, 75], [54, 15, 58, 80, 27], [45, 31, 16, 10, 23]]) == [[4, 5, 13, 6, 15], [3, 6, 14, 2, 5], [13, 14, 10, 12, 11], [10, 11, 8, 7, 9], [1, 12, 11, 8, 14], [11, 2, 12, 9, 13], [6, 1, 9, 13, 4], [5, 4, 2, 1, 3]]\nassert solution.minScore([[51, 11, 86, 82, 15], [61, 27, 42, 48, 29], [33, 12, 70, 84, 91], [9, 19, 64, 34, 63], [87, 93, 31, 20, 40]]) == [[4, 1, 10, 8, 2], [8, 4, 6, 7, 5], [3, 2, 9, 10, 11], [1, 3, 8, 4, 7], [9, 10, 2, 1, 6]]\nassert solution.minScore([[72], [99], [64], [72], [74], [36], [4], [96], [33], [54], [7]]) == [[7], [11], [6], [8], [9], [4], [1], [10], [3], [5], [2]]\nassert solution.minScore([[16, 19, 60, 78, 90, 44], [4, 85, 35, 49, 2, 66], [10, 38, 31, 9, 7, 83], [31, 34, 70, 25, 24, 57], [14, 5, 94, 13, 31, 4], [63, 99, 50, 89, 80, 80], [48, 77, 52, 16, 86, 49], [38, 93, 14, 22, 86, 15]]) == [[6, 7, 13, 14, 16, 8], [2, 14, 6, 8, 1, 13], [4, 10, 5, 3, 2, 15], [8, 9, 14, 7, 3, 12], [5, 2, 15, 4, 6, 1], [11, 17, 7, 15, 12, 14], [10, 13, 12, 5, 14, 11], [9, 16, 1, 6, 15, 2]]\nassert solution.minScore([[15, 15, 94, 77, 44, 81, 77, 90, 30, 41, 70], [79, 78, 1, 29, 54, 16, 79, 34, 97, 54, 73], [98, 92, 59, 6, 53, 27, 61, 50, 66, 28, 52], [46, 66, 98, 95, 44, 45, 43, 72, 96, 7, 43], [60, 11, 100, 57, 73, 68, 59, 55, 98, 37, 67], [96, 71, 45, 6, 44, 42, 64, 18, 87, 34, 81], [98, 54, 81, 86, 51, 54, 31, 32, 54, 6, 42]]) == [[1, 2, 19, 15, 8, 17, 16, 18, 3, 7, 14], [18, 17, 1, 3, 13, 2, 19, 5, 20, 14, 15], [20, 18, 13, 1, 12, 3, 14, 6, 15, 4, 7], [11, 13, 20, 17, 9, 10, 3, 14, 19, 2, 6], [12, 1, 22, 8, 15, 14, 9, 7, 21, 6, 13], [19, 16, 11, 2, 10, 6, 15, 3, 18, 5, 17], [21, 12, 15, 16, 11, 13, 2, 4, 14, 1, 5]]\nassert solution.minScore([[88, 28, 89, 6, 21, 1, 3, 17, 32], [96, 95, 34, 17, 75, 54, 87, 54, 92], [49, 55, 53, 75, 17, 47, 25, 18, 35], [28, 8, 12, 11, 11, 4, 40, 49, 39], [83, 67, 76, 86, 65, 50, 56, 74, 6], [4, 63, 51, 81, 41, 59, 71, 88, 22], [36, 87, 53, 17, 63, 53, 8, 63, 43], [88, 44, 62, 46, 27, 3, 16, 74, 72], [81, 14, 20, 63, 82, 39, 44, 3, 93], [23, 93, 93, 45, 78, 8, 34, 49, 25]]) == [[24, 9, 25, 3, 8, 1, 2, 4, 10], [26, 23, 9, 6, 19, 17, 21, 18, 22], [13, 15, 14, 16, 7, 12, 9, 8, 11], [8, 4, 7, 5, 6, 3, 13, 14, 12], [23, 20, 22, 24, 18, 13, 15, 21, 1], [1, 19, 11, 21, 10, 18, 20, 23, 2], [9, 21, 15, 7, 17, 16, 3, 19, 13], [25, 10, 16, 12, 9, 2, 4, 22, 17], [16, 5, 8, 15, 21, 9, 14, 1, 23], [5, 22, 26, 11, 20, 4, 10, 15, 6]]\nassert solution.minScore([[26, 45]]) == [[1, 2]]\nassert solution.minScore([[99, 73, 97, 48, 61, 34, 41, 58, 16], [6, 41, 46, 19, 55, 51, 29, 3, 37], [42, 99, 55, 21, 64, 98, 37, 48, 42], [30, 63, 55, 55, 62, 42, 21, 47, 42], [7, 55, 67, 79, 61, 58, 19, 35, 39], [52, 25, 17, 26, 87, 34, 69, 52, 79], [61, 54, 77, 54, 91, 54, 30, 97, 80], [8, 14, 67, 33, 11, 79, 2, 86, 84], [35, 54, 70, 88, 86, 99, 54, 53, 20], [52, 51, 80, 35, 7, 8, 84, 74, 29], [88, 89, 78, 90, 74, 78, 17, 41, 1]]) == [[27, 22, 26, 11, 17, 3, 9, 16, 2], [2, 8, 9, 3, 12, 11, 6, 1, 7], [9, 28, 14, 4, 21, 27, 8, 13, 10], [6, 21, 15, 16, 20, 10, 5, 12, 11], [3, 17, 20, 21, 19, 18, 4, 5, 8], [10, 7, 1, 8, 24, 9, 18, 14, 19], [15, 12, 23, 13, 25, 14, 7, 29, 24], [4, 6, 21, 9, 5, 26, 1, 28, 27], [7, 16, 22, 24, 23, 28, 17, 15, 3], [12, 11, 25, 10, 1, 2, 26, 17, 4], [26, 27, 24, 28, 22, 25, 2, 6, 1]]\nassert solution.minScore([[82, 55, 2, 51, 41, 58, 5, 5], [91, 53, 22, 24, 69, 4, 51, 34], [55, 68, 26, 59, 73, 80, 31, 22], [70, 37, 3, 98, 88, 54, 61, 73], [32, 74, 31, 35, 23, 12, 22, 44], [89, 33, 81, 21, 29, 33, 96, 19], [39, 28, 27, 90, 18, 34, 21, 1], [23, 7, 16, 61, 34, 13, 53, 88], [98, 68, 90, 75, 23, 101, 7, 69]]) == [[15, 12, 1, 11, 10, 13, 2, 3], [17, 11, 5, 6, 12, 1, 8, 7], [13, 15, 6, 14, 16, 17, 7, 5], [14, 10, 2, 20, 19, 12, 13, 18], [9, 17, 8, 10, 6, 2, 5, 11], [16, 9, 11, 5, 8, 10, 17, 4], [12, 8, 7, 19, 2, 11, 4, 1], [5, 1, 4, 15, 9, 3, 10, 19], [20, 16, 19, 18, 7, 21, 3, 17]]\nassert solution.minScore([[27, 36, 71, 14, 59, 21, 32, 79, 20, 3, 8], [82, 38, 47, 49, 2, 8, 101, 10, 14, 74, 40], [1, 2, 82, 100, 40, 101, 9, 42, 20, 101, 15], [16, 94, 88, 101, 60, 20, 24, 86, 79, 2, 68], [15, 12, 43, 33, 47, 27, 11, 12, 53, 7, 48]]) == [[11, 13, 17, 4, 15, 10, 12, 18, 5, 2, 3], [19, 14, 16, 17, 1, 2, 20, 3, 4, 18, 15], [1, 2, 18, 19, 7, 20, 3, 8, 6, 21, 4], [8, 21, 20, 22, 16, 9, 10, 19, 18, 1, 17], [7, 5, 13, 12, 14, 11, 4, 6, 17, 3, 16]]\nassert solution.minScore([[34, 73, 59, 58, 20], [19, 66, 38, 36, 21]]) == [[2, 6, 5, 4, 1], [1, 5, 4, 3, 2]]\nassert solution.minScore([[45, 17, 47, 79], [84, 52, 72, 79], [84, 6, 56, 52], [101, 23, 58, 69], [67, 101, 29, 76], [32, 10, 47, 19], [88, 77, 76, 50], [44, 10, 30, 69], [86, 36, 47, 96]]) == [[6, 4, 7, 15], [17, 7, 12, 16], [18, 1, 10, 5], [21, 5, 11, 12], [7, 15, 1, 14], [4, 2, 8, 3], [20, 14, 13, 4], [5, 3, 4, 13], [19, 6, 9, 20]]\nassert solution.minScore([[57, 57, 96, 88], [88, 80, 40, 71], [36, 22, 99, 74]]) == [[3, 4, 6, 5], [6, 5, 1, 2], [2, 1, 7, 3]]\nassert solution.minScore([[38, 76, 91, 20, 64, 42], [55, 87, 14, 38, 18, 67], [26, 82, 59, 4, 4, 76]]) == [[4, 7, 8, 2, 6, 5], [5, 9, 1, 4, 3, 6], [3, 8, 4, 1, 2, 7]]\nassert solution.minScore([[68, 37, 29, 98, 40, 27, 95, 12, 9, 30], [99, 91, 50, 37, 94, 41, 77, 48, 81, 17], [85, 73, 46, 32, 9, 66, 14, 42, 9, 14], [69, 54, 24, 31, 86, 70, 93, 99, 43, 84], [54, 50, 89, 89, 79, 25, 18, 21, 88, 5]]) == [[13, 10, 8, 20, 11, 7, 19, 2, 1, 9], [19, 14, 10, 6, 18, 8, 11, 9, 12, 5], [15, 13, 9, 5, 1, 10, 3, 6, 2, 4], [14, 12, 1, 2, 17, 15, 18, 19, 3, 16], [12, 11, 15, 16, 13, 6, 4, 5, 14, 1]]\nassert solution.minScore([[11], [75], [76], [52], [4]]) == [[2], [4], [5], [3], [1]]\nassert solution.minScore([[20, 81, 31, 37, 71, 1], [66, 83, 28, 12, 22, 72], [4, 92, 6, 28, 23, 44], [43, 69, 89, 87, 93, 97], [21, 7, 77, 80, 93, 6], [50, 4, 86, 89, 5, 26], [13, 36, 60, 67, 17, 18], [21, 30, 90, 5, 4, 16], [45, 17, 23, 73, 93, 43], [48, 85, 19, 30, 26, 68]]) == [[3, 10, 7, 8, 9, 1], [10, 12, 6, 3, 4, 11], [1, 14, 2, 6, 5, 7], [6, 8, 13, 12, 14, 15], [4, 3, 9, 11, 15, 2], [9, 1, 10, 13, 2, 5], [2, 7, 8, 9, 3, 4], [5, 6, 14, 2, 1, 3], [7, 4, 5, 10, 16, 6], [8, 13, 3, 7, 6, 9]]\nassert solution.minScore([[58, 6, 25, 82, 67, 45, 3, 28, 89], [40, 25, 37, 65, 15, 24, 82, 90, 20], [42, 97, 37, 60, 99, 16, 88, 69, 16]]) == [[9, 2, 3, 11, 10, 5, 1, 4, 12], [7, 5, 6, 10, 1, 4, 11, 12, 3], [8, 13, 7, 9, 14, 1, 12, 10, 2]]\nassert solution.minScore([[62, 26], [26, 92], [67, 80], [55, 96], [75, 37], [53, 84], [42, 92], [41, 88]]) == [[6, 1], [1, 11], [7, 8], [5, 13], [8, 2], [4, 9], [3, 12], [2, 10]]\nassert solution.minScore([[98, 23, 13, 49, 11, 86, 1, 15, 15, 15, 75], [75, 66, 17, 52, 2, 75, 73, 4, 75, 77, 47], [44, 56, 21, 77, 70, 5, 52, 82, 32, 24, 94], [38, 67, 22, 36, 26, 12, 22, 65, 32, 29, 55], [10, 101, 51, 77, 38, 36, 4, 38, 90, 18, 72], [69, 58, 78, 27, 62, 8, 92, 12, 13, 78, 13], [45, 61, 45, 46, 33, 89, 72, 99, 74, 96, 28]]) == [[24, 7, 3, 17, 2, 23, 1, 4, 5, 6, 18], [21, 19, 4, 18, 1, 22, 20, 2, 23, 24, 7], [13, 15, 5, 19, 18, 1, 14, 20, 9, 8, 21], [12, 20, 6, 11, 8, 3, 7, 14, 10, 9, 13], [3, 25, 16, 20, 10, 8, 2, 11, 24, 7, 17], [18, 16, 19, 6, 17, 2, 26, 3, 4, 25, 5], [14, 17, 15, 16, 9, 24, 18, 27, 19, 26, 6]]\nassert solution.minScore([[4, 75, 93, 68], [72, 7, 31, 93]]) == [[1, 3, 4, 2], [3, 1, 2, 4]]\nassert solution.minScore([[88, 11, 50, 101, 27, 67, 28, 37, 24, 29, 9], [6, 92, 99, 99, 88, 32, 37, 6, 56, 34, 74], [37, 7, 96, 47, 79, 97, 1, 92, 83, 74, 75], [16, 74, 19, 49, 6, 6, 82, 57, 87, 65, 31], [58, 68, 19, 38, 35, 80, 16, 101, 32, 93, 12], [53, 37, 97, 38, 41, 17, 21, 11, 36, 36, 36], [45, 64, 20, 26, 73, 82, 97, 67, 27, 45, 43], [50, 67, 65, 24, 9, 60, 7, 87, 90, 94, 68], [69, 59, 90, 99, 61, 62, 95, 49, 57, 84, 83], [7, 80, 2, 95, 15, 82, 55, 28, 82, 14, 84]]) == [[19, 3, 9, 31, 5, 18, 6, 8, 4, 7, 1], [1, 24, 28, 29, 23, 5, 9, 2, 11, 8, 20], [4, 2, 26, 15, 22, 27, 1, 25, 24, 19, 21], [3, 20, 4, 16, 1, 2, 21, 17, 25, 18, 5], [17, 19, 5, 11, 10, 20, 3, 26, 9, 24, 2], [16, 13, 27, 14, 15, 4, 5, 3, 10, 11, 12], [14, 16, 6, 7, 19, 21, 26, 18, 8, 15, 13], [15, 18, 17, 4, 3, 16, 2, 20, 26, 27, 19], [18, 14, 24, 30, 16, 17, 25, 9, 12, 23, 22], [2, 21, 1, 25, 4, 22, 10, 5, 23, 3, 24]]\nassert solution.minScore([[69, 30, 15, 90, 60, 71], [42, 66, 67, 26, 32, 68], [68, 50, 65, 60, 53, 38], [87, 23, 36, 38, 33, 100], [66, 69, 54, 45, 94, 83], [84, 25, 37, 83, 19, 59], [67, 38, 91, 17, 95, 2], [87, 63, 13, 28, 91, 8], [6, 37, 84, 99, 52, 19]]) == [[13, 5, 4, 15, 10, 14], [5, 10, 12, 3, 4, 13], [12, 8, 11, 10, 9, 4], [15, 1, 6, 7, 5, 16], [10, 11, 9, 8, 18, 15], [14, 2, 7, 11, 1, 8], [11, 7, 14, 2, 19, 1], [16, 9, 3, 4, 17, 2], [1, 6, 13, 16, 7, 3]]\nassert solution.minScore([[93, 98, 55], [89, 35, 56], [3, 85, 43], [26, 85, 100], [26, 60, 94], [57, 42, 61], [66, 52, 101], [24, 66, 50]]) == [[8, 9, 4], [7, 1, 5], [1, 7, 2], [3, 8, 9], [4, 5, 7], [5, 2, 6], [6, 3, 10], [2, 6, 3]]\nassert solution.minScore([[31, 97, 33, 53], [17, 56, 71, 26], [49, 85, 101, 64], [35, 20, 73, 7], [40, 101, 23, 61], [21, 29, 62, 40], [44, 14, 71, 27], [101, 67, 6, 89], [60, 93, 77, 88], [38, 98, 56, 34]]) == [[3, 14, 4, 6], [1, 4, 8, 2], [8, 10, 12, 9], [4, 2, 10, 1], [6, 16, 2, 7], [2, 3, 7, 5], [7, 1, 9, 3], [14, 5, 1, 13], [9, 13, 11, 12], [5, 15, 6, 4]]\nassert solution.minScore([[19, 25, 80, 16, 2, 91, 38, 70, 34, 93, 97], [4, 22, 43, 83, 101, 86, 59, 16, 61, 8, 45], [26, 69, 88, 39, 62, 89, 56, 47, 26, 62, 14], [58, 86, 22, 95, 65, 50, 2, 99, 46, 24, 33], [20, 77, 27, 25, 82, 37, 48, 46, 83, 10, 94], [83, 58, 77, 17, 4, 68, 8, 78, 2, 60, 86], [92, 72, 90, 55, 78, 86, 38, 20, 24, 61, 96], [46, 2, 37, 69, 71, 66, 79, 20, 13, 16, 21]]) == [[3, 5, 13, 2, 1, 19, 8, 10, 7, 20, 21], [1, 4, 8, 14, 18, 15, 12, 3, 13, 2, 9], [5, 14, 15, 7, 12, 18, 11, 9, 6, 13, 1], [10, 17, 2, 18, 13, 9, 1, 19, 8, 5, 7], [4, 16, 6, 5, 17, 7, 10, 8, 18, 3, 19], [14, 6, 12, 4, 2, 11, 3, 13, 1, 7, 15], [19, 15, 18, 10, 16, 17, 9, 4, 5, 11, 20], [8, 1, 7, 11, 14, 10, 15, 5, 2, 4, 6]]\nassert solution.minScore([[26, 67, 5, 13, 28], [87, 48, 35, 53, 93], [58, 23, 32, 11, 25], [89, 39, 23, 35, 7], [5, 98, 14, 2, 80], [46, 71, 29, 15, 81], [40, 29, 85, 69, 11]]) == [[4, 9, 1, 3, 5], [10, 8, 7, 9, 12], [7, 3, 6, 2, 4], [11, 6, 4, 5, 1], [2, 11, 3, 1, 6], [6, 10, 5, 4, 11], [5, 4, 11, 10, 2]]\nassert solution.minScore([[27, 48, 72, 67, 90, 21, 52, 33, 4, 34], [60, 33, 98, 10, 41, 34, 87, 20, 93, 71], [10, 38, 88, 96, 87, 63, 18, 36, 42, 71], [1, 51, 12, 23, 59, 60, 24, 40, 3, 2], [76, 48, 62, 56, 91, 50, 37, 94, 99, 29], [55, 35, 54, 77, 4, 56, 41, 33, 20, 24], [75, 14, 85, 29, 17, 25, 34, 50, 14, 60], [11, 63, 70, 50, 17, 71, 1, 81, 96, 55]]) == [[6, 11, 17, 15, 19, 5, 12, 7, 4, 9], [14, 3, 20, 1, 9, 8, 16, 2, 17, 15], [2, 10, 19, 20, 18, 16, 3, 9, 11, 17], [1, 13, 4, 5, 14, 15, 6, 10, 3, 2], [16, 12, 15, 14, 20, 13, 10, 21, 22, 8], [13, 9, 12, 16, 1, 14, 11, 8, 6, 7], [15, 1, 18, 8, 6, 7, 9, 11, 5, 12], [3, 14, 16, 9, 7, 17, 1, 18, 19, 10]]\nassert solution.minScore([[20, 29, 30, 10, 48, 61, 28], [3, 1, 59, 28, 65, 92, 85]]) == [[3, 5, 6, 1, 7, 8, 4], [2, 1, 7, 3, 8, 10, 9]]\nassert solution.minScore([[40, 13, 71, 34, 4, 77, 90, 17], [88, 15, 73, 68, 88, 77, 39, 15], [84, 16, 97, 40, 71, 1, 29, 92]]) == [[7, 2, 8, 6, 1, 9, 10, 5], [11, 3, 9, 8, 12, 10, 6, 4], [9, 4, 11, 7, 8, 1, 5, 10]]\nassert solution.minScore([[60, 20], [69, 18], [48, 85]]) == [[3, 2], [4, 1], [1, 3]]\nassert solution.minScore([[34, 7], [35, 76], [13, 71]]) == [[2, 1], [3, 4], [1, 2]]\nassert solution.minScore([[64, 2, 43, 1, 19, 54, 33, 62, 83, 71], [61, 21, 16, 98, 74, 13, 86, 5, 69, 82], [16, 53, 30, 14, 97, 20, 96, 72, 43, 82], [82, 21, 5, 51, 31, 84, 35, 51, 20, 56], [31, 18, 10, 91, 7, 68, 54, 18, 18, 19], [51, 91, 1, 34, 101, 21, 39, 6, 16, 57], [39, 73, 20, 45, 80, 63, 39, 33, 32, 36], [22, 32, 51, 26, 94, 44, 38, 40, 77, 78], [86, 52, 43, 54, 8, 18, 44, 72, 45, 6], [80, 7, 13, 93, 89, 15, 65, 2, 82, 74]]) == [[18, 2, 9, 1, 3, 14, 4, 17, 23, 19], [14, 6, 5, 25, 17, 3, 23, 2, 16, 22], [3, 17, 8, 2, 25, 7, 24, 18, 9, 23], [22, 8, 2, 15, 9, 23, 10, 16, 7, 17], [8, 4, 3, 18, 1, 16, 15, 5, 6, 7], [13, 19, 1, 9, 26, 8, 12, 3, 4, 18], [11, 18, 6, 14, 19, 15, 13, 9, 8, 10], [4, 9, 14, 5, 24, 13, 11, 12, 17, 21], [23, 16, 10, 17, 2, 6, 14, 19, 15, 1], [21, 3, 4, 24, 23, 5, 16, 1, 22, 20]]\nassert solution.minScore([[88, 7, 23, 42, 101, 78], [82, 65, 3, 77, 79, 36], [55, 50, 59, 69, 47, 23], [93, 49, 101, 2, 60, 57], [45, 82, 96, 28, 14, 42], [43, 69, 79, 85, 25, 19], [32, 36, 31, 22, 89, 35], [91, 48, 56, 79, 57, 6], [17, 67, 88, 7, 16, 92]]) == [[17, 1, 2, 5, 18, 11], [16, 11, 1, 14, 15, 7], [11, 10, 12, 13, 5, 3], [19, 9, 20, 1, 11, 10], [9, 14, 16, 4, 1, 8], [6, 13, 14, 16, 4, 2], [5, 7, 4, 3, 16, 6], [18, 8, 9, 15, 10, 1], [4, 12, 15, 2, 3, 16]]\nassert solution.minScore([[68, 68, 46], [37, 96, 88], [97, 94, 48], [27, 78, 83], [71, 65, 38]]) == [[3, 4, 2], [2, 8, 7], [7, 6, 3], [1, 5, 6], [4, 2, 1]]\nassert solution.minScore([[52, 65, 96, 89, 35, 24, 23, 84, 22]]) == [[5, 6, 9, 8, 4, 3, 2, 7, 1]]\nassert solution.minScore([[28, 47, 8, 77, 93, 80]]) == [[2, 3, 1, 4, 6, 5]]\nassert solution.minScore([[80, 75, 45]]) == [[3, 2, 1]]\nassert solution.minScore([[11, 39, 72, 6, 80, 41, 35, 26, 14, 50], [24, 6, 101, 15, 4, 39, 60, 74, 68, 65], [85, 71, 83, 70, 68, 96, 18, 80, 25, 49], [26, 35, 15, 29, 45, 89, 47, 14, 39, 55], [32, 98, 85, 98, 81, 64, 62, 62, 22, 12], [30, 17, 73, 72, 77, 49, 22, 12, 21, 42], [100, 12, 19, 14, 74, 65, 72, 49, 50, 20]]) == [[2, 10, 13, 1, 21, 11, 7, 4, 3, 12], [6, 2, 24, 5, 1, 7, 13, 16, 15, 14], [19, 14, 18, 13, 12, 20, 1, 17, 7, 10], [7, 9, 3, 8, 11, 18, 12, 2, 10, 13], [9, 24, 23, 25, 22, 16, 14, 15, 6, 1], [8, 4, 15, 14, 20, 12, 6, 1, 5, 9], [20, 3, 5, 4, 19, 17, 18, 7, 11, 6]]\nassert solution.minScore([[8]]) == [[1]]\nassert solution.minScore([[60, 54, 78, 64, 36, 79, 47, 49, 89, 5, 85], [8, 73, 52, 30, 67, 40, 81, 1, 59, 61, 64], [41, 94, 7, 14, 6, 23, 42, 25, 88, 3, 6], [14, 98, 30, 85, 39, 11, 45, 98, 61, 99, 43], [34, 5, 46, 71, 45, 72, 51, 9, 90, 39, 50], [97, 88, 61, 92, 8, 45, 91, 13, 77, 70, 37], [38, 25, 71, 100, 88, 64, 86, 74, 59, 8, 97], [70, 26, 49, 69, 54, 92, 100, 27, 96, 89, 46], [97, 6, 85, 40, 13, 84, 89, 93, 63, 62, 92]]) == [[14, 13, 16, 15, 5, 19, 11, 12, 21, 2, 20], [2, 16, 11, 6, 15, 7, 17, 1, 12, 13, 14], [8, 18, 4, 5, 2, 6, 9, 7, 17, 1, 3], [3, 19, 5, 18, 6, 1, 10, 25, 14, 26, 7], [4, 1, 8, 17, 7, 18, 12, 2, 22, 5, 10], [25, 17, 12, 24, 3, 8, 23, 4, 16, 15, 5], [5, 4, 15, 25, 19, 14, 18, 16, 13, 3, 24], [17, 5, 10, 16, 11, 21, 24, 8, 23, 18, 9], [26, 2, 21, 7, 4, 20, 22, 24, 15, 14, 23]]\nassert solution.minScore([[14, 74, 36, 18, 6, 67, 31, 77], [27, 64, 63, 73, 38, 18, 48, 15], [47, 84, 15, 97, 37, 54, 3, 21], [94, 51, 77, 72, 29, 62, 40, 47], [54, 61, 85, 53, 55, 39, 71, 42]]) == [[2, 10, 5, 3, 1, 9, 4, 11], [3, 9, 7, 10, 5, 2, 6, 1], [5, 11, 2, 12, 4, 6, 1, 3], [11, 7, 10, 9, 2, 8, 5, 6], [6, 8, 11, 5, 7, 3, 9, 4]]\nassert solution.minScore([[98, 71, 35, 32], [11, 40, 13, 74], [3, 15, 18, 47], [12, 26, 47, 29]]) == [[9, 8, 7, 6], [2, 5, 3, 8], [1, 2, 4, 7], [3, 4, 8, 5]]\nassert solution.minScore([[89, 91, 9, 95, 1, 93, 60, 72, 91, 50], [24, 47, 48, 53, 8, 47, 46, 32, 91, 19]]) == [[9, 10, 2, 13, 1, 12, 7, 8, 11, 4], [4, 7, 9, 10, 2, 8, 6, 5, 12, 3]]\nassert solution.minScore([[72, 23, 12, 45], [71, 3, 24, 13]]) == [[5, 2, 1, 3], [4, 1, 3, 2]]\nassert solution.minScore([[15, 37, 48, 63, 40, 57, 98, 75, 52]]) == [[1, 2, 4, 7, 3, 6, 9, 8, 5]]\nassert solution.minScore([[6, 4, 46, 35, 59, 31], [7, 90, 24, 97, 101, 82], [97, 23, 37, 45, 83, 32], [24, 74, 37, 55, 84, 77], [78, 95, 98, 45, 33, 72], [77, 62, 99, 81, 50, 41], [17, 68, 43, 38, 69, 40], [94, 65, 26, 33, 53, 55], [16, 67, 77, 17, 20, 18], [59, 77, 62, 58, 90, 47]]) == [[2, 1, 12, 8, 14, 7], [3, 21, 4, 22, 23, 20], [20, 2, 9, 10, 19, 8], [6, 18, 10, 12, 20, 19], [16, 22, 23, 11, 8, 15], [15, 13, 24, 16, 12, 11], [5, 17, 11, 9, 18, 10], [17, 15, 5, 6, 13, 14], [4, 16, 17, 5, 7, 6], [14, 19, 15, 13, 21, 12]]\nassert solution.minScore([[41, 27, 16, 22, 41, 37]]) == [[5, 3, 1, 2, 6, 4]]\nassert solution.minScore([[95, 88], [29, 52], [90, 95], [43, 64], [78, 30]]) == [[5, 4], [1, 2], [4, 5], [2, 3], [3, 1]]\nassert solution.minScore([[101, 64, 75, 40, 31, 97, 96, 54, 48, 95, 84], [49, 48, 64, 62, 13, 51, 84, 11, 28, 30, 10], [21, 53, 2, 89, 67, 101, 36, 62, 54, 5, 71], [13, 97, 92, 85, 8, 64, 82, 40, 58, 11, 43], [42, 41, 11, 18, 57, 40, 4, 88, 101, 20, 69], [11, 35, 1, 52, 86, 9, 34, 54, 36, 34, 22], [66, 23, 68, 48, 79, 71, 99, 6, 8, 51, 7], [9, 23, 82, 96, 88, 34, 60, 13, 70, 34, 81], [27, 27, 70, 88, 61, 67, 44, 31, 38, 76, 88], [37, 80, 89, 87, 6, 31, 5, 37, 70, 80, 12]]) == [[24, 15, 19, 7, 6, 23, 22, 14, 13, 21, 20], [13, 12, 16, 15, 5, 14, 18, 4, 6, 7, 3], [7, 13, 2, 23, 17, 24, 8, 16, 14, 3, 18], [6, 24, 23, 18, 4, 16, 17, 12, 15, 5, 13], [12, 11, 3, 4, 13, 8, 1, 17, 18, 6, 14], [3, 10, 1, 12, 20, 2, 6, 15, 11, 8, 5], [14, 4, 17, 8, 19, 18, 23, 1, 3, 10, 2], [1, 6, 20, 24, 21, 7, 14, 5, 16, 9, 19], [8, 9, 18, 22, 14, 17, 13, 10, 12, 19, 23], [9, 18, 22, 21, 3, 5, 2, 11, 17, 20, 4]]\nassert solution.minScore([[73, 18, 5, 81, 18, 91, 80, 72, 33], [30, 97, 7, 18, 45, 20, 28, 2, 23], [9, 55, 92, 40, 97, 51, 37, 98, 48], [9, 54, 71, 82, 18, 68, 96, 28, 46], [72, 7, 58, 96, 9, 91, 9, 90, 62], [64, 86, 59, 29, 62, 26, 98, 56, 53], [18, 93, 16, 19, 95, 9, 36, 10, 59]]) == [[17, 2, 1, 19, 3, 20, 18, 13, 6], [7, 18, 2, 3, 8, 4, 6, 1, 5], [1, 12, 15, 9, 19, 11, 8, 20, 10], [2, 8, 14, 20, 4, 12, 21, 5, 7], [16, 1, 4, 22, 2, 21, 3, 17, 13], [15, 16, 13, 6, 14, 5, 22, 12, 11], [4, 17, 3, 5, 18, 1, 7, 2, 12]]\nassert solution.minScore([[21, 74, 73, 49, 37, 65, 23, 53], [46, 67, 62, 79, 94, 57, 40, 13], [101, 19, 57, 59, 66, 98, 60, 15]]) == [[1, 8, 7, 4, 3, 6, 2, 5], [4, 7, 6, 8, 9, 5, 3, 1], [9, 3, 4, 5, 7, 8, 6, 2]]\nassert solution.minScore([[95, 24, 48, 22], [14, 17, 71, 59], [70, 93, 18, 5], [94, 61, 81, 5], [61, 66, 34, 78]]) == [[9, 4, 5, 3], [1, 2, 6, 4], [5, 7, 2, 1], [8, 5, 7, 2], [4, 6, 3, 7]]\nassert solution.minScore([[64, 93, 86, 45], [79, 74, 61, 67]]) == [[2, 4, 3, 1], [4, 3, 1, 2]]\nassert solution.minScore([[93, 82], [81, 65], [40, 36], [20, 43], [100, 66], [68, 74]]) == [[7, 6], [4, 3], [2, 1], [1, 2], [8, 4], [3, 5]]\nassert solution.minScore([[3, 71, 24, 89, 78]]) == [[1, 3, 2, 5, 4]]\nassert solution.minScore([[69, 93, 32], [88, 35, 68]]) == [[2, 3, 1], [3, 1, 2]]\nassert solution.minScore([[42, 51, 85, 89, 11, 15, 82], [84, 67, 86, 18, 26, 8, 25], [39, 3, 66, 29, 84, 95, 67], [19, 89, 74, 7, 70, 67, 43], [27, 87, 2, 26, 21, 37, 60], [75, 97, 88, 95, 13, 89, 12], [53, 38, 48, 69, 25, 60, 90], [34, 57, 63, 68, 33, 97, 95], [43, 67, 38, 87, 31, 85, 32]]) == [[10, 11, 17, 18, 1, 2, 16], [14, 13, 18, 2, 5, 1, 3], [9, 1, 14, 5, 16, 21, 15], [2, 17, 16, 1, 15, 14, 8], [5, 15, 1, 4, 3, 6, 9], [13, 22, 19, 21, 2, 20, 1], [12, 5, 9, 15, 4, 13, 17], [8, 12, 13, 14, 7, 22, 18], [11, 14, 8, 16, 6, 15, 7]]\nassert solution.minScore([[89, 55, 49, 26, 70, 63], [86, 3, 86, 73, 97, 19], [38, 58, 28, 89, 32, 66], [97, 43, 46, 48, 54, 71], [28, 1, 69, 51, 78, 18], [28, 24, 36, 53, 101, 9], [86, 52, 86, 81, 67, 76], [79, 79, 85, 95, 96, 38], [19, 24, 40, 29, 49, 63], [94, 100, 96, 36, 14, 11]]) == [[18, 10, 9, 1, 12, 11], [13, 2, 14, 12, 20, 4], [6, 11, 1, 17, 4, 13], [20, 5, 8, 9, 10, 14], [4, 1, 11, 10, 13, 3], [5, 3, 6, 11, 21, 1], [17, 6, 18, 16, 11, 15], [7, 12, 13, 18, 19, 5], [1, 4, 7, 5, 8, 12], [19, 21, 20, 6, 3, 2]]\nassert solution.minScore([[64, 90, 94, 88, 90], [91, 29, 76, 31, 95], [92, 34, 20, 89, 69], [74, 97, 40, 20, 30], [45, 42, 99, 39, 55], [100, 10, 31, 40, 44]]) == [[7, 9, 11, 8, 10], [9, 2, 4, 3, 11], [10, 3, 1, 9, 8], [8, 10, 3, 1, 2], [6, 5, 12, 4, 7], [11, 1, 2, 5, 6]]\nassert solution.minScore([[76, 23, 19, 68], [22, 65, 90, 19], [21, 63, 23, 101], [64, 17, 78, 8], [24, 17, 45, 27], [71, 56, 39, 100], [64, 48, 56, 66], [45, 75, 73, 65], [44, 82, 84, 86], [68, 14, 67, 83], [91, 61, 86, 18]]) == [[12, 4, 1, 11], [4, 9, 15, 3], [1, 8, 2, 16], [8, 2, 11, 1], [5, 3, 7, 6], [11, 6, 3, 15], [9, 5, 8, 10], [7, 11, 10, 8], [6, 12, 13, 14], [10, 1, 9, 12], [15, 7, 14, 2]]\nassert solution.minScore([[54], [47], [57]]) == [[2], [1], [3]]\nassert solution.minScore([[53, 4, 49, 91, 16, 11, 55, 41], [99, 15, 35, 83, 62, 23, 35, 31], [77, 13, 73, 70, 13, 67, 75, 74], [88, 34, 42, 75, 21, 42, 63, 70], [54, 101, 27, 4, 11, 4, 54, 42], [82, 14, 38, 83, 45, 21, 25, 39], [14, 26, 93, 43, 97, 59, 94, 92], [16, 10, 82, 68, 7, 86, 15, 12]]) == [[13, 1, 12, 24, 5, 3, 16, 11], [24, 5, 8, 20, 12, 6, 9, 7], [21, 3, 15, 14, 4, 13, 20, 19], [23, 7, 10, 19, 6, 11, 17, 18], [14, 16, 4, 1, 3, 2, 15, 12], [22, 4, 9, 23, 11, 5, 6, 10], [1, 6, 21, 7, 23, 12, 22, 20], [5, 2, 16, 8, 1, 17, 4, 3]]\nassert solution.minScore([[40, 31, 49, 13, 53, 48], [69, 96, 75, 34, 39, 84]]) == [[3, 2, 5, 1, 6, 4], [4, 8, 6, 2, 3, 7]]\nassert solution.minScore([[28, 15, 17, 14, 39, 46, 42, 54, 33, 15, 28], [20, 82, 29, 81, 85, 27, 63, 49, 72, 15, 99]]) == [[6, 2, 4, 1, 9, 11, 10, 12, 8, 3, 7], [5, 14, 7, 13, 15, 6, 11, 8, 12, 4, 16]]\nassert solution.minScore([[74, 66, 100, 86], [49, 1, 69, 100], [86, 80, 96, 37], [10, 8, 55, 25]]) == [[5, 3, 9, 6], [4, 1, 6, 7], [7, 6, 8, 5], [3, 2, 5, 4]]\nassert solution.minScore([[74, 42, 36, 61, 34, 21, 10], [81, 16, 87, 82, 86, 74, 24], [2, 13, 84, 99, 7, 22, 99], [32, 28, 97, 24, 28, 28, 61], [88, 48, 31, 55, 93, 81, 40], [49, 72, 75, 17, 7, 94, 4], [20, 73, 57, 95, 90, 90, 40], [4, 48, 20, 7, 16, 63, 52], [66, 49, 78, 3, 60, 9, 33], [72, 16, 35, 95, 53, 84, 33]]) == [[17, 10, 9, 13, 8, 3, 2], [18, 4, 21, 19, 20, 15, 5], [1, 3, 17, 25, 2, 4, 26], [9, 6, 22, 5, 7, 8, 14], [19, 11, 6, 12, 22, 16, 8], [10, 14, 15, 4, 3, 23, 1], [3, 15, 10, 23, 21, 22, 9], [2, 12, 5, 3, 4, 14, 13], [15, 13, 16, 1, 14, 2, 6], [16, 5, 8, 24, 9, 17, 7]]\nassert solution.minScore([[6, 15, 40, 43, 90], [98, 19, 61, 32, 95]]) == [[1, 2, 3, 5, 6], [8, 3, 5, 4, 7]]\nassert solution.minScore([[86, 63, 79, 76, 64, 66, 83, 72], [62, 96, 31, 98, 97, 55, 88, 5], [67, 97, 78, 42, 61, 78, 97, 51], [51, 16, 36, 79, 46, 61, 86, 71], [14, 84, 37, 75, 100, 15, 4, 15], [94, 85, 91, 50, 73, 67, 8, 75], [44, 82, 18, 37, 18, 56, 75, 46], [10, 72, 100, 100, 9, 46, 68, 91], [64, 55, 95, 33, 83, 22, 68, 61], [31, 40, 64, 72, 42, 35, 25, 75]]) == [[18, 9, 16, 15, 12, 13, 17, 14], [11, 20, 2, 22, 21, 8, 19, 1], [13, 21, 14, 8, 11, 15, 22, 10], [10, 1, 3, 16, 9, 11, 18, 12], [3, 16, 6, 11, 22, 4, 1, 5], [19, 17, 18, 9, 15, 14, 2, 16], [8, 15, 1, 7, 2, 10, 14, 9], [2, 10, 20, 23, 1, 7, 8, 18], [12, 8, 19, 6, 16, 5, 13, 11], [4, 7, 9, 10, 8, 6, 3, 17]]\nassert solution.minScore([[91, 71, 27, 70, 78, 79, 80, 7, 3], [15, 92, 41, 69, 9, 10, 81, 18, 31], [7, 41, 5, 18, 34, 26, 10, 91, 71], [5, 92, 31, 85, 75, 84, 48, 31, 92]]) == [[13, 9, 3, 8, 10, 11, 12, 2, 1], [3, 14, 6, 7, 1, 2, 13, 4, 5], [2, 7, 1, 4, 6, 5, 3, 9, 8], [1, 15, 4, 13, 7, 12, 6, 5, 16]]\nassert solution.minScore([[16, 66, 61, 75, 76, 60, 70, 9, 2]]) == [[3, 6, 5, 8, 9, 4, 7, 2, 1]]\nassert solution.minScore([[23, 82, 22, 86, 61, 46, 98, 101, 54, 60, 73], [81, 82, 70, 46, 12, 88, 5, 100, 55, 69, 54], [29, 1, 98, 87, 69, 101, 58, 54, 87, 63, 67], [95, 63, 38, 28, 76, 42, 93, 81, 80, 50, 91], [55, 83, 95, 40, 67, 14, 3, 38, 77, 54, 93], [79, 87, 92, 93, 95, 68, 20, 98, 25, 15, 6]]) == [[2, 10, 1, 11, 7, 4, 15, 19, 5, 6, 9], [10, 11, 9, 5, 3, 12, 2, 18, 7, 8, 6], [3, 1, 16, 12, 9, 17, 5, 4, 13, 7, 8], [15, 5, 2, 1, 10, 3, 14, 12, 11, 4, 13], [6, 12, 15, 4, 8, 2, 1, 3, 9, 5, 14], [7, 13, 14, 15, 16, 5, 3, 17, 4, 2, 1]]",
  "inefficient_solution": "class Solution:\n    def minScore(self, grid: List[List[int]]) -> List[List[int]]:\n        m, n = len(grid), len(grid[0])\n        nums = [(v, i, j) for i, row in enumerate(grid) for j, v in enumerate(row)]\n        nums.sort()\n        \n        # Create a 2D array to store the maximum value in each row and column\n        row_max = [0] * m\n        col_max = [0] * n\n        for i in range(m):\n            row_max[i] = [0] * n\n        for j in range(n):\n            col_max[j] = [0] * m\n        \n        # Create a 2D array to store the result\n        ans = [[0] * n for _ in range(m)]\n        for _ in range(m * n):\n            for _, i, j in nums:\n                ans[i][j] = max(row_max[i][j], col_max[j][i]) + 1\n                row_max[i][j] = col_max[j][i] = ans[i][j]\n        \n        return ans",
  "is_python": true
}