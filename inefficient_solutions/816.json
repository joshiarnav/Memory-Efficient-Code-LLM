{
  "problem_idx": 816,
  "task_name": "Ambiguous Coordinates",
  "markdown_description": "\nWe had some 2-dimensional coordinates, like `\"(1, 3)\"` or `\"(2, 0.5)\"`. Then, we removed all commas, decimal points, and spaces and ended up with the string s.\n\n\n* For example, `\"(1, 3)\"` becomes `s = \"(13)\"` and `\"(2, 0.5)\"` becomes `s = \"(205)\"`.\n\n\nReturn *a list of strings representing all possibilities for what our original coordinates could have been*.\n\n\nOur original representation never had extraneous zeroes, so we never started with numbers like `\"00\"`, `\"0.0\"`, `\"0.00\"`, `\"1.0\"`, `\"001\"`, `\"00.01\"`, or any other number that can be represented with fewer digits. Also, a decimal point within a number never occurs without at least one digit occurring before it, so we never started with numbers like `\".1\"`.\n\n\nThe final answer list can be returned in any order. All coordinates in the final answer have exactly one space between them (occurring after the comma.)\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** s = \"(123)\"\n**Output:** [\"(1, 2.3)\",\"(1, 23)\",\"(1.2, 3)\",\"(12, 3)\"]\n\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** s = \"(0123)\"\n**Output:** [\"(0, 1.23)\",\"(0, 12.3)\",\"(0, 123)\",\"(0.1, 2.3)\",\"(0.1, 23)\",\"(0.12, 3)\"]\n**Explanation:** 0.0, 00, 0001 or 00.01 are not allowed.\n\n```\n\n**Example 3:**\n\n\n\n```\n\n**Input:** s = \"(00011)\"\n**Output:** [\"(0, 0.011)\",\"(0.001, 1)\"]\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `4 <= s.length <= 12`\n* `s[0] == '('` and `s[s.length - 1] == ')'`.\n* The rest of `s` are digits.\n\n\n",
  "canonical_solution": "class Solution:\n    def ambiguousCoordinates(self, s: str) -> List[str]:\n        def f(i, j):\n            res = []\n            for k in range(1, j - i + 1):\n                l, r = s[i : i + k], s[i + k : j]\n                ok = (l == '0' or not l.startswith('0')) and not r.endswith('0')\n                if ok:\n                    res.append(l + ('.' if k < j - i else '') + r)\n            return res\n\n        n = len(s)\n        return [\n            f'({x}, {y})' for i in range(2, n - 1) for x in f(1, i) for y in f(i, n - 1)\n        ]\n",
  "test_case_generator": "\nimport random\n\nclass Solution:\n    def ambiguousCoordinates(self, s: str):\n        def f(i, j):\n            res = []\n            for k in range(1, j - i + 1):\n                l, r = s[i : i + k], s[i + k : j]\n                ok = (l == '0' or not l.startswith('0')) and not r.endswith('0')\n                if ok:\n                    res.append(l + ('.' if k < j - i else '') + r)\n            return res\n\n        n = len(s)\n        return [\n            f'({x}, {y})' for i in range(2, n - 1) for x in f(1, i) for y in f(i, n - 1)\n        ]\n\ndef generate_test_case():\n    solution = Solution()\n    \n    # Generate random string\n    s = ''.join(random.choices(string.digits, k=random.randint(4, 12)))\n\n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.ambiguousCoordinates(s)\n\n    return s, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        s, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.ambiguousCoordinates(s) == expected_result\n        print(f'assert solution.ambiguousCoordinates(\"{s}\") == {expected_result}')\n        test_case_generator_results.append(f'assert solution.ambiguousCoordinates(\"{s}\") == {expected_result}')\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    import string\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.ambiguousCoordinates(\"573826\") == ['(7, 3.82)', '(7, 38.2)', '(7, 382)', '(7.3, 8.2)', '(7.3, 82)', '(73, 8.2)', '(73, 82)', '(7.38, 2)', '(73.8, 2)', '(738, 2)']\nassert solution.ambiguousCoordinates(\"31526559265\") == ['(1, 5.2655926)', '(1, 52.655926)', '(1, 526.55926)', '(1, 5265.5926)', '(1, 52655.926)', '(1, 526559.26)', '(1, 5265592.6)', '(1, 52655926)', '(1.5, 2.655926)', '(1.5, 26.55926)', '(1.5, 265.5926)', '(1.5, 2655.926)', '(1.5, 26559.26)', '(1.5, 265592.6)', '(1.5, 2655926)', '(15, 2.655926)', '(15, 26.55926)', '(15, 265.5926)', '(15, 2655.926)', '(15, 26559.26)', '(15, 265592.6)', '(15, 2655926)', '(1.52, 6.55926)', '(1.52, 65.5926)', '(1.52, 655.926)', '(1.52, 6559.26)', '(1.52, 65592.6)', '(1.52, 655926)', '(15.2, 6.55926)', '(15.2, 65.5926)', '(15.2, 655.926)', '(15.2, 6559.26)', '(15.2, 65592.6)', '(15.2, 655926)', '(152, 6.55926)', '(152, 65.5926)', '(152, 655.926)', '(152, 6559.26)', '(152, 65592.6)', '(152, 655926)', '(1.526, 5.5926)', '(1.526, 55.926)', '(1.526, 559.26)', '(1.526, 5592.6)', '(1.526, 55926)', '(15.26, 5.5926)', '(15.26, 55.926)', '(15.26, 559.26)', '(15.26, 5592.6)', '(15.26, 55926)', '(152.6, 5.5926)', '(152.6, 55.926)', '(152.6, 559.26)', '(152.6, 5592.6)', '(152.6, 55926)', '(1526, 5.5926)', '(1526, 55.926)', '(1526, 559.26)', '(1526, 5592.6)', '(1526, 55926)', '(1.5265, 5.926)', '(1.5265, 59.26)', '(1.5265, 592.6)', '(1.5265, 5926)', '(15.265, 5.926)', '(15.265, 59.26)', '(15.265, 592.6)', '(15.265, 5926)', '(152.65, 5.926)', '(152.65, 59.26)', '(152.65, 592.6)', '(152.65, 5926)', '(1526.5, 5.926)', '(1526.5, 59.26)', '(1526.5, 592.6)', '(1526.5, 5926)', '(15265, 5.926)', '(15265, 59.26)', '(15265, 592.6)', '(15265, 5926)', '(1.52655, 9.26)', '(1.52655, 92.6)', '(1.52655, 926)', '(15.2655, 9.26)', '(15.2655, 92.6)', '(15.2655, 926)', '(152.655, 9.26)', '(152.655, 92.6)', '(152.655, 926)', '(1526.55, 9.26)', '(1526.55, 92.6)', '(1526.55, 926)', '(15265.5, 9.26)', '(15265.5, 92.6)', '(15265.5, 926)', '(152655, 9.26)', '(152655, 92.6)', '(152655, 926)', '(1.526559, 2.6)', '(1.526559, 26)', '(15.26559, 2.6)', '(15.26559, 26)', '(152.6559, 2.6)', '(152.6559, 26)', '(1526.559, 2.6)', '(1526.559, 26)', '(15265.59, 2.6)', '(15265.59, 26)', '(152655.9, 2.6)', '(152655.9, 26)', '(1526559, 2.6)', '(1526559, 26)', '(1.5265592, 6)', '(15.265592, 6)', '(152.65592, 6)', '(1526.5592, 6)', '(15265.592, 6)', '(152655.92, 6)', '(1526559.2, 6)', '(15265592, 6)']\nassert solution.ambiguousCoordinates(\"262139530446\") == ['(6, 2.13953044)', '(6, 21.3953044)', '(6, 213.953044)', '(6, 2139.53044)', '(6, 21395.3044)', '(6, 213953.044)', '(6, 2139530.44)', '(6, 21395304.4)', '(6, 213953044)', '(6.2, 1.3953044)', '(6.2, 13.953044)', '(6.2, 139.53044)', '(6.2, 1395.3044)', '(6.2, 13953.044)', '(6.2, 139530.44)', '(6.2, 1395304.4)', '(6.2, 13953044)', '(62, 1.3953044)', '(62, 13.953044)', '(62, 139.53044)', '(62, 1395.3044)', '(62, 13953.044)', '(62, 139530.44)', '(62, 1395304.4)', '(62, 13953044)', '(6.21, 3.953044)', '(6.21, 39.53044)', '(6.21, 395.3044)', '(6.21, 3953.044)', '(6.21, 39530.44)', '(6.21, 395304.4)', '(6.21, 3953044)', '(62.1, 3.953044)', '(62.1, 39.53044)', '(62.1, 395.3044)', '(62.1, 3953.044)', '(62.1, 39530.44)', '(62.1, 395304.4)', '(62.1, 3953044)', '(621, 3.953044)', '(621, 39.53044)', '(621, 395.3044)', '(621, 3953.044)', '(621, 39530.44)', '(621, 395304.4)', '(621, 3953044)', '(6.213, 9.53044)', '(6.213, 95.3044)', '(6.213, 953.044)', '(6.213, 9530.44)', '(6.213, 95304.4)', '(6.213, 953044)', '(62.13, 9.53044)', '(62.13, 95.3044)', '(62.13, 953.044)', '(62.13, 9530.44)', '(62.13, 95304.4)', '(62.13, 953044)', '(621.3, 9.53044)', '(621.3, 95.3044)', '(621.3, 953.044)', '(621.3, 9530.44)', '(621.3, 95304.4)', '(621.3, 953044)', '(6213, 9.53044)', '(6213, 95.3044)', '(6213, 953.044)', '(6213, 9530.44)', '(6213, 95304.4)', '(6213, 953044)', '(6.2139, 5.3044)', '(6.2139, 53.044)', '(6.2139, 530.44)', '(6.2139, 5304.4)', '(6.2139, 53044)', '(62.139, 5.3044)', '(62.139, 53.044)', '(62.139, 530.44)', '(62.139, 5304.4)', '(62.139, 53044)', '(621.39, 5.3044)', '(621.39, 53.044)', '(621.39, 530.44)', '(621.39, 5304.4)', '(621.39, 53044)', '(6213.9, 5.3044)', '(6213.9, 53.044)', '(6213.9, 530.44)', '(6213.9, 5304.4)', '(6213.9, 53044)', '(62139, 5.3044)', '(62139, 53.044)', '(62139, 530.44)', '(62139, 5304.4)', '(62139, 53044)', '(6.21395, 3.044)', '(6.21395, 30.44)', '(6.21395, 304.4)', '(6.21395, 3044)', '(62.1395, 3.044)', '(62.1395, 30.44)', '(62.1395, 304.4)', '(62.1395, 3044)', '(621.395, 3.044)', '(621.395, 30.44)', '(621.395, 304.4)', '(621.395, 3044)', '(6213.95, 3.044)', '(6213.95, 30.44)', '(6213.95, 304.4)', '(6213.95, 3044)', '(62139.5, 3.044)', '(62139.5, 30.44)', '(62139.5, 304.4)', '(62139.5, 3044)', '(621395, 3.044)', '(621395, 30.44)', '(621395, 304.4)', '(621395, 3044)', '(6.213953, 0.44)', '(62.13953, 0.44)', '(621.3953, 0.44)', '(6213.953, 0.44)', '(62139.53, 0.44)', '(621395.3, 0.44)', '(6213953, 0.44)', '(62139530, 4.4)', '(62139530, 44)', '(6.21395304, 4)', '(62.1395304, 4)', '(621.395304, 4)', '(6213.95304, 4)', '(62139.5304, 4)', '(621395.304, 4)', '(6213953.04, 4)', '(62139530.4, 4)', '(621395304, 4)']\nassert solution.ambiguousCoordinates(\"35669664\") == ['(5, 6.6966)', '(5, 66.966)', '(5, 669.66)', '(5, 6696.6)', '(5, 66966)', '(5.6, 6.966)', '(5.6, 69.66)', '(5.6, 696.6)', '(5.6, 6966)', '(56, 6.966)', '(56, 69.66)', '(56, 696.6)', '(56, 6966)', '(5.66, 9.66)', '(5.66, 96.6)', '(5.66, 966)', '(56.6, 9.66)', '(56.6, 96.6)', '(56.6, 966)', '(566, 9.66)', '(566, 96.6)', '(566, 966)', '(5.669, 6.6)', '(5.669, 66)', '(56.69, 6.6)', '(56.69, 66)', '(566.9, 6.6)', '(566.9, 66)', '(5669, 6.6)', '(5669, 66)', '(5.6696, 6)', '(56.696, 6)', '(566.96, 6)', '(5669.6, 6)', '(56696, 6)']\nassert solution.ambiguousCoordinates(\"872762423\") == ['(7, 2.76242)', '(7, 27.6242)', '(7, 276.242)', '(7, 2762.42)', '(7, 27624.2)', '(7, 276242)', '(7.2, 7.6242)', '(7.2, 76.242)', '(7.2, 762.42)', '(7.2, 7624.2)', '(7.2, 76242)', '(72, 7.6242)', '(72, 76.242)', '(72, 762.42)', '(72, 7624.2)', '(72, 76242)', '(7.27, 6.242)', '(7.27, 62.42)', '(7.27, 624.2)', '(7.27, 6242)', '(72.7, 6.242)', '(72.7, 62.42)', '(72.7, 624.2)', '(72.7, 6242)', '(727, 6.242)', '(727, 62.42)', '(727, 624.2)', '(727, 6242)', '(7.276, 2.42)', '(7.276, 24.2)', '(7.276, 242)', '(72.76, 2.42)', '(72.76, 24.2)', '(72.76, 242)', '(727.6, 2.42)', '(727.6, 24.2)', '(727.6, 242)', '(7276, 2.42)', '(7276, 24.2)', '(7276, 242)', '(7.2762, 4.2)', '(7.2762, 42)', '(72.762, 4.2)', '(72.762, 42)', '(727.62, 4.2)', '(727.62, 42)', '(7276.2, 4.2)', '(7276.2, 42)', '(72762, 4.2)', '(72762, 42)', '(7.27624, 2)', '(72.7624, 2)', '(727.624, 2)', '(7276.24, 2)', '(72762.4, 2)', '(727624, 2)']\nassert solution.ambiguousCoordinates(\"97542937\") == ['(7, 5.4293)', '(7, 54.293)', '(7, 542.93)', '(7, 5429.3)', '(7, 54293)', '(7.5, 4.293)', '(7.5, 42.93)', '(7.5, 429.3)', '(7.5, 4293)', '(75, 4.293)', '(75, 42.93)', '(75, 429.3)', '(75, 4293)', '(7.54, 2.93)', '(7.54, 29.3)', '(7.54, 293)', '(75.4, 2.93)', '(75.4, 29.3)', '(75.4, 293)', '(754, 2.93)', '(754, 29.3)', '(754, 293)', '(7.542, 9.3)', '(7.542, 93)', '(75.42, 9.3)', '(75.42, 93)', '(754.2, 9.3)', '(754.2, 93)', '(7542, 9.3)', '(7542, 93)', '(7.5429, 3)', '(75.429, 3)', '(754.29, 3)', '(7542.9, 3)', '(75429, 3)']\nassert solution.ambiguousCoordinates(\"93748\") == ['(3, 7.4)', '(3, 74)', '(3.7, 4)', '(37, 4)']\nassert solution.ambiguousCoordinates(\"0605070608\") == ['(60, 507060)', '(6050, 7060)', '(605070, 60)', '(6.050706, 0)', '(60.50706, 0)', '(605.0706, 0)', '(6050.706, 0)', '(60507.06, 0)', '(605070.6, 0)', '(6050706, 0)']\nassert solution.ambiguousCoordinates(\"866603599591\") == ['(6, 6.60359959)', '(6, 66.0359959)', '(6, 660.359959)', '(6, 6603.59959)', '(6, 66035.9959)', '(6, 660359.959)', '(6, 6603599.59)', '(6, 66035995.9)', '(6, 660359959)', '(6.6, 6.0359959)', '(6.6, 60.359959)', '(6.6, 603.59959)', '(6.6, 6035.9959)', '(6.6, 60359.959)', '(6.6, 603599.59)', '(6.6, 6035995.9)', '(6.6, 60359959)', '(66, 6.0359959)', '(66, 60.359959)', '(66, 603.59959)', '(66, 6035.9959)', '(66, 60359.959)', '(66, 603599.59)', '(66, 6035995.9)', '(66, 60359959)', '(6.66, 0.359959)', '(66.6, 0.359959)', '(666, 0.359959)', '(6660, 3.59959)', '(6660, 35.9959)', '(6660, 359.959)', '(6660, 3599.59)', '(6660, 35995.9)', '(6660, 359959)', '(6.6603, 5.9959)', '(6.6603, 59.959)', '(6.6603, 599.59)', '(6.6603, 5995.9)', '(6.6603, 59959)', '(66.603, 5.9959)', '(66.603, 59.959)', '(66.603, 599.59)', '(66.603, 5995.9)', '(66.603, 59959)', '(666.03, 5.9959)', '(666.03, 59.959)', '(666.03, 599.59)', '(666.03, 5995.9)', '(666.03, 59959)', '(6660.3, 5.9959)', '(6660.3, 59.959)', '(6660.3, 599.59)', '(6660.3, 5995.9)', '(6660.3, 59959)', '(66603, 5.9959)', '(66603, 59.959)', '(66603, 599.59)', '(66603, 5995.9)', '(66603, 59959)', '(6.66035, 9.959)', '(6.66035, 99.59)', '(6.66035, 995.9)', '(6.66035, 9959)', '(66.6035, 9.959)', '(66.6035, 99.59)', '(66.6035, 995.9)', '(66.6035, 9959)', '(666.035, 9.959)', '(666.035, 99.59)', '(666.035, 995.9)', '(666.035, 9959)', '(6660.35, 9.959)', '(6660.35, 99.59)', '(6660.35, 995.9)', '(6660.35, 9959)', '(66603.5, 9.959)', '(66603.5, 99.59)', '(66603.5, 995.9)', '(66603.5, 9959)', '(666035, 9.959)', '(666035, 99.59)', '(666035, 995.9)', '(666035, 9959)', '(6.660359, 9.59)', '(6.660359, 95.9)', '(6.660359, 959)', '(66.60359, 9.59)', '(66.60359, 95.9)', '(66.60359, 959)', '(666.0359, 9.59)', '(666.0359, 95.9)', '(666.0359, 959)', '(6660.359, 9.59)', '(6660.359, 95.9)', '(6660.359, 959)', '(66603.59, 9.59)', '(66603.59, 95.9)', '(66603.59, 959)', '(666035.9, 9.59)', '(666035.9, 95.9)', '(666035.9, 959)', '(6660359, 9.59)', '(6660359, 95.9)', '(6660359, 959)', '(6.6603599, 5.9)', '(6.6603599, 59)', '(66.603599, 5.9)', '(66.603599, 59)', '(666.03599, 5.9)', '(666.03599, 59)', '(6660.3599, 5.9)', '(6660.3599, 59)', '(66603.599, 5.9)', '(66603.599, 59)', '(666035.99, 5.9)', '(666035.99, 59)', '(6660359.9, 5.9)', '(6660359.9, 59)', '(66603599, 5.9)', '(66603599, 59)', '(6.66035995, 9)', '(66.6035995, 9)', '(666.035995, 9)', '(6660.35995, 9)', '(66603.5995, 9)', '(666035.995, 9)', '(6660359.95, 9)', '(66603599.5, 9)', '(666035995, 9)']\nassert solution.ambiguousCoordinates(\"0597183\") == ['(5, 9.718)', '(5, 97.18)', '(5, 971.8)', '(5, 9718)', '(5.9, 7.18)', '(5.9, 71.8)', '(5.9, 718)', '(59, 7.18)', '(59, 71.8)', '(59, 718)', '(5.97, 1.8)', '(5.97, 18)', '(59.7, 1.8)', '(59.7, 18)', '(597, 1.8)', '(597, 18)', '(5.971, 8)', '(59.71, 8)', '(597.1, 8)', '(5971, 8)']\nassert solution.ambiguousCoordinates(\"482989\") == ['(8, 2.98)', '(8, 29.8)', '(8, 298)', '(8.2, 9.8)', '(8.2, 98)', '(82, 9.8)', '(82, 98)', '(8.29, 8)', '(82.9, 8)', '(829, 8)']\nassert solution.ambiguousCoordinates(\"6827991\") == ['(8, 2.799)', '(8, 27.99)', '(8, 279.9)', '(8, 2799)', '(8.2, 7.99)', '(8.2, 79.9)', '(8.2, 799)', '(82, 7.99)', '(82, 79.9)', '(82, 799)', '(8.27, 9.9)', '(8.27, 99)', '(82.7, 9.9)', '(82.7, 99)', '(827, 9.9)', '(827, 99)', '(8.279, 9)', '(82.79, 9)', '(827.9, 9)', '(8279, 9)']\nassert solution.ambiguousCoordinates(\"86649\") == ['(6, 6.4)', '(6, 64)', '(6.6, 4)', '(66, 4)']\nassert solution.ambiguousCoordinates(\"4013\") == ['(0, 1)']\nassert solution.ambiguousCoordinates(\"0418274\") == ['(4, 1.827)', '(4, 18.27)', '(4, 182.7)', '(4, 1827)', '(4.1, 8.27)', '(4.1, 82.7)', '(4.1, 827)', '(41, 8.27)', '(41, 82.7)', '(41, 827)', '(4.18, 2.7)', '(4.18, 27)', '(41.8, 2.7)', '(41.8, 27)', '(418, 2.7)', '(418, 27)', '(4.182, 7)', '(41.82, 7)', '(418.2, 7)', '(4182, 7)']\nassert solution.ambiguousCoordinates(\"9818\") == ['(8, 1)']\nassert solution.ambiguousCoordinates(\"450576\") == ['(5, 0.57)', '(50, 5.7)', '(50, 57)', '(5.05, 7)', '(50.5, 7)', '(505, 7)']\nassert solution.ambiguousCoordinates(\"53018\") == ['(3, 0.1)', '(30, 1)']\nassert solution.ambiguousCoordinates(\"22839\") == ['(2, 8.3)', '(2, 83)', '(2.8, 3)', '(28, 3)']\nassert solution.ambiguousCoordinates(\"72582194\") == ['(2, 5.8219)', '(2, 58.219)', '(2, 582.19)', '(2, 5821.9)', '(2, 58219)', '(2.5, 8.219)', '(2.5, 82.19)', '(2.5, 821.9)', '(2.5, 8219)', '(25, 8.219)', '(25, 82.19)', '(25, 821.9)', '(25, 8219)', '(2.58, 2.19)', '(2.58, 21.9)', '(2.58, 219)', '(25.8, 2.19)', '(25.8, 21.9)', '(25.8, 219)', '(258, 2.19)', '(258, 21.9)', '(258, 219)', '(2.582, 1.9)', '(2.582, 19)', '(25.82, 1.9)', '(25.82, 19)', '(258.2, 1.9)', '(258.2, 19)', '(2582, 1.9)', '(2582, 19)', '(2.5821, 9)', '(25.821, 9)', '(258.21, 9)', '(2582.1, 9)', '(25821, 9)']\nassert solution.ambiguousCoordinates(\"96612\") == ['(6, 6.1)', '(6, 61)', '(6.6, 1)', '(66, 1)']\nassert solution.ambiguousCoordinates(\"0185\") == ['(1, 8)']\nassert solution.ambiguousCoordinates(\"594262456612\") == ['(9, 4.26245661)', '(9, 42.6245661)', '(9, 426.245661)', '(9, 4262.45661)', '(9, 42624.5661)', '(9, 426245.661)', '(9, 4262456.61)', '(9, 42624566.1)', '(9, 426245661)', '(9.4, 2.6245661)', '(9.4, 26.245661)', '(9.4, 262.45661)', '(9.4, 2624.5661)', '(9.4, 26245.661)', '(9.4, 262456.61)', '(9.4, 2624566.1)', '(9.4, 26245661)', '(94, 2.6245661)', '(94, 26.245661)', '(94, 262.45661)', '(94, 2624.5661)', '(94, 26245.661)', '(94, 262456.61)', '(94, 2624566.1)', '(94, 26245661)', '(9.42, 6.245661)', '(9.42, 62.45661)', '(9.42, 624.5661)', '(9.42, 6245.661)', '(9.42, 62456.61)', '(9.42, 624566.1)', '(9.42, 6245661)', '(94.2, 6.245661)', '(94.2, 62.45661)', '(94.2, 624.5661)', '(94.2, 6245.661)', '(94.2, 62456.61)', '(94.2, 624566.1)', '(94.2, 6245661)', '(942, 6.245661)', '(942, 62.45661)', '(942, 624.5661)', '(942, 6245.661)', '(942, 62456.61)', '(942, 624566.1)', '(942, 6245661)', '(9.426, 2.45661)', '(9.426, 24.5661)', '(9.426, 245.661)', '(9.426, 2456.61)', '(9.426, 24566.1)', '(9.426, 245661)', '(94.26, 2.45661)', '(94.26, 24.5661)', '(94.26, 245.661)', '(94.26, 2456.61)', '(94.26, 24566.1)', '(94.26, 245661)', '(942.6, 2.45661)', '(942.6, 24.5661)', '(942.6, 245.661)', '(942.6, 2456.61)', '(942.6, 24566.1)', '(942.6, 245661)', '(9426, 2.45661)', '(9426, 24.5661)', '(9426, 245.661)', '(9426, 2456.61)', '(9426, 24566.1)', '(9426, 245661)', '(9.4262, 4.5661)', '(9.4262, 45.661)', '(9.4262, 456.61)', '(9.4262, 4566.1)', '(9.4262, 45661)', '(94.262, 4.5661)', '(94.262, 45.661)', '(94.262, 456.61)', '(94.262, 4566.1)', '(94.262, 45661)', '(942.62, 4.5661)', '(942.62, 45.661)', '(942.62, 456.61)', '(942.62, 4566.1)', '(942.62, 45661)', '(9426.2, 4.5661)', '(9426.2, 45.661)', '(9426.2, 456.61)', '(9426.2, 4566.1)', '(9426.2, 45661)', '(94262, 4.5661)', '(94262, 45.661)', '(94262, 456.61)', '(94262, 4566.1)', '(94262, 45661)', '(9.42624, 5.661)', '(9.42624, 56.61)', '(9.42624, 566.1)', '(9.42624, 5661)', '(94.2624, 5.661)', '(94.2624, 56.61)', '(94.2624, 566.1)', '(94.2624, 5661)', '(942.624, 5.661)', '(942.624, 56.61)', '(942.624, 566.1)', '(942.624, 5661)', '(9426.24, 5.661)', '(9426.24, 56.61)', '(9426.24, 566.1)', '(9426.24, 5661)', '(94262.4, 5.661)', '(94262.4, 56.61)', '(94262.4, 566.1)', '(94262.4, 5661)', '(942624, 5.661)', '(942624, 56.61)', '(942624, 566.1)', '(942624, 5661)', '(9.426245, 6.61)', '(9.426245, 66.1)', '(9.426245, 661)', '(94.26245, 6.61)', '(94.26245, 66.1)', '(94.26245, 661)', '(942.6245, 6.61)', '(942.6245, 66.1)', '(942.6245, 661)', '(9426.245, 6.61)', '(9426.245, 66.1)', '(9426.245, 661)', '(94262.45, 6.61)', '(94262.45, 66.1)', '(94262.45, 661)', '(942624.5, 6.61)', '(942624.5, 66.1)', '(942624.5, 661)', '(9426245, 6.61)', '(9426245, 66.1)', '(9426245, 661)', '(9.4262456, 6.1)', '(9.4262456, 61)', '(94.262456, 6.1)', '(94.262456, 61)', '(942.62456, 6.1)', '(942.62456, 61)', '(9426.2456, 6.1)', '(9426.2456, 61)', '(94262.456, 6.1)', '(94262.456, 61)', '(942624.56, 6.1)', '(942624.56, 61)', '(9426245.6, 6.1)', '(9426245.6, 61)', '(94262456, 6.1)', '(94262456, 61)', '(9.42624566, 1)', '(94.2624566, 1)', '(942.624566, 1)', '(9426.24566, 1)', '(94262.4566, 1)', '(942624.566, 1)', '(9426245.66, 1)', '(94262456.6, 1)', '(942624566, 1)']\nassert solution.ambiguousCoordinates(\"8233861\") == ['(2, 3.386)', '(2, 33.86)', '(2, 338.6)', '(2, 3386)', '(2.3, 3.86)', '(2.3, 38.6)', '(2.3, 386)', '(23, 3.86)', '(23, 38.6)', '(23, 386)', '(2.33, 8.6)', '(2.33, 86)', '(23.3, 8.6)', '(23.3, 86)', '(233, 8.6)', '(233, 86)', '(2.338, 6)', '(23.38, 6)', '(233.8, 6)', '(2338, 6)']\nassert solution.ambiguousCoordinates(\"441035051\") == ['(4, 1.03505)', '(4, 10.3505)', '(4, 103.505)', '(4, 1035.05)', '(4, 10350.5)', '(4, 103505)', '(4.1, 0.3505)', '(41, 0.3505)', '(410, 3.505)', '(410, 35.05)', '(410, 350.5)', '(410, 3505)', '(4.103, 5.05)', '(4.103, 50.5)', '(4.103, 505)', '(41.03, 5.05)', '(41.03, 50.5)', '(41.03, 505)', '(410.3, 5.05)', '(410.3, 50.5)', '(410.3, 505)', '(4103, 5.05)', '(4103, 50.5)', '(4103, 505)', '(4.1035, 0.5)', '(41.035, 0.5)', '(410.35, 0.5)', '(4103.5, 0.5)', '(41035, 0.5)', '(410350, 5)']\nassert solution.ambiguousCoordinates(\"156728\") == ['(5, 6.72)', '(5, 67.2)', '(5, 672)', '(5.6, 7.2)', '(5.6, 72)', '(56, 7.2)', '(56, 72)', '(5.67, 2)', '(56.7, 2)', '(567, 2)']\nassert solution.ambiguousCoordinates(\"7262425168\") == ['(2, 6.242516)', '(2, 62.42516)', '(2, 624.2516)', '(2, 6242.516)', '(2, 62425.16)', '(2, 624251.6)', '(2, 6242516)', '(2.6, 2.42516)', '(2.6, 24.2516)', '(2.6, 242.516)', '(2.6, 2425.16)', '(2.6, 24251.6)', '(2.6, 242516)', '(26, 2.42516)', '(26, 24.2516)', '(26, 242.516)', '(26, 2425.16)', '(26, 24251.6)', '(26, 242516)', '(2.62, 4.2516)', '(2.62, 42.516)', '(2.62, 425.16)', '(2.62, 4251.6)', '(2.62, 42516)', '(26.2, 4.2516)', '(26.2, 42.516)', '(26.2, 425.16)', '(26.2, 4251.6)', '(26.2, 42516)', '(262, 4.2516)', '(262, 42.516)', '(262, 425.16)', '(262, 4251.6)', '(262, 42516)', '(2.624, 2.516)', '(2.624, 25.16)', '(2.624, 251.6)', '(2.624, 2516)', '(26.24, 2.516)', '(26.24, 25.16)', '(26.24, 251.6)', '(26.24, 2516)', '(262.4, 2.516)', '(262.4, 25.16)', '(262.4, 251.6)', '(262.4, 2516)', '(2624, 2.516)', '(2624, 25.16)', '(2624, 251.6)', '(2624, 2516)', '(2.6242, 5.16)', '(2.6242, 51.6)', '(2.6242, 516)', '(26.242, 5.16)', '(26.242, 51.6)', '(26.242, 516)', '(262.42, 5.16)', '(262.42, 51.6)', '(262.42, 516)', '(2624.2, 5.16)', '(2624.2, 51.6)', '(2624.2, 516)', '(26242, 5.16)', '(26242, 51.6)', '(26242, 516)', '(2.62425, 1.6)', '(2.62425, 16)', '(26.2425, 1.6)', '(26.2425, 16)', '(262.425, 1.6)', '(262.425, 16)', '(2624.25, 1.6)', '(2624.25, 16)', '(26242.5, 1.6)', '(26242.5, 16)', '(262425, 1.6)', '(262425, 16)', '(2.624251, 6)', '(26.24251, 6)', '(262.4251, 6)', '(2624.251, 6)', '(26242.51, 6)', '(262425.1, 6)', '(2624251, 6)']\nassert solution.ambiguousCoordinates(\"252618\") == ['(5, 2.61)', '(5, 26.1)', '(5, 261)', '(5.2, 6.1)', '(5.2, 61)', '(52, 6.1)', '(52, 61)', '(5.26, 1)', '(52.6, 1)', '(526, 1)']\nassert solution.ambiguousCoordinates(\"399911680\") == ['(9, 9.91168)', '(9, 99.1168)', '(9, 991.168)', '(9, 9911.68)', '(9, 99116.8)', '(9, 991168)', '(9.9, 9.1168)', '(9.9, 91.168)', '(9.9, 911.68)', '(9.9, 9116.8)', '(9.9, 91168)', '(99, 9.1168)', '(99, 91.168)', '(99, 911.68)', '(99, 9116.8)', '(99, 91168)', '(9.99, 1.168)', '(9.99, 11.68)', '(9.99, 116.8)', '(9.99, 1168)', '(99.9, 1.168)', '(99.9, 11.68)', '(99.9, 116.8)', '(99.9, 1168)', '(999, 1.168)', '(999, 11.68)', '(999, 116.8)', '(999, 1168)', '(9.991, 1.68)', '(9.991, 16.8)', '(9.991, 168)', '(99.91, 1.68)', '(99.91, 16.8)', '(99.91, 168)', '(999.1, 1.68)', '(999.1, 16.8)', '(999.1, 168)', '(9991, 1.68)', '(9991, 16.8)', '(9991, 168)', '(9.9911, 6.8)', '(9.9911, 68)', '(99.911, 6.8)', '(99.911, 68)', '(999.11, 6.8)', '(999.11, 68)', '(9991.1, 6.8)', '(9991.1, 68)', '(99911, 6.8)', '(99911, 68)', '(9.99116, 8)', '(99.9116, 8)', '(999.116, 8)', '(9991.16, 8)', '(99911.6, 8)', '(999116, 8)']\nassert solution.ambiguousCoordinates(\"129669838654\") == ['(2, 9.66983865)', '(2, 96.6983865)', '(2, 966.983865)', '(2, 9669.83865)', '(2, 96698.3865)', '(2, 966983.865)', '(2, 9669838.65)', '(2, 96698386.5)', '(2, 966983865)', '(2.9, 6.6983865)', '(2.9, 66.983865)', '(2.9, 669.83865)', '(2.9, 6698.3865)', '(2.9, 66983.865)', '(2.9, 669838.65)', '(2.9, 6698386.5)', '(2.9, 66983865)', '(29, 6.6983865)', '(29, 66.983865)', '(29, 669.83865)', '(29, 6698.3865)', '(29, 66983.865)', '(29, 669838.65)', '(29, 6698386.5)', '(29, 66983865)', '(2.96, 6.983865)', '(2.96, 69.83865)', '(2.96, 698.3865)', '(2.96, 6983.865)', '(2.96, 69838.65)', '(2.96, 698386.5)', '(2.96, 6983865)', '(29.6, 6.983865)', '(29.6, 69.83865)', '(29.6, 698.3865)', '(29.6, 6983.865)', '(29.6, 69838.65)', '(29.6, 698386.5)', '(29.6, 6983865)', '(296, 6.983865)', '(296, 69.83865)', '(296, 698.3865)', '(296, 6983.865)', '(296, 69838.65)', '(296, 698386.5)', '(296, 6983865)', '(2.966, 9.83865)', '(2.966, 98.3865)', '(2.966, 983.865)', '(2.966, 9838.65)', '(2.966, 98386.5)', '(2.966, 983865)', '(29.66, 9.83865)', '(29.66, 98.3865)', '(29.66, 983.865)', '(29.66, 9838.65)', '(29.66, 98386.5)', '(29.66, 983865)', '(296.6, 9.83865)', '(296.6, 98.3865)', '(296.6, 983.865)', '(296.6, 9838.65)', '(296.6, 98386.5)', '(296.6, 983865)', '(2966, 9.83865)', '(2966, 98.3865)', '(2966, 983.865)', '(2966, 9838.65)', '(2966, 98386.5)', '(2966, 983865)', '(2.9669, 8.3865)', '(2.9669, 83.865)', '(2.9669, 838.65)', '(2.9669, 8386.5)', '(2.9669, 83865)', '(29.669, 8.3865)', '(29.669, 83.865)', '(29.669, 838.65)', '(29.669, 8386.5)', '(29.669, 83865)', '(296.69, 8.3865)', '(296.69, 83.865)', '(296.69, 838.65)', '(296.69, 8386.5)', '(296.69, 83865)', '(2966.9, 8.3865)', '(2966.9, 83.865)', '(2966.9, 838.65)', '(2966.9, 8386.5)', '(2966.9, 83865)', '(29669, 8.3865)', '(29669, 83.865)', '(29669, 838.65)', '(29669, 8386.5)', '(29669, 83865)', '(2.96698, 3.865)', '(2.96698, 38.65)', '(2.96698, 386.5)', '(2.96698, 3865)', '(29.6698, 3.865)', '(29.6698, 38.65)', '(29.6698, 386.5)', '(29.6698, 3865)', '(296.698, 3.865)', '(296.698, 38.65)', '(296.698, 386.5)', '(296.698, 3865)', '(2966.98, 3.865)', '(2966.98, 38.65)', '(2966.98, 386.5)', '(2966.98, 3865)', '(29669.8, 3.865)', '(29669.8, 38.65)', '(29669.8, 386.5)', '(29669.8, 3865)', '(296698, 3.865)', '(296698, 38.65)', '(296698, 386.5)', '(296698, 3865)', '(2.966983, 8.65)', '(2.966983, 86.5)', '(2.966983, 865)', '(29.66983, 8.65)', '(29.66983, 86.5)', '(29.66983, 865)', '(296.6983, 8.65)', '(296.6983, 86.5)', '(296.6983, 865)', '(2966.983, 8.65)', '(2966.983, 86.5)', '(2966.983, 865)', '(29669.83, 8.65)', '(29669.83, 86.5)', '(29669.83, 865)', '(296698.3, 8.65)', '(296698.3, 86.5)', '(296698.3, 865)', '(2966983, 8.65)', '(2966983, 86.5)', '(2966983, 865)', '(2.9669838, 6.5)', '(2.9669838, 65)', '(29.669838, 6.5)', '(29.669838, 65)', '(296.69838, 6.5)', '(296.69838, 65)', '(2966.9838, 6.5)', '(2966.9838, 65)', '(29669.838, 6.5)', '(29669.838, 65)', '(296698.38, 6.5)', '(296698.38, 65)', '(2966983.8, 6.5)', '(2966983.8, 65)', '(29669838, 6.5)', '(29669838, 65)', '(2.96698386, 5)', '(29.6698386, 5)', '(296.698386, 5)', '(2966.98386, 5)', '(29669.8386, 5)', '(296698.386, 5)', '(2966983.86, 5)', '(29669838.6, 5)', '(296698386, 5)']\nassert solution.ambiguousCoordinates(\"14070\") == ['(4, 0.7)', '(40, 7)']\nassert solution.ambiguousCoordinates(\"6976553316\") == ['(9, 7.655331)', '(9, 76.55331)', '(9, 765.5331)', '(9, 7655.331)', '(9, 76553.31)', '(9, 765533.1)', '(9, 7655331)', '(9.7, 6.55331)', '(9.7, 65.5331)', '(9.7, 655.331)', '(9.7, 6553.31)', '(9.7, 65533.1)', '(9.7, 655331)', '(97, 6.55331)', '(97, 65.5331)', '(97, 655.331)', '(97, 6553.31)', '(97, 65533.1)', '(97, 655331)', '(9.76, 5.5331)', '(9.76, 55.331)', '(9.76, 553.31)', '(9.76, 5533.1)', '(9.76, 55331)', '(97.6, 5.5331)', '(97.6, 55.331)', '(97.6, 553.31)', '(97.6, 5533.1)', '(97.6, 55331)', '(976, 5.5331)', '(976, 55.331)', '(976, 553.31)', '(976, 5533.1)', '(976, 55331)', '(9.765, 5.331)', '(9.765, 53.31)', '(9.765, 533.1)', '(9.765, 5331)', '(97.65, 5.331)', '(97.65, 53.31)', '(97.65, 533.1)', '(97.65, 5331)', '(976.5, 5.331)', '(976.5, 53.31)', '(976.5, 533.1)', '(976.5, 5331)', '(9765, 5.331)', '(9765, 53.31)', '(9765, 533.1)', '(9765, 5331)', '(9.7655, 3.31)', '(9.7655, 33.1)', '(9.7655, 331)', '(97.655, 3.31)', '(97.655, 33.1)', '(97.655, 331)', '(976.55, 3.31)', '(976.55, 33.1)', '(976.55, 331)', '(9765.5, 3.31)', '(9765.5, 33.1)', '(9765.5, 331)', '(97655, 3.31)', '(97655, 33.1)', '(97655, 331)', '(9.76553, 3.1)', '(9.76553, 31)', '(97.6553, 3.1)', '(97.6553, 31)', '(976.553, 3.1)', '(976.553, 31)', '(9765.53, 3.1)', '(9765.53, 31)', '(97655.3, 3.1)', '(97655.3, 31)', '(976553, 3.1)', '(976553, 31)', '(9.765533, 1)', '(97.65533, 1)', '(976.5533, 1)', '(9765.533, 1)', '(97655.33, 1)', '(976553.3, 1)', '(9765533, 1)']\nassert solution.ambiguousCoordinates(\"51477\") == ['(1, 4.7)', '(1, 47)', '(1.4, 7)', '(14, 7)']\nassert solution.ambiguousCoordinates(\"6399\") == ['(3, 9)']\nassert solution.ambiguousCoordinates(\"9600886\") == ['(6, 0.088)', '(60, 0.88)', '(600, 8.8)', '(600, 88)', '(6.008, 8)', '(60.08, 8)', '(600.8, 8)', '(6008, 8)']\nassert solution.ambiguousCoordinates(\"657101561\") == ['(5, 7.10156)', '(5, 71.0156)', '(5, 710.156)', '(5, 7101.56)', '(5, 71015.6)', '(5, 710156)', '(5.7, 1.0156)', '(5.7, 10.156)', '(5.7, 101.56)', '(5.7, 1015.6)', '(5.7, 10156)', '(57, 1.0156)', '(57, 10.156)', '(57, 101.56)', '(57, 1015.6)', '(57, 10156)', '(5.71, 0.156)', '(57.1, 0.156)', '(571, 0.156)', '(5710, 1.56)', '(5710, 15.6)', '(5710, 156)', '(5.7101, 5.6)', '(5.7101, 56)', '(57.101, 5.6)', '(57.101, 56)', '(571.01, 5.6)', '(571.01, 56)', '(5710.1, 5.6)', '(5710.1, 56)', '(57101, 5.6)', '(57101, 56)', '(5.71015, 6)', '(57.1015, 6)', '(571.015, 6)', '(5710.15, 6)', '(57101.5, 6)', '(571015, 6)']\nassert solution.ambiguousCoordinates(\"5586\") == ['(5, 8)']\nassert solution.ambiguousCoordinates(\"9439\") == ['(4, 3)']\nassert solution.ambiguousCoordinates(\"201271\") == ['(0, 1.27)', '(0, 12.7)', '(0, 127)', '(0.1, 2.7)', '(0.1, 27)', '(0.12, 7)']\nassert solution.ambiguousCoordinates(\"507491114845\") == ['(0, 7.49111484)', '(0, 74.9111484)', '(0, 749.111484)', '(0, 7491.11484)', '(0, 74911.1484)', '(0, 749111.484)', '(0, 7491114.84)', '(0, 74911148.4)', '(0, 749111484)', '(0.7, 4.9111484)', '(0.7, 49.111484)', '(0.7, 491.11484)', '(0.7, 4911.1484)', '(0.7, 49111.484)', '(0.7, 491114.84)', '(0.7, 4911148.4)', '(0.7, 49111484)', '(0.74, 9.111484)', '(0.74, 91.11484)', '(0.74, 911.1484)', '(0.74, 9111.484)', '(0.74, 91114.84)', '(0.74, 911148.4)', '(0.74, 9111484)', '(0.749, 1.11484)', '(0.749, 11.1484)', '(0.749, 111.484)', '(0.749, 1114.84)', '(0.749, 11148.4)', '(0.749, 111484)', '(0.7491, 1.1484)', '(0.7491, 11.484)', '(0.7491, 114.84)', '(0.7491, 1148.4)', '(0.7491, 11484)', '(0.74911, 1.484)', '(0.74911, 14.84)', '(0.74911, 148.4)', '(0.74911, 1484)', '(0.749111, 4.84)', '(0.749111, 48.4)', '(0.749111, 484)', '(0.7491114, 8.4)', '(0.7491114, 84)', '(0.74911148, 4)']\nassert solution.ambiguousCoordinates(\"106117488\") == ['(0, 6.11748)', '(0, 61.1748)', '(0, 611.748)', '(0, 6117.48)', '(0, 61174.8)', '(0, 611748)', '(0.6, 1.1748)', '(0.6, 11.748)', '(0.6, 117.48)', '(0.6, 1174.8)', '(0.6, 11748)', '(0.61, 1.748)', '(0.61, 17.48)', '(0.61, 174.8)', '(0.61, 1748)', '(0.611, 7.48)', '(0.611, 74.8)', '(0.611, 748)', '(0.6117, 4.8)', '(0.6117, 48)', '(0.61174, 8)']\nassert solution.ambiguousCoordinates(\"64785513015\") == ['(4, 7.8551301)', '(4, 78.551301)', '(4, 785.51301)', '(4, 7855.1301)', '(4, 78551.301)', '(4, 785513.01)', '(4, 7855130.1)', '(4, 78551301)', '(4.7, 8.551301)', '(4.7, 85.51301)', '(4.7, 855.1301)', '(4.7, 8551.301)', '(4.7, 85513.01)', '(4.7, 855130.1)', '(4.7, 8551301)', '(47, 8.551301)', '(47, 85.51301)', '(47, 855.1301)', '(47, 8551.301)', '(47, 85513.01)', '(47, 855130.1)', '(47, 8551301)', '(4.78, 5.51301)', '(4.78, 55.1301)', '(4.78, 551.301)', '(4.78, 5513.01)', '(4.78, 55130.1)', '(4.78, 551301)', '(47.8, 5.51301)', '(47.8, 55.1301)', '(47.8, 551.301)', '(47.8, 5513.01)', '(47.8, 55130.1)', '(47.8, 551301)', '(478, 5.51301)', '(478, 55.1301)', '(478, 551.301)', '(478, 5513.01)', '(478, 55130.1)', '(478, 551301)', '(4.785, 5.1301)', '(4.785, 51.301)', '(4.785, 513.01)', '(4.785, 5130.1)', '(4.785, 51301)', '(47.85, 5.1301)', '(47.85, 51.301)', '(47.85, 513.01)', '(47.85, 5130.1)', '(47.85, 51301)', '(478.5, 5.1301)', '(478.5, 51.301)', '(478.5, 513.01)', '(478.5, 5130.1)', '(478.5, 51301)', '(4785, 5.1301)', '(4785, 51.301)', '(4785, 513.01)', '(4785, 5130.1)', '(4785, 51301)', '(4.7855, 1.301)', '(4.7855, 13.01)', '(4.7855, 130.1)', '(4.7855, 1301)', '(47.855, 1.301)', '(47.855, 13.01)', '(47.855, 130.1)', '(47.855, 1301)', '(478.55, 1.301)', '(478.55, 13.01)', '(478.55, 130.1)', '(478.55, 1301)', '(4785.5, 1.301)', '(4785.5, 13.01)', '(4785.5, 130.1)', '(4785.5, 1301)', '(47855, 1.301)', '(47855, 13.01)', '(47855, 130.1)', '(47855, 1301)', '(4.78551, 3.01)', '(4.78551, 30.1)', '(4.78551, 301)', '(47.8551, 3.01)', '(47.8551, 30.1)', '(47.8551, 301)', '(478.551, 3.01)', '(478.551, 30.1)', '(478.551, 301)', '(4785.51, 3.01)', '(4785.51, 30.1)', '(4785.51, 301)', '(47855.1, 3.01)', '(47855.1, 30.1)', '(47855.1, 301)', '(478551, 3.01)', '(478551, 30.1)', '(478551, 301)', '(4.785513, 0.1)', '(47.85513, 0.1)', '(478.5513, 0.1)', '(4785.513, 0.1)', '(47855.13, 0.1)', '(478551.3, 0.1)', '(4785513, 0.1)', '(47855130, 1)']\nassert solution.ambiguousCoordinates(\"90683887829\") == ['(0, 6.8388782)', '(0, 68.388782)', '(0, 683.88782)', '(0, 6838.8782)', '(0, 68388.782)', '(0, 683887.82)', '(0, 6838878.2)', '(0, 68388782)', '(0.6, 8.388782)', '(0.6, 83.88782)', '(0.6, 838.8782)', '(0.6, 8388.782)', '(0.6, 83887.82)', '(0.6, 838878.2)', '(0.6, 8388782)', '(0.68, 3.88782)', '(0.68, 38.8782)', '(0.68, 388.782)', '(0.68, 3887.82)', '(0.68, 38878.2)', '(0.68, 388782)', '(0.683, 8.8782)', '(0.683, 88.782)', '(0.683, 887.82)', '(0.683, 8878.2)', '(0.683, 88782)', '(0.6838, 8.782)', '(0.6838, 87.82)', '(0.6838, 878.2)', '(0.6838, 8782)', '(0.68388, 7.82)', '(0.68388, 78.2)', '(0.68388, 782)', '(0.683887, 8.2)', '(0.683887, 82)', '(0.6838878, 2)']\nassert solution.ambiguousCoordinates(\"9528736\") == ['(5, 2.873)', '(5, 28.73)', '(5, 287.3)', '(5, 2873)', '(5.2, 8.73)', '(5.2, 87.3)', '(5.2, 873)', '(52, 8.73)', '(52, 87.3)', '(52, 873)', '(5.28, 7.3)', '(5.28, 73)', '(52.8, 7.3)', '(52.8, 73)', '(528, 7.3)', '(528, 73)', '(5.287, 3)', '(52.87, 3)', '(528.7, 3)', '(5287, 3)']\nassert solution.ambiguousCoordinates(\"433076\") == ['(3, 3.07)', '(3, 30.7)', '(3, 307)', '(3.3, 0.7)', '(33, 0.7)', '(330, 7)']\nassert solution.ambiguousCoordinates(\"2649386\") == ['(6, 4.938)', '(6, 49.38)', '(6, 493.8)', '(6, 4938)', '(6.4, 9.38)', '(6.4, 93.8)', '(6.4, 938)', '(64, 9.38)', '(64, 93.8)', '(64, 938)', '(6.49, 3.8)', '(6.49, 38)', '(64.9, 3.8)', '(64.9, 38)', '(649, 3.8)', '(649, 38)', '(6.493, 8)', '(64.93, 8)', '(649.3, 8)', '(6493, 8)']\nassert solution.ambiguousCoordinates(\"445569654346\") == ['(4, 5.56965434)', '(4, 55.6965434)', '(4, 556.965434)', '(4, 5569.65434)', '(4, 55696.5434)', '(4, 556965.434)', '(4, 5569654.34)', '(4, 55696543.4)', '(4, 556965434)', '(4.5, 5.6965434)', '(4.5, 56.965434)', '(4.5, 569.65434)', '(4.5, 5696.5434)', '(4.5, 56965.434)', '(4.5, 569654.34)', '(4.5, 5696543.4)', '(4.5, 56965434)', '(45, 5.6965434)', '(45, 56.965434)', '(45, 569.65434)', '(45, 5696.5434)', '(45, 56965.434)', '(45, 569654.34)', '(45, 5696543.4)', '(45, 56965434)', '(4.55, 6.965434)', '(4.55, 69.65434)', '(4.55, 696.5434)', '(4.55, 6965.434)', '(4.55, 69654.34)', '(4.55, 696543.4)', '(4.55, 6965434)', '(45.5, 6.965434)', '(45.5, 69.65434)', '(45.5, 696.5434)', '(45.5, 6965.434)', '(45.5, 69654.34)', '(45.5, 696543.4)', '(45.5, 6965434)', '(455, 6.965434)', '(455, 69.65434)', '(455, 696.5434)', '(455, 6965.434)', '(455, 69654.34)', '(455, 696543.4)', '(455, 6965434)', '(4.556, 9.65434)', '(4.556, 96.5434)', '(4.556, 965.434)', '(4.556, 9654.34)', '(4.556, 96543.4)', '(4.556, 965434)', '(45.56, 9.65434)', '(45.56, 96.5434)', '(45.56, 965.434)', '(45.56, 9654.34)', '(45.56, 96543.4)', '(45.56, 965434)', '(455.6, 9.65434)', '(455.6, 96.5434)', '(455.6, 965.434)', '(455.6, 9654.34)', '(455.6, 96543.4)', '(455.6, 965434)', '(4556, 9.65434)', '(4556, 96.5434)', '(4556, 965.434)', '(4556, 9654.34)', '(4556, 96543.4)', '(4556, 965434)', '(4.5569, 6.5434)', '(4.5569, 65.434)', '(4.5569, 654.34)', '(4.5569, 6543.4)', '(4.5569, 65434)', '(45.569, 6.5434)', '(45.569, 65.434)', '(45.569, 654.34)', '(45.569, 6543.4)', '(45.569, 65434)', '(455.69, 6.5434)', '(455.69, 65.434)', '(455.69, 654.34)', '(455.69, 6543.4)', '(455.69, 65434)', '(4556.9, 6.5434)', '(4556.9, 65.434)', '(4556.9, 654.34)', '(4556.9, 6543.4)', '(4556.9, 65434)', '(45569, 6.5434)', '(45569, 65.434)', '(45569, 654.34)', '(45569, 6543.4)', '(45569, 65434)', '(4.55696, 5.434)', '(4.55696, 54.34)', '(4.55696, 543.4)', '(4.55696, 5434)', '(45.5696, 5.434)', '(45.5696, 54.34)', '(45.5696, 543.4)', '(45.5696, 5434)', '(455.696, 5.434)', '(455.696, 54.34)', '(455.696, 543.4)', '(455.696, 5434)', '(4556.96, 5.434)', '(4556.96, 54.34)', '(4556.96, 543.4)', '(4556.96, 5434)', '(45569.6, 5.434)', '(45569.6, 54.34)', '(45569.6, 543.4)', '(45569.6, 5434)', '(455696, 5.434)', '(455696, 54.34)', '(455696, 543.4)', '(455696, 5434)', '(4.556965, 4.34)', '(4.556965, 43.4)', '(4.556965, 434)', '(45.56965, 4.34)', '(45.56965, 43.4)', '(45.56965, 434)', '(455.6965, 4.34)', '(455.6965, 43.4)', '(455.6965, 434)', '(4556.965, 4.34)', '(4556.965, 43.4)', '(4556.965, 434)', '(45569.65, 4.34)', '(45569.65, 43.4)', '(45569.65, 434)', '(455696.5, 4.34)', '(455696.5, 43.4)', '(455696.5, 434)', '(4556965, 4.34)', '(4556965, 43.4)', '(4556965, 434)', '(4.5569654, 3.4)', '(4.5569654, 34)', '(45.569654, 3.4)', '(45.569654, 34)', '(455.69654, 3.4)', '(455.69654, 34)', '(4556.9654, 3.4)', '(4556.9654, 34)', '(45569.654, 3.4)', '(45569.654, 34)', '(455696.54, 3.4)', '(455696.54, 34)', '(4556965.4, 3.4)', '(4556965.4, 34)', '(45569654, 3.4)', '(45569654, 34)', '(4.55696543, 4)', '(45.5696543, 4)', '(455.696543, 4)', '(4556.96543, 4)', '(45569.6543, 4)', '(455696.543, 4)', '(4556965.43, 4)', '(45569654.3, 4)', '(455696543, 4)']\nassert solution.ambiguousCoordinates(\"4300\") == ['(3, 0)']\nassert solution.ambiguousCoordinates(\"5274\") == ['(2, 7)']\nassert solution.ambiguousCoordinates(\"85017587\") == ['(5, 0.1758)', '(50, 1.758)', '(50, 17.58)', '(50, 175.8)', '(50, 1758)', '(5.01, 7.58)', '(5.01, 75.8)', '(5.01, 758)', '(50.1, 7.58)', '(50.1, 75.8)', '(50.1, 758)', '(501, 7.58)', '(501, 75.8)', '(501, 758)', '(5.017, 5.8)', '(5.017, 58)', '(50.17, 5.8)', '(50.17, 58)', '(501.7, 5.8)', '(501.7, 58)', '(5017, 5.8)', '(5017, 58)', '(5.0175, 8)', '(50.175, 8)', '(501.75, 8)', '(5017.5, 8)', '(50175, 8)']\nassert solution.ambiguousCoordinates(\"898718492742\") == ['(9, 8.71849274)', '(9, 87.1849274)', '(9, 871.849274)', '(9, 8718.49274)', '(9, 87184.9274)', '(9, 871849.274)', '(9, 8718492.74)', '(9, 87184927.4)', '(9, 871849274)', '(9.8, 7.1849274)', '(9.8, 71.849274)', '(9.8, 718.49274)', '(9.8, 7184.9274)', '(9.8, 71849.274)', '(9.8, 718492.74)', '(9.8, 7184927.4)', '(9.8, 71849274)', '(98, 7.1849274)', '(98, 71.849274)', '(98, 718.49274)', '(98, 7184.9274)', '(98, 71849.274)', '(98, 718492.74)', '(98, 7184927.4)', '(98, 71849274)', '(9.87, 1.849274)', '(9.87, 18.49274)', '(9.87, 184.9274)', '(9.87, 1849.274)', '(9.87, 18492.74)', '(9.87, 184927.4)', '(9.87, 1849274)', '(98.7, 1.849274)', '(98.7, 18.49274)', '(98.7, 184.9274)', '(98.7, 1849.274)', '(98.7, 18492.74)', '(98.7, 184927.4)', '(98.7, 1849274)', '(987, 1.849274)', '(987, 18.49274)', '(987, 184.9274)', '(987, 1849.274)', '(987, 18492.74)', '(987, 184927.4)', '(987, 1849274)', '(9.871, 8.49274)', '(9.871, 84.9274)', '(9.871, 849.274)', '(9.871, 8492.74)', '(9.871, 84927.4)', '(9.871, 849274)', '(98.71, 8.49274)', '(98.71, 84.9274)', '(98.71, 849.274)', '(98.71, 8492.74)', '(98.71, 84927.4)', '(98.71, 849274)', '(987.1, 8.49274)', '(987.1, 84.9274)', '(987.1, 849.274)', '(987.1, 8492.74)', '(987.1, 84927.4)', '(987.1, 849274)', '(9871, 8.49274)', '(9871, 84.9274)', '(9871, 849.274)', '(9871, 8492.74)', '(9871, 84927.4)', '(9871, 849274)', '(9.8718, 4.9274)', '(9.8718, 49.274)', '(9.8718, 492.74)', '(9.8718, 4927.4)', '(9.8718, 49274)', '(98.718, 4.9274)', '(98.718, 49.274)', '(98.718, 492.74)', '(98.718, 4927.4)', '(98.718, 49274)', '(987.18, 4.9274)', '(987.18, 49.274)', '(987.18, 492.74)', '(987.18, 4927.4)', '(987.18, 49274)', '(9871.8, 4.9274)', '(9871.8, 49.274)', '(9871.8, 492.74)', '(9871.8, 4927.4)', '(9871.8, 49274)', '(98718, 4.9274)', '(98718, 49.274)', '(98718, 492.74)', '(98718, 4927.4)', '(98718, 49274)', '(9.87184, 9.274)', '(9.87184, 92.74)', '(9.87184, 927.4)', '(9.87184, 9274)', '(98.7184, 9.274)', '(98.7184, 92.74)', '(98.7184, 927.4)', '(98.7184, 9274)', '(987.184, 9.274)', '(987.184, 92.74)', '(987.184, 927.4)', '(987.184, 9274)', '(9871.84, 9.274)', '(9871.84, 92.74)', '(9871.84, 927.4)', '(9871.84, 9274)', '(98718.4, 9.274)', '(98718.4, 92.74)', '(98718.4, 927.4)', '(98718.4, 9274)', '(987184, 9.274)', '(987184, 92.74)', '(987184, 927.4)', '(987184, 9274)', '(9.871849, 2.74)', '(9.871849, 27.4)', '(9.871849, 274)', '(98.71849, 2.74)', '(98.71849, 27.4)', '(98.71849, 274)', '(987.1849, 2.74)', '(987.1849, 27.4)', '(987.1849, 274)', '(9871.849, 2.74)', '(9871.849, 27.4)', '(9871.849, 274)', '(98718.49, 2.74)', '(98718.49, 27.4)', '(98718.49, 274)', '(987184.9, 2.74)', '(987184.9, 27.4)', '(987184.9, 274)', '(9871849, 2.74)', '(9871849, 27.4)', '(9871849, 274)', '(9.8718492, 7.4)', '(9.8718492, 74)', '(98.718492, 7.4)', '(98.718492, 74)', '(987.18492, 7.4)', '(987.18492, 74)', '(9871.8492, 7.4)', '(9871.8492, 74)', '(98718.492, 7.4)', '(98718.492, 74)', '(987184.92, 7.4)', '(987184.92, 74)', '(9871849.2, 7.4)', '(9871849.2, 74)', '(98718492, 7.4)', '(98718492, 74)', '(9.87184927, 4)', '(98.7184927, 4)', '(987.184927, 4)', '(9871.84927, 4)', '(98718.4927, 4)', '(987184.927, 4)', '(9871849.27, 4)', '(98718492.7, 4)', '(987184927, 4)']\nassert solution.ambiguousCoordinates(\"486491400262\") == ['(8, 6.49140026)', '(8, 64.9140026)', '(8, 649.140026)', '(8, 6491.40026)', '(8, 64914.0026)', '(8, 649140.026)', '(8, 6491400.26)', '(8, 64914002.6)', '(8, 649140026)', '(8.6, 4.9140026)', '(8.6, 49.140026)', '(8.6, 491.40026)', '(8.6, 4914.0026)', '(8.6, 49140.026)', '(8.6, 491400.26)', '(8.6, 4914002.6)', '(8.6, 49140026)', '(86, 4.9140026)', '(86, 49.140026)', '(86, 491.40026)', '(86, 4914.0026)', '(86, 49140.026)', '(86, 491400.26)', '(86, 4914002.6)', '(86, 49140026)', '(8.64, 9.140026)', '(8.64, 91.40026)', '(8.64, 914.0026)', '(8.64, 9140.026)', '(8.64, 91400.26)', '(8.64, 914002.6)', '(8.64, 9140026)', '(86.4, 9.140026)', '(86.4, 91.40026)', '(86.4, 914.0026)', '(86.4, 9140.026)', '(86.4, 91400.26)', '(86.4, 914002.6)', '(86.4, 9140026)', '(864, 9.140026)', '(864, 91.40026)', '(864, 914.0026)', '(864, 9140.026)', '(864, 91400.26)', '(864, 914002.6)', '(864, 9140026)', '(8.649, 1.40026)', '(8.649, 14.0026)', '(8.649, 140.026)', '(8.649, 1400.26)', '(8.649, 14002.6)', '(8.649, 140026)', '(86.49, 1.40026)', '(86.49, 14.0026)', '(86.49, 140.026)', '(86.49, 1400.26)', '(86.49, 14002.6)', '(86.49, 140026)', '(864.9, 1.40026)', '(864.9, 14.0026)', '(864.9, 140.026)', '(864.9, 1400.26)', '(864.9, 14002.6)', '(864.9, 140026)', '(8649, 1.40026)', '(8649, 14.0026)', '(8649, 140.026)', '(8649, 1400.26)', '(8649, 14002.6)', '(8649, 140026)', '(8.6491, 4.0026)', '(8.6491, 40.026)', '(8.6491, 400.26)', '(8.6491, 4002.6)', '(8.6491, 40026)', '(86.491, 4.0026)', '(86.491, 40.026)', '(86.491, 400.26)', '(86.491, 4002.6)', '(86.491, 40026)', '(864.91, 4.0026)', '(864.91, 40.026)', '(864.91, 400.26)', '(864.91, 4002.6)', '(864.91, 40026)', '(8649.1, 4.0026)', '(8649.1, 40.026)', '(8649.1, 400.26)', '(8649.1, 4002.6)', '(8649.1, 40026)', '(86491, 4.0026)', '(86491, 40.026)', '(86491, 400.26)', '(86491, 4002.6)', '(86491, 40026)', '(8.64914, 0.026)', '(86.4914, 0.026)', '(864.914, 0.026)', '(8649.14, 0.026)', '(86491.4, 0.026)', '(864914, 0.026)', '(8649140, 0.26)', '(86491400, 2.6)', '(86491400, 26)', '(8.64914002, 6)', '(86.4914002, 6)', '(864.914002, 6)', '(8649.14002, 6)', '(86491.4002, 6)', '(864914.002, 6)', '(8649140.02, 6)', '(86491400.2, 6)', '(864914002, 6)']\nassert solution.ambiguousCoordinates(\"291634005790\") == ['(9, 1.63400579)', '(9, 16.3400579)', '(9, 163.400579)', '(9, 1634.00579)', '(9, 16340.0579)', '(9, 163400.579)', '(9, 1634005.79)', '(9, 16340057.9)', '(9, 163400579)', '(9.1, 6.3400579)', '(9.1, 63.400579)', '(9.1, 634.00579)', '(9.1, 6340.0579)', '(9.1, 63400.579)', '(9.1, 634005.79)', '(9.1, 6340057.9)', '(9.1, 63400579)', '(91, 6.3400579)', '(91, 63.400579)', '(91, 634.00579)', '(91, 6340.0579)', '(91, 63400.579)', '(91, 634005.79)', '(91, 6340057.9)', '(91, 63400579)', '(9.16, 3.400579)', '(9.16, 34.00579)', '(9.16, 340.0579)', '(9.16, 3400.579)', '(9.16, 34005.79)', '(9.16, 340057.9)', '(9.16, 3400579)', '(91.6, 3.400579)', '(91.6, 34.00579)', '(91.6, 340.0579)', '(91.6, 3400.579)', '(91.6, 34005.79)', '(91.6, 340057.9)', '(91.6, 3400579)', '(916, 3.400579)', '(916, 34.00579)', '(916, 340.0579)', '(916, 3400.579)', '(916, 34005.79)', '(916, 340057.9)', '(916, 3400579)', '(9.163, 4.00579)', '(9.163, 40.0579)', '(9.163, 400.579)', '(9.163, 4005.79)', '(9.163, 40057.9)', '(9.163, 400579)', '(91.63, 4.00579)', '(91.63, 40.0579)', '(91.63, 400.579)', '(91.63, 4005.79)', '(91.63, 40057.9)', '(91.63, 400579)', '(916.3, 4.00579)', '(916.3, 40.0579)', '(916.3, 400.579)', '(916.3, 4005.79)', '(916.3, 40057.9)', '(916.3, 400579)', '(9163, 4.00579)', '(9163, 40.0579)', '(9163, 400.579)', '(9163, 4005.79)', '(9163, 40057.9)', '(9163, 400579)', '(9.1634, 0.0579)', '(91.634, 0.0579)', '(916.34, 0.0579)', '(9163.4, 0.0579)', '(91634, 0.0579)', '(916340, 0.579)', '(9163400, 5.79)', '(9163400, 57.9)', '(9163400, 579)', '(9.1634005, 7.9)', '(9.1634005, 79)', '(91.634005, 7.9)', '(91.634005, 79)', '(916.34005, 7.9)', '(916.34005, 79)', '(9163.4005, 7.9)', '(9163.4005, 79)', '(91634.005, 7.9)', '(91634.005, 79)', '(916340.05, 7.9)', '(916340.05, 79)', '(9163400.5, 7.9)', '(9163400.5, 79)', '(91634005, 7.9)', '(91634005, 79)', '(9.16340057, 9)', '(91.6340057, 9)', '(916.340057, 9)', '(9163.40057, 9)', '(91634.0057, 9)', '(916340.057, 9)', '(9163400.57, 9)', '(91634005.7, 9)', '(916340057, 9)']\nassert solution.ambiguousCoordinates(\"22553\") == ['(2, 5.5)', '(2, 55)', '(2.5, 5)', '(25, 5)']\nassert solution.ambiguousCoordinates(\"02445527623\") == ['(2, 4.4552762)', '(2, 44.552762)', '(2, 445.52762)', '(2, 4455.2762)', '(2, 44552.762)', '(2, 445527.62)', '(2, 4455276.2)', '(2, 44552762)', '(2.4, 4.552762)', '(2.4, 45.52762)', '(2.4, 455.2762)', '(2.4, 4552.762)', '(2.4, 45527.62)', '(2.4, 455276.2)', '(2.4, 4552762)', '(24, 4.552762)', '(24, 45.52762)', '(24, 455.2762)', '(24, 4552.762)', '(24, 45527.62)', '(24, 455276.2)', '(24, 4552762)', '(2.44, 5.52762)', '(2.44, 55.2762)', '(2.44, 552.762)', '(2.44, 5527.62)', '(2.44, 55276.2)', '(2.44, 552762)', '(24.4, 5.52762)', '(24.4, 55.2762)', '(24.4, 552.762)', '(24.4, 5527.62)', '(24.4, 55276.2)', '(24.4, 552762)', '(244, 5.52762)', '(244, 55.2762)', '(244, 552.762)', '(244, 5527.62)', '(244, 55276.2)', '(244, 552762)', '(2.445, 5.2762)', '(2.445, 52.762)', '(2.445, 527.62)', '(2.445, 5276.2)', '(2.445, 52762)', '(24.45, 5.2762)', '(24.45, 52.762)', '(24.45, 527.62)', '(24.45, 5276.2)', '(24.45, 52762)', '(244.5, 5.2762)', '(244.5, 52.762)', '(244.5, 527.62)', '(244.5, 5276.2)', '(244.5, 52762)', '(2445, 5.2762)', '(2445, 52.762)', '(2445, 527.62)', '(2445, 5276.2)', '(2445, 52762)', '(2.4455, 2.762)', '(2.4455, 27.62)', '(2.4455, 276.2)', '(2.4455, 2762)', '(24.455, 2.762)', '(24.455, 27.62)', '(24.455, 276.2)', '(24.455, 2762)', '(244.55, 2.762)', '(244.55, 27.62)', '(244.55, 276.2)', '(244.55, 2762)', '(2445.5, 2.762)', '(2445.5, 27.62)', '(2445.5, 276.2)', '(2445.5, 2762)', '(24455, 2.762)', '(24455, 27.62)', '(24455, 276.2)', '(24455, 2762)', '(2.44552, 7.62)', '(2.44552, 76.2)', '(2.44552, 762)', '(24.4552, 7.62)', '(24.4552, 76.2)', '(24.4552, 762)', '(244.552, 7.62)', '(244.552, 76.2)', '(244.552, 762)', '(2445.52, 7.62)', '(2445.52, 76.2)', '(2445.52, 762)', '(24455.2, 7.62)', '(24455.2, 76.2)', '(24455.2, 762)', '(244552, 7.62)', '(244552, 76.2)', '(244552, 762)', '(2.445527, 6.2)', '(2.445527, 62)', '(24.45527, 6.2)', '(24.45527, 62)', '(244.5527, 6.2)', '(244.5527, 62)', '(2445.527, 6.2)', '(2445.527, 62)', '(24455.27, 6.2)', '(24455.27, 62)', '(244552.7, 6.2)', '(244552.7, 62)', '(2445527, 6.2)', '(2445527, 62)', '(2.4455276, 2)', '(24.455276, 2)', '(244.55276, 2)', '(2445.5276, 2)', '(24455.276, 2)', '(244552.76, 2)', '(2445527.6, 2)', '(24455276, 2)']\nassert solution.ambiguousCoordinates(\"9166637\") == ['(1, 6.663)', '(1, 66.63)', '(1, 666.3)', '(1, 6663)', '(1.6, 6.63)', '(1.6, 66.3)', '(1.6, 663)', '(16, 6.63)', '(16, 66.3)', '(16, 663)', '(1.66, 6.3)', '(1.66, 63)', '(16.6, 6.3)', '(16.6, 63)', '(166, 6.3)', '(166, 63)', '(1.666, 3)', '(16.66, 3)', '(166.6, 3)', '(1666, 3)']\nassert solution.ambiguousCoordinates(\"796091096\") == ['(9, 6.09109)', '(9, 60.9109)', '(9, 609.109)', '(9, 6091.09)', '(9, 60910.9)', '(9, 609109)', '(9.6, 0.9109)', '(96, 0.9109)', '(960, 9.109)', '(960, 91.09)', '(960, 910.9)', '(960, 9109)', '(9.609, 1.09)', '(9.609, 10.9)', '(9.609, 109)', '(96.09, 1.09)', '(96.09, 10.9)', '(96.09, 109)', '(960.9, 1.09)', '(960.9, 10.9)', '(960.9, 109)', '(9609, 1.09)', '(9609, 10.9)', '(9609, 109)', '(9.6091, 0.9)', '(96.091, 0.9)', '(960.91, 0.9)', '(9609.1, 0.9)', '(96091, 0.9)', '(960910, 9)']\nassert solution.ambiguousCoordinates(\"298365\") == ['(9, 8.36)', '(9, 83.6)', '(9, 836)', '(9.8, 3.6)', '(9.8, 36)', '(98, 3.6)', '(98, 36)', '(9.83, 6)', '(98.3, 6)', '(983, 6)']\nassert solution.ambiguousCoordinates(\"4822\") == ['(8, 2)']\nassert solution.ambiguousCoordinates(\"267579\") == ['(6, 7.57)', '(6, 75.7)', '(6, 757)', '(6.7, 5.7)', '(6.7, 57)', '(67, 5.7)', '(67, 57)', '(6.75, 7)', '(67.5, 7)', '(675, 7)']\nassert solution.ambiguousCoordinates(\"9458760848\") == ['(4, 5.876084)', '(4, 58.76084)', '(4, 587.6084)', '(4, 5876.084)', '(4, 58760.84)', '(4, 587608.4)', '(4, 5876084)', '(4.5, 8.76084)', '(4.5, 87.6084)', '(4.5, 876.084)', '(4.5, 8760.84)', '(4.5, 87608.4)', '(4.5, 876084)', '(45, 8.76084)', '(45, 87.6084)', '(45, 876.084)', '(45, 8760.84)', '(45, 87608.4)', '(45, 876084)', '(4.58, 7.6084)', '(4.58, 76.084)', '(4.58, 760.84)', '(4.58, 7608.4)', '(4.58, 76084)', '(45.8, 7.6084)', '(45.8, 76.084)', '(45.8, 760.84)', '(45.8, 7608.4)', '(45.8, 76084)', '(458, 7.6084)', '(458, 76.084)', '(458, 760.84)', '(458, 7608.4)', '(458, 76084)', '(4.587, 6.084)', '(4.587, 60.84)', '(4.587, 608.4)', '(4.587, 6084)', '(45.87, 6.084)', '(45.87, 60.84)', '(45.87, 608.4)', '(45.87, 6084)', '(458.7, 6.084)', '(458.7, 60.84)', '(458.7, 608.4)', '(458.7, 6084)', '(4587, 6.084)', '(4587, 60.84)', '(4587, 608.4)', '(4587, 6084)', '(4.5876, 0.84)', '(45.876, 0.84)', '(458.76, 0.84)', '(4587.6, 0.84)', '(45876, 0.84)', '(458760, 8.4)', '(458760, 84)', '(4.587608, 4)', '(45.87608, 4)', '(458.7608, 4)', '(4587.608, 4)', '(45876.08, 4)', '(458760.8, 4)', '(4587608, 4)']\nassert solution.ambiguousCoordinates(\"58843382721\") == ['(8, 8.4338272)', '(8, 84.338272)', '(8, 843.38272)', '(8, 8433.8272)', '(8, 84338.272)', '(8, 843382.72)', '(8, 8433827.2)', '(8, 84338272)', '(8.8, 4.338272)', '(8.8, 43.38272)', '(8.8, 433.8272)', '(8.8, 4338.272)', '(8.8, 43382.72)', '(8.8, 433827.2)', '(8.8, 4338272)', '(88, 4.338272)', '(88, 43.38272)', '(88, 433.8272)', '(88, 4338.272)', '(88, 43382.72)', '(88, 433827.2)', '(88, 4338272)', '(8.84, 3.38272)', '(8.84, 33.8272)', '(8.84, 338.272)', '(8.84, 3382.72)', '(8.84, 33827.2)', '(8.84, 338272)', '(88.4, 3.38272)', '(88.4, 33.8272)', '(88.4, 338.272)', '(88.4, 3382.72)', '(88.4, 33827.2)', '(88.4, 338272)', '(884, 3.38272)', '(884, 33.8272)', '(884, 338.272)', '(884, 3382.72)', '(884, 33827.2)', '(884, 338272)', '(8.843, 3.8272)', '(8.843, 38.272)', '(8.843, 382.72)', '(8.843, 3827.2)', '(8.843, 38272)', '(88.43, 3.8272)', '(88.43, 38.272)', '(88.43, 382.72)', '(88.43, 3827.2)', '(88.43, 38272)', '(884.3, 3.8272)', '(884.3, 38.272)', '(884.3, 382.72)', '(884.3, 3827.2)', '(884.3, 38272)', '(8843, 3.8272)', '(8843, 38.272)', '(8843, 382.72)', '(8843, 3827.2)', '(8843, 38272)', '(8.8433, 8.272)', '(8.8433, 82.72)', '(8.8433, 827.2)', '(8.8433, 8272)', '(88.433, 8.272)', '(88.433, 82.72)', '(88.433, 827.2)', '(88.433, 8272)', '(884.33, 8.272)', '(884.33, 82.72)', '(884.33, 827.2)', '(884.33, 8272)', '(8843.3, 8.272)', '(8843.3, 82.72)', '(8843.3, 827.2)', '(8843.3, 8272)', '(88433, 8.272)', '(88433, 82.72)', '(88433, 827.2)', '(88433, 8272)', '(8.84338, 2.72)', '(8.84338, 27.2)', '(8.84338, 272)', '(88.4338, 2.72)', '(88.4338, 27.2)', '(88.4338, 272)', '(884.338, 2.72)', '(884.338, 27.2)', '(884.338, 272)', '(8843.38, 2.72)', '(8843.38, 27.2)', '(8843.38, 272)', '(88433.8, 2.72)', '(88433.8, 27.2)', '(88433.8, 272)', '(884338, 2.72)', '(884338, 27.2)', '(884338, 272)', '(8.843382, 7.2)', '(8.843382, 72)', '(88.43382, 7.2)', '(88.43382, 72)', '(884.3382, 7.2)', '(884.3382, 72)', '(8843.382, 7.2)', '(8843.382, 72)', '(88433.82, 7.2)', '(88433.82, 72)', '(884338.2, 7.2)', '(884338.2, 72)', '(8843382, 7.2)', '(8843382, 72)', '(8.8433827, 2)', '(88.433827, 2)', '(884.33827, 2)', '(8843.3827, 2)', '(88433.827, 2)', '(884338.27, 2)', '(8843382.7, 2)', '(88433827, 2)']\nassert solution.ambiguousCoordinates(\"1070710\") == ['(0, 7.071)', '(0, 70.71)', '(0, 707.1)', '(0, 7071)', '(0.7, 0.71)', '(0.707, 1)']\nassert solution.ambiguousCoordinates(\"055200979\") == ['(5, 5.20097)', '(5, 52.0097)', '(5, 520.097)', '(5, 5200.97)', '(5, 52009.7)', '(5, 520097)', '(5.5, 2.0097)', '(5.5, 20.097)', '(5.5, 200.97)', '(5.5, 2009.7)', '(5.5, 20097)', '(55, 2.0097)', '(55, 20.097)', '(55, 200.97)', '(55, 2009.7)', '(55, 20097)', '(5.52, 0.097)', '(55.2, 0.097)', '(552, 0.097)', '(5520, 0.97)', '(55200, 9.7)', '(55200, 97)', '(5.52009, 7)', '(55.2009, 7)', '(552.009, 7)', '(5520.09, 7)', '(55200.9, 7)', '(552009, 7)']\nassert solution.ambiguousCoordinates(\"532951329\") == ['(3, 2.95132)', '(3, 29.5132)', '(3, 295.132)', '(3, 2951.32)', '(3, 29513.2)', '(3, 295132)', '(3.2, 9.5132)', '(3.2, 95.132)', '(3.2, 951.32)', '(3.2, 9513.2)', '(3.2, 95132)', '(32, 9.5132)', '(32, 95.132)', '(32, 951.32)', '(32, 9513.2)', '(32, 95132)', '(3.29, 5.132)', '(3.29, 51.32)', '(3.29, 513.2)', '(3.29, 5132)', '(32.9, 5.132)', '(32.9, 51.32)', '(32.9, 513.2)', '(32.9, 5132)', '(329, 5.132)', '(329, 51.32)', '(329, 513.2)', '(329, 5132)', '(3.295, 1.32)', '(3.295, 13.2)', '(3.295, 132)', '(32.95, 1.32)', '(32.95, 13.2)', '(32.95, 132)', '(329.5, 1.32)', '(329.5, 13.2)', '(329.5, 132)', '(3295, 1.32)', '(3295, 13.2)', '(3295, 132)', '(3.2951, 3.2)', '(3.2951, 32)', '(32.951, 3.2)', '(32.951, 32)', '(329.51, 3.2)', '(329.51, 32)', '(3295.1, 3.2)', '(3295.1, 32)', '(32951, 3.2)', '(32951, 32)', '(3.29513, 2)', '(32.9513, 2)', '(329.513, 2)', '(3295.13, 2)', '(32951.3, 2)', '(329513, 2)']\nassert solution.ambiguousCoordinates(\"881123470723\") == ['(8, 1.12347072)', '(8, 11.2347072)', '(8, 112.347072)', '(8, 1123.47072)', '(8, 11234.7072)', '(8, 112347.072)', '(8, 1123470.72)', '(8, 11234707.2)', '(8, 112347072)', '(8.1, 1.2347072)', '(8.1, 12.347072)', '(8.1, 123.47072)', '(8.1, 1234.7072)', '(8.1, 12347.072)', '(8.1, 123470.72)', '(8.1, 1234707.2)', '(8.1, 12347072)', '(81, 1.2347072)', '(81, 12.347072)', '(81, 123.47072)', '(81, 1234.7072)', '(81, 12347.072)', '(81, 123470.72)', '(81, 1234707.2)', '(81, 12347072)', '(8.11, 2.347072)', '(8.11, 23.47072)', '(8.11, 234.7072)', '(8.11, 2347.072)', '(8.11, 23470.72)', '(8.11, 234707.2)', '(8.11, 2347072)', '(81.1, 2.347072)', '(81.1, 23.47072)', '(81.1, 234.7072)', '(81.1, 2347.072)', '(81.1, 23470.72)', '(81.1, 234707.2)', '(81.1, 2347072)', '(811, 2.347072)', '(811, 23.47072)', '(811, 234.7072)', '(811, 2347.072)', '(811, 23470.72)', '(811, 234707.2)', '(811, 2347072)', '(8.112, 3.47072)', '(8.112, 34.7072)', '(8.112, 347.072)', '(8.112, 3470.72)', '(8.112, 34707.2)', '(8.112, 347072)', '(81.12, 3.47072)', '(81.12, 34.7072)', '(81.12, 347.072)', '(81.12, 3470.72)', '(81.12, 34707.2)', '(81.12, 347072)', '(811.2, 3.47072)', '(811.2, 34.7072)', '(811.2, 347.072)', '(811.2, 3470.72)', '(811.2, 34707.2)', '(811.2, 347072)', '(8112, 3.47072)', '(8112, 34.7072)', '(8112, 347.072)', '(8112, 3470.72)', '(8112, 34707.2)', '(8112, 347072)', '(8.1123, 4.7072)', '(8.1123, 47.072)', '(8.1123, 470.72)', '(8.1123, 4707.2)', '(8.1123, 47072)', '(81.123, 4.7072)', '(81.123, 47.072)', '(81.123, 470.72)', '(81.123, 4707.2)', '(81.123, 47072)', '(811.23, 4.7072)', '(811.23, 47.072)', '(811.23, 470.72)', '(811.23, 4707.2)', '(811.23, 47072)', '(8112.3, 4.7072)', '(8112.3, 47.072)', '(8112.3, 470.72)', '(8112.3, 4707.2)', '(8112.3, 47072)', '(81123, 4.7072)', '(81123, 47.072)', '(81123, 470.72)', '(81123, 4707.2)', '(81123, 47072)', '(8.11234, 7.072)', '(8.11234, 70.72)', '(8.11234, 707.2)', '(8.11234, 7072)', '(81.1234, 7.072)', '(81.1234, 70.72)', '(81.1234, 707.2)', '(81.1234, 7072)', '(811.234, 7.072)', '(811.234, 70.72)', '(811.234, 707.2)', '(811.234, 7072)', '(8112.34, 7.072)', '(8112.34, 70.72)', '(8112.34, 707.2)', '(8112.34, 7072)', '(81123.4, 7.072)', '(81123.4, 70.72)', '(81123.4, 707.2)', '(81123.4, 7072)', '(811234, 7.072)', '(811234, 70.72)', '(811234, 707.2)', '(811234, 7072)', '(8.112347, 0.72)', '(81.12347, 0.72)', '(811.2347, 0.72)', '(8112.347, 0.72)', '(81123.47, 0.72)', '(811234.7, 0.72)', '(8112347, 0.72)', '(81123470, 7.2)', '(81123470, 72)', '(8.11234707, 2)', '(81.1234707, 2)', '(811.234707, 2)', '(8112.34707, 2)', '(81123.4707, 2)', '(811234.707, 2)', '(8112347.07, 2)', '(81123470.7, 2)', '(811234707, 2)']\nassert solution.ambiguousCoordinates(\"90203038122\") == ['(0, 2.0303812)', '(0, 20.303812)', '(0, 203.03812)', '(0, 2030.3812)', '(0, 20303.812)', '(0, 203038.12)', '(0, 2030381.2)', '(0, 20303812)', '(0.2, 0.303812)', '(0.203, 0.3812)', '(0.20303, 8.12)', '(0.20303, 81.2)', '(0.20303, 812)', '(0.203038, 1.2)', '(0.203038, 12)', '(0.2030381, 2)']\nassert solution.ambiguousCoordinates(\"57155\") == ['(7, 1.5)', '(7, 15)', '(7.1, 5)', '(71, 5)']\nassert solution.ambiguousCoordinates(\"571357547\") == ['(7, 1.35754)', '(7, 13.5754)', '(7, 135.754)', '(7, 1357.54)', '(7, 13575.4)', '(7, 135754)', '(7.1, 3.5754)', '(7.1, 35.754)', '(7.1, 357.54)', '(7.1, 3575.4)', '(7.1, 35754)', '(71, 3.5754)', '(71, 35.754)', '(71, 357.54)', '(71, 3575.4)', '(71, 35754)', '(7.13, 5.754)', '(7.13, 57.54)', '(7.13, 575.4)', '(7.13, 5754)', '(71.3, 5.754)', '(71.3, 57.54)', '(71.3, 575.4)', '(71.3, 5754)', '(713, 5.754)', '(713, 57.54)', '(713, 575.4)', '(713, 5754)', '(7.135, 7.54)', '(7.135, 75.4)', '(7.135, 754)', '(71.35, 7.54)', '(71.35, 75.4)', '(71.35, 754)', '(713.5, 7.54)', '(713.5, 75.4)', '(713.5, 754)', '(7135, 7.54)', '(7135, 75.4)', '(7135, 754)', '(7.1357, 5.4)', '(7.1357, 54)', '(71.357, 5.4)', '(71.357, 54)', '(713.57, 5.4)', '(713.57, 54)', '(7135.7, 5.4)', '(7135.7, 54)', '(71357, 5.4)', '(71357, 54)', '(7.13575, 4)', '(71.3575, 4)', '(713.575, 4)', '(7135.75, 4)', '(71357.5, 4)', '(713575, 4)']\nassert solution.ambiguousCoordinates(\"449870427613\") == ['(4, 9.87042761)', '(4, 98.7042761)', '(4, 987.042761)', '(4, 9870.42761)', '(4, 98704.2761)', '(4, 987042.761)', '(4, 9870427.61)', '(4, 98704276.1)', '(4, 987042761)', '(4.9, 8.7042761)', '(4.9, 87.042761)', '(4.9, 870.42761)', '(4.9, 8704.2761)', '(4.9, 87042.761)', '(4.9, 870427.61)', '(4.9, 8704276.1)', '(4.9, 87042761)', '(49, 8.7042761)', '(49, 87.042761)', '(49, 870.42761)', '(49, 8704.2761)', '(49, 87042.761)', '(49, 870427.61)', '(49, 8704276.1)', '(49, 87042761)', '(4.98, 7.042761)', '(4.98, 70.42761)', '(4.98, 704.2761)', '(4.98, 7042.761)', '(4.98, 70427.61)', '(4.98, 704276.1)', '(4.98, 7042761)', '(49.8, 7.042761)', '(49.8, 70.42761)', '(49.8, 704.2761)', '(49.8, 7042.761)', '(49.8, 70427.61)', '(49.8, 704276.1)', '(49.8, 7042761)', '(498, 7.042761)', '(498, 70.42761)', '(498, 704.2761)', '(498, 7042.761)', '(498, 70427.61)', '(498, 704276.1)', '(498, 7042761)', '(4.987, 0.42761)', '(49.87, 0.42761)', '(498.7, 0.42761)', '(4987, 0.42761)', '(49870, 4.2761)', '(49870, 42.761)', '(49870, 427.61)', '(49870, 4276.1)', '(49870, 42761)', '(4.98704, 2.761)', '(4.98704, 27.61)', '(4.98704, 276.1)', '(4.98704, 2761)', '(49.8704, 2.761)', '(49.8704, 27.61)', '(49.8704, 276.1)', '(49.8704, 2761)', '(498.704, 2.761)', '(498.704, 27.61)', '(498.704, 276.1)', '(498.704, 2761)', '(4987.04, 2.761)', '(4987.04, 27.61)', '(4987.04, 276.1)', '(4987.04, 2761)', '(49870.4, 2.761)', '(49870.4, 27.61)', '(49870.4, 276.1)', '(49870.4, 2761)', '(498704, 2.761)', '(498704, 27.61)', '(498704, 276.1)', '(498704, 2761)', '(4.987042, 7.61)', '(4.987042, 76.1)', '(4.987042, 761)', '(49.87042, 7.61)', '(49.87042, 76.1)', '(49.87042, 761)', '(498.7042, 7.61)', '(498.7042, 76.1)', '(498.7042, 761)', '(4987.042, 7.61)', '(4987.042, 76.1)', '(4987.042, 761)', '(49870.42, 7.61)', '(49870.42, 76.1)', '(49870.42, 761)', '(498704.2, 7.61)', '(498704.2, 76.1)', '(498704.2, 761)', '(4987042, 7.61)', '(4987042, 76.1)', '(4987042, 761)', '(4.9870427, 6.1)', '(4.9870427, 61)', '(49.870427, 6.1)', '(49.870427, 61)', '(498.70427, 6.1)', '(498.70427, 61)', '(4987.0427, 6.1)', '(4987.0427, 61)', '(49870.427, 6.1)', '(49870.427, 61)', '(498704.27, 6.1)', '(498704.27, 61)', '(4987042.7, 6.1)', '(4987042.7, 61)', '(49870427, 6.1)', '(49870427, 61)', '(4.98704276, 1)', '(49.8704276, 1)', '(498.704276, 1)', '(4987.04276, 1)', '(49870.4276, 1)', '(498704.276, 1)', '(4987042.76, 1)', '(49870427.6, 1)', '(498704276, 1)']\nassert solution.ambiguousCoordinates(\"04503580395\") == ['(4, 5.0358039)', '(4, 50.358039)', '(4, 503.58039)', '(4, 5035.8039)', '(4, 50358.039)', '(4, 503580.39)', '(4, 5035803.9)', '(4, 50358039)', '(4.5, 0.358039)', '(45, 0.358039)', '(450, 3.58039)', '(450, 35.8039)', '(450, 358.039)', '(450, 3580.39)', '(450, 35803.9)', '(450, 358039)', '(4.503, 5.8039)', '(4.503, 58.039)', '(4.503, 580.39)', '(4.503, 5803.9)', '(4.503, 58039)', '(45.03, 5.8039)', '(45.03, 58.039)', '(45.03, 580.39)', '(45.03, 5803.9)', '(45.03, 58039)', '(450.3, 5.8039)', '(450.3, 58.039)', '(450.3, 580.39)', '(450.3, 5803.9)', '(450.3, 58039)', '(4503, 5.8039)', '(4503, 58.039)', '(4503, 580.39)', '(4503, 5803.9)', '(4503, 58039)', '(4.5035, 8.039)', '(4.5035, 80.39)', '(4.5035, 803.9)', '(4.5035, 8039)', '(45.035, 8.039)', '(45.035, 80.39)', '(45.035, 803.9)', '(45.035, 8039)', '(450.35, 8.039)', '(450.35, 80.39)', '(450.35, 803.9)', '(450.35, 8039)', '(4503.5, 8.039)', '(4503.5, 80.39)', '(4503.5, 803.9)', '(4503.5, 8039)', '(45035, 8.039)', '(45035, 80.39)', '(45035, 803.9)', '(45035, 8039)', '(4.50358, 0.39)', '(45.0358, 0.39)', '(450.358, 0.39)', '(4503.58, 0.39)', '(45035.8, 0.39)', '(450358, 0.39)', '(4503580, 3.9)', '(4503580, 39)', '(4.5035803, 9)', '(45.035803, 9)', '(450.35803, 9)', '(4503.5803, 9)', '(45035.803, 9)', '(450358.03, 9)', '(4503580.3, 9)', '(45035803, 9)']\nassert solution.ambiguousCoordinates(\"72517\") == ['(2, 5.1)', '(2, 51)', '(2.5, 1)', '(25, 1)']\nassert solution.ambiguousCoordinates(\"6139447741\") == ['(1, 3.944774)', '(1, 39.44774)', '(1, 394.4774)', '(1, 3944.774)', '(1, 39447.74)', '(1, 394477.4)', '(1, 3944774)', '(1.3, 9.44774)', '(1.3, 94.4774)', '(1.3, 944.774)', '(1.3, 9447.74)', '(1.3, 94477.4)', '(1.3, 944774)', '(13, 9.44774)', '(13, 94.4774)', '(13, 944.774)', '(13, 9447.74)', '(13, 94477.4)', '(13, 944774)', '(1.39, 4.4774)', '(1.39, 44.774)', '(1.39, 447.74)', '(1.39, 4477.4)', '(1.39, 44774)', '(13.9, 4.4774)', '(13.9, 44.774)', '(13.9, 447.74)', '(13.9, 4477.4)', '(13.9, 44774)', '(139, 4.4774)', '(139, 44.774)', '(139, 447.74)', '(139, 4477.4)', '(139, 44774)', '(1.394, 4.774)', '(1.394, 47.74)', '(1.394, 477.4)', '(1.394, 4774)', '(13.94, 4.774)', '(13.94, 47.74)', '(13.94, 477.4)', '(13.94, 4774)', '(139.4, 4.774)', '(139.4, 47.74)', '(139.4, 477.4)', '(139.4, 4774)', '(1394, 4.774)', '(1394, 47.74)', '(1394, 477.4)', '(1394, 4774)', '(1.3944, 7.74)', '(1.3944, 77.4)', '(1.3944, 774)', '(13.944, 7.74)', '(13.944, 77.4)', '(13.944, 774)', '(139.44, 7.74)', '(139.44, 77.4)', '(139.44, 774)', '(1394.4, 7.74)', '(1394.4, 77.4)', '(1394.4, 774)', '(13944, 7.74)', '(13944, 77.4)', '(13944, 774)', '(1.39447, 7.4)', '(1.39447, 74)', '(13.9447, 7.4)', '(13.9447, 74)', '(139.447, 7.4)', '(139.447, 74)', '(1394.47, 7.4)', '(1394.47, 74)', '(13944.7, 7.4)', '(13944.7, 74)', '(139447, 7.4)', '(139447, 74)', '(1.394477, 4)', '(13.94477, 4)', '(139.4477, 4)', '(1394.477, 4)', '(13944.77, 4)', '(139447.7, 4)', '(1394477, 4)']\nassert solution.ambiguousCoordinates(\"0178\") == ['(1, 7)']\nassert solution.ambiguousCoordinates(\"714321987\") == ['(1, 4.32198)', '(1, 43.2198)', '(1, 432.198)', '(1, 4321.98)', '(1, 43219.8)', '(1, 432198)', '(1.4, 3.2198)', '(1.4, 32.198)', '(1.4, 321.98)', '(1.4, 3219.8)', '(1.4, 32198)', '(14, 3.2198)', '(14, 32.198)', '(14, 321.98)', '(14, 3219.8)', '(14, 32198)', '(1.43, 2.198)', '(1.43, 21.98)', '(1.43, 219.8)', '(1.43, 2198)', '(14.3, 2.198)', '(14.3, 21.98)', '(14.3, 219.8)', '(14.3, 2198)', '(143, 2.198)', '(143, 21.98)', '(143, 219.8)', '(143, 2198)', '(1.432, 1.98)', '(1.432, 19.8)', '(1.432, 198)', '(14.32, 1.98)', '(14.32, 19.8)', '(14.32, 198)', '(143.2, 1.98)', '(143.2, 19.8)', '(143.2, 198)', '(1432, 1.98)', '(1432, 19.8)', '(1432, 198)', '(1.4321, 9.8)', '(1.4321, 98)', '(14.321, 9.8)', '(14.321, 98)', '(143.21, 9.8)', '(143.21, 98)', '(1432.1, 9.8)', '(1432.1, 98)', '(14321, 9.8)', '(14321, 98)', '(1.43219, 8)', '(14.3219, 8)', '(143.219, 8)', '(1432.19, 8)', '(14321.9, 8)', '(143219, 8)']\nassert solution.ambiguousCoordinates(\"436315\") == ['(3, 6.31)', '(3, 63.1)', '(3, 631)', '(3.6, 3.1)', '(3.6, 31)', '(36, 3.1)', '(36, 31)', '(3.63, 1)', '(36.3, 1)', '(363, 1)']\nassert solution.ambiguousCoordinates(\"2501258\") == ['(5, 0.125)', '(50, 1.25)', '(50, 12.5)', '(50, 125)', '(5.01, 2.5)', '(5.01, 25)', '(50.1, 2.5)', '(50.1, 25)', '(501, 2.5)', '(501, 25)', '(5.012, 5)', '(50.12, 5)', '(501.2, 5)', '(5012, 5)']\nassert solution.ambiguousCoordinates(\"281971\") == ['(8, 1.97)', '(8, 19.7)', '(8, 197)', '(8.1, 9.7)', '(8.1, 97)', '(81, 9.7)', '(81, 97)', '(8.19, 7)', '(81.9, 7)', '(819, 7)']\nassert solution.ambiguousCoordinates(\"19206634\") == ['(9, 2.0663)', '(9, 20.663)', '(9, 206.63)', '(9, 2066.3)', '(9, 20663)', '(9.2, 0.663)', '(92, 0.663)', '(920, 6.63)', '(920, 66.3)', '(920, 663)', '(9.206, 6.3)', '(9.206, 63)', '(92.06, 6.3)', '(92.06, 63)', '(920.6, 6.3)', '(920.6, 63)', '(9206, 6.3)', '(9206, 63)', '(9.2066, 3)', '(92.066, 3)', '(920.66, 3)', '(9206.6, 3)', '(92066, 3)']\nassert solution.ambiguousCoordinates(\"239688\") == ['(3, 9.68)', '(3, 96.8)', '(3, 968)', '(3.9, 6.8)', '(3.9, 68)', '(39, 6.8)', '(39, 68)', '(3.96, 8)', '(39.6, 8)', '(396, 8)']\nassert solution.ambiguousCoordinates(\"64259\") == ['(4, 2.5)', '(4, 25)', '(4.2, 5)', '(42, 5)']\nassert solution.ambiguousCoordinates(\"563096538\") == ['(6, 3.09653)', '(6, 30.9653)', '(6, 309.653)', '(6, 3096.53)', '(6, 30965.3)', '(6, 309653)', '(6.3, 0.9653)', '(63, 0.9653)', '(630, 9.653)', '(630, 96.53)', '(630, 965.3)', '(630, 9653)', '(6.309, 6.53)', '(6.309, 65.3)', '(6.309, 653)', '(63.09, 6.53)', '(63.09, 65.3)', '(63.09, 653)', '(630.9, 6.53)', '(630.9, 65.3)', '(630.9, 653)', '(6309, 6.53)', '(6309, 65.3)', '(6309, 653)', '(6.3096, 5.3)', '(6.3096, 53)', '(63.096, 5.3)', '(63.096, 53)', '(630.96, 5.3)', '(630.96, 53)', '(6309.6, 5.3)', '(6309.6, 53)', '(63096, 5.3)', '(63096, 53)', '(6.30965, 3)', '(63.0965, 3)', '(630.965, 3)', '(6309.65, 3)', '(63096.5, 3)', '(630965, 3)']\nassert solution.ambiguousCoordinates(\"188765848\") == ['(8, 8.76584)', '(8, 87.6584)', '(8, 876.584)', '(8, 8765.84)', '(8, 87658.4)', '(8, 876584)', '(8.8, 7.6584)', '(8.8, 76.584)', '(8.8, 765.84)', '(8.8, 7658.4)', '(8.8, 76584)', '(88, 7.6584)', '(88, 76.584)', '(88, 765.84)', '(88, 7658.4)', '(88, 76584)', '(8.87, 6.584)', '(8.87, 65.84)', '(8.87, 658.4)', '(8.87, 6584)', '(88.7, 6.584)', '(88.7, 65.84)', '(88.7, 658.4)', '(88.7, 6584)', '(887, 6.584)', '(887, 65.84)', '(887, 658.4)', '(887, 6584)', '(8.876, 5.84)', '(8.876, 58.4)', '(8.876, 584)', '(88.76, 5.84)', '(88.76, 58.4)', '(88.76, 584)', '(887.6, 5.84)', '(887.6, 58.4)', '(887.6, 584)', '(8876, 5.84)', '(8876, 58.4)', '(8876, 584)', '(8.8765, 8.4)', '(8.8765, 84)', '(88.765, 8.4)', '(88.765, 84)', '(887.65, 8.4)', '(887.65, 84)', '(8876.5, 8.4)', '(8876.5, 84)', '(88765, 8.4)', '(88765, 84)', '(8.87658, 4)', '(88.7658, 4)', '(887.658, 4)', '(8876.58, 4)', '(88765.8, 4)', '(887658, 4)']\nassert solution.ambiguousCoordinates(\"10460902547\") == ['(0, 4.6090254)', '(0, 46.090254)', '(0, 460.90254)', '(0, 4609.0254)', '(0, 46090.254)', '(0, 460902.54)', '(0, 4609025.4)', '(0, 46090254)', '(0.4, 6.090254)', '(0.4, 60.90254)', '(0.4, 609.0254)', '(0.4, 6090.254)', '(0.4, 60902.54)', '(0.4, 609025.4)', '(0.4, 6090254)', '(0.46, 0.90254)', '(0.4609, 0.254)', '(0.460902, 5.4)', '(0.460902, 54)', '(0.4609025, 4)']\nassert solution.ambiguousCoordinates(\"128579165\") == ['(2, 8.57916)', '(2, 85.7916)', '(2, 857.916)', '(2, 8579.16)', '(2, 85791.6)', '(2, 857916)', '(2.8, 5.7916)', '(2.8, 57.916)', '(2.8, 579.16)', '(2.8, 5791.6)', '(2.8, 57916)', '(28, 5.7916)', '(28, 57.916)', '(28, 579.16)', '(28, 5791.6)', '(28, 57916)', '(2.85, 7.916)', '(2.85, 79.16)', '(2.85, 791.6)', '(2.85, 7916)', '(28.5, 7.916)', '(28.5, 79.16)', '(28.5, 791.6)', '(28.5, 7916)', '(285, 7.916)', '(285, 79.16)', '(285, 791.6)', '(285, 7916)', '(2.857, 9.16)', '(2.857, 91.6)', '(2.857, 916)', '(28.57, 9.16)', '(28.57, 91.6)', '(28.57, 916)', '(285.7, 9.16)', '(285.7, 91.6)', '(285.7, 916)', '(2857, 9.16)', '(2857, 91.6)', '(2857, 916)', '(2.8579, 1.6)', '(2.8579, 16)', '(28.579, 1.6)', '(28.579, 16)', '(285.79, 1.6)', '(285.79, 16)', '(2857.9, 1.6)', '(2857.9, 16)', '(28579, 1.6)', '(28579, 16)', '(2.85791, 6)', '(28.5791, 6)', '(285.791, 6)', '(2857.91, 6)', '(28579.1, 6)', '(285791, 6)']\nassert solution.ambiguousCoordinates(\"770428062\") == ['(7, 0.42806)', '(70, 4.2806)', '(70, 42.806)', '(70, 428.06)', '(70, 4280.6)', '(70, 42806)', '(7.04, 2.806)', '(7.04, 28.06)', '(7.04, 280.6)', '(7.04, 2806)', '(70.4, 2.806)', '(70.4, 28.06)', '(70.4, 280.6)', '(70.4, 2806)', '(704, 2.806)', '(704, 28.06)', '(704, 280.6)', '(704, 2806)', '(7.042, 8.06)', '(7.042, 80.6)', '(7.042, 806)', '(70.42, 8.06)', '(70.42, 80.6)', '(70.42, 806)', '(704.2, 8.06)', '(704.2, 80.6)', '(704.2, 806)', '(7042, 8.06)', '(7042, 80.6)', '(7042, 806)', '(7.0428, 0.6)', '(70.428, 0.6)', '(704.28, 0.6)', '(7042.8, 0.6)', '(70428, 0.6)', '(704280, 6)']\nassert solution.ambiguousCoordinates(\"38826930\") == ['(8, 8.2693)', '(8, 82.693)', '(8, 826.93)', '(8, 8269.3)', '(8, 82693)', '(8.8, 2.693)', '(8.8, 26.93)', '(8.8, 269.3)', '(8.8, 2693)', '(88, 2.693)', '(88, 26.93)', '(88, 269.3)', '(88, 2693)', '(8.82, 6.93)', '(8.82, 69.3)', '(8.82, 693)', '(88.2, 6.93)', '(88.2, 69.3)', '(88.2, 693)', '(882, 6.93)', '(882, 69.3)', '(882, 693)', '(8.826, 9.3)', '(8.826, 93)', '(88.26, 9.3)', '(88.26, 93)', '(882.6, 9.3)', '(882.6, 93)', '(8826, 9.3)', '(8826, 93)', '(8.8269, 3)', '(88.269, 3)', '(882.69, 3)', '(8826.9, 3)', '(88269, 3)']\nassert solution.ambiguousCoordinates(\"4781139\") == ['(7, 8.113)', '(7, 81.13)', '(7, 811.3)', '(7, 8113)', '(7.8, 1.13)', '(7.8, 11.3)', '(7.8, 113)', '(78, 1.13)', '(78, 11.3)', '(78, 113)', '(7.81, 1.3)', '(7.81, 13)', '(78.1, 1.3)', '(78.1, 13)', '(781, 1.3)', '(781, 13)', '(7.811, 3)', '(78.11, 3)', '(781.1, 3)', '(7811, 3)']\nassert solution.ambiguousCoordinates(\"8998023461\") == ['(9, 9.802346)', '(9, 98.02346)', '(9, 980.2346)', '(9, 9802.346)', '(9, 98023.46)', '(9, 980234.6)', '(9, 9802346)', '(9.9, 8.02346)', '(9.9, 80.2346)', '(9.9, 802.346)', '(9.9, 8023.46)', '(9.9, 80234.6)', '(9.9, 802346)', '(99, 8.02346)', '(99, 80.2346)', '(99, 802.346)', '(99, 8023.46)', '(99, 80234.6)', '(99, 802346)', '(9.98, 0.2346)', '(99.8, 0.2346)', '(998, 0.2346)', '(9980, 2.346)', '(9980, 23.46)', '(9980, 234.6)', '(9980, 2346)', '(9.9802, 3.46)', '(9.9802, 34.6)', '(9.9802, 346)', '(99.802, 3.46)', '(99.802, 34.6)', '(99.802, 346)', '(998.02, 3.46)', '(998.02, 34.6)', '(998.02, 346)', '(9980.2, 3.46)', '(9980.2, 34.6)', '(9980.2, 346)', '(99802, 3.46)', '(99802, 34.6)', '(99802, 346)', '(9.98023, 4.6)', '(9.98023, 46)', '(99.8023, 4.6)', '(99.8023, 46)', '(998.023, 4.6)', '(998.023, 46)', '(9980.23, 4.6)', '(9980.23, 46)', '(99802.3, 4.6)', '(99802.3, 46)', '(998023, 4.6)', '(998023, 46)', '(9.980234, 6)', '(99.80234, 6)', '(998.0234, 6)', '(9980.234, 6)', '(99802.34, 6)', '(998023.4, 6)', '(9980234, 6)']\nassert solution.ambiguousCoordinates(\"26822201\") == ['(6, 82220)', '(6.8, 2220)', '(68, 2220)', '(6.82, 220)', '(68.2, 220)', '(682, 220)', '(6.822, 20)', '(68.22, 20)', '(682.2, 20)', '(6822, 20)', '(6.8222, 0)', '(68.222, 0)', '(682.22, 0)', '(6822.2, 0)', '(68222, 0)']\nassert solution.ambiguousCoordinates(\"348981\") == ['(4, 8.98)', '(4, 89.8)', '(4, 898)', '(4.8, 9.8)', '(4.8, 98)', '(48, 9.8)', '(48, 98)', '(4.89, 8)', '(48.9, 8)', '(489, 8)']\nassert solution.ambiguousCoordinates(\"1590\") == ['(5, 9)']\nassert solution.ambiguousCoordinates(\"759598801\") == ['(5, 959880)', '(5.9, 59880)', '(59, 59880)', '(5.95, 9880)', '(59.5, 9880)', '(595, 9880)', '(5.959, 880)', '(59.59, 880)', '(595.9, 880)', '(5959, 880)', '(5.9598, 80)', '(59.598, 80)', '(595.98, 80)', '(5959.8, 80)', '(59598, 80)', '(5.95988, 0)', '(59.5988, 0)', '(595.988, 0)', '(5959.88, 0)', '(59598.8, 0)', '(595988, 0)']\nassert solution.ambiguousCoordinates(\"6850\") == ['(8, 5)']\nassert solution.ambiguousCoordinates(\"33117732520\") == ['(3, 1.1773252)', '(3, 11.773252)', '(3, 117.73252)', '(3, 1177.3252)', '(3, 11773.252)', '(3, 117732.52)', '(3, 1177325.2)', '(3, 11773252)', '(3.1, 1.773252)', '(3.1, 17.73252)', '(3.1, 177.3252)', '(3.1, 1773.252)', '(3.1, 17732.52)', '(3.1, 177325.2)', '(3.1, 1773252)', '(31, 1.773252)', '(31, 17.73252)', '(31, 177.3252)', '(31, 1773.252)', '(31, 17732.52)', '(31, 177325.2)', '(31, 1773252)', '(3.11, 7.73252)', '(3.11, 77.3252)', '(3.11, 773.252)', '(3.11, 7732.52)', '(3.11, 77325.2)', '(3.11, 773252)', '(31.1, 7.73252)', '(31.1, 77.3252)', '(31.1, 773.252)', '(31.1, 7732.52)', '(31.1, 77325.2)', '(31.1, 773252)', '(311, 7.73252)', '(311, 77.3252)', '(311, 773.252)', '(311, 7732.52)', '(311, 77325.2)', '(311, 773252)', '(3.117, 7.3252)', '(3.117, 73.252)', '(3.117, 732.52)', '(3.117, 7325.2)', '(3.117, 73252)', '(31.17, 7.3252)', '(31.17, 73.252)', '(31.17, 732.52)', '(31.17, 7325.2)', '(31.17, 73252)', '(311.7, 7.3252)', '(311.7, 73.252)', '(311.7, 732.52)', '(311.7, 7325.2)', '(311.7, 73252)', '(3117, 7.3252)', '(3117, 73.252)', '(3117, 732.52)', '(3117, 7325.2)', '(3117, 73252)', '(3.1177, 3.252)', '(3.1177, 32.52)', '(3.1177, 325.2)', '(3.1177, 3252)', '(31.177, 3.252)', '(31.177, 32.52)', '(31.177, 325.2)', '(31.177, 3252)', '(311.77, 3.252)', '(311.77, 32.52)', '(311.77, 325.2)', '(311.77, 3252)', '(3117.7, 3.252)', '(3117.7, 32.52)', '(3117.7, 325.2)', '(3117.7, 3252)', '(31177, 3.252)', '(31177, 32.52)', '(31177, 325.2)', '(31177, 3252)', '(3.11773, 2.52)', '(3.11773, 25.2)', '(3.11773, 252)', '(31.1773, 2.52)', '(31.1773, 25.2)', '(31.1773, 252)', '(311.773, 2.52)', '(311.773, 25.2)', '(311.773, 252)', '(3117.73, 2.52)', '(3117.73, 25.2)', '(3117.73, 252)', '(31177.3, 2.52)', '(31177.3, 25.2)', '(31177.3, 252)', '(311773, 2.52)', '(311773, 25.2)', '(311773, 252)', '(3.117732, 5.2)', '(3.117732, 52)', '(31.17732, 5.2)', '(31.17732, 52)', '(311.7732, 5.2)', '(311.7732, 52)', '(3117.732, 5.2)', '(3117.732, 52)', '(31177.32, 5.2)', '(31177.32, 52)', '(311773.2, 5.2)', '(311773.2, 52)', '(3117732, 5.2)', '(3117732, 52)', '(3.1177325, 2)', '(31.177325, 2)', '(311.77325, 2)', '(3117.7325, 2)', '(31177.325, 2)', '(311773.25, 2)', '(3117732.5, 2)', '(31177325, 2)']\nassert solution.ambiguousCoordinates(\"403642118679\") == ['(0, 3.64211867)', '(0, 36.4211867)', '(0, 364.211867)', '(0, 3642.11867)', '(0, 36421.1867)', '(0, 364211.867)', '(0, 3642118.67)', '(0, 36421186.7)', '(0, 364211867)', '(0.3, 6.4211867)', '(0.3, 64.211867)', '(0.3, 642.11867)', '(0.3, 6421.1867)', '(0.3, 64211.867)', '(0.3, 642118.67)', '(0.3, 6421186.7)', '(0.3, 64211867)', '(0.36, 4.211867)', '(0.36, 42.11867)', '(0.36, 421.1867)', '(0.36, 4211.867)', '(0.36, 42118.67)', '(0.36, 421186.7)', '(0.36, 4211867)', '(0.364, 2.11867)', '(0.364, 21.1867)', '(0.364, 211.867)', '(0.364, 2118.67)', '(0.364, 21186.7)', '(0.364, 211867)', '(0.3642, 1.1867)', '(0.3642, 11.867)', '(0.3642, 118.67)', '(0.3642, 1186.7)', '(0.3642, 11867)', '(0.36421, 1.867)', '(0.36421, 18.67)', '(0.36421, 186.7)', '(0.36421, 1867)', '(0.364211, 8.67)', '(0.364211, 86.7)', '(0.364211, 867)', '(0.3642118, 6.7)', '(0.3642118, 67)', '(0.36421186, 7)']\nassert solution.ambiguousCoordinates(\"529578744\") == ['(2, 9.57874)', '(2, 95.7874)', '(2, 957.874)', '(2, 9578.74)', '(2, 95787.4)', '(2, 957874)', '(2.9, 5.7874)', '(2.9, 57.874)', '(2.9, 578.74)', '(2.9, 5787.4)', '(2.9, 57874)', '(29, 5.7874)', '(29, 57.874)', '(29, 578.74)', '(29, 5787.4)', '(29, 57874)', '(2.95, 7.874)', '(2.95, 78.74)', '(2.95, 787.4)', '(2.95, 7874)', '(29.5, 7.874)', '(29.5, 78.74)', '(29.5, 787.4)', '(29.5, 7874)', '(295, 7.874)', '(295, 78.74)', '(295, 787.4)', '(295, 7874)', '(2.957, 8.74)', '(2.957, 87.4)', '(2.957, 874)', '(29.57, 8.74)', '(29.57, 87.4)', '(29.57, 874)', '(295.7, 8.74)', '(295.7, 87.4)', '(295.7, 874)', '(2957, 8.74)', '(2957, 87.4)', '(2957, 874)', '(2.9578, 7.4)', '(2.9578, 74)', '(29.578, 7.4)', '(29.578, 74)', '(295.78, 7.4)', '(295.78, 74)', '(2957.8, 7.4)', '(2957.8, 74)', '(29578, 7.4)', '(29578, 74)', '(2.95787, 4)', '(29.5787, 4)', '(295.787, 4)', '(2957.87, 4)', '(29578.7, 4)', '(295787, 4)']\nassert solution.ambiguousCoordinates(\"34573671081\") == ['(4, 5.7367108)', '(4, 57.367108)', '(4, 573.67108)', '(4, 5736.7108)', '(4, 57367.108)', '(4, 573671.08)', '(4, 5736710.8)', '(4, 57367108)', '(4.5, 7.367108)', '(4.5, 73.67108)', '(4.5, 736.7108)', '(4.5, 7367.108)', '(4.5, 73671.08)', '(4.5, 736710.8)', '(4.5, 7367108)', '(45, 7.367108)', '(45, 73.67108)', '(45, 736.7108)', '(45, 7367.108)', '(45, 73671.08)', '(45, 736710.8)', '(45, 7367108)', '(4.57, 3.67108)', '(4.57, 36.7108)', '(4.57, 367.108)', '(4.57, 3671.08)', '(4.57, 36710.8)', '(4.57, 367108)', '(45.7, 3.67108)', '(45.7, 36.7108)', '(45.7, 367.108)', '(45.7, 3671.08)', '(45.7, 36710.8)', '(45.7, 367108)', '(457, 3.67108)', '(457, 36.7108)', '(457, 367.108)', '(457, 3671.08)', '(457, 36710.8)', '(457, 367108)', '(4.573, 6.7108)', '(4.573, 67.108)', '(4.573, 671.08)', '(4.573, 6710.8)', '(4.573, 67108)', '(45.73, 6.7108)', '(45.73, 67.108)', '(45.73, 671.08)', '(45.73, 6710.8)', '(45.73, 67108)', '(457.3, 6.7108)', '(457.3, 67.108)', '(457.3, 671.08)', '(457.3, 6710.8)', '(457.3, 67108)', '(4573, 6.7108)', '(4573, 67.108)', '(4573, 671.08)', '(4573, 6710.8)', '(4573, 67108)', '(4.5736, 7.108)', '(4.5736, 71.08)', '(4.5736, 710.8)', '(4.5736, 7108)', '(45.736, 7.108)', '(45.736, 71.08)', '(45.736, 710.8)', '(45.736, 7108)', '(457.36, 7.108)', '(457.36, 71.08)', '(457.36, 710.8)', '(457.36, 7108)', '(4573.6, 7.108)', '(4573.6, 71.08)', '(4573.6, 710.8)', '(4573.6, 7108)', '(45736, 7.108)', '(45736, 71.08)', '(45736, 710.8)', '(45736, 7108)', '(4.57367, 1.08)', '(4.57367, 10.8)', '(4.57367, 108)', '(45.7367, 1.08)', '(45.7367, 10.8)', '(45.7367, 108)', '(457.367, 1.08)', '(457.367, 10.8)', '(457.367, 108)', '(4573.67, 1.08)', '(4573.67, 10.8)', '(4573.67, 108)', '(45736.7, 1.08)', '(45736.7, 10.8)', '(45736.7, 108)', '(457367, 1.08)', '(457367, 10.8)', '(457367, 108)', '(4.573671, 0.8)', '(45.73671, 0.8)', '(457.3671, 0.8)', '(4573.671, 0.8)', '(45736.71, 0.8)', '(457367.1, 0.8)', '(4573671, 0.8)', '(45736710, 8)']\nassert solution.ambiguousCoordinates(\"3956\") == ['(9, 5)']\nassert solution.ambiguousCoordinates(\"4108\") == ['(1, 0)']",
  "inefficient_solution": "class Solution:\n    def ambiguousCoordinates(self, s: str) -> List[str]:\n        def f(i, j):\n            res = []\n            for k in range(1, j - i + 1):\n                l = s[i : i + k]\n                r = s[i + k : j]\n                for p in range(j - i):\n                    for q in range(p, p + 3):\n                        for m in range(3):\n                            l1 = f\"{l[:q]}{l[q]}.{l[q + 1:m + 1]}\"\n                            l2 = f\"{l[:q]}.{l[q:q + 1]}{l[q + 1:m + 1]}\"\n                            r1 = f\"{r[:p]}{r[p]}.{r[p + 1:m + 1]}\"\n                            r2 = f\"{r[:p]}.{r[p:q]}{r[q:q + 1]}{r[q + 1:m + 1]}\"\n                            if (l1 == '0' or not l1.startswith('0')) and (r1 == '0' or not r1.startswith('0')):\n                                res.append(f\"({l1}, {r1})\")\n                                res.append(f\"({l2}, {r2})\")\n            return res\n\n        n = len(s)\n        return [f'({x}, {y})' for i in range(2, n - 1) for x in f(1, i) for y in f(i, n - 1) for _ in range(10000)]",
  "is_python": true
}