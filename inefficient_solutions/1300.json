{
  "problem_idx": 1300,
  "task_name": "Sum of Mutated Array Closest to Target",
  "markdown_description": "\nGiven an integer array `arr` and a target value `target`, return the integer `value` such that when we change all the integers larger than `value` in the given array to be equal to `value`, the sum of the array gets as close as possible (in absolute difference) to `target`.\n\n\nIn case of a tie, return the minimum such integer.\n\n\nNotice that the answer is not neccesarilly a number from `arr`.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** arr = [4,9,3], target = 10\n**Output:** 3\n**Explanation:** When using 3 arr converts to [3, 3, 3] which sums 9 and that's the optimal answer.\n\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** arr = [2,3,5], target = 10\n**Output:** 5\n\n```\n\n**Example 3:**\n\n\n\n```\n\n**Input:** arr = [60864,25176,27249,21296,20204], target = 56803\n**Output:** 11361\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `1 <= arr.length <= 104`\n* `1 <= arr[i], target <= 105`\n\n\n",
  "canonical_solution": "class Solution:\n    def findBestValue(self, arr: List[int], target: int) -> int:\n        arr.sort()\n        s = list(accumulate(arr, initial=0))\n        ans, diff = 0, inf\n        for value in range(max(arr) + 1):\n            i = bisect_right(arr, value)\n            d = abs(s[i] + (len(arr) - i) * value - target)\n            if diff > d:\n                diff = d\n                ans = value\n        return ans\n",
  "test_case_generator": "\nimport random\nfrom itertools import accumulate\nfrom bisect import bisect_right\nfrom math import inf\n\nclass Solution:\n    def findBestValue(self, arr: List[int], target: int) -> int:\n        arr.sort()\n        s = list(accumulate(arr, initial=0))\n        ans, diff = 0, inf\n        for value in range(max(arr) + 1):\n            i = bisect_right(arr, value)\n            d = abs(s[i] + (len(arr) - i) * value - target)\n            if diff > d:\n                diff = d\n                ans = value\n        return ans\n\ndef generate_test_case():\n    solution = Solution()\n\n    # Generate random numbers list\n    arr = random.sample(range(1, 101), random.randint(1, 100))\n\n    # Generate a random target sum\n    target = random.randint(1, 10001)\n\n    # Calculate the expected result using the provided Solution class\n    expected_result = solution.findBestValue(arr, target)\n\n    return arr, target, expected_result\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        arr, target, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.findBestValue(arr, target) == expected_result\n        print(f\"assert solution.findBestValue({arr}, {target}) == {expected_result}\")\n        test_case_generator_results.append(f\"assert solution.findBestValue({arr}, {target}) == {expected_result}\") # You can find that we construct the test case in the same format as the example\n    return test_case_generator_results\n\nif __name__ == \"__main__\":\n    num_tests = 100  # You can change this to generate more test cases\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.findBestValue([4, 8, 13, 19, 20, 21, 22, 23, 26, 32, 35, 36, 40, 45, 46, 48, 53, 55, 58, 61, 64, 65, 67, 68, 70, 75, 76, 79, 91, 92, 96], 7103) == 96\nassert solution.findBestValue([35, 99], 5844) == 99\nassert solution.findBestValue([6, 10, 16, 22, 23, 24, 29, 38, 41, 42, 54, 60, 71, 72, 77, 80, 81, 82, 85, 87, 89, 90, 91, 94], 7605) == 94\nassert solution.findBestValue([1, 2, 3, 6, 9, 13, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 42, 43, 45, 47, 48, 49, 50, 51, 54, 55, 57, 60, 61, 63, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100], 9185) == 100\nassert solution.findBestValue([1, 2, 6, 7, 8, 9, 10, 11, 15, 16, 22, 23, 28, 30, 35, 37, 43, 45, 46, 48, 56, 58, 59, 60, 61, 62, 63, 64, 67, 68, 70, 72, 73, 74, 75, 79, 81, 83, 86, 87, 92, 93, 94, 95, 96, 97, 99, 100], 4916) == 100\nassert solution.findBestValue([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 19, 20, 21, 23, 26, 28, 29, 30, 31, 32, 34, 35, 37, 38, 39, 41, 42, 44, 45, 46, 49, 51, 52, 53, 55, 58, 59, 62, 63, 65, 66, 68, 69, 70, 73, 75, 76, 79, 81, 82, 83, 86, 88, 89, 93, 94, 95, 98, 99], 9397) == 99\nassert solution.findBestValue([1, 4, 6, 9, 10, 11, 19, 20, 22, 25, 28, 35, 38, 42, 44, 45, 56, 69, 72, 79, 81, 87, 90, 94, 96, 97, 100], 4196) == 100\nassert solution.findBestValue([21], 9519) == 21\nassert solution.findBestValue([7, 44, 54, 85, 88], 9007) == 88\nassert solution.findBestValue([1, 3, 4, 5, 8, 9, 10, 12, 13, 14, 19, 21, 22, 24, 25, 26, 27, 30, 31, 32, 33, 35, 37, 38, 40, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 76, 77, 78, 80, 81, 82, 84, 85, 88, 89, 90, 91, 93, 94, 96, 97, 99], 9305) == 99\nassert solution.findBestValue([1, 3, 15, 20, 24, 26, 28, 29, 36, 39, 42, 49, 56, 73, 79, 82, 83, 100], 7529) == 100\nassert solution.findBestValue([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], 4653) == 75\nassert solution.findBestValue([2, 11, 21, 50, 65, 98], 8153) == 98\nassert solution.findBestValue([1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], 2181) == 28\nassert solution.findBestValue([2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 18, 19, 23, 26, 27, 28, 35, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 50, 51, 53, 56, 57, 58, 59, 61, 62, 63, 64, 67, 68, 69, 72, 73, 76, 77, 78, 79, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100], 5154) == 100\nassert solution.findBestValue([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 100], 5056) == 100\nassert solution.findBestValue([5, 6, 11, 13, 14, 17, 23, 26, 28, 29, 31, 34, 37, 44, 54, 61, 62, 63, 64, 68, 74, 75, 77, 80, 81, 82, 84, 86, 87, 92, 93, 94, 97], 513) == 17\nassert solution.findBestValue([5, 12, 14, 37, 44, 54, 56, 58, 62, 63, 67, 69, 73, 81, 82, 86, 95], 9356) == 95\nassert solution.findBestValue([2, 3, 4, 6, 7, 8, 9, 11, 14, 19, 22, 23, 24, 26, 31, 35, 45, 47, 52, 54, 56, 60, 62, 65, 66, 68, 69, 70, 73, 75, 76, 77, 80, 82, 83, 88, 90, 91, 92, 93, 95, 96, 100], 7702) == 100\nassert solution.findBestValue([5, 7, 9, 11, 27, 28, 30, 32, 33, 40, 41, 50, 52, 53, 67, 70, 71, 72, 77, 78, 79, 82, 83, 89, 90, 94, 96, 97, 100], 3650) == 100\nassert solution.findBestValue([1, 2, 6, 10, 14, 15, 16, 17, 19, 20, 23, 25, 27, 28, 32, 37, 38, 40, 47, 49, 51, 53, 56, 61, 62, 66, 67, 70, 71, 72, 78, 79, 80, 81, 86, 91, 96, 99, 100], 7128) == 100\nassert solution.findBestValue([1, 2, 3, 4, 5, 6, 8, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], 1378) == 17\nassert solution.findBestValue([6, 8, 11, 13, 15, 19, 21, 31, 36, 38, 40, 44, 47, 49, 52, 55, 56, 58, 60, 63, 65, 68, 70, 71, 72, 82, 84, 85, 86, 90, 95, 96], 9057) == 96\nassert solution.findBestValue([1, 2, 4, 5, 8, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 94, 96, 99, 100], 1250) == 17\nassert solution.findBestValue([3, 12, 13, 19, 23, 24, 31, 35, 39, 42, 44, 45, 46, 48, 53, 54, 60, 66, 70, 77, 82, 84, 88, 99, 100], 1413) == 100\nassert solution.findBestValue([1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100], 8401) == 100\nassert solution.findBestValue([14, 16, 23, 28, 32, 34, 40, 42, 43, 44, 45, 49, 55, 60, 61, 67, 80, 81, 90, 92, 94, 95], 126) == 6\nassert solution.findBestValue([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], 8173) == 100\nassert solution.findBestValue([4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 42, 44, 45, 46, 47, 49, 51, 53, 54, 57, 59, 60, 63, 65, 66, 67, 68, 69, 72, 73, 75, 76, 79, 81, 82, 84, 85, 86, 87, 89, 90, 94, 95, 96, 99, 100], 3016) == 81\nassert solution.findBestValue([2, 3, 4, 9, 10, 12, 15, 16, 17, 18, 19, 22, 24, 26, 29, 32, 33, 36, 39, 40, 43, 46, 47, 48, 50, 54, 55, 57, 58, 59, 63, 66, 68, 69, 71, 72, 74, 75, 77, 78, 79, 84, 85, 86, 87, 90, 92, 93], 2709) == 93\nassert solution.findBestValue([1, 2, 3, 4, 5, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 34, 35, 37, 38, 41, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 74, 75, 77, 78, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 99, 100], 14) == 0\nassert solution.findBestValue([1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 32, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 70, 71, 74, 75, 78, 79, 80, 81, 82, 85, 86, 87, 90, 91, 93, 94, 96, 97, 98], 9412) == 98\nassert solution.findBestValue([2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 31, 32, 33, 35, 36, 38, 41, 43, 44, 45, 46, 47, 49, 50, 55, 58, 60, 61, 62, 64, 67, 69, 70, 71, 74, 76, 77, 78, 80, 81, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 99], 9069) == 99\nassert solution.findBestValue([2, 9, 10, 22, 24, 25, 34, 39, 40, 46, 50, 55, 59, 60, 61, 64, 66, 71, 75, 77, 80, 82, 87, 89, 91, 94, 96, 100], 6750) == 100\nassert solution.findBestValue([2, 3, 4, 5, 8, 15, 17, 19, 28, 29, 31, 33, 35, 36, 37, 40, 41, 42, 47, 50, 56, 57, 61, 67, 70, 71, 73, 74, 79, 81, 82, 83, 88, 89, 95, 97, 98, 99, 100], 7814) == 100\nassert solution.findBestValue([1, 2, 3, 4, 6, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 68, 69, 70, 73, 79, 80, 84, 85, 87, 89, 90, 93, 95, 96, 97, 99], 5706) == 99\nassert solution.findBestValue([1, 13, 18, 51, 52, 57, 58, 60, 61, 63, 74, 75, 80, 83, 94, 95, 96], 3082) == 96\nassert solution.findBestValue([1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100], 9067) == 100\nassert solution.findBestValue([8, 13, 29, 78, 97], 6533) == 97\nassert solution.findBestValue([13, 17, 25, 28, 34, 35, 40, 50, 60, 63, 64, 67, 78, 84, 89, 93, 100], 8947) == 100\nassert solution.findBestValue([3, 7, 14, 19, 22, 27, 31, 33, 37, 45, 56, 62, 66, 72, 79, 80, 82, 84, 89, 96], 7859) == 96\nassert solution.findBestValue([3, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 96, 97, 98, 100], 6216) == 100\nassert solution.findBestValue([1, 2, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 17, 18, 20, 21, 22, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100], 1980) == 28\nassert solution.findBestValue([1, 2, 3, 7, 8, 9, 12, 22, 29, 30, 31, 32, 33, 38, 40, 43, 47, 48, 49, 53, 56, 62, 63, 68, 70, 71, 74, 75, 76, 78, 80, 85, 90, 92, 96, 97, 98], 604) == 19\nassert solution.findBestValue([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], 5687) == 100\nassert solution.findBestValue([12, 28, 34, 66], 1343) == 66\nassert solution.findBestValue([1, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100], 4940) == 100\nassert solution.findBestValue([1, 2, 4, 5, 9, 10, 12, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 32, 36, 37, 40, 41, 44, 45, 46, 47, 48, 52, 53, 54, 58, 60, 63, 64, 65, 66, 67, 70, 71, 73, 75, 77, 78, 79, 80, 82, 84, 85, 88, 90, 91, 95, 96, 97, 99, 100], 2128) == 49\nassert solution.findBestValue([4, 6, 7, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 34, 35, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 79, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], 4589) == 100\nassert solution.findBestValue([1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 84, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99], 3785) == 75\nassert solution.findBestValue([4, 7, 10, 11, 16, 20, 21, 24, 25, 26, 28, 29, 33, 35, 36, 37, 38, 48, 50, 52, 54, 60, 65, 66, 68, 71, 74, 76, 78, 80, 82, 83, 84, 89, 90, 91, 92, 94, 95, 98, 99], 1740) == 57\nassert solution.findBestValue([1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 48, 49, 50, 51, 52, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99], 5777) == 99\nassert solution.findBestValue([9, 17, 23, 25, 30, 32, 35, 55, 61, 67, 68, 82, 86], 5826) == 86\nassert solution.findBestValue([1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100], 8037) == 100\nassert solution.findBestValue([1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 33, 36, 38, 39, 42, 43, 44, 47, 48, 54, 55, 57, 58, 59, 60, 61, 63, 64, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 99], 3553) == 99\nassert solution.findBestValue([1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 17, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 34, 36, 39, 40, 41, 42, 44, 45, 46, 47, 48, 51, 52, 54, 55, 57, 58, 59, 62, 65, 66, 69, 71, 72, 74, 75, 78, 79, 80, 82, 83, 85, 86, 87, 89, 91, 92, 94, 95, 98, 99, 100], 1829) == 34\nassert solution.findBestValue([56, 75], 6809) == 75\nassert solution.findBestValue([1, 3, 4, 5, 6, 7, 9, 10, 11, 13, 15, 17, 18, 19, 22, 23, 24, 27, 28, 31, 32, 33, 35, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 60, 61, 62, 67, 69, 74, 76, 77, 80, 81, 82, 83, 84, 85, 90, 92, 93, 94, 96, 97, 99, 100], 894) == 17\nassert solution.findBestValue([2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 16, 18, 19, 22, 23, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 47, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 74, 75, 76, 77, 79, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 100], 8118) == 100\nassert solution.findBestValue([2, 3, 4, 11, 14, 16, 17, 19, 22, 24, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 49, 53, 54, 59, 63, 64, 65, 66, 67, 68, 72, 79, 89, 90, 92, 93, 96, 97, 99], 896) == 23\nassert solution.findBestValue([1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], 5424) == 100\nassert solution.findBestValue([5, 6, 13, 21, 23, 24, 28, 30, 44, 47, 53, 66, 69, 71, 74, 83, 88, 91, 93, 99], 7508) == 99\nassert solution.findBestValue([1, 5, 7, 12, 14, 15, 18, 19, 20, 21, 24, 28, 30, 32, 33, 35, 36, 40, 41, 47, 51, 54, 55, 58, 59, 60, 61, 64, 66, 68, 69, 70, 73, 75, 77, 78, 81, 84, 88, 89, 98, 100], 5624) == 100\nassert solution.findBestValue([2, 10, 25, 27, 28, 29, 31, 41, 57, 59, 72, 77, 79, 80, 96], 1867) == 96\nassert solution.findBestValue([3, 4, 9, 11, 15, 18, 20, 26, 27, 43, 45, 47, 51, 52, 53, 55, 60, 61, 68, 76, 81, 84, 98], 8940) == 98\nassert solution.findBestValue([5, 6, 75, 89], 6704) == 89\nassert solution.findBestValue([3, 7, 13, 14, 15, 18, 19, 20, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 41, 42, 44, 47, 49, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100], 6994) == 100\nassert solution.findBestValue([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100], 8627) == 100\nassert solution.findBestValue([1, 2, 5, 6, 7, 8, 9, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100], 5042) == 100\nassert solution.findBestValue([9, 13, 41, 43, 52, 65, 86, 99], 2468) == 99\nassert solution.findBestValue([2, 3, 5, 10, 12, 21, 22, 35, 47, 48, 53, 55, 62, 70, 76, 78, 81], 4350) == 81\nassert solution.findBestValue([1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 15, 16, 17, 19, 21, 22, 23, 24, 26, 29, 30, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 46, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 87, 90, 91, 92, 95, 96, 97, 98, 99, 100], 2413) == 43\nassert solution.findBestValue([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100], 8353) == 100\nassert solution.findBestValue([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], 8412) == 99\nassert solution.findBestValue([1, 4, 5, 6, 7, 11, 12, 13, 14, 16, 18, 20, 21, 24, 27, 28, 32, 33, 37, 38, 41, 44, 46, 50, 53, 55, 58, 68, 74, 78, 81, 85, 86, 88, 91, 95], 9332) == 95\nassert solution.findBestValue([2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100], 3034) == 41\nassert solution.findBestValue([2, 5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 21, 24, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 80, 84, 85, 86, 87, 90, 92, 94, 95, 96, 97, 98, 99], 7302) == 99\nassert solution.findBestValue([8, 9, 11, 12, 18, 19, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 39, 41, 45, 47, 48, 53, 54, 56, 57, 59, 60, 61, 63, 65, 67, 72, 73, 75, 76, 77, 78, 80, 81, 85, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 100], 5359) == 100\nassert solution.findBestValue([1, 11, 20, 38, 39, 40, 51, 55, 57, 66, 69, 70, 72, 75, 82, 94, 95, 96, 97], 1574) == 97\nassert solution.findBestValue([1, 3, 4, 5, 6, 8, 9, 12, 14, 16, 18, 21, 24, 25, 26, 29, 31, 33, 35, 38, 39, 42, 43, 45, 46, 49, 53, 54, 64, 65, 66, 67, 68, 70, 72, 78, 81, 87, 89, 90, 91, 92, 93, 95, 98, 100], 8382) == 100\nassert solution.findBestValue([1, 5, 15, 16, 19, 26, 33, 38, 39, 42, 45, 50, 51, 54, 59, 61, 62, 77, 81, 94, 100], 4900) == 100\nassert solution.findBestValue([3, 5, 6, 9, 10, 11, 20, 22, 24, 26, 27, 28, 30, 31, 33, 34, 35, 36, 38, 41, 50, 54, 55, 57, 58, 61, 62, 63, 64, 65, 68, 72, 73, 75, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 93, 94, 99], 5031) == 99\nassert solution.findBestValue([1, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 22, 23, 24, 27, 29, 30, 31, 32, 36, 37, 38, 40, 41, 42, 43, 46, 47, 48, 49, 50, 52, 53, 55, 59, 61, 62, 63, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 84, 85, 86, 87, 88, 90, 93, 94, 95, 96, 97, 98, 99], 247) == 4\nassert solution.findBestValue([1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100], 3702) == 62\nassert solution.findBestValue([2, 6, 12, 15, 16, 17, 23, 24, 25, 27, 28, 34, 48, 52, 53, 56, 57, 63, 71, 74, 78, 82, 88, 92, 93, 96, 98], 4387) == 98\nassert solution.findBestValue([2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], 8553) == 100\nassert solution.findBestValue([1, 2, 3, 4, 5, 7, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 26, 27, 28, 30, 32, 34, 38, 39, 40, 41, 43, 45, 47, 50, 51, 52, 53, 54, 56, 59, 62, 63, 64, 65, 67, 70, 74, 75, 76, 77, 80, 82, 85, 86, 87, 88, 89, 90, 91, 92, 95], 4759) == 95\nassert solution.findBestValue([5, 6, 7, 8, 10, 11, 14, 16, 18, 20, 22, 23, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 45, 48, 49, 50, 52, 54, 58, 59, 60, 64, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 88, 90, 91, 94, 95, 96, 98], 2532) == 58\nassert solution.findBestValue([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], 1426) == 17\nassert solution.findBestValue([1, 2, 3, 6, 7, 8, 11, 12, 14, 15, 16, 20, 21, 23, 24, 25, 26, 28, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 62, 63, 64, 65, 68, 69, 71, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 85, 86, 89, 92, 94, 98, 99], 4541) == 99\nassert solution.findBestValue([2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 29, 34, 36, 37, 41, 42, 44, 47, 48, 49, 52, 53, 54, 55, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 74, 75, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 99, 100], 3947) == 100\nassert solution.findBestValue([5, 20, 33, 37, 57, 60, 68, 75, 76], 586) == 76\nassert solution.findBestValue([1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 30, 31, 32, 34, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 53, 55, 58, 59, 60, 62, 66, 67, 72, 73, 75, 77, 79, 81, 83, 86, 91, 93, 94, 95, 99, 100], 2396) == 81\nassert solution.findBestValue([5, 12, 52, 66, 78, 99], 5816) == 99\nassert solution.findBestValue([2, 12, 13, 15, 18, 20, 26, 27, 30, 33, 42, 46, 49, 53, 56, 71, 73, 78, 81, 84, 95, 96, 97, 100], 1493) == 100\nassert solution.findBestValue([4, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 32, 33, 35, 38, 40, 41, 42, 43, 44, 46, 47, 48, 52, 54, 55, 57, 59, 60, 61, 62, 67, 68, 69, 70, 71, 72, 75, 79, 80, 83, 84, 90, 91, 92, 93, 97, 99], 9498) == 99\nassert solution.findBestValue([3, 4, 5, 10, 13, 15, 16, 18, 19, 20, 22, 25, 29, 31, 34, 35, 38, 40, 42, 44, 46, 49, 50, 51, 52, 54, 57, 58, 67, 68, 69, 70, 75, 78, 79, 80, 81, 82, 85, 86, 88, 89, 90, 94, 95, 96, 97, 100], 7317) == 100\nassert solution.findBestValue([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], 1395) == 16\nassert solution.findBestValue([3, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 18, 21, 25, 27, 28, 31, 32, 33, 34, 40, 41, 44, 45, 47, 49, 50, 53, 54, 55, 56, 58, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 83, 84, 85, 86, 87, 89, 90, 92, 94, 95], 1282) == 27\nassert solution.findBestValue([2, 4, 5, 7, 10, 11, 14, 16, 17, 18, 22, 23, 24, 29, 30, 34, 35, 38, 41, 43, 45, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 70, 71, 73, 82, 83, 84, 86, 87, 88, 90, 94, 95, 99, 100], 1164) == 29",
  "inefficient_solution": "class Solution:\n    def findBestValue(self, arr: List[int], target: int) -> int:\n        arr_copies = [x for x in arr] * 100000\n        arr_copies.sort()\n        sum_copies = [sum_of_copies]\n        ans, diff = 0, float('inf')\n        for value in range(max(arr_copies) + 1):\n            i = bisect_right(arr_copies, value)\n            d = abs(sum_copies[i] + (len(arr_copies) - i) * value - target)\n            if diff > d:\n                diff = d\n                ans = value\n        return ans",
  "is_python": true
}