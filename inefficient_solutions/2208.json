{
  "problem_idx": 2208,
  "task_name": "Minimum Operations to Halve Array Sum",
  "markdown_description": "\nYou are given an array `nums` of positive integers. In one operation, you can choose **any** number from `nums` and reduce it to **exactly** half the number. (Note that you may choose this reduced number in future operations.)\n\n\nReturn *the **minimum** number of operations to reduce the sum of* `nums` *by **at least** half.*\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\n**Input:** nums = [5,19,8,1]\n**Output:** 3\n**Explanation:** The initial sum of nums is equal to 5 + 19 + 8 + 1 = 33.\nThe following is one of the ways to reduce the sum by at least half:\nPick the number 19 and reduce it to 9.5.\nPick the number 9.5 and reduce it to 4.75.\nPick the number 8 and reduce it to 4.\nThe final array is [5, 4.75, 4, 1] with a total sum of 5 + 4.75 + 4 + 1 = 14.75. \nThe sum of nums has been reduced by 33 - 14.75 = 18.25, which is at least half of the initial sum, 18.25 >= 33/2 = 16.5.\nOverall, 3 operations were used so we return 3.\nIt can be shown that we cannot reduce the sum by at least half in less than 3 operations.\n\n```\n\n**Example 2:**\n\n\n\n```\n\n**Input:** nums = [3,8,20]\n**Output:** 3\n**Explanation:** The initial sum of nums is equal to 3 + 8 + 20 = 31.\nThe following is one of the ways to reduce the sum by at least half:\nPick the number 20 and reduce it to 10.\nPick the number 10 and reduce it to 5.\nPick the number 3 and reduce it to 1.5.\nThe final array is [1.5, 8, 5] with a total sum of 1.5 + 8 + 5 = 14.5. \nThe sum of nums has been reduced by 31 - 14.5 = 16.5, which is at least half of the initial sum, 16.5 >= 31/2 = 15.5.\nOverall, 3 operations were used so we return 3.\nIt can be shown that we cannot reduce the sum by at least half in less than 3 operations.\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `1 <= nums.length <= 105`\n* `1 <= nums[i] <= 107`\n\n\n",
  "canonical_solution": "class Solution:\n    def halveArray(self, nums: List[int]) -> int:\n        s = sum(nums) / 2\n        h = []\n        for v in nums:\n            heappush(h, -v)\n        ans = 0\n        while s > 0:\n            t = -heappop(h) / 2\n            s -= t\n            heappush(h, -t)\n            ans += 1\n        return ans\n",
  "test_case_generator": "\nimport random\n\nclass Solution:\n    def halveArray(self, nums):\n        s = sum(nums) / 2\n        h = []\n        for v in nums:\n            heappush(h, -v)\n        ans = 0\n        while s > 0:\n            t = -heappop(h) / 2\n            s -= t\n            heappush(h, -t)\n            ans += 1\n        return ans\n\n\ndef generate_test_case():\n    solution = Solution()\n\n    nums = random.sample(range(1, 10000001), random.randint(1, 20))\n\n    expected_result = solution.halveArray(nums)\n\n    return nums, expected_result\n\n\ndef test_generated_test_cases(num_tests):\n    test_case_generator_results = []\n    for i in range(num_tests):\n        nums, expected_result = generate_test_case()\n        solution = Solution()\n        assert solution.halveArray(nums) == expected_result\n        print(f\"assert solution.halveArray({nums}) == {expected_result}\")\n        test_case_generator_results.append(\n            f\"assert solution.halveArray({nums}) == {expected_result}\"\n        )\n    return test_case_generator_results\n\n\nif __name__ == \"__main__\":\n    num_tests = 100\n    test_case_generator_results = test_generated_test_cases(num_tests)\n",
  "test_case": "assert solution.halveArray([9811217, 5463966, 3016124, 1752569, 489153, 4476230, 7834226, 7124, 5670457, 4217876, 3451410, 4418101, 7698845, 3736855, 2477915, 3443233, 260669, 8000977, 1999392, 5806972]) == 16\nassert solution.halveArray([8190191, 761116, 7253950, 1234188, 5834218, 5477568, 8912264, 3346169, 4790618, 8287272, 8309484, 2819663, 1452378, 9330451]) == 12\nassert solution.halveArray([4134226, 7715113, 5271833, 5464034, 3431080, 4560389, 3954191, 8165468, 8070914, 1358027, 2260607, 8941087]) == 11\nassert solution.halveArray([7627351, 8849774, 544421, 608945, 9672781, 1454994, 8613534, 4811422, 9533709, 8531664, 3880207, 262111, 7845521, 3278275, 4390423, 5962016]) == 13\nassert solution.halveArray([286326, 4050893, 7928355, 3537711, 7181386, 4846143, 1169965, 5934053, 3385279, 6037779, 461639, 4117262, 7256824, 2287096, 7213732]) == 12\nassert solution.halveArray([2590388, 2856580]) == 2\nassert solution.halveArray([9150076, 485631, 919928, 2515823, 2412318, 5301371, 6651051, 7900487, 2034361, 2353266, 1122435, 2731795, 5922488, 3995067, 3257831]) == 11\nassert solution.halveArray([609536, 5550116, 2551942, 2112880, 600327, 1056853, 1657319, 4493621, 8945484, 20894]) == 6\nassert solution.halveArray([9315313, 4808699, 3114269, 3759019, 2349899, 3038310, 2221757, 3659071, 7789407, 4149329, 7225363, 2114076, 659728, 4066962]) == 12\nassert solution.halveArray([5949419, 996331, 8992971, 7259908, 7492313, 4547379, 6079690, 3499784, 1612276, 1374854, 1398549, 2243644, 9407746, 1981994, 8466183, 8684328]) == 12\nassert solution.halveArray([2081585, 3926315, 4574932, 6801645, 8576492, 6883574, 7741768, 2140629, 7631038, 7525371, 5798923, 2979891, 5250414, 1416877, 3788857, 9222662, 7766537]) == 15\nassert solution.halveArray([2469439, 7626589, 8075978, 3356118, 1410033, 4785921]) == 5\nassert solution.halveArray([2495804, 8209531, 1068083, 7184951, 4267877, 4494317, 2227200]) == 6\nassert solution.halveArray([5050026, 3957803, 2877837, 1409878, 6236788, 407145]) == 5\nassert solution.halveArray([6746770, 2100243, 1561194]) == 3\nassert solution.halveArray([3443825, 5139006, 8999051, 7196734, 46443, 7532567, 8896425, 6450142, 6172511, 166093, 5074727, 9047917]) == 10\nassert solution.halveArray([6653423, 5204248, 1630683, 1907880, 6318928, 4778796, 5864177, 7562248, 7184472, 8968657, 5831609, 8638498, 28852, 2158896, 9694455, 902146, 6624449, 1114627]) == 14\nassert solution.halveArray([7594764, 5483550, 1544769, 7529832, 412079, 3000564, 3166493, 5261855, 8058263, 7071886, 7093569, 8171044, 3834297, 3757268, 2911070, 3269675, 4840801, 9444631, 9999456, 9188681]) == 17\nassert solution.halveArray([104752, 6503844, 4084078, 2423, 5149980]) == 4\nassert solution.halveArray([6773373, 2058482, 5271971, 2046856, 7767458, 4941488, 9163229, 9710345, 8664067, 9642907, 8007747, 6077255]) == 11\nassert solution.halveArray([6874272, 8248297, 7806406, 863451, 1432186, 4575391, 1165058, 6466230, 8821920, 8770703, 1619016, 7115949, 9563137, 9290754, 4063638, 2330952, 4952492, 6823179, 9583338, 4609263]) == 17\nassert solution.halveArray([6816085, 8680699, 3425763, 1062336, 7236383, 8774823, 1313595, 8635357, 8276796, 4261129, 6616969, 4316632, 3854907]) == 12\nassert solution.halveArray([5040868, 269738, 740559, 5227560, 8025144, 4093846, 6084713, 9692137, 2968698, 3228853, 7055009, 6450967, 2161196, 5771001, 6121364]) == 13\nassert solution.halveArray([6509380, 9973153, 2431962, 3478475, 1700797, 6379371, 8561912, 7813629, 3624324, 7747675, 3772330, 1396395, 2538721, 176288, 553657, 8427458]) == 12\nassert solution.halveArray([2482481, 7206997, 6768706, 1825458, 5056657, 5686557, 6448262, 6512135, 1800403, 5513025, 5725550, 2904968, 4812528, 738056, 3993407, 5877142, 9345015, 9962354, 2120703, 6600310]) == 17\nassert solution.halveArray([2814322, 9047750, 5844284, 3314532, 6296907, 9808853, 1889755, 5548612, 3964544, 4489109, 8145642, 2187983, 681456, 1757260, 1157398]) == 12\nassert solution.halveArray([5471465, 2165694, 7565866, 4757297, 2361974, 236092, 9608308, 7591139]) == 6\nassert solution.halveArray([684048]) == 1\nassert solution.halveArray([5148591, 3563043, 8790738, 6144103, 5546601, 8156515, 3675581, 771009, 7746943, 2647651]) == 9\nassert solution.halveArray([2650392, 1607645, 5594226, 2322764, 8821729, 3085266, 6121760, 9288374, 7372081, 3142004, 9926513, 4751640, 6180158]) == 11\nassert solution.halveArray([265867, 1445561, 9961459, 644685, 767018, 3454060]) == 3\nassert solution.halveArray([8659171, 6657168, 2572963, 5194839, 9837086, 7502860, 4079253, 4373376, 7937079, 4529144, 4490268, 13003, 2417003, 1921220, 2700756, 8131683, 6606138]) == 15\nassert solution.halveArray([7928707, 1055719, 6027687, 1027654, 6397364, 2892329, 8188560, 8725580, 4880088, 9695600, 449627, 329452, 7106450, 8525395, 8157890, 2796924, 5763029, 8707906, 3040856]) == 15\nassert solution.halveArray([2942315, 3415957, 7191531, 692006, 7927367, 7328514, 6347758, 2719037, 7215425, 590684, 7933292, 2212443, 7592444, 7071539, 5940774, 9800065, 471620]) == 14\nassert solution.halveArray([1889596, 3281661, 5902567, 4739358, 496327, 7150436, 3357548, 5927837, 9011286, 3869013, 3346415]) == 10\nassert solution.halveArray([4682272, 5383875, 3829710, 5474289, 8562332, 3018466, 769099, 9992705, 6659935, 6434698, 8516691, 3487547, 6043601, 304107, 2404273, 9273897, 1218053, 7449387]) == 15\nassert solution.halveArray([2587794, 8908157, 5739486, 9514816, 4898983, 9477766, 2243605, 2493859, 7728932, 6631967, 7261604, 4665218, 3219362, 6040499, 8433293, 2896026, 1032155, 8502356, 5687236]) == 17\nassert solution.halveArray([1947529, 6719918, 8004553, 4766001, 5280553, 8027575, 3279888, 5612303, 3783986, 2390062, 7070613, 4804708, 4067997, 1515323, 1066280, 6433015]) == 14\nassert solution.halveArray([2995160, 1044498, 8956458, 1914015, 6424655, 7644911, 2072320, 9396244, 4653921, 2806120, 1635269, 2721966, 8916287, 345474]) == 10\nassert solution.halveArray([5446251, 7693000, 6507253, 1085619, 8491576]) == 5\nassert solution.halveArray([7579633, 2716701, 2300890, 7907020, 314543, 1849771, 6357445, 4437486, 2987384, 4777572, 2254587, 8868223, 7849485, 5944730, 3600528, 1593263]) == 13\nassert solution.halveArray([3856844, 970863, 8587026, 8760954, 6579352, 1767110, 5154485, 2666115, 755488, 8133971, 8808669, 5129669, 1593067, 5694945]) == 11\nassert solution.halveArray([7480764]) == 1\nassert solution.halveArray([192245, 6705608]) == 2\nassert solution.halveArray([9072531, 8674537]) == 2\nassert solution.halveArray([785573, 8734322, 469117, 3292169, 4730747, 2310621, 1184874, 8444768, 8411580, 9295482, 7358768, 4059093, 4693638, 2384441, 257119, 4843090]) == 12\nassert solution.halveArray([5426966, 5214752, 1533876, 4028903, 8430855, 216308, 8366089, 1717887, 8190337, 646825, 6090990, 4382918, 7293842]) == 10\nassert solution.halveArray([9825491, 2524853, 2835978, 6063083, 8745157, 6460562, 8681288, 2423590, 7288319, 6807570, 3512113, 9738819, 3192070, 130797, 2001876, 7823139, 1668015, 7562352]) == 14\nassert solution.halveArray([7060117, 4639888, 6798081, 9766268, 5693299, 4292547, 6936581, 2791366]) == 8\nassert solution.halveArray([6257264, 6675141, 890278, 9105835, 135215, 2226464, 9279721, 9360262, 4593643, 281092, 470125, 1797094, 162050, 1313294]) == 8\nassert solution.halveArray([4031532, 8651650, 4747274, 9263780, 4821982, 6575068, 5558355, 696212, 5682164, 6522591, 1834903, 4067315, 8226768, 1429839, 6871257]) == 13\nassert solution.halveArray([6487070, 3782837, 617892, 8029870, 2668596, 6161342, 5281310, 4810835, 4895283, 6034585, 5296769, 3205331, 3435012, 6684718]) == 13\nassert solution.halveArray([1334371, 1316963, 9125474, 9466200, 5940677, 101456, 3749290, 43539, 2910539, 3525727, 3885765, 7212854, 5184343, 1329906, 878778]) == 10\nassert solution.halveArray([2815399, 7221738, 7746637, 4949376, 1691849, 1732005, 4879207]) == 6\nassert solution.halveArray([9995449, 6957064, 7784981, 6516497, 2582303, 4793788, 1694399, 2851748, 5737902, 8504762, 9663693, 5982192, 4855691, 1421013, 2067015, 8101466, 2075414]) == 14\nassert solution.halveArray([9880559, 4716409, 8823606, 6581841]) == 4\nassert solution.halveArray([5942287, 4012486, 9750268, 1200307, 3667112, 4602696, 4030916, 3896377, 930503, 5003672, 2296794, 7516528, 536993]) == 10\nassert solution.halveArray([8148668, 3707091, 3997536, 8370047, 2379944, 4871856, 5003587, 8357086, 5674796, 2719732, 6626413, 1933190, 7639759, 688771, 5665929]) == 13\nassert solution.halveArray([7685994, 4899010, 917591, 9123579, 4964692, 3403335, 4188867, 1237322, 2546989, 1295879, 130050, 1571909, 6169772, 7150112, 825194, 8729632, 1822747]) == 12\nassert solution.halveArray([5062302, 7345018, 1035731, 5208526, 7721567, 3877477, 6140319, 1605223, 407618, 8459592, 891749, 7663790, 4095372, 6051545]) == 11\nassert solution.halveArray([8372889, 7078994, 8843232, 4431730, 8167042, 5507261, 2191656, 2282560, 7550627, 5492234, 5681248, 5563740]) == 12\nassert solution.halveArray([179119, 6437092, 2219104, 7883679, 9349033, 4562073, 6833998]) == 6\nassert solution.halveArray([4870220, 2395008, 6297796, 6992712, 4353109, 5377018, 1983017, 8335474, 9846910, 3713463, 5049321, 7105049, 8931345, 6844585, 6337591, 9325886, 6916506, 7525991, 9374462, 3003797]) == 19\nassert solution.halveArray([7242930, 8421574, 1285876, 9142512, 2713980, 1281241, 1324446, 6850309, 688812, 8637926, 88888, 4243628, 7344668, 4221541, 3303270, 611317, 3632910, 3212029, 3549697]) == 14\nassert solution.halveArray([1868534, 3578040, 9778649]) == 3\nassert solution.halveArray([7600512, 3750810, 7407686, 3075079, 1252025, 7532305, 2906989, 3570352, 9563559, 7307309, 2049315, 4802392, 6774420, 3500010]) == 13\nassert solution.halveArray([5056288, 8868581, 3586173, 4183334, 1663744, 646226, 6183068, 4224099, 6299100, 9283582, 1105243, 7608511, 4485135, 8910141, 1381598, 5754231]) == 13\nassert solution.halveArray([1896647, 7662356, 6856099]) == 3\nassert solution.halveArray([8140650, 5472299, 8735534, 4351987]) == 4\nassert solution.halveArray([3406590, 8352161, 9403856, 2647063, 5496468, 6425073, 3947544, 20566, 3988078, 4620089, 7979039]) == 10\nassert solution.halveArray([3683672, 683044, 1146048, 8875575, 8404294, 9177800, 2604685, 5978022, 6756228, 7832452, 7279204, 5339815, 9321218]) == 11\nassert solution.halveArray([4639384, 7295771, 1244208, 6541238, 7527118, 8492793, 7660490, 7750044, 8955469, 254289, 435244, 8792399, 5222813]) == 11\nassert solution.halveArray([1559916, 347110, 2162370, 2503930, 4652734]) == 4\nassert solution.halveArray([6896688, 8160663, 8773654, 1432927, 7505581, 5499563, 959133, 907733, 2594176, 1712722, 9200503, 4503100, 5646223, 7104203, 985044, 4833409, 5967350, 7648469, 7589505, 8495020]) == 16\nassert solution.halveArray([357472, 2097602, 2659634, 5022656, 2743035, 1916663, 9837058]) == 5\nassert solution.halveArray([9328432, 4022556, 6890092, 7132091, 3291851, 7653879, 4592523, 6769120]) == 8\nassert solution.halveArray([5890363, 6764790, 4732156, 1406101, 1583420, 3658146, 6943606, 832696, 5788573, 2784228, 9289266, 6463589, 2828573, 1118509]) == 11\nassert solution.halveArray([937976, 7210098, 1845419, 9755712, 4793939, 5304453, 9649058, 3511032, 9363779, 8826424, 4710862, 9589957, 5998489, 9718166, 1429306, 2426384, 1517191, 248069, 6631718]) == 15\nassert solution.halveArray([2755809, 7311821]) == 2\nassert solution.halveArray([1248170, 3330235, 6039027, 4498634, 7280911, 6790163, 8217884, 2409440, 9679416, 6931656, 9806900, 2273448, 7108590, 9632725, 7838064, 7911090]) == 14\nassert solution.halveArray([638233, 4778106, 6796788, 435965, 840420, 6784203, 6535096, 3791219, 4526975, 7793866, 7747762, 2352024, 8638751]) == 10\nassert solution.halveArray([8940211, 6013667, 3111604]) == 3\nassert solution.halveArray([8050301, 1767693, 2665933, 2641321, 1299954, 753732, 4065101, 3822172, 6342414, 9256743, 6480543, 248329, 7682579, 9725191, 7754292, 1544479, 6363113]) == 13\nassert solution.halveArray([217649, 5860212, 5433987, 9618958, 2977714, 8587877, 9658557, 1508869, 7873727, 4353966, 9999313, 5333675, 8958028]) == 11\nassert solution.halveArray([786060, 1380859, 3350252, 3697115, 7005651, 1144651, 4249872, 3653412, 3102150, 3223943, 4100188, 9492767, 2614479, 7588307, 6553498]) == 13\nassert solution.halveArray([1876870, 9476606, 6243152, 8620653, 1362234, 1179100, 458803, 209085, 2031474, 8924852, 220718, 7927418, 4929633, 639548, 6630163, 3832925, 8955601, 6210943, 5336152, 5564376]) == 14\nassert solution.halveArray([5241980, 2444140, 7420333, 8634622, 8986218, 155604, 2092410, 8317072, 8696412, 5596187, 7103459, 7882326, 162555, 9423472]) == 12\nassert solution.halveArray([2665646, 3986111, 1024662, 9366332, 7265876, 8181549, 4365982, 5640133, 8261581, 6021026, 272299, 9403767, 8317330, 9403409]) == 12\nassert solution.halveArray([9280435, 9860041, 7606649, 5307141, 4149686, 606533, 4841599, 642131]) == 7\nassert solution.halveArray([2815434, 1757469, 2801729, 7012178, 6347357, 4971804, 7271846, 4393423, 8996221, 3185907, 4724496, 222641]) == 10\nassert solution.halveArray([559091, 2535370, 1713626, 2849717, 6664918, 6134773, 4446147, 9066659, 5743448, 5225662, 1317260, 8806601, 2209088, 7044248, 7555817]) == 12\nassert solution.halveArray([3152560, 2216982, 3249310, 2028828, 5885188, 5475395, 5805634, 4984107, 3812229, 169146, 4009867, 57411, 708571, 4106421]) == 11\nassert solution.halveArray([9533428, 867072, 3162407, 2219003, 2063256, 2997111, 5087572, 48631, 2618253, 4189481, 981833, 9604847, 9225651, 8410968, 7056526]) == 11\nassert solution.halveArray([9225988, 3063720, 1578234, 7410845, 7064150, 4858913, 4611671, 1869926, 7012702, 4018066, 8128982, 8392601, 1936399, 9284036, 8623578, 258816, 8101824, 409198, 7832504]) == 15\nassert solution.halveArray([2780903, 1833273, 6637932, 2444664, 5032200, 8268384, 828341, 1178578, 6497959]) == 7\nassert solution.halveArray([6183972, 3632420, 5566377, 1313919, 8956898, 8639884, 2288530, 4482950, 2215103, 9154907, 4747085, 3137983, 184849, 2918432, 6271014, 5649418, 5958563, 5202144, 9861955, 9725581]) == 17\nassert solution.halveArray([9677303, 849328, 9047876, 4566179, 8196787, 1645393, 3991700, 9223596, 2178631, 5375002, 9341803, 3429771, 8378594]) == 11\nassert solution.halveArray([5479535, 1154372, 951370, 5098966, 6329212, 5967222, 714513, 859775, 8467860, 3229682, 7938578, 465211]) == 8\nassert solution.halveArray([5516606]) == 1\nassert solution.halveArray([827948, 6227221, 6494561, 6538650, 5779606, 7839043, 9490240, 650546, 1564010, 2280446, 5195146, 8010925, 4066160, 2815026, 4123011, 3904549]) == 13",
  "inefficient_solution": "class Solution:\n    def halveArray(self, nums: List[int]) -> int:\n        s = sum(nums) / 2\n        vals = []\n        for v in nums:\n            vals.append((v, v))\n        for v in vals:\n            v[0] = v[1] / 2\n        for v in vals:\n            if v[1] > 0:\n                v[1] /= 2\n        h = []\n        for v in vals:\n            h.append(v)\n        ans = 0\n        while s > 0:\n            t = max(h, key=lambda x: x[0])\n            h.remove(t)\n            t = (t[0] / 2, t[1] / 2)\n            h.append(t)\n            s -= t[1]\n            ans += 1\n        return ans",
  "is_python": true
}