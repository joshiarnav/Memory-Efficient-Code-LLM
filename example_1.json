{
  "non_functional_requirement": "memory",
  "commit": "https://github.com/aaronjwood/PortAuthority/commit/b311d3140b4845eb56d20a40c4577f14c05d2404",
  "commit_message": "'\\\\\"Avoid potential resource leak\\\\n\\\\\"'",
  "source_code": "package com.aaronjwood.portauthority.network;\n\nimport android.app.Activity;\nimport android.database.Cursor;\n\nimport com.aaronjwood.portauthority.async.ScanPortsAsyncTask;\nimport com.aaronjwood.portauthority.db.Database;\nimport com.aaronjwood.portauthority.response.HostAsyncResponse;\n\npublic class Host {\n\n    /**\n     * Starts a port scan\n     *\n     * @param ip        IP address\n     * @param startPort The port to start scanning at\n     * @param stopPort  The port to stop scanning at\n     * @param delegate  Delegate to be called when the port scan has finished\n     */\n    public void scanPorts(String ip, int startPort, int stopPort, HostAsyncResponse delegate) {\n        new ScanPortsAsyncTask(delegate).execute(ip, startPort, stopPort);\n    }\n\n    /**\n     * Fetches the MAC vendor from the database\n     *\n     * @param mac      MAC address\n     * @param activity The calling activity\n     */\n    public String getMacVendor(String mac, Activity activity) {\n        Database db = new Database(activity);\n        Cursor cursor = db.queryDatabase(\"oui.db\", \"SELECT vendor FROM oui WHERE mac LIKE ?\", new String[]{mac});\n        if (cursor != null && cursor.moveToFirst()) {\n            String value = cursor.getString(cursor.getColumnIndex(\"vendor\"));\n            cursor.close();\n            db.close();\n            return value;\n        } else {\n            return \"Vendor not in database\";\n        }\n    }\n\n}\n",
  "target_code": "package com.aaronjwood.portauthority.network;\n\nimport android.app.Activity;\nimport android.database.Cursor;\n\nimport com.aaronjwood.portauthority.async.ScanPortsAsyncTask;\nimport com.aaronjwood.portauthority.db.Database;\nimport com.aaronjwood.portauthority.response.HostAsyncResponse;\n\npublic class Host {\n\n    /**\n     * Starts a port scan\n     *\n     * @param ip        IP address\n     * @param startPort The port to start scanning at\n     * @param stopPort  The port to stop scanning at\n     * @param delegate  Delegate to be called when the port scan has finished\n     */\n    public void scanPorts(String ip, int startPort, int stopPort, HostAsyncResponse delegate) {\n        new ScanPortsAsyncTask(delegate).execute(ip, startPort, stopPort);\n    }\n\n    /**\n     * Fetches the MAC vendor from the database\n     *\n     * @param mac      MAC address\n     * @param activity The calling activity\n     */\n    public String getMacVendor(String mac, Activity activity) {\n        Database db = new Database(activity);\n        Cursor cursor = db.queryDatabase(\"oui.db\", \"SELECT vendor FROM oui WHERE mac LIKE ?\", new String[]{mac});\n        String vendor;\n\n        try {\n            if (cursor != null && cursor.moveToFirst()) {\n                vendor = cursor.getString(cursor.getColumnIndex(\"vendor\"));\n            } else {\n                vendor = \"Vendor not in database\";\n            }\n        } finally {\n            if (cursor != null) {\n                cursor.close();\n                db.close();\n            }\n        }\n\n        return vendor;\n    }\n\n}\n",
  "pl": "Java",
  "chain_of_thought": "Below is an instruction that describes a task along with an example. Write a response that appropriately completes the request.\n\n### Instruction:\nRewrite the given Java program to optimize and improve the memory usage. Write the entire code and no other text.\n```java\npackage be.digitalia.fosdem.fragments;\n\nimport android.os.Build;\nimport android.support.v4.app.ListFragment;\n\n/**\n * ListFragment which disables the fade animation under certain conditions for more smoothness.\n */\npublic class SmoothListFragment extends ListFragment {\n\n\t@Override\n\tpublic void setListShown(boolean shown) {\n\t\tif ((Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) && isResumed()) {\n\t\t\tsuper.setListShown(shown);\n\t\t} else {\n\t\t\tsetListShownNoAnimation(shown);\n\t\t}\n\t}\n}\n```\n\n### Thought:\nThe java code has a possible memory leak as it doesn't unregister its ListView (i.e., a vertical scrolling list in an android application). SmoothListFragment extends ListFragment, so we should do this unregistration by overriding the onDestroyView method. To ensure the unregistration is properly done, we have to invoke the corresponding parent class's method before exiting. The resulting code with proper memory handling is as follows.\n\n\n### Response: \n```java \npackage be.digitalia.fosdem.fragments;\n\nimport android.os.Build;\nimport android.support.v4.app.ListFragment;\n\n/**\n * ListFragment which disables the fade animation under certain conditions for more smoothness.\n */\npublic class SmoothListFragment extends ListFragment {\n\n\t@Override\n\tpublic void setListShown(boolean shown) {\n\t\tif ((Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) && isResumed()) {\n\t\t\tsuper.setListShown(shown);\n\t\t} else {\n\t\t\tsetListShownNoAnimation(shown);\n\t\t}\n\t}\n\n\t@Override\n\tpublic void onDestroyView() {\n\t\t// Ensure the ListView is properly unregistered as an observer of the adapter\n\t\tgetListView().setAdapter(null);\n\t\tsuper.onDestroyView();\n\t}\n}\n```\n\n### Instruction:\nRewrite the given java program to optimize and improve the memory usage. Write the entire code and no other text in the response.\n```java\npackage com.aaronjwood.portauthority.network;\n\nimport android.app.Activity;\nimport android.database.Cursor;\n\nimport com.aaronjwood.portauthority.async.ScanPortsAsyncTask;\nimport com.aaronjwood.portauthority.db.Database;\nimport com.aaronjwood.portauthority.response.HostAsyncResponse;\n\npublic class Host {\n\n    /**\n     * Starts a port scan\n     *\n     * @param ip        IP address\n     * @param startPort The port to start scanning at\n     * @param stopPort  The port to stop scanning at\n     * @param delegate  Delegate to be called when the port scan has finished\n     */\n    public void scanPorts(String ip, int startPort, int stopPort, HostAsyncResponse delegate) {\n        new ScanPortsAsyncTask(delegate).execute(ip, startPort, stopPort);\n    }\n\n    /**\n     * Fetches the MAC vendor from the database\n     *\n     * @param mac      MAC address\n     * @param activity The calling activity\n     */\n    public String getMacVendor(String mac, Activity activity) {\n        Database db = new Database(activity);\n        Cursor cursor = db.queryDatabase(\"oui.db\", \"SELECT vendor FROM oui WHERE mac LIKE ?\", new String[]{mac});\n        if (cursor != null && cursor.moveToFirst()) {\n            String value = cursor.getString(cursor.getColumnIndex(\"vendor\"));\n            cursor.close();\n            db.close();\n            return value;\n        } else {\n            return \"Vendor not in database\";\n        }\n    }\n\n}\n\n```\n\n### Thought:\n",
  "one_shot": "Below is an instruction that describes a task along with an example. Write a response that appropriately completes the request.\n\n### Instruction:\nRewrite the given Java program to optimize and improve the memory usage. Write the entire code and no other text.\n```java\npackage be.digitalia.fosdem.fragments;\n\nimport android.os.Build;\nimport android.support.v4.app.ListFragment;\n\n/**\n * ListFragment which disables the fade animation under certain conditions for more smoothness.\n */\npublic class SmoothListFragment extends ListFragment {\n\n\t@Override\n\tpublic void setListShown(boolean shown) {\n\t\tif ((Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) && isResumed()) {\n\t\t\tsuper.setListShown(shown);\n\t\t} else {\n\t\t\tsetListShownNoAnimation(shown);\n\t\t}\n\t}\n}\n```\n\n### Response: \n```java \npackage be.digitalia.fosdem.fragments;\n\nimport android.os.Build;\nimport android.support.v4.app.ListFragment;\n\n/**\n * ListFragment which disables the fade animation under certain conditions for more smoothness.\n */\npublic class SmoothListFragment extends ListFragment {\n\n\t@Override\n\tpublic void setListShown(boolean shown) {\n\t\tif ((Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) && isResumed()) {\n\t\t\tsuper.setListShown(shown);\n\t\t} else {\n\t\t\tsetListShownNoAnimation(shown);\n\t\t}\n\t}\n\n\t@Override\n\tpublic void onDestroyView() {\n\t\t// Ensure the ListView is properly unregistered as an observer of the adapter\n\t\tgetListView().setAdapter(null);\n\t\tsuper.onDestroyView();\n\t}\n}\n```\n\n### Instruction:\nRewrite the given java program to optimize and improve the memory usage. Write the entire code and no other text in the response.\n```java\npackage com.aaronjwood.portauthority.network;\n\nimport android.app.Activity;\nimport android.database.Cursor;\n\nimport com.aaronjwood.portauthority.async.ScanPortsAsyncTask;\nimport com.aaronjwood.portauthority.db.Database;\nimport com.aaronjwood.portauthority.response.HostAsyncResponse;\n\npublic class Host {\n\n    /**\n     * Starts a port scan\n     *\n     * @param ip        IP address\n     * @param startPort The port to start scanning at\n     * @param stopPort  The port to stop scanning at\n     * @param delegate  Delegate to be called when the port scan has finished\n     */\n    public void scanPorts(String ip, int startPort, int stopPort, HostAsyncResponse delegate) {\n        new ScanPortsAsyncTask(delegate).execute(ip, startPort, stopPort);\n    }\n\n    /**\n     * Fetches the MAC vendor from the database\n     *\n     * @param mac      MAC address\n     * @param activity The calling activity\n     */\n    public String getMacVendor(String mac, Activity activity) {\n        Database db = new Database(activity);\n        Cursor cursor = db.queryDatabase(\"oui.db\", \"SELECT vendor FROM oui WHERE mac LIKE ?\", new String[]{mac});\n        if (cursor != null && cursor.moveToFirst()) {\n            String value = cursor.getString(cursor.getColumnIndex(\"vendor\"));\n            cursor.close();\n            db.close();\n            return value;\n        } else {\n            return \"Vendor not in database\";\n        }\n    }\n\n}\n\n```\n\n### Response:\n```java\n",
  "base_prompt": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n### Instruction:\nRewrite the given java program to optimize and improve the memory usage. Write the entire code and no other text in the response.\n```java\npackage com.aaronjwood.portauthority.network;\n\nimport android.app.Activity;\nimport android.database.Cursor;\n\nimport com.aaronjwood.portauthority.async.ScanPortsAsyncTask;\nimport com.aaronjwood.portauthority.db.Database;\nimport com.aaronjwood.portauthority.response.HostAsyncResponse;\n\npublic class Host {\n\n    /**\n     * Starts a port scan\n     *\n     * @param ip        IP address\n     * @param startPort The port to start scanning at\n     * @param stopPort  The port to stop scanning at\n     * @param delegate  Delegate to be called when the port scan has finished\n     */\n    public void scanPorts(String ip, int startPort, int stopPort, HostAsyncResponse delegate) {\n        new ScanPortsAsyncTask(delegate).execute(ip, startPort, stopPort);\n    }\n\n    /**\n     * Fetches the MAC vendor from the database\n     *\n     * @param mac      MAC address\n     * @param activity The calling activity\n     */\n    public String getMacVendor(String mac, Activity activity) {\n        Database db = new Database(activity);\n        Cursor cursor = db.queryDatabase(\"oui.db\", \"SELECT vendor FROM oui WHERE mac LIKE ?\", new String[]{mac});\n        if (cursor != null && cursor.moveToFirst()) {\n            String value = cursor.getString(cursor.getColumnIndex(\"vendor\"));\n            cursor.close();\n            db.close();\n            return value;\n        } else {\n            return \"Vendor not in database\";\n        }\n    }\n\n}\n\n```\n\n### Response:\n```java\n",
  "coding_concepts": "Below is an instruction that describes a task. The instruction contains concepts formatted as a list of keyword and value pairs separated by newline. The list of concept keywords and their descriptions are:\n\n### Keywords:\n\n[in] What specific function or class to focus on to implement the required change(s).\n\n[+] What specific library, programming or data structure or design concept, or programmer-defined construct in the code to USE or ADD to implement the required change(s)\n\n[-] What specific library, programming or data structure or design concept, or programmer-defined construct in the code to NOT USE or REMOVE to implement the required change(s)\n\n[implement] What specific function to implement in the class of interest\n\n[override] What specific function of the parent class to override and implement in the class of interest\n\n[hint] Full or partial textual description of the idea to implement\n\nWrite a response that appropriately completes the request.\n\n### Instruction:\nAvoid potential resource leaks in the code. Write the entire code and no other text in the response.\n\n### Concepts:\n[in] getMacVendor function\n\n### Given program:\n```java\npackage com.aaronjwood.portauthority.network;\n\nimport android.app.Activity;\nimport android.database.Cursor;\n\nimport com.aaronjwood.portauthority.async.ScanPortsAsyncTask;\nimport com.aaronjwood.portauthority.db.Database;\nimport com.aaronjwood.portauthority.response.HostAsyncResponse;\n\npublic class Host {\n\n    /**\n     * Starts a port scan\n     *\n     * @param ip        IP address\n     * @param startPort The port to start scanning at\n     * @param stopPort  The port to stop scanning at\n     * @param delegate  Delegate to be called when the port scan has finished\n     */\n    public void scanPorts(String ip, int startPort, int stopPort, HostAsyncResponse delegate) {\n        new ScanPortsAsyncTask(delegate).execute(ip, startPort, stopPort);\n    }\n\n    /**\n     * Fetches the MAC vendor from the database\n     *\n     * @param mac      MAC address\n     * @param activity The calling activity\n     */\n    public String getMacVendor(String mac, Activity activity) {\n        Database db = new Database(activity);\n        Cursor cursor = db.queryDatabase(\"oui.db\", \"SELECT vendor FROM oui WHERE mac LIKE ?\", new String[]{mac});\n        if (cursor != null && cursor.moveToFirst()) {\n            String value = cursor.getString(cursor.getColumnIndex(\"vendor\"));\n            cursor.close();\n            db.close();\n            return value;\n        } else {\n            return \"Vendor not in database\";\n        }\n    }\n\n}\n\n```\n\n### Response:\n```java\n",
  "classification_left_prompt": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n### Instruction:\n\nOnly one of the two code snippets has a lower memory usage.\n\nCode-A:\npackage be.digitalia.fosdem.fragments;\n\nimport android.os.Build;\nimport android.support.v4.app.ListFragment;\n\n/**\n * ListFragment which disables the fade animation under certain conditions for more smoothness.\n */\npublic class SmoothListFragment extends ListFragment {\n\n\t@Override\n\tpublic void setListShown(boolean shown) {\n\t\tif ((Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) && isResumed()) {\n\t\t\tsuper.setListShown(shown);\n\t\t} else {\n\t\t\tsetListShownNoAnimation(shown);\n\t\t}\n\t}\n\n\t@Override\n\tpublic void onDestroyView() {\n\t\t// Ensure the ListView is properly unregistered as an observer of the adapter\n\t\tgetListView().setAdapter(null);\n\t\tsuper.onDestroyView();\n\t}\n}\n\n\nCode-B:\npackage be.digitalia.fosdem.fragments;\n\nimport android.os.Build;\nimport android.support.v4.app.ListFragment;\n\n/**\n * ListFragment which disables the fade animation under certain conditions for more smoothness.\n */\npublic class SmoothListFragment extends ListFragment {\n\n\t@Override\n\tpublic void setListShown(boolean shown) {\n\t\tif ((Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) && isResumed()) {\n\t\t\tsuper.setListShown(shown);\n\t\t} else {\n\t\t\tsetListShownNoAnimation(shown);\n\t\t}\n\t}\n}\n\n\nPlease select the code snippet from Code-A or Code-B with a lower memory usage utilization.\n\n### Response: Code-",
  "classification_left_label": "A",
  "classification_right_prompt": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n### Instruction:\n\nOnly one of the two code snippets has a lower memory usage.\n\nCode-A:\npackage be.digitalia.fosdem.fragments;\n\nimport android.os.Build;\nimport android.support.v4.app.ListFragment;\n\n/**\n * ListFragment which disables the fade animation under certain conditions for more smoothness.\n */\npublic class SmoothListFragment extends ListFragment {\n\n\t@Override\n\tpublic void setListShown(boolean shown) {\n\t\tif ((Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) && isResumed()) {\n\t\t\tsuper.setListShown(shown);\n\t\t} else {\n\t\t\tsetListShownNoAnimation(shown);\n\t\t}\n\t}\n}\n\n\nCode-B:\npackage be.digitalia.fosdem.fragments;\n\nimport android.os.Build;\nimport android.support.v4.app.ListFragment;\n\n/**\n * ListFragment which disables the fade animation under certain conditions for more smoothness.\n */\npublic class SmoothListFragment extends ListFragment {\n\n\t@Override\n\tpublic void setListShown(boolean shown) {\n\t\tif ((Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) && isResumed()) {\n\t\t\tsuper.setListShown(shown);\n\t\t} else {\n\t\t\tsetListShownNoAnimation(shown);\n\t\t}\n\t}\n\n\t@Override\n\tpublic void onDestroyView() {\n\t\t// Ensure the ListView is properly unregistered as an observer of the adapter\n\t\tgetListView().setAdapter(null);\n\t\tsuper.onDestroyView();\n\t}\n}\n\n\nPlease select the code snippet from Code-A or Code-B with a lower memory usage utilization.\n\n### Response: Code-",
  "classification_right_label": "B"
}
